<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:16:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAREST-216/DATAREST-216.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAREST-216] AOP proxying does not work for findOne(ID) method</title>
                <link>https://jira.spring.io/browse/DATAREST-216</link>
                <project id="10901" key="DATAREST">Spring Data REST</project>
                    <description>&lt;p&gt;When attempting to apply AOP proxying to an overriden findOne(ID) method, the proxied method is not called.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@Override&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@PreAuthorize(&quot;hasAuthority(&apos;ROLE_ADMIN&apos;)&quot;)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;PurchaseOrder findOne(PurchaseOrderPK pk);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;The problem is due to the base class &apos;findOne(Serializable id)&apos; method being called instead of the more specific, covariant version.&lt;/p&gt;

&lt;p&gt;Although the obvious solution is to simply override the &apos;findOne(Serializable id)&apos; method and place an annotation on in it instead, this does not completely solve the issue. There are cases where it is desirable to overload the more specific version such as when one is using a spEL expression in an annotation and referring to a composite key, for example:&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@Override&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@PreAuthorize(&quot;#pk.getUserId() == authentication.id&quot;)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;PurchaseOrder findOne(@Param(&quot;pk&quot;) PurchaseOrderPK pk);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;The issue is specific to CrudRepository and PagingAndSortingRepository derived repositories.&lt;/p&gt;</description>
                <environment></environment>
        <key id="52648">DATAREST-216</key>
            <summary>AOP proxying does not work for findOne(ID) method</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="nickweedon">Nick Weedon</reporter>
                        <labels>
                    </labels>
                <created>Sun, 12 Jan 2014 22:22:58 +0000</created>
                <updated>Thu, 4 Jun 2015 09:08:53 +0000</updated>
                            <resolved>Thu, 13 Feb 2014 01:31:35 +0000</resolved>
                                    <version>2.0 M1 (Codd)</version>
                    <version>2.0 RC1 (Codd)</version>
                                    <fixVersion>2.0 GA (Codd)</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="97235" author="nickweedon" created="Sun, 12 Jan 2014 23:03:19 +0000"  >&lt;p&gt;Fixed in - &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/pull/123&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-rest/pull/123&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Removed CrudRepositoryInvoker#invokeFindOne(Serializable id) method override as this will cause the findOne(Serializable id) method to be called instead of any existing, more specific methods. This in turn bypasses any AOP proxying of the more specific method.&lt;/p&gt;</comment>
                            <comment id="97239" author="olivergierke" created="Sun, 12 Jan 2014 23:11:25 +0000"  >&lt;p&gt;Is there any chance you provide a simple test case for this. There are a few aspects, that keep me puzzled:&lt;/p&gt;

&lt;p&gt;The method we choose for &lt;tt&gt;findOne(&#8230;)&lt;/tt&gt; operations &lt;b&gt;is&lt;/b&gt; the most specific one (see the according &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/blob/master/src/test/java/org/springframework/data/repository/core/support/DefaultCrudMethodsUnitTests.java#L107&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;test case&lt;/a&gt; in Spring Data Commons).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&#8230; the obvious solution is to simply override the &apos;findOne(Serializable id)&apos; method and place an annotation on in it instead, &#8230;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is not so obvious to me, as it wouldn&apos;t compile.&lt;/p&gt;</comment>
                            <comment id="97243" author="nickweedon" created="Sun, 12 Jan 2014 23:36:12 +0000"  >&lt;p&gt;Good point, I will look at adding a unit test for this.&lt;/p&gt;

&lt;p&gt;My bad on the point of the serializable method. the &apos;serializable&apos; findOne method would compile but it would not override the method as intended. I had seen this method signature via inspecting the repository methods through reflection. I had not realized that it is actually a product of generics &apos;erasure&apos;.&lt;br/&gt;
In any event, my point was merely that this is not the correct path to a solution (you have obviously now made this point further evident &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/biggrin.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).&lt;/p&gt;

&lt;p&gt;In the meantime (before i add a unit test), if you look at CrudRepositoryInvoker (before my modification) you will see that it is directly calling findOne(Serializable) on the crud repository. If you look at the available methods of this object (by using reflection) you can see that there are actually two findOne methods. One has the signature findOne(Serializable) and the other findOne(PurchaseOrderPK) (for instance). If the findOne(Serializable) method is called then the AOP proxy method is bypassed (in my case, i had placed a Spring security &apos;@PreAuthorization&apos; annotation on the findOne(PurchaseOrderPK) method).&lt;/p&gt;

&lt;p&gt;The ReflectionRepositoryInvoker class actually calls the correct method as the correct lookup is performed in spring-data-commons &apos;DefaultCrudMethods&apos; class. The method override in CrudRepositoryInvoker breaks this behavior.&lt;/p&gt;</comment>
                            <comment id="97294" author="nickweedon" created="Tue, 14 Jan 2014 00:56:40 +0000"  >&lt;p&gt;Below is the new pull request, including only the fix and unit test for this specific issue:&lt;br/&gt;
&lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/pull/126&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-rest/pull/126&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The unit test demonstrates the issue and it will fail without the fix that is also provided in the pull request.&lt;/p&gt;</comment>
                            <comment id="97295" author="nickweedon" created="Tue, 14 Jan 2014 01:07:53 +0000"  >&lt;p&gt;Let me know if there is anything more that is required. &lt;/p&gt;

&lt;p&gt;I think that this is an important fix as it is the only thing preventing spring data rest from being able to be properly used with authorization (e.g. only allow a user to see his own data by checking the user_id portion of a composite key).&lt;/p&gt;

&lt;p&gt;I am therefore very keen to have this fix accepted.&lt;/p&gt;</comment>
                            <comment id="97333" author="nickweedon" created="Wed, 15 Jan 2014 02:01:23 +0000"  >&lt;p&gt;Now updated the pull request commit to conform to the spring data contribution guidelines.&lt;/p&gt;</comment>
                            <comment id="97946" author="nickweedon" created="Sun, 26 Jan 2014 23:26:50 +0000"  >&lt;p&gt;Rebased to current upstream master HEAD and re-ran unit tests&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 12 Jan 2014 23:11:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>39128</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10684" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Pull Request URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/spring-projects/spring-data-rest/pull/126]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i07a6f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>42521</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38830</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="34">43 - Babbage SR3</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>