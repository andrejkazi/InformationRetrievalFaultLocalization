<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:14:18 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAREST-345/DATAREST-345.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAREST-345] Nulling out fields doesn&apos;t work on PATCH requests</title>
                <link>https://jira.spring.io/browse/DATAREST-345</link>
                <project id="10901" key="DATAREST">Spring Data REST</project>
                    <description>&lt;p&gt;When sending via PATCH operation a json of the following format:&lt;/p&gt;
{&quot;field&quot;:null}
&lt;p&gt; in order to clear any previously entered value, the new value is ignored and the field is never updated to null.&lt;/p&gt;</description>
                <environment></environment>
        <key id="58592">DATAREST-345</key>
            <summary>Nulling out fields doesn&apos;t work on PATCH requests</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="george.migkos">George Migkos</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Jul 2014 04:11:24 +0000</created>
                <updated>Thu, 10 Jul 2014 12:23:26 +0000</updated>
                            <resolved>Tue, 8 Jul 2014 07:31:02 +0000</resolved>
                                    <version>2.1 GA (Dijkstra)</version>
                                    <fixVersion>2.2 M1 (Evans)</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="105214" author="benneq" created="Wed, 2 Jul 2014 05:50:30 +0000"  >&lt;p&gt;That&apos;s not an easy task. Reason:&lt;/p&gt;

&lt;p&gt;Jackson maps your JSON to Java. And a Java value can be either null or not null. By default Jackson gives your field (in the POJO) the default value, if it&apos;s missing inside the JSON String.&lt;/p&gt;

&lt;p&gt;This means: It doesn&apos;t matter if you set it to null within your JSON or just don&apos;t include it, the result is always field = null in your POJO. And the implication is: If Spring looks at your mapped POJO, it can&apos;t figure out, if the field was sent within the JSON String or not.&lt;/p&gt;

&lt;p&gt;Maybe it&apos;s possible to use some kind of Wrapper within the POJO, like java.util.Optional. Then it would be possible to see if the Optional itself is null or the wrapped property is null.&lt;/p&gt;

&lt;p&gt;But as you can see: This is basically a Jackson issue, not really related to Spring.&lt;/p&gt;

&lt;p&gt;EDIT 1:&lt;br/&gt;
Here&apos;s some additional information: &lt;a href=&quot;http://stackoverflow.com/questions/19551098/how-to-define-optional-json-field-using-jackson&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/19551098/how-to-define-optional-json-field-using-jackson&lt;/a&gt;&lt;br/&gt;
If that&apos;s true, you could really do what I suggested above: Wrap it inside some simple wrapper like java.util.Optional.&lt;/p&gt;

&lt;p&gt;I&apos;ll try to do that in a minute and then give feedback.&lt;/p&gt;


&lt;p&gt;EDIT2:&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;public void run() throws JsonParseException, JsonMappingException, IOException {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	ObjectMapper om = new ObjectMapper();&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	Entity e1 = om.readValue(&quot;{}&quot;, Entity.class);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	System.err.println(&quot;{} -&amp;gt; &quot; + e1.field);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	Entity e2 = om.readValue(&quot;{\&quot;field\&quot;:null}&quot;, Entity.class);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	System.err.println(&quot;{\&quot;field\&quot;:null} -&amp;gt; &quot; + e2.field);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	Entity e3 = om.readValue(&quot;{\&quot;field\&quot;:\&quot;value\&quot;}&quot;, Entity.class);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	System.err.println(&quot;{\&quot;field\&quot;:\&quot;value\&quot;} -&amp;gt; &quot; + e3.field);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;public class Entity {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	Optional&amp;lt;String&amp;gt; field;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	public String getField() { return field.get(); }&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	public void setField(String field) { this.field = Optional.ofNullable(field); }&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;As you can see, I tried 3 different JSON Strings: 1. no field, 2. field = null, 3. field = value&lt;br/&gt;
The output is:&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;{} -&amp;gt; null&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;{&quot;field&quot;:null} -&amp;gt; Optional.empty&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;{&quot;field&quot;:&quot;value&quot;} -&amp;gt; Optional[value]&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;
&lt;p&gt;So, this works. But now you would have to modify Springs mapping stuff, in order to take care of those &lt;tt&gt;Optional&lt;/tt&gt; fields. And after that, I think you&apos;ll have the next problem: Hibernate (or whatever mapper you use), doesn&apos;t have a clue what to do with those &lt;tt&gt;Optional&lt;/tt&gt; wrappers.&lt;/p&gt;

&lt;p&gt;EDIT 3:&lt;br/&gt;
There&apos;s also a corresponding Ticket on Jackson&apos;s Github page: &lt;a href=&quot;https://github.com/FasterXML/jackson-databind/issues/494&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/FasterXML/jackson-databind/issues/494&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="105224" author="olivergierke" created="Wed, 2 Jul 2014 07:28:17 +0000"  >&lt;p&gt;That&apos;s good observations, Benjamin. Jackson even has a slighly more comfortable way of achieving that. An &lt;tt&gt;ObjectMapper&lt;/tt&gt; allows you to obtain a writer to update an existing object which actually behaves just like we need it (does not invoke setter if the field is not present at all, invokes it with &lt;tt&gt;null&lt;/tt&gt; if the JSON value is &lt;tt&gt;null&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;I previously shied away from trying that as it effectively means we somehow work around the standard &lt;tt&gt;HttpMesageConverter&lt;/tt&gt; mechanics. The standard mechanism has no notion of updating an existing object. However, I gave this a quick spin and actually could get it to work. It needs a little polishing still but it looks like this can be a fix for this.&lt;/p&gt;</comment>
                            <comment id="105226" author="george.migkos" created="Wed, 2 Jul 2014 07:39:31 +0000"  >&lt;p&gt;Hi Benjamin, Oliver,&lt;/p&gt;

&lt;p&gt;Thank you for your immediate responses. I can verify that using ObjectMapper&apos; s readerForUpdating() method we can obtain an ObjectReader which can partially clear a null valued field (If the field is missing from the json, the old value will be left as is).&lt;br/&gt;
This is what I do for now although it is a quick and dirty approach since as far as I know only shallow copying is used.&lt;/p&gt;</comment>
                            <comment id="105227" author="olivergierke" created="Wed, 2 Jul 2014 07:44:08 +0000"  >&lt;blockquote&gt;
&lt;p&gt;This is what I do for now although it is a quick and dirty approach since as far as I know only shallow copying is used.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can you elaborate on that?&lt;/p&gt;</comment>
                            <comment id="105230" author="george.migkos" created="Wed, 2 Jul 2014 08:06:37 +0000"  >&lt;p&gt;After searching for a solution to the problem I ended up to &lt;a href=&quot;http://stackoverflow.com/questions/9895041/merging-two-json-documents-using-jackson&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/9895041/merging-two-json-documents-using-jackson&lt;/a&gt; where I saw that deep copy is not yet supported. &lt;br/&gt;
Although not mentioned in the post I believe that the relevant issue is &lt;a href=&quot;https://github.com/FasterXML/jackson-databind/issues/160&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/FasterXML/jackson-databind/issues/160&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The solution I currently adopted is to accept the json as a @RequestBody JsonNode payload parameter in RepositoryEntityController&apos;s patchItemResource() method.&lt;br/&gt;
After that it&apos;s easy to use the ObjectReader in order to update the existing domainObject according to the field&apos;s values in the JsonNode.&lt;/p&gt;</comment>
                            <comment id="105244" author="benneq" created="Wed, 2 Jul 2014 09:54:02 +0000"  >&lt;p&gt;That would be pretty awesome if this could work out-of-the box with Spring Data Rest!&lt;/p&gt;</comment>
                            <comment id="105245" author="olivergierke" created="Wed, 2 Jul 2014 10:10:45 +0000"  >&lt;p&gt;I found &lt;a href=&quot;http://jira.codehaus.org/browse/JACKSON-679?focusedCommentId=279331&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-279331&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this comment&lt;/a&gt; in the discussion in the old Jackson JIRA. This sounds similar to what &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=george.migkos&quot; class=&quot;user-hover&quot; rel=&quot;george.migkos&quot;&gt;George Migkos&lt;/a&gt; was suggesting as well. I quickly implemented a prototype and it indeed seems to fix the deep merging problem nicely. Going to add a few test cases and polish this up.&lt;/p&gt;</comment>
                            <comment id="105247" author="benneq" created="Wed, 2 Jul 2014 10:56:18 +0000"  >&lt;p&gt;Cool! &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
But it&apos;s a API breaking change, right? So we need some Trigger to activate it.&lt;/p&gt;</comment>
                            <comment id="105248" author="olivergierke" created="Wed, 2 Jul 2014 11:02:11 +0000"  >&lt;p&gt;Don&apos;t think so. Sending null fields with a PATCH request has never worked, so it&apos;s a bug that will be fixed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 2 Jul 2014 05:50:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>44754</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i07obb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>44811</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>44456</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="53">50 - Evans M1</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>