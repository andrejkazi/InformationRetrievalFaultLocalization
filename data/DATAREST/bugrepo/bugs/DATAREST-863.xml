<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:14:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAREST-863/DATAREST-863.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAREST-863] REST calls to /api always redirect to HAL Browser if no accept header is specified</title>
                <link>https://jira.spring.io/browse/DATAREST-863</link>
                <project id="10901" key="DATAREST">Spring Data REST</project>
                    <description>&lt;p&gt;After updating 2 projects to Spring Boot 1.4 (and Spring Data Rest 2.5.2) all REST calls to /api  that don&apos;t specify a header like &quot;accept: application/json&quot; redirect to /api/browser/index.html#/api/. In previous versions this was only the case when the accept header was text/html, but now the redirect happens with empty accept header.&lt;/p&gt;

&lt;p&gt;This may have nothing to do with Spring Data Rest directly, I just put it here because HAL Browser is involved.&lt;/p&gt;

&lt;p&gt;But as a result, the default HAL browser itself cannot get the /api and shows its own index.html.&lt;/p&gt;</description>
                <environment>Spring Boot 1.4, Windows 10, Java 8</environment>
        <key id="69385">DATAREST-863</key>
            <summary>REST calls to /api always redirect to HAL Browser if no accept header is specified</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="toedter_k">Kai T&#246;dter</reporter>
                        <labels>
                    </labels>
                <created>Sat, 30 Jul 2016 07:55:49 +0000</created>
                <updated>Tue, 20 Sep 2016 17:37:47 +0000</updated>
                            <resolved>Fri, 5 Aug 2016 04:22:00 +0000</resolved>
                                    <version>2.4.4 (Gosling SR4)</version>
                    <version>2.5.2 (Hopper SR2)</version>
                    <version>2.6 M1 (Ingalls)</version>
                                    <fixVersion>2.4.5 (Gosling SR5)</fixVersion>
                    <fixVersion>2.5.3 (Hopper SR3)</fixVersion>
                    <fixVersion>2.6 RC1 (Ingalls)</fixVersion>
                                    <component>Infrastructure</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="130935" author="toedter_k" created="Sat, 30 Jul 2016 12:13:41 +0000"  >&lt;p&gt;I investigated further. When I set the accept header to application/json ist works.&lt;br/&gt;
But still: HAL Browser does not work out of the box...&lt;/p&gt;</comment>
                            <comment id="130941" author="olivergierke" created="Sun, 31 Jul 2016 16:30:35 +0000"  >&lt;p&gt;Actually I am suspecting a change in Spring 4.3 to cause that as we haven&apos;t changed our &lt;tt&gt;produces&lt;/tt&gt; clauses. &lt;tt&gt;RepositoryController.listRepositories(&#8230;)&lt;/tt&gt; is still bound to a &lt;tt&gt;GET&lt;/tt&gt; request without a produces clause and &lt;tt&gt;HalBrowser.index(&#8230;)&lt;/tt&gt; explicitly maps to &lt;tt&gt;text/html&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;ll bring that up with the Spring team but generally speaking, issuing a request without any &lt;tt&gt;Accept&lt;/tt&gt; header is not guaranteed to return a particular representation. That the HAL browser does that by default is unfortunate. Adding the &lt;tt&gt;Accept&lt;/tt&gt; header in the Custom Request Headers section of the browser.&lt;/p&gt;</comment>
                            <comment id="130942" author="toedter_k" created="Sun, 31 Jul 2016 16:43:40 +0000"  >&lt;p&gt;Probably we could enhance the JavaScript code of the HAL browser that it always uses a proper accept header.&lt;/p&gt;</comment>
                            <comment id="130969" author="olivergierke" created="Tue, 2 Aug 2016 20:22:54 +0000"  >&lt;p&gt;I&apos;ve identified the issue to be in a (didn&apos;t find out which one yet) Spring 4.3.2. In &lt;tt&gt;DelegatingHandlerMapping&lt;/tt&gt; we consult the &lt;tt&gt;HandlerMapping&lt;/tt&gt; instances for a matching handler. On Spring 4.3.1, the first one (which maps the browser, the JSON schema etc.) throws an exception as the direct path match, which is the method issuing the redirect to the browser, doesn&apos;t contain a matching produces clause. On 4.3.2 however, the handler lookup returns that method, although it doesn&apos;t actually match (we default the media type to &lt;tt&gt;application/hal+json&lt;/tt&gt;) as apparently no matching media type check is done for direct path matches?. /cc &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop&quot; class=&quot;user-hover&quot; rel=&quot;rstoya05-aop&quot;&gt;Rossen Stoyanchev&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="131029" author="olivergierke" created="Fri, 5 Aug 2016 04:22:00 +0000"  >&lt;p&gt;It turned out the issue was caused by &lt;a href=&quot;https://github.com/spring-projects/spring-framework/commit/e59a5993f37393b2bf6fe02e61f29de7d8b18eca&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this commit&lt;/a&gt; to fix &lt;a href=&quot;https://jira.spring.io/browse/SPR-14506&quot; title=&quot;HeaderContentNegotiationStrategy does not support multiple Accept headers&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-14506&quot;&gt;&lt;del&gt;SPR-14506&lt;/del&gt;&lt;/a&gt;. It changed the way the &lt;tt&gt;ContentNegotiationStrategy&lt;/tt&gt; looks up the &lt;tt&gt;Accept&lt;/tt&gt; header in the request and the custom request wrapper that we put into place to default the header to a certain value not getting picked up anymore. That caused the mapping for the redirect to the HAL Browser to be picked up as it didn&apos;t cause any media type conflict anymore which would&apos;ve triggered further handler mapping resolution.&lt;/p&gt;

&lt;p&gt;That change basically flew under our radar as we didn&apos;t have any integration builds running against Spring Framework 4.3 (we&apos;re building against 4.2 currently). I&apos;ve filed &lt;a href=&quot;https://jira.spring.io/browse/DATAREST-867&quot; title=&quot;Add Travis builds for Spring Framework 4.3 compatibility checks&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAREST-867&quot;&gt;DATAREST-867&lt;/a&gt; to keep track of that. Snapshots should be available as I write this. Feel free to give them a spin.&lt;/p&gt;</comment>
                            <comment id="131300" author="bitsofinfo" created="Tue, 16 Aug 2016 17:27:56 +0000"  >&lt;p&gt;Is there a workaround in the meantime?&lt;/p&gt;</comment>
                            <comment id="131412" author="oyku" created="Fri, 19 Aug 2016 21:16:14 +0000"  >&lt;p&gt;any workarounds except cloning and removing the / redirection from HalController?&lt;/p&gt;</comment>
                            <comment id="131418" author="olivergierke" created="Sat, 20 Aug 2016 12:03:56 +0000"  >&lt;p&gt;The easiest workaround is to let clients specify an explicit accept header. The HAL Browser has a text field to add custom headers, so putting &lt;tt&gt;Accept: application/hal+json&lt;/tt&gt; in there should do the trick.&lt;/p&gt;</comment>
                            <comment id="131420" author="oyku" created="Sat, 20 Aug 2016 12:18:32 +0000"  >&lt;p&gt;By &quot;client&quot; I suppose you mean the browser.?&lt;/p&gt;</comment>
                            <comment id="131421" author="oyku" created="Sat, 20 Aug 2016 12:19:16 +0000"  >&lt;p&gt;BTW, you&apos;ve mentioned a snapshot would be available. What&apos;s the version tag? &lt;br/&gt;
Thanks in advance.&lt;/p&gt;</comment>
                            <comment id="131422" author="olivergierke" created="Sat, 20 Aug 2016 12:23:43 +0000"  >&lt;p&gt;By client I mean client. Whoever uses your API.&lt;/p&gt;

&lt;p&gt;That depends on how you&apos;re acutally using Spring Data REST. Boot? Standalone? The BOM? With Boot, set the &lt;tt&gt;spring-data-releasetrain.version&lt;/tt&gt; property to either &lt;tt&gt;Ingalls-BUILD-SNAPSHOT&lt;/tt&gt;, &lt;tt&gt;Hopper-BUILD-SNAPSHOT&lt;/tt&gt; or &lt;tt&gt;Gosling-BUILD-SNAPSHOT&lt;/tt&gt;. If you use the BOM, it&apos;s the same values but a slightly &lt;a href=&quot;https://github.com/spring-projects/spring-data-examples/tree/master/bom&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;different mechanism&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="131439" author="oyku" created="Mon, 22 Aug 2016 08:48:41 +0000"  >&lt;p&gt;Thanks for the version explanation. Actually the problem I was trying to solve is the HAL Browser itself displaying HTML instead of the hal json content. See the screenshot attached. This happens with spring boot 1.4 and spring-boot-starter-data-rest and spring-data-rest-hal-browser as dependencies&lt;/p&gt;

&lt;p&gt;Adding Accept: application/hal+json to custom headers does the trick but just wanted to point this out&lt;/p&gt;</comment>
                            <comment id="131442" author="olivergierke" created="Mon, 22 Aug 2016 09:27:24 +0000"  >&lt;p&gt;I know, I know &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. As described slightly more above, putting &lt;tt&gt;Accept: application/hal+json&lt;/tt&gt; into the &lt;tt&gt;Custom Request Headers&lt;/tt&gt; should to the trick until the fix is released.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="69448">DATAREST-870</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="23511" name="halbrowser.jpg" size="400041" author="oyku" created="Mon, 22 Aug 2016 08:49:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 31 Jul 2016 16:30:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i09cpr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>