<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:04:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAREST-490/DATAREST-490.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAREST-490] Repository controllers not invoked if resource is handled manually in dedicated media type</title>
                <link>https://jira.spring.io/browse/DATAREST-490</link>
                <project id="10901" key="DATAREST">Spring Data REST</project>
                    <description>&lt;p&gt;I have a Spring Data REST project. For some URLs I want to create a &lt;tt&gt;@Controller&lt;/tt&gt; that renders the resources as HTML. I am using a &lt;tt&gt;@RequestMapping&lt;/tt&gt; with &lt;tt&gt;produces = MediaType.TEXT_HTML_VALUE&lt;/tt&gt;. In fact this controller is called if the URL is requested. However, if I do a request for JSON I get a 406 - while in fact the Spring Data REST controller should be called. I noticed that the log output says that the Spring Data REST controller doesn&apos;t register with any value for produces.&lt;/p&gt;

&lt;p&gt;I think a value for produces should be given. Maybe there is a way to do this but I didn&apos;t find it in the reference documentation. Maybe there are other ways to get different representations of the REST resources but that doesn&apos;t seem to be documented either. I guess different representations for the same resource are an important part of REST so I think there should be a way to do what I want to do.&lt;/p&gt;</description>
                <environment></environment>
        <key id="62632">DATAREST-490</key>
            <summary>Repository controllers not invoked if resource is handled manually in dedicated media type</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="eberhardwolff">Eberhard Wolff</reporter>
                        <labels>
                    </labels>
                <created>Wed, 11 Mar 2015 04:38:42 +0000</created>
                <updated>Sun, 26 Apr 2015 04:42:49 +0000</updated>
                            <resolved>Wed, 11 Mar 2015 07:39:03 +0000</resolved>
                                    <version>2.2.2 (Evans SR2)</version>
                    <version>2.3 RC1 (Fowler)</version>
                                    <fixVersion>2.3 GA (Fowler)</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="113366" author="olivergierke" created="Wed, 11 Mar 2015 05:44:57 +0000"  >&lt;p&gt;The issue is not so much the Spring Data REST controllers not defining any &lt;tt&gt;produces&lt;/tt&gt; attribute but our custom &lt;tt&gt;HandlerMapping&lt;/tt&gt; setup: we currently register two &lt;tt&gt;HandlerMapping&lt;/tt&gt; instances: one that handles all controllers annotated with &lt;tt&gt;@BasePathAwareController&lt;/tt&gt; which are controllers whose mappings have to honor the Spring Data REST base-path configuration (e.g. the ones serving ALPS metadata). The second handler mapping handles all controllers that expose resources for repositories.&lt;/p&gt;

&lt;p&gt;The split is necessary as the latter handling applies a stricter check for mappings to make sure it&apos;s not actually trying to handle requests for paths that are not backed by repositories. In a standard Spring MVC application, this setup will even be prepended with a standard &lt;tt&gt;RequestMappingHandlerMapping&lt;/tt&gt; that will cause all standard Spring MVC controllers to be handled.&lt;/p&gt;

&lt;p&gt;Depending on whether you use &lt;tt&gt;@BasePathAwareController&lt;/tt&gt; or &lt;tt&gt;@Controller&lt;/tt&gt; in your scenario, Spring MVC detects the the mapping bound to &lt;tt&gt;text/html&lt;/tt&gt; as content type but rightfully not consider it as its &lt;tt&gt;produces&lt;/tt&gt; clause does not match. &lt;tt&gt;org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(&#8230;)&lt;/tt&gt; will then discover the request actually matching except the media type and thus throw an exception to indicate that state. This however bubbles up through &lt;tt&gt;DispatcherServlet.getHandler(&#8230;)&lt;/tt&gt; which actually iterates all &lt;tt&gt;HandlerMapping&lt;/tt&gt; to find a suitable ones but thus causes all other registered &lt;tt&gt;HandlerMapping&lt;/tt&gt; instances not even being tried.&lt;/p&gt;

&lt;p&gt;IYAM, that particular method should actually continue trying to resolve a handler until it exhausted all registered and only throw the exception if it couldn&apos;t find one eventually. Although I haven&apos;t made up my mind on which exception to finally throw in case multiple &lt;tt&gt;HandlerMappings&lt;/tt&gt; threw exceptions. As this would mean a pretty core change to the framework, I wonder what &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=juergen.hoeller&quot; class=&quot;user-hover&quot; rel=&quot;juergen.hoeller&quot;&gt;Juergen Hoeller&lt;/a&gt; and &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop&quot; class=&quot;user-hover&quot; rel=&quot;rstoya05-aop&quot;&gt;Rossen Stoyanchev&lt;/a&gt; think about this.&lt;/p&gt;

&lt;p&gt;The even more problematic aspect here is that we can&apos;t fully solve this issue in Spring Data REST. I could of course hide our two &lt;tt&gt;HandlerMapping&lt;/tt&gt; implementations behind a delegating &lt;tt&gt;HandlerMapping&lt;/tt&gt; that does the special exception handling. This however would not fix the issue for users using &lt;tt&gt;@Controller&lt;/tt&gt; as this would still be handled by a separate &lt;tt&gt;HandlerMapping&lt;/tt&gt; and thus run into the issue described above.&lt;/p&gt;</comment>
                            <comment id="113367" author="eberhardwolff" created="Wed, 11 Mar 2015 05:49:22 +0000"  >&lt;p&gt;Thanks a lot for looking into this! At least I did not do anything stupid. &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I have a workaround: I am using @RequestMapping with .html in the URL - and that works.&lt;/p&gt;</comment>
                            <comment id="113369" author="olivergierke" created="Wed, 11 Mar 2015 07:39:03 +0000"  >&lt;p&gt;This should be fixed with &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/commit/4f8298c71176365ec638ca5ea8e5655ef5d1a8ec&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this commit&lt;/a&gt;. I basically implemented what I described above, so that you should be able to get this working using &lt;tt&gt;@BasePathAwareController&lt;/tt&gt;. Discovered a &lt;a href=&quot;https://jira.spring.io/browse/SPR-12806&quot; title=&quot;@Order annotations not consistently honored within DispatcherServlet and other parts of the framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-12806&quot;&gt;&lt;del&gt;tiny glitch&lt;/del&gt;&lt;/a&gt; in &lt;tt&gt;DispatcherServlet&lt;/tt&gt; along the way.&lt;/p&gt;

&lt;p&gt;Feel free to give the 2.3.0 snapshots a try (switching the Spring Boot &lt;tt&gt;spring-data-releasetrain.version&lt;/tt&gt; property to &lt;tt&gt;Fowler-BUILD-SNAPSHOT&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="113824" author="kakawait" created="Wed, 25 Mar 2015 02:44:30 +0000"  >&lt;p&gt;Lol that why my application failed when upgrading to Fowler train &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I can now remove my similar bean I created before 2.3.0 like following: &lt;a href=&quot;http://stackoverflow.com/a/27802520/636472&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/a/27802520/636472&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However could be possible to have a &lt;tt&gt;configure&lt;/tt&gt; method inside &lt;tt&gt;RepositoryRestMvcConfiguration&lt;/tt&gt; to custom it? In my case I want to add &lt;tt&gt;RequestMappingHandlerMapping&lt;/tt&gt; inside delegation chain.&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;configure&lt;/tt&gt; should allow to add handler inside list and maybe change &lt;tt&gt;Order&lt;/tt&gt; value&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="63279">DATAREST-522</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 11 Mar 2015 05:44:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i089jj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="81">56 - Fowler GA</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>