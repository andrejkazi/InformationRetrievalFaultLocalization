<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:18:30 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAREST-117/DATAREST-117.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAREST-117] @JsonIgnore and other Jackson annotations are ignored</title>
                <link>https://jira.spring.io/browse/DATAREST-117</link>
                <project id="10901" key="DATAREST">Spring Data REST</project>
                    <description>&lt;p&gt;Github Author: speedyg&lt;br/&gt;
Github Last-Updated: 2013-08-21T10:01:31Z&lt;br/&gt;
This issue was automatically imported from github&lt;/p&gt;

&lt;p&gt;In my application and in the example application the @JsonIgnore annotation is ignored.&lt;/p&gt;

&lt;p&gt;Reproduce:&lt;br/&gt;
Add an @JsonIgnore annotation to the field status in Order.java. The status field should not be serialized.&lt;br/&gt;
Call &lt;a href=&quot;http://localhost:8080/restbucks/orders/1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8080/restbucks/orders/1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The status property is (still) exported.&lt;/p&gt;

&lt;p&gt;Also tried @JsonIgnoreProperties and @XmlTransient, no effect.&lt;/p&gt;

&lt;p&gt;Additionally, i am not able to find another way to exclude a property.&lt;/p&gt;</description>
                <environment></environment>
        <key id="50546">DATAREST-117</key>
            <summary>@JsonIgnore and other Jackson annotations are ignored</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="thomasd">Thomas Darimont</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Aug 2013 01:32:48 +0000</created>
                <updated>Thu, 4 Jun 2015 09:08:53 +0000</updated>
                            <resolved>Thu, 4 Jun 2015 09:07:17 +0000</resolved>
                                                    <fixVersion>2.0 GA (Codd)</fixVersion>
                                        <due></due>
                            <votes>2</votes>
                                    <watches>8</watches>
                                                                <comments>
                            <comment id="93206" author="ajamthe" created="Fri, 30 Aug 2013 03:37:21 +0000"  >&lt;p&gt;I have the same issue. Any fix / workaround will be appreciated.&lt;/p&gt;</comment>
                            <comment id="94965" author="gonzaloalvarez" created="Tue, 29 Oct 2013 05:55:13 +0000"  >&lt;p&gt;Also, XmlTransient annotation gets ignored. Any workaround?&lt;/p&gt;</comment>
                            <comment id="94966" author="pcaselas" created="Tue, 29 Oct 2013 06:10:11 +0000"  >&lt;p&gt;Same issue here. Have you guys found any workaround?&lt;/p&gt;</comment>
                            <comment id="94967" author="olivergierke" created="Tue, 29 Oct 2013 06:14:19 +0000"  >&lt;p&gt;Have you tried recent 2.0.0.BUILD-SNAPSHOTS?&lt;/p&gt;</comment>
                            <comment id="94968" author="gonzaloalvarez" created="Tue, 29 Oct 2013 06:17:59 +0000"  >&lt;p&gt;Yes, I am working with 2.0.0.BUILD-SNAPSHOT, jackson 2.2.3 and spring 3.2.4.RELEASE, and it doesn&apos;t work &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/sad.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="94969" author="gonzaloalvarez" created="Tue, 29 Oct 2013 06:21:20 +0000"  >&lt;p&gt;I guess it has something to do with method in line 268 in file &lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/blob/master/spring-data-rest-webmvc/src/main/java/org/springframework/data/rest/webmvc/json/PersistentEntityJackson2Module.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;PersistentEntityJackson2Module.java&lt;/a&gt;, but I&apos;m not really sure. I guess Jackson Object Mapper should be invoked somewhere over there, but it is just a wild guess...&lt;/p&gt;</comment>
                            <comment id="94971" author="pcaselas" created="Tue, 29 Oct 2013 08:02:08 +0000"  >&lt;p&gt;My version is 1.0.0.RELEASE and I&apos;d rather not change it, cause I&apos;ve made changes of my own to some classes.&lt;/p&gt;

&lt;p&gt;Did you guys add support for printing ids on json objects on 2.0?&lt;/p&gt;</comment>
                            <comment id="98392" author="nickweedon" created="Tue, 4 Feb 2014 04:24:02 +0000"  >&lt;p&gt;I have finished writing a fix for this issue that will allow all Jackson annotations to be used for both serialization and deserialization.&lt;br/&gt;
See pull request 133 (&lt;a href=&quot;https://github.com/spring-projects/spring-data-rest/pull/133&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-rest/pull/133&lt;/a&gt;).&lt;/p&gt;</comment>
                            <comment id="98610" author="gregturn" created="Fri, 7 Feb 2014 07:37:54 +0000"  >&lt;p&gt;For now, let&apos;s narrow the scope of this to only deal with JSON. If enough desire for XML shows up, we can address that in future issues.&lt;/p&gt;</comment>
                            <comment id="98918" author="olivergierke" created="Fri, 14 Feb 2014 04:31:32 +0000"  >&lt;p&gt;This seems to have been fixed by &lt;a href=&quot;https://jira.spring.io/browse/DATAREST-238&quot; title=&quot;PUT on entity with self links causes changes to be overwritten with old values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAREST-238&quot;&gt;&lt;del&gt;DATAREST-238&lt;/del&gt;&lt;/a&gt; already.&lt;/p&gt;</comment>
                            <comment id="98925" author="nickweedon" created="Fri, 14 Feb 2014 07:16:53 +0000"  >&lt;p&gt;I thought that &lt;a href=&quot;https://jira.spring.io/browse/DATAREST-238&quot; title=&quot;PUT on entity with self links causes changes to be overwritten with old values&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAREST-238&quot;&gt;&lt;del&gt;DATAREST-238&lt;/del&gt;&lt;/a&gt; only had to do with deserialization? I believe this is an issue for serialization as well.&lt;br/&gt;
I have some unit tests in the #133 pull request (in the JPA web integration test suite) that might be useful for verifying this ticket.&lt;/p&gt;</comment>
                            <comment id="98927" author="gregturn" created="Fri, 14 Feb 2014 07:55:03 +0000"  >&lt;p&gt;I refashioned the code edits based on Ollie&apos;s rewrite of the HTTP handling.&lt;/p&gt;</comment>
                            <comment id="98928" author="gregturn" created="Fri, 14 Feb 2014 07:56:04 +0000"  >&lt;p&gt;This is a refashioned commit based on the latest round of edits to master by Ollie.&lt;/p&gt;</comment>
                            <comment id="98929" author="nickweedon" created="Fri, 14 Feb 2014 08:38:24 +0000"  >&lt;p&gt;I just had a look at pull request #135. I don&apos;t think that this addresses the full scope of this ticket. The pull request seems to just emulate the behavior of the Jackon&apos;s @JsonIgnore annotation. Note that the ticket title reads &apos;@JsonIgnore &lt;b&gt;and other Jackson annotations&lt;/b&gt; are ignored&apos;. &lt;/p&gt;

&lt;p&gt;The other problem with this approach is that composite classes will be processed in a way that allows Jackson annotations to be used where as the containing (domain class) class will be processed using the custom serializer which does not honor all Jackson annotations. This creates a kind of inconsistency which is, at least, non-intuitive to the developer.&lt;/p&gt;

&lt;p&gt;Did you take a look at how I handled this in pull request 133? The serialization solution i have there allows all Jackson annotations to be used in both composite classes and the containing class.&lt;/p&gt;</comment>
                            <comment id="99041" author="olivergierke" created="Wed, 19 Feb 2014 02:43:26 +0000"  >&lt;p&gt;Feel free to give the latest snapshot a try. We&apos;ve significantly changed the (de)serialization for &lt;a href=&quot;https://jira.spring.io/browse/DATAREST-248&quot; title=&quot;Creating resources using POST should support providing URIs for non-optional associations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAREST-248&quot;&gt;&lt;del&gt;DATAREST-248&lt;/del&gt;&lt;/a&gt; and effectively delegate to Jackson &lt;b&gt;except&lt;/b&gt; for association properties that are exported by repositories. We transform those to links (as we did before) and tell Jackson to ignore those on rendering. Everything else is handled by Jackson directly and should thus pick up customizations.&lt;/p&gt;</comment>
                            <comment id="99106" author="nickweedon" created="Thu, 20 Feb 2014 06:37:49 +0000"  >&lt;p&gt;Sounds great, i&apos;ll give it a try as soon as I can, which unfortunately won&apos;t be for at least another day or two.&lt;/p&gt;</comment>
                            <comment id="99107" author="olivergierke" created="Thu, 20 Feb 2014 06:41:34 +0000"  >&lt;p&gt;No worries, Nick. I just wanted to let you now that we addressed your concerns &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="99310" author="nickweedon" created="Tue, 25 Feb 2014 05:55:59 +0000"  >&lt;p&gt;I had a look at the changes and ran them against my unit tests from pull request 133. I really like the way that you implemented this fix, I think it is much more elegant than my fix. I didn&apos;t know about the (de)serialization modifiers, that is a much better way to do it.&lt;/p&gt;

&lt;p&gt;I had a NPE exception when i ran my test at first and was about to upload a pull request with a suggested fix but then when I rebased my changes I saw that you already fixed it, just an hour after I fetched from the upstream &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I did notice however that you only applied the PersistentProperty null check to serialization. My unit tests indicated that this needs to be added to deserialization also, since the PersistentPropery will be null during serialization if @JsonProperty is used (i.e. if a field &apos;alias&apos; is being supplied) since the name of the JSON field won&apos;t match the name the actual class property name.&lt;/p&gt;

&lt;p&gt;One other rather obvious thing to note is that there would of course need to be more work done to cover the scenario where the @JsonProperty annotation is applied to an association property or an ID property. I would hope that this is more of an edge case but it is of course still a possible scenario.&lt;/p&gt;

&lt;p&gt;I was thinking about how to solve this and I thought that one possible solution might be to build an &apos;alias&apos; map during construction of the (de)serialization modifiers by scanning the domain classes for @JsonProperty annotations. This map could then be checked at run time in the case that a PersistentProperty cannot be found.&lt;/p&gt;

&lt;p&gt;It also briefly occurred to me that a these fields could be added to the PersistentEntity property cache in the org.springframework.data.mapping.context.AbstractMappingContext class. I quickly discarded this shit idea however since I think it would be far too invasive since this class lives in spring data commons. The other bad thing about this shit idea is that this would mean that the class would then have knowledge of Jackson annotations, introducing tight coupling.&lt;/p&gt;

&lt;p&gt;You probably have a better idea but I thought I would offer up my suggestions anyhow.&lt;/p&gt;

&lt;p&gt;For what it&apos;s worth I went ahead and created pull request #136 since I thought that the unit tests in this pull request might still be useful to help with reproducing the issue that occurs during deserialization (related to the use of the @JsonProperty annotation).&lt;/p&gt;</comment>
                            <comment id="99311" author="nickweedon" created="Tue, 25 Feb 2014 06:01:46 +0000"  >&lt;p&gt;By the way, I just wanted to say thanks for readdressing this issue. I have been battling with a rather inflexible REST client and these changes have allowed me to properly integrate with SDR. It saddened me to think that I might have to abandon SDR and go back to manually marshaling JSON data. Thanks again, really appreciate it &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="99312" author="gregturn" created="Tue, 25 Feb 2014 06:20:09 +0000"  >&lt;p&gt;@Nick I&apos;m glad we put SDR back onto a solid foundation and it&apos;s serving your needs. &lt;/p&gt;

&lt;p&gt;If you have test cases that expose problems, feel free to post them possibly as a pull request on Github. You can flag stuff as &quot;DON&apos;T MERGE&quot; at the top, and then provide more details. We can chat back and forth, and if it pans out as a real bug, we can then fashion a real JIRA issue and work towards fixing stuff. This let&apos;s us use github&apos;s &quot;review&quot; model handily.&lt;/p&gt;

&lt;p&gt;In general, we need test cases to expose these problems, and as you&apos;ve seen recently, this project is moving heavily towards a test-then-fix direction, compared to where it was perhaps a year ago. Narrow, focused test cases help us knock out issues and your involvement is great at moving things along.&lt;/p&gt;

&lt;p&gt;As a side note, I&apos;m working on the first of what may be many getting started guides (&lt;a href=&quot;http://spring.io/guides&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://spring.io/guides&lt;/a&gt;) for SDR. I hope we can lower the bar and make it easier for others to start using it as well.&lt;/p&gt;</comment>
                            <comment id="99319" author="nickweedon" created="Tue, 25 Feb 2014 06:50:19 +0000"  >&lt;p&gt;@Greg I just flagged my #136 pull request with &quot;DON&apos;T MERGE&quot; but i&apos;m not sure if I have done this correctly. I simply suffixed the title with &quot;DON&apos;T MERGE&quot;, is this what you mean? I couldn&apos;t seem to find any other way to do this. This pull request includes the unit tests that reproduce the problem by the way.&lt;/p&gt;

&lt;p&gt;I like the test driven approach. It seems to work particularly well with developer to developer interaction. On that note, this has been an interesting experience for me since my usual means of collaboration include work meetings or chatting to someone over a cubicle divider &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks for letting me know about the getting started guides too. I&apos;ll definitely take a look some time. &lt;/p&gt;

&lt;p&gt;If you like, I&apos;d be happy to contribute to the guide in the area of integrating spring security since I found that I had to do a fair bit of web searching and general tinkering in this area to get this to work with my web application. There is still one area of this subject that I still need to find a solution to however (relates to discussion in &lt;a href=&quot;https://jira.spring.io/browse/DATAREST-236&quot; title=&quot;User based content and actions&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAREST-236&quot;&gt;DATAREST-236&lt;/a&gt;, Sri&apos;s problem with the findOne method).&lt;/p&gt;</comment>
                            <comment id="116311" author="tilalilalou" created="Thu, 4 Jun 2015 09:00:59 +0000"  >&lt;p&gt;This was only fixed for @JsonIgnore annotation, not for all Jackson annotations.&lt;/p&gt;

&lt;p&gt;For example, in my project I configured Jackson to ignore all property without annotations :&lt;br/&gt;
spring.jackson.mapper.auto_detect_getters: false&lt;br/&gt;
spring.jackson.mapper.auto_detect_is_getters: false&lt;/p&gt;

&lt;p&gt;The problem is that @JsonValue and @JsonProperty are ignored by Data REST, therefore I cannot serialize anything.&lt;/p&gt;

&lt;p&gt;I chose to reopen this issue because the title states &quot;other Jackson annotations&quot; as well as @JsonIgnore, correct me if that was wrong.&lt;br/&gt;
Thanks for reading!&lt;/p&gt;</comment>
                            <comment id="116312" author="olivergierke" created="Thu, 4 Jun 2015 09:07:17 +0000"  >&lt;p&gt;Please don&apos;t re-open tickets that have been marked as resolved against an already released version. Feel free to open a new ticket that summarizes what you&apos;re still missing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 30 Aug 2013 03:37:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37039</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10684" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Pull Request URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/spring-projects/spring-data-rest/pull/135]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i004uf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>792</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36741</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://api.github.com/repos/SpringSource/spring-data-rest/issues/117]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="34">43 - Babbage SR3</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>