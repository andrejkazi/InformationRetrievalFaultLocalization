<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:26:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAJPA-658/DATAJPA-658.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAJPA-658] Improve metadata detection for xml based entity mappings</title>
                <link>https://jira.spring.io/browse/DATAJPA-658</link>
                <project id="10552" key="DATAJPA">Spring Data JPA</project>
                    <description>&lt;p&gt;I have a model in POJO&apos;s and my persistence configuration in a separated project with an orm.xml file. I want to expose my persistence API and I have detected that entities are only configured when they are annotated with persistence annotations (&lt;tt&gt;@Id&lt;/tt&gt; for example).&lt;/p&gt;

&lt;p&gt;We cannot annotate our entities as they come from a target model which we don&apos;t have the source code. It would be great that Spring Data REST were configurable using &lt;tt&gt;orm.xml&lt;/tt&gt; files or other &lt;tt&gt;.xml&lt;/tt&gt; source apart from annotations.&lt;/p&gt;

&lt;p&gt;Thank you &lt;/p&gt;</description>
                <environment>Hibernate 4.3.x</environment>
        <key id="61751">DATAJPA-658</key>
            <summary>Improve metadata detection for xml based entity mappings</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="10002" iconUrl="https://jira.spring.io/images/icons/statuses/needinfo.png" description="The issue is awaiting feedback from the reporter">Waiting for Feedback</status>
                    <statusCategory id="4" key="indeterminate" colorName="yellow"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="JorgeGarc&#237;aCastillo">Jorge Garc&#237;a Castillo</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Jan 2015 09:20:13 +0000</created>
                <updated>Thu, 22 Dec 2016 10:27:12 +0000</updated>
                                            <version>1.7.1 (Evans SR1)</version>
                    <version>1.8 M1 (Fowler)</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="111597" author="olivergierke" created="Wed, 14 Jan 2015 09:48:45 +0000"  >&lt;p&gt;Actually, Spring Data REST is agnostic to the way domain types are mapped to the store. It basically relies on the Spring Data repositories being annotated. As you seem to be working with JPA, all you need to do is set up JPA the way you like (e.g. by defining entity mappings in &lt;tt&gt;orm.xml&lt;/tt&gt;), set up the JPA infrastructure for Spring Data accordingly (usually using a &lt;tt&gt;LocalContainerEntityManagerFactoryBean&lt;/tt&gt;) and Spring Data REST is good to go.&lt;/p&gt;

&lt;p&gt;Maybe I am missing something?&lt;/p&gt;</comment>
                            <comment id="111628" author="jorgegarc&#237;acastillo" created="Thu, 15 Jan 2015 00:49:56 +0000"  >&lt;p&gt;Thank you for your quick answer. I didn&apos;t explain properly.&lt;/p&gt;

&lt;p&gt;I get to do the mapping between orm.xml and the model, and even deploy correctly with the services exposed. The problem that I have is when calling one service that i get empty responses. Debugging the code I see that the beans &lt;tt&gt;JpaPersistentEntityImpl&lt;/tt&gt; have not idProperty set. The way I&apos;ve found to fix this is to annotate an entity with &lt;tt&gt;@Id&lt;/tt&gt;, but this is exactly my problem as I have no access to the model classes.&lt;/p&gt;

&lt;p&gt;I have found a person which has the same problem but from different source, because he misplaces the &lt;tt&gt;@Id&lt;/tt&gt; annotation ant the idProperty of the &lt;tt&gt;JpaPersistentEntityImpl&lt;/tt&gt; ends up not being set. This is the link: &lt;a href=&quot;http://goo.gl/W8QHgx&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://goo.gl/W8QHgx&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you for your attention&lt;/p&gt;</comment>
                            <comment id="111629" author="olivergierke" created="Thu, 15 Jan 2015 01:05:39 +0000"  >&lt;p&gt;Gotcha, I moved this to Spring Data JPA as it&apos;s basically &lt;tt&gt;JpaPersistentPropertyImpl&lt;/tt&gt; that needs to be fixed to check the JPA metamodel for identifier properties in case no annotation can be found.&lt;/p&gt;</comment>
                            <comment id="111631" author="jorgegarc&#237;acastillo" created="Thu, 15 Jan 2015 01:36:31 +0000"  >&lt;p&gt;Exactly that is the thing. And it is not only the identifier properties but also associations that the &lt;tt&gt;JpaPersistentEntityImpl&lt;/tt&gt; is missing when not using annotations and using orm.xml.&lt;/p&gt;

&lt;p&gt;Thank you&lt;/p&gt;</comment>
                            <comment id="115791" author="ckristo" created="Mon, 18 May 2015 07:42:48 +0000"  >&lt;p&gt;I encountered the same problem recently but had the possibility to switch to annotation-based JPA config. If this improvement won&apos;t be implemented soon, I would suggest to fix the NPE that is thrown by Spring Data Rest while generating the resource link for the GET response.&lt;/p&gt;</comment>
                            <comment id="115801" author="thomasd" created="Mon, 18 May 2015 08:55:49 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I gave this a spin would you mind to give the linked PR a try?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="50553">DATAREST-124</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 Jan 2015 09:48:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10684" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Pull Request URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/spring-projects/spring-data-jpa/pull/146]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|hzzy4x:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="76">56 - Fowler RC1</customfieldvalue>
    <customfieldvalue id="81">56 - Fowler GA</customfieldvalue>
    <customfieldvalue id="84">57 - Fowler Aftermath</customfieldvalue>
    <customfieldvalue id="89">58 - Gosling M1</customfieldvalue>
    <customfieldvalue id="91">59 - Evans / Fowler SR</customfieldvalue>
    <customfieldvalue id="93">Gosling RC1</customfieldvalue>
    <customfieldvalue id="97">Gosling GA</customfieldvalue>
    <customfieldvalue id="100">SpringOne 2015</customfieldvalue>
    <customfieldvalue id="104">Gosling SR1</customfieldvalue>
    <customfieldvalue id="105">Hopper M1</customfieldvalue>
    <customfieldvalue id="109">Hopper RC1</customfieldvalue>
    <customfieldvalue id="110">Hopper GA</customfieldvalue>
    <customfieldvalue id="111">Hopper SR2</customfieldvalue>
    <customfieldvalue id="112">Ingalls M1</customfieldvalue>
    <customfieldvalue id="113">Hopper SR3 / Gosling SR5</customfieldvalue>
    <customfieldvalue id="114">Kay M1</customfieldvalue>
    <customfieldvalue id="115">Ingalls RC1</customfieldvalue>
    <customfieldvalue id="116">Ingalls GA</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            </customfields>
    </item>
</channel>
</rss>