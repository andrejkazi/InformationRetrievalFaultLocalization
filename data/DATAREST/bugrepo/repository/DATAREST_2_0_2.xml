<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="DATAREST">
	<bug id="298" opendate="2014-04-29 03:27:54" fixdate="2014-04-29 03:34:43" resolution="Fixed">
		<buginformation>
			<summary>"rel" attribute of @RestResource should be optional</summary>
			<description>When a finder method does not have any @RestResource annotation, the name of the method is taken by default.
The following construct does not work, I would expect it to take the custom path as the rel value instead of the following exception:






@RestResource(path = "username")




UserAccount findByUsername(@Param("name") String username);












java.lang.IllegalArgumentException: Rel must not be null or empty!




	at org.springframework.util.Assert.hasText(Assert.java:162)




	at org.springframework.hateoas.Link.&amp;lt;init&amp;gt;(Link.java:88)




	at org.springframework.hateoas.Link.&amp;lt;init&amp;gt;(Link.java:76)




	at org.springframework.data.rest.webmvc.RepositorySearchController.getSearchLinks(RepositorySearchController.java:247)




	at org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(RepositorySearchController.java:108)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




	at java.lang.reflect.Method.invoke(Method.java:483)





</description>
			<version>2.0.2 (Codd SR2)</version>
			<fixedVersion>2.1 RC1 (Dijkstra), 2.0.3 (Codd SR3)</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.rest.core.mapping.RepositoryMethodResourceMapping.java</file>
			<file type="M">org.springframework.data.rest.core.mapping.RepositoryMethodResourceMappingUnitTests.java</file>
		</fixedFiles>
	</bug>
	<bug id="311" opendate="2014-05-30 05:40:22" fixdate="2014-06-02 03:07:33" resolution="Fixed">
		<buginformation>
			<summary>executeSearchCompact - Mismatch argument name and path variable name</summary>
			<description>In the RepositorySearchController class, the method executeSearchCompact does not take the right argument.
This case happens when the Accept values in the Request Header contains application/*+json
If you use the browser, no issue can be detected.</description>
			<version>2.0.2 (Codd SR2)</version>
			<fixedVersion>2.0.3 (Codd SR3), 2.1.1 (Dijkstra SR1), 2.2 M1 (Evans)</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.rest.webmvc.jpa.JpaWebTests.java</file>
			<file type="M">org.springframework.data.rest.webmvc.AbstractWebIntegrationTests.java</file>
			<file type="M">org.springframework.data.rest.webmvc.RepositorySearchController.java</file>
		</fixedFiles>
	</bug>
	<bug id="316" opendate="2014-06-10 07:47:27" fixdate="2014-06-12 03:46:55" resolution="Fixed">
		<buginformation>
			<summary>UriStringDeserializer should guard against URI templates submitted</summary>
			<description>Currently UriStringDeserializer uses the raw String provided for the value and tries to create a URI instance from it. In case the client accidentally submits a URI tempalte, this will fail.
The UriStringDeserializer should defensively expand the given value to make sure optional template variables are stripped.</description>
			<version>2.0.2 (Codd SR2)</version>
			<fixedVersion>2.0.3 (Codd SR3), 2.1.1 (Dijkstra SR1), 2.2 M1 (Evans)</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.rest.webmvc.json.PersistentEntityJackson2Module.java</file>
			<file type="M">org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.java</file>
		</fixedFiles>
	</bug>
</bugrepository>