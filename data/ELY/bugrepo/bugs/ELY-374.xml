<!-- 
RSS generated by JIRA (7.2.3#72005-sha1:73be91d2b96fc29303a7eb6820acf420e5d0ed65) at Tue Dec 06 18:05:40 EST 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.jboss.org/si/jira.issueviews:issue-xml/ELY-374/ELY-374.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>JBoss Issue Tracker</title>
    <link>https://issues.jboss.org</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-us</language>    <build-info>
        <version>7.2.3</version>
        <build-number>72005</build-number>
        <build-date>06-10-2016</build-date>
    </build-info>

<item>
            <title>[ELY-374] Ambiguous application of CredentialCallback</title>
                <link>https://issues.jboss.org/browse/ELY-374</link>
                <project id="12315320" key="ELY">WildFly Elytron</project>
                    <description>&lt;p&gt;We have a problem where there is an ambiguous application of &lt;tt&gt;CredentialCallback&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;On the client, this callback is used to acquire the credential to use for outbound authentication.  On the server, it is used in two ways:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;For most authentication, it is used to acquire the credential that is used to verify the client identity.&lt;/li&gt;
	&lt;li&gt;For Entity authentication, it is used to acquire the credential that is used to identify the server to the client.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The reason Entity can get away with this special behavior is that it uses the &lt;tt&gt;VerifyPeerTrustedCallback&lt;/tt&gt; instead of &lt;tt&gt;CredentialCallbak&lt;/tt&gt; for checking the peer.  Unfortunately, it is not easy for a callback handler to know when &lt;tt&gt;CredentialCallback&lt;/tt&gt; is being used for the host identity versus the authenticating user identity.  This needs to be solved ASAP so that we can have server mechanisms that present a host identity as well as acquiring a credential for user authentication.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12593223">ELY-374</key>
            <summary>Ambiguous application of CredentialCallback</summary>
                <type id="1" iconUrl="https://issues.jboss.org/secure/viewavatar?size=xsmall&amp;avatarId=13263&amp;avatarType=issuetype">Bug</type>
                                            <priority id="2" iconUrl="https://issues.jboss.org/images/icons/priorities/critical.svg">Critical</priority>
                        <status id="5" iconUrl="https://issues.jboss.org/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Done</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="dmlloyd">David Lloyd</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Nov 2015 18:24:31 -0500</created>
                <updated>Thu, 19 Nov 2015 13:23:46 -0500</updated>
                            <resolved>Thu, 19 Nov 2015 13:23:46 -0500</resolved>
                                                    <fixVersion>1.1.0.Beta2</fixVersion>
                                    <component>Authentication Mechanisms</component>
                    <component>Callbacks</component>
                    <component>SASL</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13130553" author="dmlloyd" created="Wed, 18 Nov 2015 19:09:56 -0500"  >&lt;p&gt;Here are some options:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Add a field to &lt;tt&gt;CredentialCallback&lt;/tt&gt; to designate local or peer credential, or perhaps client or server credential.  In the Entity mechanism, use &lt;tt&gt;CredentialCallback&lt;/tt&gt; on the client and server to acquire the local credential to use, and the general peer trust callback to verify the peer&apos;s public credential.  On the client, only local credentials may be sensibly acquired, but on the server, either local or peer credentials might be acquired.&lt;/li&gt;
	&lt;li&gt;Add a field to &lt;tt&gt;CredentialCallback&lt;/tt&gt; as above, but stop using &lt;tt&gt;VerifyPeerTrustedCallback&lt;/tt&gt; to verify the client, instead using a second (peer) &lt;tt&gt;CredentialCallback&lt;/tt&gt; to acquire the user public credential and performing the validation within the mechanism.  The &lt;tt&gt;VerifyPeerTrustedCallback&lt;/tt&gt; (or its &lt;a href=&quot;https://issues.jboss.org/browse/ELY-373&quot; title=&quot;General peer verification callback&quot; class=&quot;issue-link&quot; data-issue-key=&quot;ELY-373&quot;&gt;&lt;del&gt;ELY-373&lt;/del&gt;&lt;/a&gt; equivalent) would still be used on the client to verify the server.&lt;/li&gt;
	&lt;li&gt;Add a &lt;tt&gt;LocalCredentialCallback&lt;/tt&gt; which acquires the local credential.  Use this credential on the server to acquire the host credential.  Change the client to use this callback to acquire the user credential on the client.  The server would continue to use &lt;tt&gt;CredentialCallback&lt;/tt&gt; to acquire the user (peer) credential.&lt;/li&gt;
	&lt;li&gt;Add a &lt;tt&gt;HostCredentialCallback&lt;/tt&gt; which is basically identical to &lt;tt&gt;CredentialCallback&lt;/tt&gt;.  This would only be used server-side, to acquire the local host credential.  Other existing uses of &lt;tt&gt;CredentialCallback&lt;/tt&gt; would then remain unchanged.  The advantage to this approach over #1 is that the client doesn&apos;t have to make sure the credential &quot;type&quot; makes sense (i.e. is &quot;LOCAL&quot; or &quot;CLIENT&quot; as opposed to &quot;PEER&quot; or &quot;SERVER&quot;).  The advantage over #3 is that existing client and server usages don&apos;t have to change.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="13130555" author="dmlloyd" created="Wed, 18 Nov 2015 19:42:09 -0500"  >&lt;p&gt;In any event, configuring a server-side local credential or set of credentials is something which should be done in a &lt;tt&gt;MechanismConfiguration&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="13130556" author="dmlloyd" created="Wed, 18 Nov 2015 19:46:00 -0500"  >&lt;p&gt;I think the main deciding factor on using a peer &lt;tt&gt;CredentialCallback&lt;/tt&gt; versus a &lt;tt&gt;VerifyPeerTrustedCallback&lt;/tt&gt; is, if you have a &lt;tt&gt;NameCallback&lt;/tt&gt; which provides the peer name in advance, then use &lt;tt&gt;CredentialCallback&lt;/tt&gt; (or &lt;tt&gt;EvidenceVerifyCallback&lt;/tt&gt;), else &lt;tt&gt;VerifyPeerTrustedCallback&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;What makes &lt;tt&gt;NameCallback&lt;/tt&gt; special is that on the client side, it&apos;s used to query the local callback handler to get the name to send to the peer, i.e. it&apos;s a local name.  On the server side, it is used to tell the callback handler what name the client is using, i.e. it&apos;s a peer name.  There isn&apos;t a flag to distinguish the cases.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                                                                                                                                                                                                                                                                                                                                                <customfield id="customfield_12310092" key="com.atlassian.jira.plugin.system.customfieldtypes:select">
                        <customfieldname>Estimated Difficulty</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue key="10062"><![CDATA[Low]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310641" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Number of attachments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310640" key="com.atlassian.jira.toolkit:comments">
                        <customfieldname>Number of comments</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311940" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1|hzzrbb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310840" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>