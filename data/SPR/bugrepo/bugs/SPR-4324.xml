<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:17:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-4324/SPR-4324.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-4324] component scanning incorrectly excludes classes</title>
                <link>https://jira.spring.io/browse/SPR-4324</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The version bump from 2.5 to 2.5.1 breaks component scanning for me. Symptoms are that lots of beans annotated with @Component are being skipped for inclusion as beans. After digging through the code, I think the following commit is the culprit:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://fisheye1.cenqua.com/changelog/springframework?cs=MAIN:jhoeller:20080107164524&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://fisheye1.cenqua.com/changelog/springframework?cs=MAIN:jhoeller:20080107164524&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The commit message says:&lt;/p&gt;

&lt;p&gt;added &quot;getEnclosingClassName()&quot;, &quot;hasEnclosingClass()&quot; and &quot;isIndependent()&quot; methods to ClassMetadata interface; ClassPathScanningCandidateComponentProvider (&quot;context:component-scan&quot;) ignores non-static inner and local classes&lt;/p&gt;

&lt;p&gt;I am not sure why beanDefinition.getMetadata().isIndependent() is returning false for my classes. The scenario is as follows:&lt;/p&gt;

&lt;p&gt;MyBroker has @Component annotation. MyBroker uses a class MyService (regular instantiation) using something like:&lt;br/&gt;
        MyService service = new MyService()&lt;br/&gt;
MyService, in turn, is the class which DOES have a local inner class. I think the bug is in identifying MyBroker as having an inner class. It should not identify MyBroker as having an inner class (since it doesn&apos;t have one).&lt;/p&gt;

&lt;p&gt;ClassMetaDataReadingVisitor.java has the following method:&lt;/p&gt;

&lt;p&gt;	public boolean isIndependent() &lt;/p&gt;
{
		return (this.enclosingClassName == null || this.independentInnerClass);
	}

&lt;p&gt;In that method, while trying to see if MyBroker is a candidate, enclosingClassName is set to MyService.&lt;/p&gt;

&lt;p&gt;I think this needs a quick fix.&lt;/p&gt;</description>
            <key id="19122">SPR-4324</key>
            <summary>component scanning incorrectly excludes classes</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="haroon.rafique">Haroon Rafique</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Jan 2008 07:57:32 +0000</created>
                <updated>Tue, 19 Jun 2012 03:47:39 +0000</updated>
                            <resolved>Mon, 14 Jan 2008 05:38:10 +0000</resolved>
                                    <version>2.5.1</version>
                                    <fixVersion>2.5.2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="28966" author="sbrannen" created="Sun, 13 Jan 2008 00:05:55 +0000"  >&lt;p&gt;Consult the forum for possible further discussion apart from comments here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://forum.springframework.org/showthread.php?t=48452&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?t=48452&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="28967" author="haroon.rafique" created="Sun, 13 Jan 2008 00:40:15 +0000"  >&lt;p&gt;I have edited the forum posting to note that there is indeed a public constructor at the MyBroker class and MyService is obtained using a (factory) method like:&lt;/p&gt;

&lt;p&gt;protected MyService getMyService() {&lt;br/&gt;
         return new MyService()&lt;br/&gt;
}&lt;/p&gt;</comment>
                            <comment id="28987" author="juergen.hoeller" created="Sun, 13 Jan 2008 07:41:30 +0000"  >&lt;p&gt;This is probably due to some semantic mismatch with ASM visiting there...&lt;/p&gt;

&lt;p&gt;Can you please provide a minimal test case for this - one that passes for you against 2.5 and fails for you against 2.5.1? I&apos;ll make sure to fix this in an upcoming 2.5.2 snapshot as quickly as possible...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="29020" author="haroon.rafique" created="Mon, 14 Jan 2008 02:47:34 +0000"  >&lt;p&gt;Find attached a maven project which demonstrates the bug. The pom.xml has a property inside it for spring version. It is currently set to 2.5.1. To see the bug, run:&lt;/p&gt;

&lt;p&gt;mvn clean process-classes&lt;/p&gt;

&lt;p&gt;To see it work without an error with spring 2.5, edit the pom.xml and change the value of property spring.ver from 2.5.1 to 2.5 and rerun:&lt;/p&gt;

&lt;p&gt;mvn clean process-classes&lt;/p&gt;

&lt;p&gt;With spring 2.5.1, you will see something like:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named &apos;cfbs&apos; is defined&lt;/p&gt;

&lt;p&gt;basically demonstrating that a bean annotated with @Component was excluded as a candidate bean.&lt;/p&gt;

&lt;p&gt;Let me know if you need any further help regarding this issue.&lt;/p&gt;

&lt;p&gt;Here is an explanation of the contents of the zip file:&lt;/p&gt;

&lt;p&gt;pom.xml (maven project file)&lt;br/&gt;
src/main/java/com/acme/spring/CandidateForBeanScanning.java (@Component annotated bean)&lt;br/&gt;
src/main/java/com/acme/spring/OuterClassWithNoAnnotation.java (a class containing an inner class)&lt;br/&gt;
src/main/java/com/acme/spring/Spring4324Bug.java (driver class)&lt;br/&gt;
src/main/resources/context.xml (spring context file)&lt;/p&gt;</comment>
                            <comment id="29025" author="juergen.hoeller" created="Mon, 14 Jan 2008 05:38:10 +0000"  >&lt;p&gt;It turned out that ClassMetadataReadingVisitor (as used by &quot;context:component-scan&quot;) got confused by &lt;b&gt;usage&lt;/b&gt; of inner classes (which ASM seems to report as well) as opposed to &lt;b&gt;being defined&lt;/b&gt; an inner class... Thanks for reporting this!&lt;/p&gt;

&lt;p&gt;This fix should be available in tonight&apos;s 2.5.2 snapshot (-368), available from &lt;a href=&quot;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&lt;/a&gt;&lt;br/&gt;
Please give it a try and let me know whether it works for you!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="29050" author="haroon.rafique" created="Tue, 15 Jan 2008 01:15:46 +0000"  >&lt;p&gt;verified and fixed. thanks for your quick work.&lt;/p&gt;</comment>
                            <comment id="31324" author="cameronbraid" created="Mon, 28 Jan 2008 04:22:02 +0000"  >&lt;p&gt;I am having the same issue as described here.&lt;/p&gt;

&lt;p&gt;Is it possible to have nightly snapshots published to s3 ?&lt;/p&gt;

&lt;p&gt;I use maven and would much prefer to use the &lt;a href=&quot;http://s3.amazonaws.com/maven.springframework.org/snapshot&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://s3.amazonaws.com/maven.springframework.org/snapshot&lt;/a&gt;  repository instead of manually downloading the nightly build, unzip, and manually install each jar into my local maven repo.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="20564">SPR-4456</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="19193">SPR-4350</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="20873">SPR-4527</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="19159">SPR-4338</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="21589">SPR-4686</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="20574">SPR-4458</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="13270" name="spring-2.5.1-component-scanning-inner-class-bug-SPR-4324.zip" size="5029" author="haroon.rafique" created="Mon, 14 Jan 2008 02:47:33 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        8 years, 48 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 13 Jan 2008 00:05:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00ssv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4711</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>