<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:09:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1051/SPR-1051.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1051] init-method/destroy-method not consistently invoked</title>
                <link>https://jira.spring.io/browse/SPR-1051</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;This example uses oscache, but presumably it is not oscache related.&lt;/p&gt;

&lt;p&gt;The problem is that clear() never gets called on the osCachePersistenceListener bean despite being declared as both a destroy-method and init-method.&lt;/p&gt;

&lt;p&gt;It gets even stranger though.  When I uncomment the osCachePersistenceListenerClear bean declaration which explicitly invokes clear() on the osCachePersistenceListener, clear() actually gets called three times, at init time, by the explicit invocation, and finally when the bean is destroyed (in that order).  That is, all of a sudden, the destroy-method and init-method on osCachePersistenceListener are obeyed.&lt;/p&gt;

&lt;p&gt;Here is the example applicationContext.xml:&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;systemPropertyConfigurer&quot; class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;placeholderPrefix&quot; value=&quot;$sys{&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;osCacheAdministrator&quot; class=&quot;com.opensymphony.oscache.general.GeneralCacheAdministrator&quot; destroy-method=&quot;destroy&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg index=&quot;0&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;props&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;cache.memory&quot;&amp;gt;true&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;cache.capacity&quot;&amp;gt;1&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;cache.unlimited.disk&quot;&amp;gt;true&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;cache.persistence.class&quot;&amp;gt;com.opensymphony.oscache.plugins.diskpersistence.HashDiskPersistenceListener&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;cache.path&quot;&amp;gt;$sys&lt;/p&gt;
{java.io.tmpdir}
&lt;p&gt;/oscache&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;cache.persistence.overflow.only&quot;&amp;gt;true&amp;lt;/prop&amp;gt;&lt;br/&gt;
            &amp;lt;/props&amp;gt;&lt;br/&gt;
        &amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;osCache&quot; factory-bean=&quot;osCacheAdministrator&quot; factory-method=&quot;getCache&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- Set destroy-method to clear() to make sure disk is cleaned up when application exits cleanly, &lt;br/&gt;
         set init-method to clear so disk cleaned up at startup in case app server did not shutdown cleanly --&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;osCachePersistenceListener&quot; factory-bean=&quot;osCache&quot; factory-method=&quot;getPersistenceListener&quot; destroy-method=&quot;clear&quot; init-method=&quot;clear&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!--&lt;br/&gt;
    &amp;lt;bean id=&quot;osCachePersistenceListenerClear&quot; class=&quot;org.springframework.beans.factory.config.MethodInvokingFactoryBean&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;targetObject&quot; ref=&quot;osCachePersistenceListener&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;targetMethod&quot; value=&quot;clear&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
--&amp;gt;&lt;/p&gt;</description>
            <key id="11770">SPR-1051</key>
            <summary>init-method/destroy-method not consistently invoked</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="perfnorm">Jasper Rosenberg</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Jun 2005 00:53:16 +0000</created>
                <updated>Tue, 19 Jul 2005 00:54:16 +0000</updated>
                            <resolved>Tue, 19 Jul 2005 00:54:16 +0000</resolved>
                                    <version>1.2.1</version>
                                    <fixVersion>1.2.2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13722" author="juergen.hoeller" created="Sat, 2 Jul 2005 11:08:20 +0000"  >&lt;p&gt;Sorry, I can&apos;t reproduce this... init-method/destroy-method seems to work just fine for beans created through a factory-method. Can you maybe submit a minimal test case that reproduces your issue?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="13759" author="perfnorm" created="Wed, 6 Jul 2005 02:12:31 +0000"  >&lt;p&gt;I wrote a unit test to see if I could narrow down what was happening, and I think I figured it out.  &lt;/p&gt;

&lt;p&gt;At least in my case, the init-method is not being called until the first time I ask for the osCachePersistenceListener bean.  Therefore, the init never happens because I never ask for the bean by name, I was just using Spring to initialize it behind the scenes.&lt;/p&gt;

&lt;p&gt;That explains why, when I use the MethodInvokingFactoryBean, the init-method &lt;b&gt;does&lt;/b&gt; get called on the osCachePersistenceListener bean (because the osCachePersistenceListener is injected into the MethodInvokingFactoryBean.)&lt;/p&gt;

&lt;p&gt;Obviously, my error was assuming that because the bean was a non-lazy singleton, it would have been initialized when the applicationContext.xml was loaded, regardless of its explicit use.&lt;/p&gt;

&lt;p&gt;In case it helps, here is also a simplified view of how I was getting access to the BeanFactory:&lt;br/&gt;
-----------------------------------&lt;br/&gt;
BeanFactoryLocator singletonBeanFactoryLocator = &lt;br/&gt;
	ContextSingletonBeanFactoryLocator.getInstance(&quot;classpath*:beanRefContext.xml&quot;);&lt;/p&gt;

&lt;p&gt;BeanFactoryReference beanFactoryReference = &lt;br/&gt;
	singletonBeanFactoryLocator.useBeanFactory(&quot;com.mycompany.cache&quot;);&lt;/p&gt;

&lt;p&gt;BeanFactory beanFactory = beanFactoryReference.getFactory();&lt;/p&gt;

&lt;p&gt;// This line ends up triggering init-method&lt;br/&gt;
PersistenceListener listener = (PersistenceListener)beanFactory.getBean(&quot;osCachePersistenceListener&quot;);&lt;/p&gt;

&lt;p&gt;-----------------------------------&lt;br/&gt;
beanRefContext.xml:&lt;br/&gt;
-----------------------------------&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;!DOCTYPE beans PUBLIC &quot;-//SPRING//DTD BEAN//EN&quot; &quot;http://www.springframework.org/dtd/spring-beans.dtd&quot;&amp;gt;&lt;br/&gt;
&amp;lt;beans&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;com.mycompany.cache&quot; class=&quot;org.springframework.context.support.ClassPathXmlApplicationContext&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg&amp;gt;&lt;br/&gt;
            &amp;lt;list&amp;gt;&lt;br/&gt;
                &amp;lt;value&amp;gt;applicationContext.xml&amp;lt;/value&amp;gt;&lt;br/&gt;
            &amp;lt;/list&amp;gt;&lt;br/&gt;
        &amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;br/&gt;
-----------------------------------&lt;/p&gt;

&lt;p&gt;I assume this is the intended behavior?  &lt;/p&gt;

&lt;p&gt;If so, is there a mechanism to force the unused singleton to initialize?&lt;/p&gt;</comment>
                            <comment id="13760" author="perfnorm" created="Wed, 6 Jul 2005 02:57:20 +0000"  >&lt;p&gt;Simple app context for demonstrating init-method not called.  Expected to be in spring.ut package.&lt;/p&gt;</comment>
                            <comment id="13761" author="perfnorm" created="Wed, 6 Jul 2005 02:57:37 +0000"  >&lt;p&gt;Simple unit test for demonstrating init-method not called.  Expected to be in spring.ut package.&lt;/p&gt;</comment>
                            <comment id="13762" author="perfnorm" created="Wed, 6 Jul 2005 04:08:14 +0000"  >&lt;p&gt;One additional interesting piece of data:&lt;/p&gt;

&lt;p&gt;In the unit test I attached, the SimpleBean default constructor is called for this bean declaration:&lt;br/&gt;
    &amp;lt;bean id=&quot;simpleBean2&quot; class=&quot;spring.ut.InitTest$SimpleBean&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;but it is not for this one:&lt;br/&gt;
    &amp;lt;bean id=&quot;simpleBean&quot; factory-bean=&quot;ut&quot; factory-method=&quot;create&quot;/&amp;gt;&lt;/p&gt;
</comment>
                            <comment id="13923" author="juergen.hoeller" created="Tue, 19 Jul 2005 00:54:16 +0000"  >&lt;p&gt;I have just run your unit tests against CVS HEAD, Spring 1.2.2 and Spring 1.2.1 - and noticed that it only failed against 1.2.1. Hence, the factory-method refinements in 1.2.2 (which were quite significant) already cover this bug.&lt;/p&gt;

&lt;p&gt;The root cause is that any beans without bean class declaration were not eagerly instantiated before. Since 1.2.2, only abstract beans and lazy-init beans are ignored for eager instantiation, which properly covers beans with &quot;factory-bean&quot; declaration now.&lt;/p&gt;

&lt;p&gt;Nevertheless, thanks for pointing this out!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="10892" name="InitTest.java" size="849" author="perfnorm" created="Wed, 6 Jul 2005 02:57:37 +0000"/>
                            <attachment id="10891" name="applicationContext-test.xml" size="421" author="perfnorm" created="Wed, 6 Jul 2005 02:57:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 24 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 2 Jul 2005 11:08:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04wmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28661</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>