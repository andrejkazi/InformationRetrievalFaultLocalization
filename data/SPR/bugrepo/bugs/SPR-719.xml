<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:57:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-719/SPR-719.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-719] SingletonBeanFactoryLocator recursion problem</title>
                <link>https://jira.spring.io/browse/SPR-719</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I am trying to wire up an application using embedded Jetty web&lt;br/&gt;
server. In order to make the service beans available to the&lt;br/&gt;
Jetty servlets, I am using ContextLoader.loadParentContext()&lt;br/&gt;
to set a parent context for the root web context, e.g.:&lt;/p&gt;

&lt;p&gt;    &amp;lt;context-param&amp;gt;&lt;br/&gt;
        &amp;lt;param-name&amp;gt;locatorFactorySelector&amp;lt;/param-name&amp;gt;&lt;br/&gt;
        &amp;lt;param-value&amp;gt;classpath*:com/awarix/trak/server/**/beanRefFactory.xml&amp;lt;/param-value&amp;gt;&lt;br/&gt;
    &amp;lt;/context-param&amp;gt;&lt;br/&gt;
    &amp;lt;context-param&amp;gt;&lt;br/&gt;
        &amp;lt;param-name&amp;gt;parentContextKey&amp;lt;/param-name&amp;gt;&lt;br/&gt;
        &amp;lt;param-value&amp;gt;com.awarix.trak.server&amp;lt;/param-value&amp;gt;&lt;br/&gt;
    &amp;lt;/context-param&amp;gt;&lt;br/&gt;
    &amp;lt;listener&amp;gt;&lt;br/&gt;
        &amp;lt;listener-class&amp;gt;org.springframework.web.context.ContextLoaderListener&amp;lt;/listener-class&amp;gt;&lt;br/&gt;
    &amp;lt;/listener&amp;gt;&lt;/p&gt;


&lt;p&gt;My application is also started using an &quot;AppLauncher&quot; class&lt;br/&gt;
that I wrote that does something like this:&lt;/p&gt;

&lt;p&gt;        // Start application&lt;br/&gt;
        try &lt;/p&gt;
{
            ContextSingletonBeanFactoryLocator
              .getInstance(getSelector(pname)).useBeanFactory(pname);
        }
&lt;p&gt; catch (BeansException e) &lt;/p&gt;
{
            LOG.error(&quot;failed to launch application&quot;, e);
            e.printStackTrace(System.err);
            System.exit(1);
        }

&lt;p&gt;The servlet context is configured to use the same selector and&lt;br/&gt;
context key as is used by the above code (not shown), to ensure&lt;br/&gt;
that the ContextLoader finds the same application context for&lt;br/&gt;
its parent as is used by the rest of the application.&lt;/p&gt;

&lt;p&gt;The problem is that recursion occurs in the&lt;br/&gt;
SingletonBeanFactoryLocator.useBeanFactory() method:&lt;/p&gt;

&lt;p&gt;            else {&lt;br/&gt;
                // this group definition doesn&apos;t exist, we need to try to load it&lt;br/&gt;
                if (logger.isDebugEnabled()) &lt;/p&gt;
{
                    logger.debug(&quot;Factory group with resource name [&quot; + this.resourceName
                            + &quot;] requested. Creating new instance.&quot;);
                }

&lt;p&gt;                BeanFactory groupContext = createDefinition(this.resourceName, factoryKey);&lt;/p&gt;

&lt;p&gt;                bfg = new BeanFactoryGroup();&lt;br/&gt;
                bfg.definition = groupContext;&lt;br/&gt;
                bfg.refCount = 1;&lt;br/&gt;
                this.bfgInstancesByKey.put(this.resourceName, bfg);&lt;br/&gt;
                this.bfgInstancesByObj.put(groupContext, bfg);&lt;br/&gt;
            }&lt;/p&gt;

&lt;p&gt;Note that the &apos;bfg&apos; is not added to bfgInstancesByKey until&lt;br/&gt;
after createDefinition() is invoked. This causes the second&lt;br/&gt;
(reentrant) invocation of useBeanFactory() (the one from the&lt;br/&gt;
web context) to fail to find the beans that are trying to be&lt;br/&gt;
created in the first invocation (the one from the app launcher).&lt;/p&gt;

&lt;p&gt;I.e., here is the sequence of events:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;AppLauncher invokes useBeanFactory()&lt;/li&gt;
	&lt;li&gt;This invokes createDefinition()&lt;/li&gt;
	&lt;li&gt;This causes all the application beanRefFactory.xml files&lt;br/&gt;
    to be processed.&lt;/li&gt;
	&lt;li&gt;One of these files creates a org.mortbay.jetty.Server bean.&lt;/li&gt;
	&lt;li&gt;That bean tries to create the servlet context.&lt;/li&gt;
	&lt;li&gt;The ContextLoaderListener fires, causing the ContextLoader&lt;br/&gt;
    to search for the application beans.&lt;/li&gt;
	&lt;li&gt;ContextLoader (reentrantly) invokes useBeanFactory() to&lt;br/&gt;
    find the parent context for the web context, i.e., the&lt;br/&gt;
    application context.&lt;/li&gt;
	&lt;li&gt;The application context has not yet been registered in&lt;br/&gt;
    bfgInstancesByKey and so is not found.&lt;/li&gt;
	&lt;li&gt;All hell breaks loose as Spring tries to create all the&lt;br/&gt;
    (already created) application beans yet again, etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I don&apos;t know if this is a Spring bug or if what I&apos;m doing&lt;br/&gt;
is &quot;out of spec&quot;. In any case the behavior is not intuitive.&lt;/p&gt;

&lt;p&gt;It may be possible to fix SingletonBeanFactoryLocator to handle&lt;br/&gt;
the reentrancy (e.g., register the key in bfgInstancesByKey&lt;br/&gt;
first, then create the definition).&lt;/p&gt;

&lt;p&gt;Otherwise, I&apos;d like to know the &quot;right&quot; way to do what I&apos;m trying&lt;br/&gt;
to do, which is simply get Jetty working as an embedded web server&lt;br/&gt;
and give it access to my (singleton) application service beans.&lt;/p&gt;
</description>
            <key id="11156">SPR-719</key>
            <summary>SingletonBeanFactoryLocator recursion problem</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="colin.sampaleanu">Colin Sampaleanu</assignee>
                                    <reporter username="archie172">Archie Cobbs</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Feb 2005 09:44:24 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:08 +0000</updated>
                            <resolved>Wed, 9 Mar 2005 09:38:54 +0000</resolved>
                                    <version>1.1.4</version>
                                    <fixVersion>1.2 RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12346" author="archie172" created="Thu, 17 Feb 2005 02:55:30 +0000"  >&lt;p&gt;Candidate patch to fix this problem.&lt;/p&gt;

&lt;p&gt;(Note CR&apos;s are stripped, I use Linux not Windows)&lt;/p&gt;</comment>
                            <comment id="12501" author="archie172" created="Tue, 8 Mar 2005 02:47:12 +0000"  >&lt;p&gt;The patch brings up the question: should all BeanFactories&lt;br/&gt;
in general support the notion of being &quot;initialized&quot; ?&lt;/p&gt;

&lt;p&gt;I.e., if we added a method to the BeanFactory interface like&lt;br/&gt;
&quot;public void initialize()&quot; then the &apos;instanceof&apos; checks in the&lt;br/&gt;
patch would not be necessary.&lt;/p&gt;

&lt;p&gt;Seems like this would be a desirable change, so that various&lt;br/&gt;
code like the code discussed here can always ensure an orderly&lt;br/&gt;
initialization sequence. As it stands, things are a bit&lt;br/&gt;
non-deterministic, because different BeanFactory implementations&lt;br/&gt;
can initialize whenver they feel like it, causing other problems&lt;br/&gt;
similar to the one described in this bug.&lt;/p&gt;

&lt;p&gt;E.g., as the patch stands, it won&apos;t fix this problem for&lt;br/&gt;
somebody&apos;s custom BeanFactory that isn&apos;t an instanceof the&lt;br/&gt;
checked classes.&lt;/p&gt;</comment>
                            <comment id="12518" author="colin.sampaleanu" created="Wed, 9 Mar 2005 09:38:54 +0000"  >&lt;p&gt;patch applied&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="10521" name="SPR-719.patch" size="4604" author="archie172" created="Thu, 17 Feb 2005 02:55:30 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 43 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 Mar 2005 09:38:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04xfj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28790</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>