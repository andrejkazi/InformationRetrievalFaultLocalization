<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:16:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-705/SPR-705.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-705] TransactionAwareDSP with iBatis duplicates ConnectionSynchronization in TransactionManager</title>
                <link>https://jira.spring.io/browse/SPR-705</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;When using iBatis with TransactionAwareDataSourceProxy (TADS), DataSource resource gets registered twice (different instances - same underlying datasource).&lt;br/&gt;
First with SqlMapClientTemplat on actual TADSP and then yet again with  TADSP&apos;s getConnection() method.&lt;br/&gt;
So when it is cleaning up the transaction on APTransactionManager&apos;s triggerBeforeCompletion method, it gets already closed connection.&lt;/p&gt;

&lt;p&gt;My fix (currently is working ok &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;:&lt;/p&gt;

&lt;p&gt;from SqlMapClientTemplate.java&lt;/p&gt;

&lt;p&gt;    public Object execute(SqlMapClientCallback action) throws DataAccessException {&lt;br/&gt;
        Assert.notNull(getSqlMapClient(), &quot;No SqlMapClient specified&quot;);&lt;br/&gt;
        SqlMapSession session = this.getSqlMapClient().openSession();&lt;br/&gt;
        try {&lt;br/&gt;
            DataSource dataSource = getDataSource();&lt;br/&gt;
            if (dataSource instanceof TransactionAwareDataSourceProxy) &lt;/p&gt;
{
                dataSource = ((TransactionAwareDataSourceProxy)dataSource).getTargetDataSource();
            }
&lt;p&gt;            Connection con = DataSourceUtils.getConnection(dataSource);&lt;br/&gt;
            try &lt;/p&gt;
{
                session.setUserConnection(con);
                return action.doInSqlMapClient(session);
            }
&lt;p&gt;            catch (SQLException ex) &lt;/p&gt;
{
                throw getExceptionTranslator().translate(&quot;SqlMapClient operation&quot;, null, ex);
            }
&lt;p&gt;            finally &lt;/p&gt;
{
                DataSourceUtils.closeConnectionIfNecessary(con, dataSource);
            }
&lt;p&gt;        }&lt;br/&gt;
        finally &lt;/p&gt;
{
            session.close();
        }
&lt;p&gt;    }&lt;/p&gt;</description>
            <key id="11133">SPR-705</key>
            <summary>TransactionAwareDSP with iBatis duplicates ConnectionSynchronization in TransactionManager</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="alesj">Ales Justin</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Feb 2005 01:47:34 +0000</created>
                <updated>Sat, 12 Feb 2005 21:53:21 +0000</updated>
                            <resolved>Sat, 12 Feb 2005 05:38:18 +0000</resolved>
                                    <version>1.1.4</version>
                                    <fixVersion>1.1.5</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12282" author="juergen.hoeller" created="Sat, 12 Feb 2005 05:38:18 +0000"  >&lt;p&gt;Did you get a failure because of this? While it is true that two Connection handles get registered in this case, it shouldn&apos;t matter: one of them is a proxy that ignores close calls on transactional connections anyway.&lt;/p&gt;

&lt;p&gt;Nevertheless, I&apos;ve taken this as occasion to implement an optimization in SqlMapClientTemplate: If the SqlMapClient itself is configured with a TransactionAwareDataSourceProxy, we don&apos;t need to create a SqlMapSession but can execute directly on the SqlMapClient instead (because the SqlMapClient itself will fetch a Spring-managed JDBC connection).&lt;/p&gt;

&lt;p&gt;As a side effect, this also solves your issue: There&apos;s only gonna be one Connection handle registered with the transaction in any case.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12285" author="juergen.hoeller" created="Sat, 12 Feb 2005 21:53:21 +0000"  >&lt;p&gt;Actually, there is a case where you can get two close calls on the underlying JDBC connection: when not using JtaTransactionManager, where the beforeCompletion will be invoked in an order that results in two such close calls. However, that shouldn&apos;t hurt: a close call on an already closed JDBC connection is a no-op (according to the java.sql.Connection javadoc).&lt;/p&gt;

&lt;p&gt;Anyway, the new direct SqlMapClient access in case of a TransactionAwareDataSourceProxy should remove such circumstances anyway.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 46 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 12 Feb 2005 05:38:18 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01fgv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8383</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>