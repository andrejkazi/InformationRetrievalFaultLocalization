<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:14:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1940/SPR-1940.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1940] Have a propertyEditor return Arrays.asList(new String[] {&quot;a&quot;, &quot;b&quot;}) and a method expecting List&lt;String&gt; and binding breaks</title>
                <link>https://jira.spring.io/browse/SPR-1940</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I have a form with a get/setCategories(List&amp;lt;String&amp;gt;).&lt;/p&gt;

&lt;p&gt;I also have a property editor which returns Arrays.asList(StringUtils.commaDelimitedListToStringArray(value)) registered on the binder for List&amp;lt;String&amp;gt; and the property name.&lt;/p&gt;

&lt;p&gt;When binding I get the following stack trace:&lt;/p&gt;

&lt;p&gt;java.lang.NoSuchMethodException: java.util.Arrays$ArrayList.&amp;lt;init&amp;gt;()&lt;br/&gt;
        at java.lang.Class.getConstructor0(Class.java:2647)&lt;br/&gt;
        at java.lang.Class.getDeclaredConstructor(Class.java:1953)&lt;br/&gt;
        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:150)&lt;br/&gt;
        at org.springframework.beans.PropertyTypeConverter.convertToTypedCollection(PropertyTypeConverter.java:304)&lt;br/&gt;
        at org.springframework.beans.PropertyTypeConverter.convertIfNecessary(PropertyTypeConverter.java:187)&lt;br/&gt;
        at org.springframework.beans.PropertyTypeConverter.convertIfNecessary(PropertyTypeConverter.java:106)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:713)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:565)&lt;br/&gt;
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValue(AbstractPropertyAccessor.java:49)&lt;br/&gt;
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:68)&lt;br/&gt;
        at org.springframework.validation.DataBinder.applyPropertyValues(DataBinder.java:464)&lt;br/&gt;
        at org.springframework.validation.DataBinder.doBind(DataBinder.java:370)&lt;br/&gt;
        at org.springframework.web.bind.WebDataBinder.doBind(WebDataBinder.java:146)&lt;br/&gt;
        at org.springframework.web.bind.ServletRequestDataBinder.bind(ServletRequestDataBinder.java:108)&lt;br/&gt;
        at org.springframework.web.servlet.mvc.BaseCommandController.bindAndValidate(BaseCommandController.java:358)&lt;/p&gt;</description>
            <key id="13803">SPR-1940</key>
            <summary>Have a propertyEditor return Arrays.asList(new String[] {&quot;a&quot;, &quot;b&quot;}) and a method expecting List&lt;String&gt; and binding breaks</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="yatesco">Colin Yates</reporter>
                        <labels>
                    </labels>
                <created>Thu, 20 Apr 2006 01:50:21 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:39 +0000</updated>
                            <resolved>Thu, 20 Apr 2006 05:54:59 +0000</resolved>
                                    <version>2.0 M3</version>
                                    <fixVersion>2.0 M4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="17268" author="yatesco" created="Thu, 20 Apr 2006 01:59:08 +0000"  >&lt;p&gt;Unit test:&lt;/p&gt;

&lt;p&gt;package spring;&lt;/p&gt;

&lt;p&gt;import java.beans.PropertyEditorSupport;&lt;br/&gt;
import java.util.ArrayList;&lt;br/&gt;
import java.util.Arrays;&lt;br/&gt;
import java.util.List;&lt;/p&gt;

&lt;p&gt;import junit.framework.TestCase;&lt;/p&gt;

&lt;p&gt;import org.springframework.beans.FatalBeanException;&lt;br/&gt;
import org.springframework.mock.web.MockHttpServletRequest;&lt;br/&gt;
import org.springframework.util.StringUtils;&lt;br/&gt;
import org.springframework.web.bind.ServletRequestDataBinder;&lt;/p&gt;

&lt;p&gt;public final class UnitTest extends TestCase {&lt;br/&gt;
    class Form {&lt;br/&gt;
        private List&amp;lt;String&amp;gt; categories;&lt;/p&gt;

&lt;p&gt;        public List&amp;lt;String&amp;gt; getCategories() &lt;/p&gt;
{
            return categories;
        }

&lt;p&gt;        public void setCategories(List&amp;lt;String&amp;gt; categories) &lt;/p&gt;
{
            this.categories = categories;
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    public void testItWorksBinding() {&lt;br/&gt;
        Form item = new Form();&lt;br/&gt;
        ServletRequestDataBinder binder = new ServletRequestDataBinder(item);&lt;br/&gt;
        binder.registerCustomEditor(List.class, &quot;categories&quot;, new PropertyEditorSupport() {&lt;br/&gt;
            public String getAsText() {&lt;br/&gt;
                List&amp;lt;String&amp;gt; categories = (List&amp;lt;String&amp;gt;) super.getValue();&lt;br/&gt;
                if (categories == null) &lt;/p&gt;
{
                    categories = new ArrayList&amp;lt;String&amp;gt;();
                }&lt;br/&gt;
                return StringUtils.collectionToCommaDelimitedString(categories);&lt;br/&gt;
            }&lt;br/&gt;
&lt;br/&gt;
            public void setAsText(final String value) {
                List&amp;lt;String&amp;gt; values = new ArrayList&amp;lt;String&amp;gt;();
                values.addAll(Arrays.asList(StringUtils.commaDelimitedListToStringArray(value)));
                super.setValue(values);
            }&lt;br/&gt;
        });&lt;br/&gt;
        MockHttpServletRequest request = new MockHttpServletRequest();&lt;br/&gt;
        request.addParameter(&quot;categories&quot;, &quot;categoryA&quot;);&lt;br/&gt;
        binder.bind(request);&lt;br/&gt;
    }&lt;br/&gt;
    &lt;br/&gt;
    public void testItBreaksBinding() {&lt;br/&gt;
        Form item = new Form();&lt;br/&gt;
        ServletRequestDataBinder binder = new ServletRequestDataBinder(item);&lt;br/&gt;
        binder.registerCustomEditor(List.class, &quot;categories&quot;, new PropertyEditorSupport() {&lt;br/&gt;
            public String getAsText() {&lt;br/&gt;
                List&amp;lt;String&amp;gt; categories = (List&amp;lt;String&amp;gt;) super.getValue();&lt;br/&gt;
                if (categories == null) {                    categories = new ArrayList&amp;lt;String&amp;gt;();                }
&lt;p&gt;                return StringUtils.collectionToCommaDelimitedString(categories);&lt;br/&gt;
            }&lt;/p&gt;

&lt;p&gt;            public void setAsText(final String value) &lt;/p&gt;
{
                List&amp;lt;String&amp;gt; values = Arrays.asList(StringUtils.commaDelimitedListToStringArray(value));
                super.setValue(values);
            }
&lt;p&gt;        });&lt;br/&gt;
        MockHttpServletRequest request = new MockHttpServletRequest();&lt;br/&gt;
        request.addParameter(&quot;categories&quot;, &quot;categoryA&quot;);&lt;br/&gt;
        try &lt;/p&gt;
{
            binder.bind(request);
        }
&lt;p&gt; catch (final FatalBeanException e) &lt;/p&gt;
{
            // fine.
        }
&lt;p&gt;    }&lt;br/&gt;
}&lt;/p&gt;</comment>
                            <comment id="17269" author="yatesco" created="Thu, 20 Apr 2006 01:59:49 +0000"  >&lt;p&gt;To be honest, I am not sure if this is a bug in Arrays.asList.  Don&apos;t know.&lt;/p&gt;</comment>
                            <comment id="17272" author="juergen.hoeller" created="Thu, 20 Apr 2006 05:54:59 +0000"  >&lt;p&gt;This is a bug in Spring: We currently assume that we can reinstantiate any collection class that we receive, which is not true for the List implementation returned from &quot;Arrays.asList&quot;. I&apos;ve refined our algorithm there to instantiate the most approximate collection/map, falling back to defaults like ArrayList and HashSet if we can&apos;t instantiate the given type as-is.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 37 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Apr 2006 05:54:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04v6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28426</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>