<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:22:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-7238/SPR-7238.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-7238] Transaction is not started when two spring contexts are created during tests using AspectJ load time weaving</title>
                <link>https://jira.spring.io/browse/SPR-7238</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I run unit tests using Spring integration testing tools, that is, marking test classes with @ContextConfiguration(locations = &lt;/p&gt;
{...}
&lt;p&gt;) , which implies that Spring uses the same context for all test having the same context location configuration. In the tests, I call some transactional service. Transactions are weaved during compile time with AspectJ.&lt;br/&gt;
The problem is following: as long as there is only one Spring context created during tests (all test classes using the some context location configuration, so there is only one context created), everything runs smoothly. But when one test uses different context configuration, and there are two contexts created (which should be independent from each other), transactions don&apos;t get started, and I got exception &quot;no transaction in progress...&quot;.&lt;br/&gt;
It looks like two contexts that should be independent, actually have some impact on each other. More precisely, it works this way: tests methods based on first spring contexts pass, then test methods using second context are run, and they pass, but then another test methods using first spring context are run and they fail with &quot;No transaction&quot; exception. So it look like running second context spoils the first one.&lt;br/&gt;
This is serious problem for us, which makes running tests very difficult. JUnit doesn&apos;t let us decide on the order in which test methods are run, which makes this really problematic.&lt;/p&gt;

&lt;p&gt;I attach simple test case as maven project, run the test and see that they fail (if they are run in order: test 1, 2, 3). If you change the second test so that is uses the same context configuration like tests 1 and 3, everything works fine. But it test 2 uses different configuration, test 3 fails.&lt;/p&gt;</description>
            <key id="31518">SPR-7238</key>
            <summary>Transaction is not started when two spring contexts are created during tests using AspectJ load time weaving</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="sbrannen">Sam Brannen</assignee>
                                    <reporter username="grzegorzborkowski">Grzegorz Borkowski</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 May 2010 03:18:53 +0000</created>
                <updated>Tue, 19 Jun 2012 09:36:30 +0000</updated>
                            <resolved>Mon, 18 Jun 2012 14:07:23 +0000</resolved>
                                    <version>3.0.2</version>
                                                    <component>Core:AOP</component>
                    <component>Test</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="54045" author="grzegorzborkowski" created="Wed, 26 May 2010 03:19:13 +0000"  >&lt;p&gt;test case&lt;/p&gt;</comment>
                            <comment id="63876" author="imihalik" created="Thu, 3 Mar 2011 08:13:02 +0000"  >&lt;p&gt;I&apos;m not quite sure that statement &quot;should be independent from each other&quot; is correct. One test can modify context and this modification can affect other tests. And that why @DirtiesContext annotation exists. Have you tried applying this annotation on your tests classes?&lt;/p&gt;</comment>
                            <comment id="63884" author="grzegorzborkowski" created="Thu, 3 Mar 2011 14:21:46 +0000"  >&lt;p&gt;From what I remember, the case was that the tests didn&apos;t modify the context, so @DirtiesContext is invalid here. Simply when the second context got started, the first one ceased to work properly. We found out that it is because when you use AspectJ based waving, the aspects use some global, static code to get the reference to the context. So each newly instantiated context makes other contexts broken.&lt;br/&gt;
The workaround for this was to call some Spring-aspectJ specific code at the beginning of each test, that resets the global pointer so that it points at the context that is going to be used in that test.&lt;br/&gt;
Finally we switched back to proxy-based AOP (because AspectJ-waved domain objects had terrible performance), and the problem doesn&apos;t occur anymore, because no static pointing to context is involved.&lt;/p&gt;</comment>
                            <comment id="80721" author="sbrannen" created="Mon, 18 Jun 2012 14:07:23 +0000"  >&lt;p&gt;This is a duplicate of &lt;a href=&quot;https://jira.spring.io/browse/SPR-6353&quot; title=&quot;TestContext framework should support one AspectJ instance per ApplicationContext&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-6353&quot;&gt;SPR-6353&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="28717">SPR-6353</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="16596" name="springtestcase.zip" size="18284" author="grzegorzborkowski" created="Wed, 26 May 2010 03:19:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        4 years, 27 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 Mar 2011 08:13:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00z3r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5732</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?p=301948#post301948]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>