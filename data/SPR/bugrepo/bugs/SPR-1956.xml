<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:41:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1956/SPR-1956.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1956] Support beanFactory.getBean(Bar.class) signature to instantiate a bean.</title>
                <link>https://jira.spring.io/browse/SPR-1956</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Given a bean definition like this:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;com.foo.BarRepository&quot; class=&quot;com.foo.BarRepositoryJDO&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;constructor-arg&amp;gt;&amp;lt;ref bean=&quot;javax.jdo.PersistenceManagerFactory&quot; /&amp;gt;&amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
&amp;lt;/bean&amp;gt; &lt;/p&gt;

&lt;p&gt;If the beanFactory.getBean(Bar.class) signature were supported (ie, added to the BeanFactory interface), it would be possible to do:&lt;/p&gt;

&lt;p&gt;  BarRepository barRepository = (BarRepository)beanFactory.getBean(BarRepository.class);&lt;/p&gt;

&lt;p&gt;This syntax is better than getBean(&quot;barRepository&quot;) because the Java compiler verifies the class name is spelled correctly. While advanced IDEs (ie, Eclipse) support does handle class name verification, not all people will be using such an IDE. &lt;/p&gt;

&lt;p&gt;It may or may not be a good idea to require the Class to actually be an interface to ensure that &apos;best practices&apos; are followed.&lt;/p&gt;</description>
            <key id="13834">SPR-1956</key>
            <summary>Support beanFactory.getBean(Bar.class) signature to instantiate a bean.</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="medined">David Medinets</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Apr 2006 07:01:20 +0000</created>
                <updated>Sun, 30 Aug 2009 16:10:14 +0000</updated>
                            <resolved>Fri, 17 Apr 2009 04:53:36 +0000</resolved>
                                                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="39173" author="grzegorzborkowski" created="Fri, 22 Aug 2008 01:32:17 +0000"  >&lt;p&gt;This is quite old issue, but I think it is worth considering especially after releasing 2.5 and in the light of JavaConfig.&lt;/p&gt;

&lt;p&gt;I&apos;m saying it can be useful after 2.5, becuase now it is possible to define all application beans using stereotype annotations, only leaving some infrastructure definitions to XML. However, in such a case the standard procedure of creating ApplicationCOntest and getting the bean by its name is cumbersome: it is possible that this bean has no explicit name, because it was not defined in XML. In such a case it would be better to be able to get such bean from context by its type.&lt;/p&gt;

&lt;p&gt;The JavaConfigApplicationContext class has a method:&lt;br/&gt;
T getBean(Class&amp;lt;T&amp;gt; type) &lt;/p&gt;

&lt;p&gt;So it would be better to extract this method to some interface, maybe already existing (ListableBeanFactory?), and enhance all implementations, so that it is present in e.g. XmlApplicationContext too.&lt;/p&gt;

&lt;p&gt;The methods can be:&lt;/p&gt;

&lt;p&gt;T getBean(Class&amp;lt;T&amp;gt; type)  - return bean if there is exactly one bean of this type in context, if there is more throw exception, in zero then return null or throw exception (I&apos;m not sure which would be more natural and consistent with other methods)&lt;br/&gt;
Collection&amp;lt;T&amp;gt; getBeans(Class&amp;lt;t&amp;gt; type) - return all (zero or more) beans of given type&lt;/p&gt;

&lt;p&gt;and maybe also variations, taking into account only beans annotated with some &quot;Qualifier&quot; (I&apos;m not sure about proper syntax for this):&lt;/p&gt;

&lt;p&gt;T getBean(Class&amp;lt;T&amp;gt; type, Class&amp;lt;? extends Annotation&amp;gt; annotatedWith) &lt;br/&gt;
Collection&amp;lt;T&amp;gt; getBeans(Class&amp;lt;t&amp;gt; type, Class&amp;lt;? extends Annotation&amp;gt; annotatedWith)&lt;/p&gt;

&lt;p&gt;At this momement, if I want to get the bean of given type from context, and I know there is only one, I have three choices:&lt;/p&gt;

&lt;p&gt;context.getBeansOfType(MyType.class).values().iterator().next();  // awkward&lt;br/&gt;
context.getBean(context.getBeanNamesForType(MyType.class));  // verbose&lt;br/&gt;
BeanFactoryUtils.beanOfType(context., MyType.class);  // still verbose, and not well-known&lt;/p&gt;

&lt;p&gt;//compare with desired one:&lt;br/&gt;
context.getBean(MyType.class);  // i like it!&lt;/p&gt;</comment>
                            <comment id="43714" author="cbeams" created="Fri, 17 Apr 2009 04:53:36 +0000"  >&lt;p&gt;We will be implementing the support originally requested in this issue; put a watch on &lt;a href=&quot;https://jira.spring.io/browse/SPR-5529&quot; title=&quot;Support BeanFactory#getBean(Class&amp;lt;T&amp;gt; requiredType)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-5529&quot;&gt;&lt;del&gt;SPR-5529&lt;/del&gt;&lt;/a&gt; to be notified of progress.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="25798">SPR-5529</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        7 years, 36 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 22 Aug 2008 01:32:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i039lb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19096</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>