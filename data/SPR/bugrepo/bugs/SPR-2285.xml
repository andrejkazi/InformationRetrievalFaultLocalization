<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:45:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2285/SPR-2285.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2285] Duplicate bean id allowed in same XML file by using name attribute</title>
                <link>https://jira.spring.io/browse/SPR-2285</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The bean factory and application context contract clearly states (as per our docs) that within one definition xml file a bean id must be unique.&lt;/p&gt;

&lt;p&gt;This is enforced by the XML parser when using the &quot;id&quot; attribute exclusively because this is flagged as an XML IDREF attribute. However, by combining the use of the id attribute and the name attribute, or just using the name attribute exclusively, it is possible to have 2 or more bean definitions in the same xml file with the same id. This is silently accepted with the last bean definition winning out.&lt;/p&gt;

&lt;p&gt;The bean definition reader must basically track ids, however they are supplied, and enforce the same semantics from usage of the &quot;name&quot; attribute as from usage of the &quot;id&quot; attribute.&lt;/p&gt;

&lt;p&gt;A related question is what should happen in the case of &amp;lt;import&amp;gt;? An argument could be made either way here.&lt;/p&gt;</description>
            <key id="14504">SPR-2285</key>
            <summary>Duplicate bean id allowed in same XML file by using name attribute</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="colin.sampaleanu">Colin Sampaleanu</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Jul 2006 01:40:12 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:36 +0000</updated>
                            <resolved>Mon, 17 Jul 2006 23:46:11 +0000</resolved>
                                    <version>2.0 RC2</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="18641" author="robh" created="Mon, 17 Jul 2006 23:46:11 +0000"  >&lt;p&gt;The bean name issue is now solved. The &amp;lt;import&amp;gt; issue was reported some time ago and we decided to leave it as is.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="18699" author="aperepel" created="Thu, 20 Jul 2006 14:23:09 +0000"  >&lt;p&gt;Guys,&lt;/p&gt;

&lt;p&gt;I would like your feedback on this issue. The way it&apos;s been fixed in 2.0-rc2 doesn&apos;t seem to play well (appending #1 to the duplicate bean). I&apos;m currently upgrading Mule support to Spring 2.x and ran into that issue. In short, the real solution would be to &apos;scope&apos; the beans probably, if possible at all. Check this config:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.mule.codehaus.org/browse/mule/trunk/mule/mule-extras/spring/src/test/resources/test-mule-autowire-app-context.xml?r=2233#l156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.mule.codehaus.org/browse/mule/trunk/mule/mule-extras/spring/src/test/resources/test-mule-autowire-app-context.xml?r=2233#l156&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a global endpoint with the name &apos;orangeEndpoint&apos;. Later in this config:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://svn.mule.codehaus.org/browse/mule/trunk/mule/mule-extras/spring/src/test/resources/test-mule-autowire-app-context.xml?r=2233#l252&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.mule.codehaus.org/browse/mule/trunk/mule/mule-extras/spring/src/test/resources/test-mule-autowire-app-context.xml?r=2233#l252&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Again, &apos;orangeEndpoint&apos; which is local to the enclosing element, the mule-descriptor. There are API calls which specifically lookup either a global one (spreading multiple config files) or local call on a descriptor&apos;s router. The lookup is performed by endpoint&apos;s name, which is either id or name of the bean. This worked with Spring 1.2.x There are specific assertions in the test cases to validate global vs local endpoints (local has an extra transformer reference applied).&lt;/p&gt;

&lt;p&gt;WDYT?&lt;/p&gt;</comment>
                            <comment id="18721" author="aperepel" created="Sat, 22 Jul 2006 08:19:49 +0000"  >&lt;p&gt;I have a possible solution. org.springframework.beans.factory.support.BeanDefinitionValueResolver has the private adaptInnerBeanName() method appending this suffix. While this is absolutely correct for top-level beans, I don&apos;t think this is the right and desired behaviour for inner beans. In Mule, after I removed the calls to adaptInnerBeanName() from the class, all tests finished successfully. This means the regression was fixed at least in the scope of Mule, which for Spring-based configs defines core objects as prototypes, not singletons.&lt;/p&gt;

&lt;p&gt;Now, why I think it may be safe to remove this call. While hacking the code and debugging it, right after config has been finished, I did some test lookups by bean names and bean types (getBean() &amp;amp; getBeansOfType()). I found that ONLY top-level beans were actually accessible via those calls, meaning IT IS safe not to add the #N suffix to INNER bean names.  Type lookup returned zero results as well (inboundRouter is an inner bean of the component descriptor).&lt;/p&gt;

&lt;p&gt;Is my assumption correct?&lt;/p&gt;</comment>
                            <comment id="18798" author="aperepel" created="Thu, 27 Jul 2006 00:45:29 +0000"  >&lt;p&gt;Filed a related request: &lt;a href=&quot;https://jira.spring.io/browse/SPR-2351&quot; title=&quot;org.springframework.beans.factory.support.BeanDefinitionValueResolver is not designed for extension&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2351&quot;&gt;&lt;del&gt;SPR-2351&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="18924" author="aperepel" created="Sun, 6 Aug 2006 07:57:36 +0000"  >&lt;p&gt;Attached is an archive with a testcase proving that inner beans are never accessible via direct bean factory calls, and thus do not need this #N suffix appended.&lt;/p&gt;

&lt;p&gt;The archive includes a patch to the BeanDefinitionValueResolver against the latest CVS version (1.13 at the moment). It removes the adaptInnerBeanName() method and reverts the behaviour for inner beans to the previous state.&lt;/p&gt;</comment>
                            <comment id="18966" author="juergen.hoeller" created="Wed, 9 Aug 2006 09:49:40 +0000"  >&lt;p&gt;I agree that inner bean names do not have to be adapted there &lt;b&gt;if they are not singletons&lt;/b&gt;, since they&apos;re not exposed to the registry in any way then. However, for inner singletons, we do need a unique identifier for shutdown order purposes - the only option would be to expose the plain bean name to BeanNameAware, while using the adapted bean name for the registry. I&apos;d like to avoid that as far as possible, though. And well, inner beans that rely on BeanNameAware are rather rare anyway.&lt;/p&gt;

&lt;p&gt;I have modified BeanDefinitionValueResolver accordingly, so that it only adapts an inner bean name in case of a singleton now.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21492" author="aperepel" created="Thu, 28 Dec 2006 12:21:31 +0000"  >&lt;p&gt;Hi guys, nice to meet you again &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Hate to say that, but Spring 2.0.1 has got a regression, and the testcase I&apos;d attached originally is failing now. I agree that the issue summary is a bit misleading, so we can re-classify it and file a new one for tracking. Just a heads up, Juergen has fixed the bug before, check our archives: &lt;a href=&quot;http://www.nabble.com/Fwd%3A-Spring-Core-Regression-t2081928.html#a5736008&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.nabble.com/Fwd%3A-Spring-Core-Regression-t2081928.html#a5736008&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Spring 2.0.1 release notes (&lt;a href=&quot;http://static.springframework.org/spring/docs/2.0.x/changelog.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/spring/docs/2.0.x/changelog.txt&lt;/a&gt;) had this change, when it merges the outer and inner bean definitions and try to be smart with singletons. Apparently, something is not clicking here &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/sad.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;You can ping us back at &lt;a href=&quot;http://mule.mulesource.org/jira/browse/MULE-1258&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mule.mulesource.org/jira/browse/MULE-1258&lt;/a&gt; in case a new issue is filed, I&apos;m watching the current one.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;</comment>
                            <comment id="21498" author="juergen.hoeller" created="Fri, 29 Dec 2006 05:39:27 +0000"  >&lt;p&gt;Thanks for pointing this out, Andrew! This unfortunate regression was caused by an optimization in the merged bean definition caching: We use the bean name as key there in 2.0.1, instead of the BeanDefinition object in 2.0... Which means that the bean name must be unique in 2.0.1, else the same merged definiton will be used for all beans of the same name. &lt;/p&gt;

&lt;p&gt;I&apos;ve addressed this in 2.0.2 through using the BeanDefinition object as key again, but this time keeping the merged definition in an identity map (which should be as fast as using the bean name in a standard hash map). After all, the original intent of the optimization was to avoid expensive &quot;equals&quot; calls on the bean definition... which should still be fine.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21499" author="juergen.hoeller" created="Fri, 29 Dec 2006 05:40:19 +0000"  >&lt;p&gt;This regression fix should make it into the next nightly 2.0.2 snapshot (&lt;a href=&quot;http://www.springframework.org/snapshots&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/snapshots&lt;/a&gt;). Please give it a try and let me know whether it works for you!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21501" author="aperepel" created="Fri, 29 Dec 2006 14:29:01 +0000"  >&lt;p&gt;Juergen, that did the trick, kudos for the super-fast turnover! &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/biggrin.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;In lieu of a snapshot m2 repository with Spring artifacts I had to manually put into our repo, however, will be waiting for an official release. Cheers!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11870" name="spring2285_testcase_and_patch.zip" size="2728" author="aperepel" created="Sun, 6 Aug 2006 07:57:36 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 17 Jul 2006 23:46:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04u13:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28239</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>