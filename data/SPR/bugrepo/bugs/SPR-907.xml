<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:49:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-907/SPR-907.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-907] ConcurrentModificationException in HibernateTransactionManager.doGetTransaction</title>
                <link>https://jira.spring.io/browse/SPR-907</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;m getting java.util.ConcurrentModificationException in HibernateTransactionManager.doGetTransaction method, see below:&lt;/p&gt;

&lt;p&gt;java.util.ConcurrentModificationException&lt;br/&gt;
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:782)&lt;br/&gt;
	at java.util.HashMap$EntryIterator.next(HashMap.java:824)&lt;br/&gt;
	at java.util.AbstractMap.toString(AbstractMap.java:586)&lt;br/&gt;
	at java.lang.String.valueOf(String.java:2131)&lt;br/&gt;
	at java.lang.StringBuffer.append(StringBuffer.java:370)&lt;br/&gt;
	at org.hibernate.engine.PersistenceContext.toString(PersistenceContext.java:976)&lt;br/&gt;
	at java.lang.String.valueOf(String.java:2131)&lt;br/&gt;
	at java.lang.StringBuffer.append(StringBuffer.java:370)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.toString(SessionImpl.java:1427)&lt;br/&gt;
	at java.lang.String.valueOf(String.java:2131)&lt;br/&gt;
	at java.lang.StringBuffer.append(StringBuffer.java:370)&lt;br/&gt;
	at org.springframework.orm.hibernate3.HibernateTransactionManager.doGetTransaction(HibernateTransactionManager.java:359)&lt;br/&gt;
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:199)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:217)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:50)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:174)&lt;br/&gt;
	at $Proxy5.loadBoardAssociation(Unknown Source)&lt;/p&gt;</description>
            <key id="11480">SPR-907</key>
            <summary>ConcurrentModificationException in HibernateTransactionManager.doGetTransaction</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="warlock">Michal Jastak</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 Apr 2005 18:26:53 +0000</created>
                <updated>Sun, 5 Jun 2005 03:39:02 +0000</updated>
                            <resolved>Wed, 25 May 2005 00:13:33 +0000</resolved>
                                    <version>1.2 RC2</version>
                                    <fixVersion>1.2.1</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="13168" author="juergen.hoeller" created="Wed, 4 May 2005 02:54:48 +0000"  >&lt;p&gt;Thanks for the report! That seems to be a bug in Hibernate3, actually, in the toString implementation of SessionImpl. Can you please verify that you still get this with Hibernate 3.0.2? If yes, then we should probably avoid a Session.toString call there (it&apos;s just with debug logging turned on anyway, but nevertheless).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="13204" author="juergen.hoeller" created="Mon, 9 May 2005 19:22:32 +0000"  >&lt;p&gt;I cannot reproduce this on either Hibernate 3.0 final or Hibernate 3.0.3, with full debug logging turned on, so I&apos;ll close this issue for the time being. I recommend to use Hibernate 3.0.3 in combination with Spring 1.2 final, which is what we test thoroughly.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="13340" author="bh5k" created="Mon, 23 May 2005 08:57:16 +0000"  >&lt;p&gt;I am still seeing this issue with Hibernate 3.0.3 and Spring 1.2 final. I upgraded to both this morning and am now getting:&lt;/p&gt;

&lt;p&gt;java.util.ConcurrentModificationException&lt;br/&gt;
    at java.util.HashMap$HashIterator.nextEntry(HashMap.java:782)&lt;br/&gt;
    at java.util.HashMap$EntryIterator.next(HashMap.java:824)&lt;br/&gt;
    at java.util.AbstractMap.toString(AbstractMap.java:586)&lt;br/&gt;
    at java.lang.String.valueOf(String.java:2131)&lt;br/&gt;
    at java.lang.StringBuffer.append(StringBuffer.java:370)&lt;br/&gt;
    at org.hibernate.engine.PersistenceContext.toString(PersistenceContext.java:1007)&lt;br/&gt;
    at java.lang.String.valueOf(String.java:2131)&lt;br/&gt;
    at java.lang.StringBuffer.append(StringBuffer.java:370)&lt;br/&gt;
    at org.hibernate.impl.SessionImpl.toString(SessionImpl.java:1493)&lt;br/&gt;
    at java.lang.String.valueOf(String.java:2131)&lt;br/&gt;
    at java.lang.StringBuffer.append(StringBuffer.java:370)&lt;br/&gt;
    at org.springframework.orm.hibernate3.HibernateTransactionManager.doGetTransaction(HibernateTransactionManager.java:36&lt;/p&gt;

&lt;p&gt;    at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransacti&lt;/p&gt;

&lt;p&gt;    at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspect&lt;/p&gt;

&lt;p&gt;    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:50)&lt;br/&gt;
    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
    at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:174)&lt;br/&gt;
    at $Proxy114.createOrSaveRecord(Unknown Source)&lt;/p&gt;</comment>
                            <comment id="13360" author="timmorrow" created="Tue, 24 May 2005 08:55:51 +0000"  >&lt;p&gt;I get this problem also with Hibernate 3.0.4 and Spring 1.2 final.&lt;/p&gt;

&lt;p&gt;It appears to be due to debug logging turned on and invoking Session.toString().&lt;/p&gt;

&lt;p&gt;I think this Hibernate issue is relevant (its a different stack trace, but same reason):&lt;br/&gt;
&lt;a href=&quot;http://opensource.atlassian.com/projects/hibernate/browse/HHH-472&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://opensource.atlassian.com/projects/hibernate/browse/HHH-472&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sadly, that bug is closed, they say it is Spring&apos;s fault.  I don&apos;t agree with their assessment, I don&apos;t think that when one calls Session.toString() that a ConcurrentModificationException should be expected.&lt;/p&gt;

&lt;p&gt;Perhaps someone in the Spring camp can be more persuasive?&lt;/p&gt;</comment>
                            <comment id="13361" author="timmorrow" created="Tue, 24 May 2005 09:05:20 +0000"  >&lt;p&gt;Ah, when I read Juergen&apos;s comment more closely, I see that he is already aware of the reason.  But it does look like the Hibernate guys aren&apos;t going to make any changes to avoid this.&lt;/p&gt;

&lt;p&gt;I&apos;ve been using Commonclipse to generate my toString() methods in Eclipse which simply invokes toString() on all members.  Is this the problem?  Is someone aware of a restriction of implementing toString() in a hibernate-persisted object?&lt;/p&gt;

&lt;p&gt;Is there a workaround, other than turning off debug logging for HibernateTransactionManager?  I sure would like to see debug logs for that class.&lt;/p&gt;
</comment>
                            <comment id="13364" author="juergen.hoeller" created="Wed, 25 May 2005 00:11:55 +0000"  >&lt;p&gt;Reopened because the problem still arises in some scenarios - and the Hibernate team does not consider this a Hibernate bug, despite it obviously being one.&lt;/p&gt;</comment>
                            <comment id="13365" author="juergen.hoeller" created="Wed, 25 May 2005 00:13:33 +0000"  >&lt;p&gt;I&apos;ve refined our HibernateTransactionManager for Hibernate3 to not call &quot;Session.toString&quot;, which is broken in Hibernate3 (and won&apos;t be fixed). See the corresponding Hibernate issue, which has been prematurely closed by the Hibernate team.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="13470" author="fuad" created="Sun, 5 Jun 2005 03:39:02 +0000"  >&lt;p&gt;Seems problem still exists, as I get this error with Spring 1.2.1 and Hibernate 3.0.5:&lt;/p&gt;

&lt;p&gt;at java.util.HashMap$HashIterator.nextEntry(HashMap.java:782)&lt;br/&gt;
	at java.util.HashMap$ValueIterator.next(HashMap.java:812)&lt;br/&gt;
	at org.hibernate.pretty.Printer.toString(Printer.java:90)&lt;br/&gt;
	at org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:91)&lt;br/&gt;
	at org.hibernate.event.def.DefaultAutoFlushEventListener.onAutoFlush(DefaultAutoFlushEventListener.java:39)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.autoFlushIfRequired(SessionImpl.java:711)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.prepareQueries(SessionImpl.java:895)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.getQueries(SessionImpl.java:885)&lt;br/&gt;
	at org.hibernate.impl.SessionImpl.list(SessionImpl.java:834)&lt;br/&gt;
	at org.hibernate.impl.QueryImpl.list(QueryImpl.java:74)&lt;br/&gt;
	at org.springframework.orm.hibernate3.HibernateTemplate$29.doInHibernate(HibernateTemplate.java:751)&lt;br/&gt;
	at org.springframework.orm.hibernate3.HibernateTemplate.execute(HibernateTemplate.java:312)&lt;br/&gt;
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:742)&lt;br/&gt;
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:734)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 30 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 4 May 2005 02:54:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00znb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5820</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>