<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:05:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-4632/SPR-4632.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-4632] Load dedicated child ApplicationContext for test instance in the TestContext framework</title>
                <link>https://jira.spring.io/browse/SPR-4632</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;h4&gt;&lt;a name=&quot;StatusQuo&quot;&gt;&lt;/a&gt;Status Quo&lt;/h4&gt;

&lt;p&gt;The &lt;tt&gt;loadContext(&amp;#42;&amp;#41;&lt;/tt&gt; methods in &lt;tt&gt;AbstractGenericContextLoader&lt;/tt&gt; and &lt;tt&gt;AbstractGenericWebContextLoader&lt;/tt&gt; invoke &lt;tt&gt;AnnotationConfigUtils.registerAnnotationConfigProcessors(context)&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;The result is that &lt;tt&gt;@Autowired&lt;/tt&gt;, &lt;tt&gt;@Resource&lt;/tt&gt;, &lt;tt&gt;@Inject&lt;/tt&gt;, etc. all work by default, even if annotation-driven dependency injection is not explicitly configured in the test&apos;s &lt;tt&gt;ApplicationContext&lt;/tt&gt;. Consequently, if a developer is not aware of this, then errors related to the lack of explicit annotation-driven DI support in production configuration will not be noticed until after testing which is typically undesirable.&lt;/p&gt;

&lt;p&gt;Note, however, that this unexpected behavior only applies to XML-based configuration. With JavaConfig, an &lt;tt&gt;AnnotatedBeanDefinitionReader&lt;/tt&gt; (used internally by &lt;tt&gt;AnnotationConfigContextLoader&lt;/tt&gt; and &lt;tt&gt;AnnotationConfigWebContextLoader&lt;/tt&gt;) automatically registers the &lt;em&gt;annotation config processors&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Furthermore, &lt;tt&gt;BeanPostProcessors&lt;/tt&gt; may inadvertently be applied to the test instance &amp;#8211; even though the test is not truly a &lt;em&gt;bean&lt;/em&gt; in the &lt;tt&gt;ApplicationContext&lt;/tt&gt;. This leads to potentially problematic behavior such as accidental proxying of the test instance, as described in &lt;a href=&quot;https://jira.spring.io/browse/SPR-9478&quot; title=&quot;Test instances should not be proxied in the TestContext framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9478&quot;&gt;SPR-9478&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;
&lt;h4&gt;&lt;a name=&quot;Deliverables&quot;&gt;&lt;/a&gt;Deliverables&lt;/h4&gt;

&lt;ol&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/warning.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; As suggested in comments for this issue, create an &lt;tt&gt;ApplicationContext&lt;/tt&gt; dedicated solely to the test instance (for the purpose of dependency injection and bean initialization) and set the &lt;tt&gt;parent&lt;/tt&gt; of that context to the &lt;tt&gt;ApplicationContext&lt;/tt&gt; loaded by the TCF.&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/warning.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Stop invoking &lt;tt&gt;AnnotationConfigUtils.registerAnnotationConfigProcessors()&lt;/tt&gt; in:
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/warning.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;tt&gt;AbstractGenericContextLoader&lt;/tt&gt;&lt;/li&gt;
		&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/warning.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;tt&gt;AbstractGenericWebContextLoader&lt;/tt&gt;&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/warning.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Ensure that &lt;em&gt;child&lt;/em&gt; contexts are properly closed with regard to context caching in the TCF.&lt;/li&gt;
&lt;/ol&gt;


&lt;hr /&gt;
&lt;h4&gt;&lt;a name=&quot;OriginalIssueSummary&quot;&gt;&lt;/a&gt;Original Issue Summary&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Do not enable annotation-driven DI for the entire ApplicationContext in the TestContext framework&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;&lt;a name=&quot;OriginalProposal&quot;&gt;&lt;/a&gt;Original Proposal&lt;/h4&gt;

&lt;p&gt;It would be better if the TestContext framework (TCF) only enabled annotation-driven dependency injection for test instances and not for the entire &lt;tt&gt;ApplicationContext&lt;/tt&gt;.&lt;/p&gt;</description>
            <key id="21330">SPR-4632</key>
            <summary>Load dedicated child ApplicationContext for test instance in the TestContext framework</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="1" iconUrl="https://jira.spring.io/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="sbrannen">Sam Brannen</assignee>
                                    <reporter username="eberhardwolff">Eberhard Wolff</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Mar 2008 23:56:21 +0000</created>
                <updated>Thu, 2 Jun 2016 08:46:54 +0000</updated>
                                            <version>2.5.2</version>
                                    <fixVersion>General Backlog</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>5</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="33991" author="juergen.hoeller" created="Thu, 27 Mar 2008 03:54:52 +0000"  >&lt;p&gt;This has actually been debated before but was decided to be the better tradeoff overall. We also consider enabling annotation processing by default in forthcoming special environments, so that doesn&apos;t necessarily apply to test environments only.&lt;/p&gt;

&lt;p&gt;Actually, integration test XML files are not necessarily supposed to be an exact match for production bean definition files in the first place. There are always going to be &lt;b&gt;some&lt;/b&gt; configuration differences, typically isolated into a specific XML file that&apos;s part of a config set. Since it&apos;s sufficient to have a &amp;lt;context:annotation-config&amp;gt; entry in &lt;b&gt;one&lt;/b&gt; of the files in the config set, I don&apos;t think that the defaults in the test environment are bad there... Maybe not immediately expected but still not causing serious hassle either.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="35768" author="tuomas_kiviaho" created="Fri, 16 May 2008 01:03:43 +0000"  >&lt;p&gt;Automatic post processor registration lead to intense debugging session for me since I wasn&apos;t aware of it before and I have a custom CommonAnnotationBeanPostProcessor which lead to double post processing causing latter to crash due to it&apos;s default configuration. &lt;/p&gt;

&lt;p&gt;As workaround I just had to name my post processor identically to the default one ( (org.springframework.context.annotation.internalCommonAnnotationProcessor) preventing it from being registered.&lt;/p&gt;

&lt;p&gt;One solution could be to use org.springframework.beans.factory.ListableBeanFactory#getBeanNamesForType to ensure that beanFactory doesn&apos;t already have post processors instead of name comparison.&lt;/p&gt;</comment>
                            <comment id="39508" author="tuomas_kiviaho" created="Fri, 5 Sep 2008 18:46:06 +0000"  >&lt;p&gt;I noticed that it is possible to register processors just for test class via extendingDependencyInjectionTestExecutionListener by using test container application context as parent of a test application context which sole purpose is to instantiate test. &lt;/p&gt;

&lt;p&gt;By moving the AnnotationConfigUtils.registerAnnotationConfigProcessors from AbstractGenericContextLoader to DependencyInjectionTestExecutionListener is one way to solve this issue without API changes. By moving hooks as well from AbstractGenericContextLoader  the extendability stays about the same.&lt;/p&gt;</comment>
                            <comment id="48759" author="david_syer" created="Sat, 28 Nov 2009 21:09:37 +0000"  >&lt;p&gt;I agree with Tuomas: the test case should live in a child context, so that the behaviour of the parent context is the same as it would be in production.  Can we get this into the 3.0.x roadmap?&lt;/p&gt;</comment>
                            <comment id="84508" author="nealeu" created="Thu, 25 Oct 2012 04:25:47 +0000"  >&lt;p&gt;Is there any hope of this making 3.2 now?  It looks like there are enough related changes going in with spring-test-mvc that this should go too...&lt;/p&gt;</comment>
                            <comment id="84748" author="sbrannen" created="Wed, 31 Oct 2012 11:57:47 +0000"  >&lt;p&gt;Hi Neal,&lt;/p&gt;

&lt;p&gt;Pending completion of related issues &lt;a href=&quot;https://jira.spring.io/browse/SPR-5613&quot; title=&quot;Provide support for context hierarchies in the TestContext Framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-5613&quot;&gt;&lt;del&gt;SPR-5613&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://jira.spring.io/browse/SPR-9863&quot; title=&quot;Support WebApplicationContext hierarchies in the TestContext Framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9863&quot;&gt;&lt;del&gt;SPR-9863&lt;/del&gt;&lt;/a&gt;, it may be possible to address this issue in the 3.2 time frame, but we&apos;ll just have to see how things play out.&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                            <comment id="98547" author="sbrannen" created="Thu, 6 Feb 2014 08:57:11 +0000"  >&lt;p&gt;FYI: I have created a branch as a sort of playground for investigating options that do not include creating a child &lt;tt&gt;ApplicationContext&lt;/tt&gt;. This code may well be thrown away at some point, but in case you&apos;re interested, you can check it out here for now: &lt;a href=&quot;https://github.com/sbrannen/spring-framework/commits/SPR-4632&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/sbrannen/spring-framework/commits/SPR-4632&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Regards,&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                            <comment id="98558" author="nealeu" created="Thu, 6 Feb 2014 09:59:22 +0000"  >&lt;p&gt;Thanks.  I&apos;ve had a quick look, and do wonder if it&apos;s an approach that might lead to maintenance headaches in future.  Are there drawbacks to the child context approach?&lt;/p&gt;</comment>
                            <comment id="98568" author="sbrannen" created="Thu, 6 Feb 2014 12:05:35 +0000"  >&lt;p&gt;Hi Neale,&lt;/p&gt;

&lt;p&gt;Thanks for taking a look and more importantly for the quick feedback!&lt;/p&gt;

&lt;p&gt;The work in the branch is really just an &lt;em&gt;exploration&lt;/em&gt; of one possible option, but you&apos;re right: the child context approach may well prove to be more pragmatic and elegant in the long run. In addition, introducing a child context may make the issue raised in &lt;a href=&quot;https://jira.spring.io/browse/SPR-9478&quot; title=&quot;Test instances should not be proxied in the TestContext framework&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9478&quot;&gt;SPR-9478&lt;/a&gt; a moot point, thus potentially killing two (or more) birds with one stone. So I&apos;ll continue investigating. &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="38600">SPR-8503</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="45661">SPR-9863</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="26152">SPR-5613</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="43756">SPR-9478</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="66848">SPR-13722</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="27760">SPR-6050</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="14662" name="AnnotationConfigProcessorTestExecutionListener.java" size="1452" author="tuomas_kiviaho" created="Fri, 5 Sep 2008 18:46:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        2 years, 46 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 Mar 2008 03:54:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>juergen.hoeller</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02a73:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13361</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>