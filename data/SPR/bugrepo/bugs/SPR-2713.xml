<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:00:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2713/SPR-2713.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2713] CLONE -CanNotFindClassException trying to create bean from nested static public class</title>
                <link>https://jira.spring.io/browse/SPR-2713</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I have tried to create bean from nested static public class BooleanFeature of public class: BooleanFeatureStateImpl.&lt;/p&gt;

&lt;p&gt; &amp;lt;bean&lt;br/&gt;
    class=&quot;de.ntec.lms.impl.feature.BooleanFeatureStateImpl.BooleanFeature&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg value=&quot;LOCK&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;configuration&quot; &amp;gt;&lt;br/&gt;
            &amp;lt;props&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;tableName&quot;&amp;gt;PLACE&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;stateColumnName&quot;&amp;gt;FTR_LOCK&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;assignableTo&quot;&amp;gt;PLACE&amp;lt;/prop&amp;gt;&lt;br/&gt;
            &amp;lt;/props&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;With following result:&lt;br/&gt;
junit.framework.AssertionFailedError: Exception in constructor: testOccupyNonExistingAddress (java.lang.ExceptionInInitializerError&lt;br/&gt;
	at de.ntec.lms.TopologyTest.&amp;lt;init&amp;gt;(TopologyTest.java:18)&lt;br/&gt;
	at de.ntec.lms.impl.topology.PlaceFinderTest.&amp;lt;init&amp;gt;(PlaceFinderTest.java:42)&lt;br/&gt;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)&lt;br/&gt;
	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)&lt;br/&gt;
	at junit.framework.TestSuite.createTest(TestSuite.java:131)&lt;br/&gt;
	at junit.framework.TestSuite.addTestMethod(TestSuite.java:114)&lt;br/&gt;
	at junit.framework.TestSuite.&amp;lt;init&amp;gt;(TestSuite.java:75)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestLoader.getTest(JUnit3TestLoader.java:102)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestLoader.loadTests(JUnit3TestLoader.java:59)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:445)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
Caused by: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class &lt;span class=&quot;error&quot;&gt;&amp;#91;de.ntec.lms.impl.feature.BooleanFeatureStateImpl.BooleanFeature&amp;#93;&lt;/span&gt; for bean with name &apos;de.ntec.lms.impl.feature.BooleanFeatureStateImpl.BooleanFeature&apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;context.xml&amp;#93;&lt;/span&gt;; nested exception is java.lang.ClassNotFoundException: de.ntec.lms.impl.feature.BooleanFeatureStateImpl.BooleanFeature&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:915)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:165)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.getBeanNamesForType(AbstractApplicationContext.java:687)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:397)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:330)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:92)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:77)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:68)&lt;br/&gt;
	at de.ntec.lms.TestContext.&amp;lt;clinit&amp;gt;(TestContext.java:24)&lt;br/&gt;
	... 15 more&lt;br/&gt;
Caused by: java.lang.ClassNotFoundException: de.ntec.lms.impl.feature.BooleanFeatureStateImpl.BooleanFeature&lt;br/&gt;
	at java.net.URLClassLoader$1.run(URLClassLoader.java:200)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at java.net.URLClassLoader.findClass(URLClassLoader.java:188)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)&lt;br/&gt;
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:268)&lt;br/&gt;
	at java.lang.ClassLoader.loadClass(ClassLoader.java:251)&lt;br/&gt;
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:177)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:313)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:912)&lt;br/&gt;
	... 23 more&lt;br/&gt;
)&lt;br/&gt;
	at junit.framework.Assert.fail(Assert.java:47)&lt;br/&gt;
	at junit.framework.TestSuite$1.runTest(TestSuite.java:263)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;

&lt;p&gt;If I write (for test purposes ) a simlple wrapper around mentioned class &lt;/p&gt;

&lt;p&gt;package de.ntec.lms.feature;&lt;/p&gt;

&lt;p&gt;import java.util.Properties;&lt;/p&gt;

&lt;p&gt;import de.ntec.common.exception.MissingArgumentException;&lt;br/&gt;
import de.ntec.common.util.SmartPropertiesReader;&lt;br/&gt;
import de.ntec.lms.DuplicateFeatureException;&lt;/p&gt;

&lt;p&gt;public class BFC {&lt;br/&gt;
    de.ntec.lms.impl.feature.BooleanFeatureStateImpl.BooleanFeature ftr;&lt;br/&gt;
    public BFC(String id) throws DuplicateFeatureException &lt;/p&gt;
{
        ftr= new de.ntec.lms.impl.feature.BooleanFeatureStateImpl.BooleanFeature(id);
    }
&lt;p&gt;    public void setConfiguration(Properties cfg) &lt;/p&gt;
{
        if (cfg==null) throw new MissingArgumentException(&quot;cfg&quot;); 
        ftr.setConfiguration(new SmartPropertiesReader(&quot;&quot;,cfg));
    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;and try to create a bean &lt;/p&gt;

&lt;p&gt;    &amp;lt;bean&lt;br/&gt;
        class=&quot;de.ntec.lms.feature.BFC&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg value=&quot;LOCK&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;configuration&quot; &amp;gt;&lt;br/&gt;
            &amp;lt;props&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;tableName&quot;&amp;gt;PLACE&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;stateColumnName&quot;&amp;gt;FTR_LOCK&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;assignableTo&quot;&amp;gt;PLACE&amp;lt;/prop&amp;gt;&lt;br/&gt;
            &amp;lt;/props&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;it runs just  fine.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
  Oleksandr Alesinskyy&lt;/p&gt;

</description>
            <key id="15218">SPR-2713</key>
            <summary>CLONE -CanNotFindClassException trying to create bean from nested static public class</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="springboy">Rick Evans</assignee>
                                    <reporter username="al0">Oleksandr Alesinskyy</reporter>
                        <labels>
                    </labels>
                <created>Sat, 14 Oct 2006 21:35:43 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:54 +0000</updated>
                            <resolved>Mon, 16 Oct 2006 16:47:40 +0000</resolved>
                                                    <fixVersion>2.0.1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="20271" author="al0" created="Sat, 14 Oct 2006 21:39:01 +0000"  >&lt;p&gt;Hello Rick, &lt;/p&gt;

&lt;p&gt;Thank you, with $ its works, but I optedto clone  issue &lt;a href=&quot;https://jira.spring.io/browse/SPR-2712&quot; title=&quot;CanNotFindClassException trying to create bean from nested static public class&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2712&quot;&gt;&lt;del&gt;SPR-2712&lt;/del&gt;&lt;/a&gt; for the following reason:&lt;/p&gt;

&lt;p&gt;according JLS fully-qualified name of a member class is separated from the name of a containing class by &quot;.&quot; (dot), not by &quot;$&quot; (see quotation from JLS below). Latter is used in file names for class files created by javas , not in class names themselves. So I continue to think that it is a bug in Spring. &lt;/p&gt;

&lt;p&gt;JLS version 3, Chapter 6.7 Fully Qualified Names and Canonical Names: &lt;/p&gt;

&lt;p&gt;&quot;A member class or member interface M of another class C has a fully qualified name if and only if C has a fully qualified name. In that case, the fully qualified name of M consists of the fully qualified name of C, followed by &quot;.&quot;, followed by the simple name of M. &quot; &lt;/p&gt;

&lt;p&gt;&quot;The difference between a fully qualified name and a canonical name can be seen in examples such as: &lt;/p&gt;

&lt;p&gt;package p; &lt;br/&gt;
class O1 { class I{}} &lt;br/&gt;
class O2 extends O1{}; &lt;/p&gt;


&lt;p&gt;In this example both p.O1.I and p.O2.I are fully qualified names that denote the same class, but only p.O1.I is its canonical name.&quot; &lt;/p&gt;
</comment>
                            <comment id="20295" author="al0" created="Mon, 16 Oct 2006 01:42:22 +0000"  >&lt;p&gt;Just mall addition - $ usage is documented in chapter 13.1 of JLS for binary names. IT shall no be mixed-up with fully-qualified classname ,&lt;br/&gt;
If it is to complicated to switfch to fully-qualified names in bean definitions (to ensure that same naming convention in bean definiton as in Java source), then, at least, usage of binary names have to be clearly documented.&lt;/p&gt;</comment>
                            <comment id="20299" author="springboy" created="Mon, 16 Oct 2006 02:55:11 +0000"  >&lt;p&gt;Hi Oleksandr&lt;/p&gt;

&lt;p&gt;I totally see and take your point. However, as I am sure you know, Spring uses reflection and the class APIs of the JDK  libraries quite heavily. This includes the Class.forName(..) method to resolve the Class names typically written in Spring XML configuration files. The Javadoc for the Class.forName(..) method explicitly states that...&lt;/p&gt;

&lt;p&gt;&apos;Given the fully qualified name for a class or interface (in the same format returned by getName) this method attempts to locate, load, and link the class or interface.&apos;&lt;/p&gt;

&lt;p&gt;The key phrase there is &apos;... in the same format returned by getName()&apos;. If you print out to the console the classname of an inner class, you will see something along the lines of...&lt;/p&gt;

&lt;p&gt;&apos;com.foo.Foo$Bar&apos;&lt;/p&gt;

&lt;p&gt;This is why the $ notation at the heart of this issue is going to remain the way that it is. I will certainly document this &apos;feature&apos; in the Spring reference documentation; I am somewhat annoyed at myself for not having thought to include it before, it was an oversight on my part.&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Rick&lt;/p&gt;</comment>
                            <comment id="20303" author="al0" created="Mon, 16 Oct 2006 07:03:41 +0000"  >&lt;p&gt;Yes Rick, I see it. Really, it  is rather bug in JDK, but it is so old and so well-established that it is very unlikely to be fixed ever.&lt;/p&gt;</comment>
                            <comment id="20310" author="springboy" created="Mon, 16 Oct 2006 16:47:40 +0000"  >&lt;p&gt;Fixed. Thans for bringing this issue up.&lt;/p&gt;

&lt;p&gt;I have added some documentation to the section in the IoC chapter that talks about class names, and how to write them in your Spring XML configuration files.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 11 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Oct 2006 02:55:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00vkn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5160</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>