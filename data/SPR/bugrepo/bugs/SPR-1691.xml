<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:52:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1691/SPR-1691.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1691] setMaxRows() on CallableStatement</title>
                <link>https://jira.spring.io/browse/SPR-1691</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;JdbcTemplate has maxRows property which can be configured. It is used in query() methods, but it is never used in call() method which is entry point for StoredProcedure.execute() method.&lt;/p&gt;

&lt;p&gt;cs.setMaxRows(getMaxRows()) should (could?) be called before cs.execute()&lt;/p&gt;</description>
            <key id="13318">SPR-1691</key>
            <summary>setMaxRows() on CallableStatement</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="hamster">Hamster</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Feb 2006 11:41:35 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:28 +0000</updated>
                            <resolved>Sun, 12 Feb 2006 06:32:16 +0000</resolved>
                                    <version>1.2.3</version>
                    <version>1.2.5</version>
                                    <fixVersion>1.2.6</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16383" author="hamster" created="Thu, 9 Feb 2006 21:25:14 +0000"  >&lt;p&gt;I tested it on DB2 and it works as expected. ResultSets are limited to fixed value.&lt;/p&gt;

&lt;p&gt;My call method looks like this:&lt;/p&gt;

&lt;p&gt;  public Map call(CallableStatementCreator csc, final List declaredParameters) throws DataAccessException {&lt;br/&gt;
    return (Map) execute(csc, new CallableStatementCallback() {&lt;/p&gt;

&lt;p&gt;      public Object doInCallableStatement(CallableStatement cs) throws SQLException {&lt;br/&gt;
        cs.setMaxRows(getMaxRows());&lt;br/&gt;
        boolean retVal = cs.execute();&lt;br/&gt;
        int updateCount = cs.getUpdateCount();&lt;br/&gt;
        if (DB2JdbcTemplate.logger.isDebugEnabled()) &lt;/p&gt;
{
          DB2JdbcTemplate.logger.debug(&quot;CallableStatement.execute() returned &apos;&quot; + retVal + &quot;&apos;&quot;);
          DB2JdbcTemplate.logger.debug(&quot;CallableStatement.getUpdateCount() returned &quot; + updateCount);
        }
&lt;p&gt;        Map returnedResults = new HashMap();&lt;br/&gt;
        if (retVal || updateCount != -1) &lt;/p&gt;
{
          returnedResults.putAll(extractReturnedResultSets(cs, declaredParameters, updateCount));
        }
&lt;p&gt;        returnedResults.putAll(extractOutputParameters(cs, declaredParameters));&lt;br/&gt;
        return returnedResults;&lt;br/&gt;
      }&lt;br/&gt;
    });&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;I have only added line:&lt;br/&gt;
  cs.setMaxRows(getMaxRows());&lt;/p&gt;</comment>
                            <comment id="16392" author="juergen.hoeller" created="Sun, 12 Feb 2006 04:04:38 +0000"  >&lt;p&gt;Note that setMaxRows &lt;b&gt;is already&lt;/b&gt; applied in the execute implementation, as part of the applyStatementSettings call. So there shouldn&apos;t be a need to call setMaxRows again here; it should work just by specifying the maxRows on JdbcTemplate as-is. Could you please double-check whether the additional setMaxRows call actually changes the behavior for you?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16406" author="hamster" created="Sun, 12 Feb 2006 06:03:17 +0000"  >&lt;p&gt;1. I cannot test it, I&apos;m sorry my development environment is really hard (remote restricted access to data).&lt;/p&gt;

&lt;p&gt;2. If you start looking at this problem from StoredProcedure.execute() method you will see that it call:&lt;br/&gt;
getJdbcTemplate().call(..) which then invokes method JdbcTemplate.execute(CallableStatementCreator csc, CallableStatementCallback action).&lt;/p&gt;

&lt;p&gt;In JdbcTemplate.execute(CallableStatementCreator csc, CallableStatementCallback action) get/setMaxRows() are not called or passed to other methods.&lt;/p&gt;


&lt;p&gt;&amp;gt; Note that setMaxRows &lt;b&gt;is already&lt;/b&gt; applied in the execute implementation, as part of the applyStatementSettings call. &lt;br/&gt;
What do you mean by &quot;applyStatementSettings&quot; call?&lt;/p&gt;

&lt;p&gt;In execute method there is CallableStatementCreator but it is used in following way:&lt;br/&gt;
                        cs = csc.createCallableStatement(conToUse); // line 802 ver 1.2.5&lt;br/&gt;
Next lines:&lt;br/&gt;
			DataSourceUtils.applyTransactionTimeout(cs, getDataSource());&lt;br/&gt;
			CallableStatement csToUse = cs;&lt;br/&gt;
			if (this.nativeJdbcExtractor != null) &lt;/p&gt;
{
				csToUse = this.nativeJdbcExtractor.getNativeCallableStatement(cs);
			}
&lt;p&gt;			Object result = action.doInCallableStatement(csToUse);&lt;br/&gt;
action is callback which first statement is &lt;br/&gt;
                        boolean retVal = cs.execute();&lt;/p&gt;

&lt;p&gt;I will try to test it but it will take me some time &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/sad.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks for your reply.&lt;/p&gt;
</comment>
                            <comment id="16408" author="juergen.hoeller" created="Sun, 12 Feb 2006 06:32:16 +0000"  >&lt;p&gt;Ah, you&apos;re working against 1.2.5! Sorry, I didn&apos;t notice the version before.&lt;br/&gt;
This has been fixed in 1.2.6 already. An &quot;applyStatementSettings&quot; call does the job there.&lt;/p&gt;

&lt;p&gt;So please, give 1.2.6 a try!&lt;br/&gt;
FYI, we&apos;ll release 1.2.7 in a couple of days. 1.2.6 should do the job for you, though.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16411" author="hamster" created="Sun, 12 Feb 2006 07:11:44 +0000"  >&lt;p&gt;Thank you for your help. I will move to 1.2.6 or more probably I will leave my DB2JdbcTemplate (it is almost production stage). Thanks.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 46 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 12 Feb 2006 04:04:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01eyf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8300</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>