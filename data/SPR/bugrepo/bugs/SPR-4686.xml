<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:39:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-4686/SPR-4686.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-4686] @Component annotated class that contains a private non-static inner class not considered as candidate component because  beanDefinition.getMetadata().isIndependent() returns false</title>
                <link>https://jira.spring.io/browse/SPR-4686</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;@Component&lt;br/&gt;
public final class SimpleXslTransformerFactory {&lt;br/&gt;
    @Autowired&lt;br/&gt;
    private StreamSourceFactory streamSourceFactory;&lt;br/&gt;
    @Autowired&lt;br/&gt;
    private EfgLoggerFactory loggerFactory;&lt;/p&gt;

&lt;p&gt;    public Transformer createXslTransformer(Resource xsl) &lt;/p&gt;
{
        Source xslSource = streamSourceFactory.create(xsl);
        Transformer xslTransformer = createXslTransformer(xslSource, TransformerFactory.newInstance());
        xslTransformer.setErrorListener(new LoggingErrorListener());
        return xslTransformer;
    }

&lt;p&gt;    private Transformer createXslTransformer(Source xslSource, TransformerFactory factory) {&lt;br/&gt;
        try &lt;/p&gt;
{
            return factory.newTransformer(xslSource);
        }
&lt;p&gt; catch (TransformerConfigurationException e) &lt;/p&gt;
{
            throw new RuntimeException(e);
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    private class LoggingErrorListener implements ErrorListener {&lt;br/&gt;
        public void warning(TransformerException exception) throws TransformerException &lt;/p&gt;
{
            loggerFactory.create().warn(ExceptionUtils.getFullStackTrace(exception));
        }&lt;br/&gt;
&lt;br/&gt;
        public void error(TransformerException exception) throws TransformerException {            loggerFactory.create().warn(ExceptionUtils.getFullStackTrace(exception));        }

&lt;p&gt;        public void fatalError(TransformerException exception) throws TransformerException &lt;/p&gt;
{
            loggerFactory.create().warn(ExceptionUtils.getFullStackTrace(exception));
        }
&lt;p&gt;    }&lt;br/&gt;
}&lt;/p&gt;


&lt;p&gt;When evaluating ClassMetadataReadingVisitor.isIndependent(),&lt;br/&gt;
this.enclosingClassName: com.efgfp.raptor.functional.SimpleXslTransformerFactory&lt;br/&gt;
this.independentInnerClass: false&lt;/p&gt;

&lt;p&gt;therefore (this.enclosingClassName == null || this.independentInnerClass) =&amp;gt; false&lt;/p&gt;

&lt;p&gt;The list of candidate resources contained, in this order: &lt;/p&gt;

&lt;p&gt;URL &lt;span class=&quot;error&quot;&gt;&amp;#91;jar:file:/D:/wyd/workspace/raptor/target/exploded/raptor-web-interfaceWeb/WEB-INF/lib/functional-test.jar!/com/efgfp/raptor/functional/SimpleXslTransformerFactory$LoggingErrorListener.class&amp;#93;&lt;/span&gt;, &lt;br/&gt;
URL &lt;span class=&quot;error&quot;&gt;&amp;#91;jar:file:/D:/wyd/workspace/raptor/target/exploded/raptor-web-interfaceWeb/WEB-INF/lib/functional-test.jar!/com/efgfp/raptor/functional/SimpleXslTransformerFactory.class&amp;#93;&lt;/span&gt;, &lt;/p&gt;


&lt;p&gt;Debugging the calls to the ClassMetadataReadingVisitor showed that a call was made:&lt;/p&gt;

&lt;p&gt;	   visitInnerClass():72, ClassMetadataReadingVisitor.java&lt;br/&gt;
	  accept():-1&lt;br/&gt;
	  accept():-1&lt;br/&gt;
	  getAnnotationMetadata():52, SimpleMetadataReader.java&lt;/p&gt;

&lt;p&gt;name = &lt;/p&gt;
{java.lang.String@5861}
&lt;p&gt;&quot;com/efgfp/raptor/functional/SimpleXslTransformerFactory$LoggingErrorListener&quot;&lt;br/&gt;
outerName = &lt;/p&gt;
{java.lang.String@3079}
&lt;p&gt;&quot;com/efgfp/raptor/functional/SimpleXslTransformerFactory&quot;&lt;br/&gt;
innerName = &lt;/p&gt;
{java.lang.String@5862}
&lt;p&gt;&quot;LoggingErrorListener&quot;&lt;br/&gt;
access = 4101&lt;/p&gt;

&lt;p&gt;and that during this call, independentInnerClass was set to null.&lt;/p&gt;</description>
            <key id="21589">SPR-4686</key>
            <summary>@Component annotated class that contains a private non-static inner class not considered as candidate component because  beanDefinition.getMetadata().isIndependent() returns false</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="jzaugg">Jason Zaugg</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Apr 2008 23:10:08 +0000</created>
                <updated>Tue, 19 Jun 2012 02:28:13 +0000</updated>
                            <resolved>Tue, 15 Apr 2008 08:05:20 +0000</resolved>
                                    <version>2.5.1</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="34748" author="juergen.hoeller" created="Tue, 15 Apr 2008 08:05:20 +0000"  >&lt;p&gt;This is fortunately fixed since Spring 2.5.2 already!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="19122">SPR-4324</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        8 years, 37 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 15 Apr 2008 08:05:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04sdr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27972</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>