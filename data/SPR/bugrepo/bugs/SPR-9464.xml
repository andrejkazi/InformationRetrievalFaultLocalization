<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:10:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-9464/SPR-9464.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-9464] Method postProcessBeanDefinitionRegistry is not called if the bean implements BeanDefinitionRegistryPostProcessor</title>
                <link>https://jira.spring.io/browse/SPR-9464</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The issue could be revealed if MyBatis for Spring is used.&lt;/p&gt;

&lt;p&gt;MapperScannerConfigurer in MyBatis for Spring v1.1.0+ has changed to use BeanDefinitionRegistryPostProcessor instead of BeanFactoryPostProcessor as of v1.0.x for scanning MyBatis mapper resources.&lt;/p&gt;

&lt;p&gt;The case is postProcessBeanDefinitionRegistry(BeanDefinitionRegistry beanDefinitionRegistry) is not called by Spring container if MapperScannerConfigurer is created through @Bean (but it will be called if the bean is created through XML configuration)&lt;/p&gt;</description>
            <key id="43715">SPR-9464</key>
            <summary>Method postProcessBeanDefinitionRegistry is not called if the bean implements BeanDefinitionRegistryPostProcessor</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="cbeams">Chris Beams</assignee>
                                    <reporter username="simonwg">Simon Wong</reporter>
                        <labels>
                    </labels>
                <created>Sun, 3 Jun 2012 21:28:54 +0000</created>
                <updated>Fri, 18 Jan 2013 22:42:01 +0000</updated>
                            <resolved>Mon, 4 Jun 2012 05:17:13 +0000</resolved>
                                    <version>3.1.1</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="79565" author="cbeams" created="Mon, 4 Jun 2012 05:17:16 +0000"  >&lt;p&gt;This issue duplicates &lt;a href=&quot;https://jira.spring.io/browse/SPR-7868&quot; title=&quot;BeanDefinitionRegistryPostProcessor registered via @Bean will not be invoked&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7868&quot;&gt;&lt;del&gt;SPR-7868&lt;/del&gt;&lt;/a&gt;.  Also see &lt;a href=&quot;https://jira.spring.io/browse/SPR-8269&quot; title=&quot;BeanFactoryPostProcessor breaks default post-processing of @Configuration classes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-8269&quot;&gt;&lt;del&gt;SPR-8269&lt;/del&gt;&lt;/a&gt; for history/background on MyBatis and its &lt;tt&gt;MapperScannerConfigurer&lt;/tt&gt; becoming a &lt;tt&gt;BeanDefinitionRegistryPostProcessor&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="79580" author="simonwg" created="Mon, 4 Jun 2012 07:45:15 +0000"  >&lt;p&gt;Hi Chris, I have read &lt;a href=&quot;https://jira.spring.io/browse/SPR-7868&quot; title=&quot;BeanDefinitionRegistryPostProcessor registered via @Bean will not be invoked&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7868&quot;&gt;&lt;del&gt;SPR-7868&lt;/del&gt;&lt;/a&gt; before. Hence, I put the MapperScannerConfigurer in the XML (but the XML is imported by a @Configuration class with @ImportResource). Does it still suffer from the problem in &lt;a href=&quot;https://jira.spring.io/browse/SPR-7868&quot; title=&quot;BeanDefinitionRegistryPostProcessor registered via @Bean will not be invoked&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7868&quot;&gt;&lt;del&gt;SPR-7868&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                            <comment id="79588" author="cbeams" created="Mon, 4 Jun 2012 10:47:11 +0000"  >&lt;p&gt;Hi Simon, I would have to double-check to be certain.  It sounds like you have such a setup right now.  Is it simple enough for you to try this out locally and confirm whether works as expected with an XML file introduced via &lt;tt&gt;@ImportResource&lt;/tt&gt;?  Thanks.&lt;/p&gt;</comment>
                            <comment id="79596" author="simonwg" created="Tue, 5 Jun 2012 03:40:09 +0000"  >&lt;p&gt;I have created a testing program&lt;br/&gt;
mvn exec:java -Dexec.mainClass=&quot;com.mycompany.testspring31mybatis.cmd.AppTest&quot;&lt;/p&gt;

&lt;p&gt;If the MyBatis MapperFactoryBean is used directly (uncomment them in applicationContext-dao.xml), everything will works fine.&lt;/p&gt;

&lt;p&gt;The @ImportResource is used in com.mycompany.testspring31mybatis.config.spring.AppConfig&lt;/p&gt;</comment>
                            <comment id="79600" author="cbeams" created="Tue, 5 Jun 2012 06:04:58 +0000"  >&lt;p&gt;Simon,&lt;/p&gt;

&lt;p&gt;Thanks for the attached project.  I&apos;ve reworked this and checked it into the &lt;tt&gt;spring-framework-issues&lt;/tt&gt; project with this commit:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/SpringSource/spring-framework-issues/commit/a1584d7aa1906ab06ffe0dc8161c187647c8f6cc&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-framework-issues/commit/a1584d7aa1906ab06ffe0dc8161c187647c8f6cc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would recommend checking that out and taking a look at it.  You&apos;ll see that I&apos;ve set up an &lt;tt&gt;xml_centric&lt;/tt&gt; approach and a &lt;tt&gt;java_centric&lt;/tt&gt; approach.  When the container is bootstrapped via &lt;tt&gt;AnnotationConfigApplicationContext&lt;/tt&gt;, it is simply not possible for &lt;tt&gt;MapperScannerConfigurer&lt;/tt&gt; to do its job correctly.  This is a fundamental limitation that we won&apos;t change.  When the container is bootstrapped via &lt;tt&gt;GenericXmlApplicationContext&lt;/tt&gt;, &lt;tt&gt;MapperScannerConfigurer&lt;/tt&gt; works just fine.&lt;/p&gt;

&lt;p&gt;The problem is that &lt;tt&gt;MapperScannerConfigurer&lt;/tt&gt; needs to perform additional registration of beans via a classpath scanning process.  Implementing &lt;tt&gt;BeanDefinitionRegistryPostProcessor&lt;/tt&gt; works well enough when bootstrapping via XML, but as you&apos;ve seen, not with &lt;tt&gt;@Configuration&lt;/tt&gt;.  As of Spring 3.1, the &lt;tt&gt;@Enable&lt;/tt&gt;* and &lt;tt&gt;@ComponentScan&lt;/tt&gt; annotations are the answer to introducing this kind of support in the &lt;tt&gt;@Configuration&lt;/tt&gt; world.  For example, &lt;tt&gt;@ComponentScan&lt;/tt&gt; performs scanning and registration very similar to that which &lt;tt&gt;MapperScannerConfigurer&lt;/tt&gt; does.&lt;/p&gt;

&lt;p&gt;I would recommend reaching out to the MyBatis developers and seeing if they&apos;re interested in developing an &lt;tt&gt;@Enable&lt;/tt&gt;*-style annotation that performs the same work as &lt;tt&gt;MapperScannerConfigurer&lt;/tt&gt;.&lt;/p&gt;
</comment>
                            <comment id="79605" author="simonwg" created="Tue, 5 Jun 2012 07:21:18 +0000"  >&lt;p&gt;Chris, thanks for your advice. I think the @Enable* style would works the best for such case.&lt;/p&gt;

&lt;p&gt;In addition, could you please kindly revise the comment in &lt;a href=&quot;https://jira.spring.io/browse/SPR-7868&quot; title=&quot;BeanDefinitionRegistryPostProcessor registered via @Bean will not be invoked&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7868&quot;&gt;&lt;del&gt;SPR-7868&lt;/del&gt;&lt;/a&gt; and mentioned that even using @ImportResource within @Configuration still not working as expected?&lt;/p&gt;</comment>
                            <comment id="79606" author="cbeams" created="Tue, 5 Jun 2012 07:25:10 +0000"  >&lt;p&gt;Done.&lt;/p&gt;</comment>
                            <comment id="84825" author="emacarron" created="Sat, 3 Nov 2012 01:04:44 +0000"  >&lt;p&gt;I have just got to this issue while after having a look at one of our issues:&lt;br/&gt;
&lt;a href=&quot;http://code.google.com/p/mybatis/issues/detail?id=694&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://code.google.com/p/mybatis/issues/detail?id=694&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The MapperScanner is by far the most problemmatic class of MyBatis Spring integration &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;We should indeed add that @Enable*-style annotation but unfortunately I am quite unfamiliar with 3.1 features. Having a look at the code I can see a new ComponentScanAnnotationParser. It looks quite similar to our scanner indeed.&lt;/p&gt;

&lt;p&gt;Is there any doc (or javadoc) that explains how to register a new @Enable* annotation and its parser?&lt;/p&gt;</comment>
                            <comment id="87042" author="emacarron" created="Fri, 18 Jan 2013 22:42:01 +0000"  >&lt;p&gt;Hi guys,&lt;/p&gt;

&lt;p&gt;Thanks to Mike Lanyon we will provide a new @Enable* annotation in MyBatis-Spring 1.2.0 as Chris suggested. &lt;/p&gt;

&lt;p&gt;Please refer to the doc:&lt;br/&gt;
&lt;a href=&quot;http://www.mybatis.org/spring/mappers.html#scan&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.mybatis.org/spring/mappers.html#scan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="35771">SPR-7868</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="37603">SPR-8269</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="19798" name="TestSpring31MyBatis.zip" size="10827" author="simonwg" created="Tue, 5 Jun 2012 03:37:11 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        3 years, 48 weeks, 5 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 4 Jun 2012 05:17:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>emacarron</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05mf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32838</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>