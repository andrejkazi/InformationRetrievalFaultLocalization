<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:26:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-770/SPR-770.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-770] JDBCAccessor forces JDBC connection to be created during initialization</title>
                <link>https://jira.spring.io/browse/SPR-770</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;JDBCAccessor forces JDBC connection to be created during initialization:&lt;/p&gt;

&lt;p&gt;    public void afterPropertiesSet() {&lt;/p&gt;

&lt;p&gt;        if (getDataSource() == null) &lt;/p&gt;
{

            throw new IllegalArgumentException(&quot;dataSource is required&quot;);

        }

&lt;p&gt;        getExceptionTranslator();&lt;/p&gt;

&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;getExceptionTranslator() is the trigger of a call-chain that down the call stack creates a connection to get metadata from the database (in order to determine database vendor, required to select the appropriate exception translator implementation).&lt;/p&gt;

&lt;p&gt;WebSphere 5.1.1 and potentially other application servers don&apos;t allow XA connections used in local transactions to be mixed with XA connections created within a JTA transaction if all are created by the same DataSource. &lt;/p&gt;

&lt;p&gt;Since bean context initialization occurs before start of a JTA transaction, the JDBCTemplate class cannot be wired (or implicitly wired through use of JdbcDaoSupport, that creates a JDBCTemplate in response to injection of a datasource) by Spring, when WebSphere 5 and XA datasources are used.&lt;/p&gt;</description>
            <key id="11235">SPR-770</key>
            <summary>JDBCAccessor forces JDBC connection to be created during initialization</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://jira.spring.io/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="johaneltes">Johan Eltes</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Mar 2005 07:50:38 +0000</created>
                <updated>Thu, 10 Mar 2005 08:02:23 +0000</updated>
                            <resolved>Wed, 9 Mar 2005 19:38:34 +0000</resolved>
                                                    <fixVersion>1.1.4</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12532" author="juergen.hoeller" created="Wed, 9 Mar 2005 19:38:34 +0000"  >&lt;p&gt;Well, getExceptionTranslator only &lt;b&gt;tries&lt;/b&gt; to get access to the JDBC connection for determining the database name and choosing corresponding error codes.&lt;/p&gt;

&lt;p&gt;There should be an option in WebSphere&apos;s DataSource configuration to allow such non-XA access, called &quot;support local transations&quot; or the like. I&apos;ve heard that it&apos;s quite hidden.&lt;/p&gt;

&lt;p&gt;Anyway, since Spring 1.1.4, JdbcAccessor has a &quot;lazyInit&quot; flag. If this is set to true, the exception translator will be initialized on first access, which should be exactly what you have in mind.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12543" author="johaneltes" created="Thu, 10 Mar 2005 07:14:04 +0000"  >&lt;p&gt;Excellent, thanks. Does the lazyInit flag require the JDBCTemplate to be explicitly wired to the JdbcDaoSupport subclass (or once, to an abstract bean)? currently, we wire the datasource.&lt;/p&gt;</comment>
                            <comment id="12544" author="juergen.hoeller" created="Thu, 10 Mar 2005 08:02:23 +0000"  >&lt;p&gt;Yes, you currently need to define a JdbcTemplate bean and wire it with the &quot;jdbcTemplate&quot; property of your DAOs, if you want to stick with the JdbcDaoSupport base class.&lt;/p&gt;

&lt;p&gt;For 1.2 RC1, I&apos;ve just factored out a &quot;createJdbcTemplate&quot; method in JdbcDaoSupport, allowing to override JdbcTemplate creation for passed-in DataSources. (We already had something similar for HibernateDaoSupport and JdoDaoSupport.)&lt;/p&gt;

&lt;p&gt;Of course, you could also simply use your DAO base class that takes a DataSource and creates a customized JdbcTemplate instance, letting your DAOs derive from that rather than from Spring&apos;s JdbcDaoSupport.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 43 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 9 Mar 2005 19:38:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01ff3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8375</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>