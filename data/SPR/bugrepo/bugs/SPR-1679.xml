<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:27:33 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1679/SPR-1679.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1679] Overloaded methods on POJO advise optimisticly resolved</title>
                <link>https://jira.spring.io/browse/SPR-1679</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Consider this class:&lt;/p&gt;

&lt;p&gt;public class AuthenticationLogger {&lt;br/&gt;
    private static Log log = LogFactory.getLog(AuthenticationLogger.class);&lt;/p&gt;

&lt;p&gt;    public void logAuthenticationAttempt(int userId) &lt;/p&gt;
{
        log.info(&quot;User ID [&quot; + userId + &quot;] attempts to authenticate.&quot;);
    }

&lt;p&gt;    public void logAuthenticationAttempt(String username) &lt;/p&gt;
{
        log.info(&quot;User [&quot; + username + &quot;] attempts to authenticate.&quot;);
    }

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;that&apos;s configured as POJO advice:&lt;/p&gt;

&lt;p&gt;    &amp;lt;aop:config&amp;gt;&lt;br/&gt;
        &amp;lt;aop:pointcut id=&quot;authenticationMethodwithString&quot; expression=&quot;execution(boolean *..SecurityManager.authenticate(..)) and args(username,String)&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;aop:aspect ref=&quot;authenticationLogger&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;aop:advice pointcut-ref=&quot;authenticationMethodwithString&quot; method=&quot;logAuthenticationAttempt&quot; kind=&quot;before&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/aop:aspect&amp;gt;&lt;br/&gt;
    &amp;lt;/aop:config&amp;gt;&lt;/p&gt;

&lt;p&gt;for this target class:&lt;/p&gt;

&lt;p&gt;public class SecurityManager {&lt;br/&gt;
    public boolean authenticate(String username, String password) &lt;/p&gt;
{
        return RandomUtils.nextBoolean();
    }&lt;br/&gt;
&lt;br/&gt;
    public boolean authenticate(int userId, String password) {        return RandomUtils.nextBoolean();    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;This results in an exception (below) because MethodLocationFactoryBean incorrectly resolves the logAuthenticationAttempt(int) method.&lt;/p&gt;

&lt;p&gt;A workaround is to configure the advice as:&lt;/p&gt;

&lt;p&gt;            &amp;lt;aop:advice pointcut-ref=&quot;authenticationMethodwithString&quot; method=&quot;logAuthenticationAttempt(java.lang.String)&quot; kind=&quot;before&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;An exception should be thrown when an overloaded method is selected on POJO advice and no type information is provided.&lt;/p&gt;

&lt;p&gt;Exception stack trace:&lt;br/&gt;
=========================&lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;authenticationLogger&apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;com/apress/beginning_spring/chapter4/security/security-context.xml&amp;#93;&lt;/span&gt;: Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: username &lt;span class=&quot;error&quot;&gt;&amp;#91;Xlint:invalidAbsoluteTypeName&amp;#93;&lt;/span&gt;&lt;br/&gt;
java.lang.IllegalArgumentException: warning no match for this type name: username &lt;span class=&quot;error&quot;&gt;&amp;#91;Xlint:invalidAbsoluteTypeName&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:326)&lt;br/&gt;
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:168)&lt;br/&gt;
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:103)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:195)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:228)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:247)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:76)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:62)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:240)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:306)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:837)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:409)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:238)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:148)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:253)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:331)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:87)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:72)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.loadContextLocations(AbstractSpringContextTests.java:135)&lt;br/&gt;
	at org.springframework.test.AbstractDependencyInjectionSpringContextTests.loadContextLocations(AbstractDependencyInjectionSpringContextTests.java:224)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.getContext(AbstractSpringContextTests.java:115)&lt;br/&gt;
	at org.springframework.test.AbstractDependencyInjectionSpringContextTests.setUp(AbstractDependencyInjectionSpringContextTests.java:192)&lt;br/&gt;
	at com.intellij.rt.execution.junit2.JUnitStarter.main(JUnitStarter.java:31)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:86)&lt;/p&gt;
</description>
            <key id="13304">SPR-1679</key>
            <summary>Overloaded methods on POJO advise optimisticly resolved</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="adrian.colyer">Adrian Colyer</assignee>
                                    <reporter username="devijvers">Steven Devijver</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Feb 2006 02:46:46 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:38 +0000</updated>
                            <resolved>Wed, 8 Feb 2006 01:40:21 +0000</resolved>
                                    <version>2.0 M2</version>
                                    <fixVersion>2.0 M3</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16359" author="adrian.colyer" created="Tue, 7 Feb 2006 21:07:31 +0000"  >&lt;p&gt;This is due to the behaviour implemented in MethodLocatingFactoryBean (which in turn depends on BeanUtils.resolveSignature) - if no argument information is given, it attempts to resolve to the method with the least number of arguments (ideally, no arguments). If 2 or more methods have the same minimum number then the result may be non-deterministic on different vms (spec. does not define method ordering in get&lt;span class=&quot;error&quot;&gt;&amp;#91;Declared&amp;#93;&lt;/span&gt;Methods ). &lt;/p&gt;

&lt;p&gt;Currently that only appears to be used in the advice parsing chain, so we should be safe to change the specification to throw an IllegalArgumentException in the case of ambiguity.&lt;/p&gt;</comment>
                            <comment id="16363" author="adrian.colyer" created="Wed, 8 Feb 2006 01:40:21 +0000"  >&lt;p&gt;Fix commited in tree. Will be included in 2.0 M3 release, and available from HEAD as of now.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 47 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Feb 2006 21:07:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04vrj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28520</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>