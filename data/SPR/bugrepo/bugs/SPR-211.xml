<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:08:18 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-211/SPR-211.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-211] BeanWrappers and indexed properties changed at runtime</title>
                <link>https://jira.spring.io/browse/SPR-211</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I am having problems with BeanWrappers and runtime manipulation of application context beans. I have attached some classes and a test case that fails. The test case class should explain the problem.&lt;/p&gt;

&lt;p&gt;Is this a bug or intended behaviour?&lt;/p&gt;

&lt;p&gt;-------------------------------------------------------------&lt;br/&gt;
public class IndexedPropertyTestCase extends TestCase {&lt;br/&gt;
	ClassPathXmlApplicationContext context;&lt;/p&gt;

&lt;p&gt;	protected void setUp() &lt;/p&gt;
{ context = new ClassPathXmlApplicationContext(&quot;indexedPropertyTestCase.xml&quot;);	}

&lt;p&gt;	public void testIt() {&lt;br/&gt;
		TestBean testBean = (TestBean) context.getBean(&quot;testBean&quot;);&lt;br/&gt;
		BeanWrapper bw = new BeanWrapperImpl(testBean);&lt;/p&gt;

&lt;p&gt;		for (int i = 0; i &amp;lt; 3; i++) &lt;/p&gt;
{	System.out.println(bw.getPropertyValue(&quot;parameters[&quot; + i + &quot;].name&quot;)); }&lt;br/&gt;
		&lt;br/&gt;
		TestParameter[] newParameters = new TestParameter&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;;&lt;br/&gt;
		newParameters&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = (TestParameter) bw.getPropertyValue(&quot;parameters&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&quot;);&lt;br/&gt;
		newParameters&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; = (TestParameter) bw.getPropertyValue(&quot;parameters&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&quot;);&lt;br/&gt;
		&lt;br/&gt;
		// the following line makes the test case work&lt;br/&gt;
//		bw.setWrappedInstance(testBean);&lt;br/&gt;
		&lt;br/&gt;
		testBean.setParameters(newParameters);&lt;br/&gt;
&lt;br/&gt;
		for (int i = 0; i &amp;lt; 2; i++) {	System.out.println(bw.getPropertyValue(&quot;parameters[&quot; + i + &quot;].name&quot;)); }

&lt;p&gt;		assertEquals(&quot;param0&quot;, bw.getPropertyValue(&quot;parameters&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;.name&quot;));&lt;br/&gt;
		assertEquals(&quot;param2&quot;, bw.getPropertyValue(&quot;parameters&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;.name&quot;));&lt;br/&gt;
	}&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;----------------------------------------------------&lt;/p&gt;

&lt;p&gt;indexedPropertyTestCase.xml:&lt;br/&gt;
----------------------------------------------------&lt;br/&gt;
...&lt;br/&gt;
&amp;lt;beans&amp;gt;&lt;br/&gt;
  &amp;lt;bean id=&quot;testBean&quot; class=&quot;TestBean&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;property name=&quot;parameters&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;list&amp;gt;&lt;br/&gt;
        &amp;lt;bean class=&quot;TestParameter&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;name&quot;&amp;gt;&amp;lt;value&amp;gt;param0&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;/bean&amp;gt;&lt;br/&gt;
        &amp;lt;bean class=&quot;TestParameter&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;name&quot;&amp;gt;&amp;lt;value&amp;gt;param1&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;/bean&amp;gt;&lt;br/&gt;
        &amp;lt;bean class=&quot;TestParameter&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;property name=&quot;name&quot;&amp;gt;&amp;lt;value&amp;gt;param2&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;/bean&amp;gt;&lt;br/&gt;
      &amp;lt;/list&amp;gt;&lt;br/&gt;
    &amp;lt;/property&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;br/&gt;
----------------------------------------------------&lt;/p&gt;


&lt;p&gt;public class TestBean {&lt;br/&gt;
	private TestParameter[] parameters;&lt;/p&gt;

&lt;p&gt;	public TestParameter[] getParameters() &lt;/p&gt;
{ return parameters;	}

&lt;p&gt;	public void setParameters(TestParameter[] parameters) &lt;/p&gt;
{	this.parameters = parameters;	}
&lt;p&gt;}&lt;/p&gt;


&lt;p&gt;public class TestParameter {&lt;br/&gt;
	private String name;&lt;/p&gt;

&lt;p&gt;	public String getName() &lt;/p&gt;
{	return name; }

&lt;p&gt;	public void setName(String name) &lt;/p&gt;
{ this.name = name; }
&lt;p&gt;}&lt;/p&gt;

</description>
            <key id="10397">SPR-211</key>
            <summary>BeanWrappers and indexed properties changed at runtime</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="tufelix">Thomas Achleitner</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Jul 2004 01:46:16 +0000</created>
                <updated>Mon, 12 Jul 2004 03:39:26 +0000</updated>
                            <resolved>Mon, 12 Jul 2004 03:39:26 +0000</resolved>
                                    <version>1.0.2</version>
                                    <fixVersion>1.1 RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10611" author="juergen.hoeller" created="Mon, 12 Jul 2004 03:39:26 +0000"  >&lt;p&gt;This has already fixed in CVS for a while. IIRC, there never was a JIRA issue for it, just a report on the mailing lists. So now we have a proper JIRA issue for it &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;BeanWrapperImpl&apos;s caching of nested bean wrappers did not work correctly if array elements changed since the BeanWrapperImpl instance was created.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="10132" name="test.zip" size="1774" author="tufelix" created="Mon, 12 Jul 2004 01:47:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 25 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 12 Jul 2004 03:39:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04yf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28950</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>