<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:34:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-5529/SPR-5529.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-5529] Support BeanFactory#getBean(Class&lt;T&gt; requiredType)</title>
                <link>https://jira.spring.io/browse/SPR-5529</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;In alignment with Java 5 style and migration of JavaConfig features into core, support the following signature on the BeanFactory interface:&lt;/p&gt;

&lt;p&gt;	&amp;lt;T&amp;gt; T getBean(Class&amp;lt;T&amp;gt; requiredType) throws BeansException;&lt;/p&gt;

&lt;p&gt;This will need to be implemented by the following classes:&lt;/p&gt;

&lt;p&gt;AbstractBeanFactory&lt;br/&gt;
SimpleJndiBeanFactory&lt;br/&gt;
StaticListableBeanFactory&lt;br/&gt;
AbstractApplicationContext&lt;/p&gt;

&lt;p&gt;There are also several locations throughout the Spring test codebase that call getBean(null).  These calls will have to be disambiguated as getBean((String)null).&lt;/p&gt;

&lt;p&gt;With the above in mind, the addition of getBean(Class&amp;lt;T&amp;gt;) does introduce a minor backward compatibility issue for anyone calling getBean(null).  Given that this is extremely unlikely (because it&apos;s meaningless to do so), it&apos;s probably not a significant concern.&lt;/p&gt;

&lt;p&gt;Implementation approach:&lt;/p&gt;

&lt;p&gt;Apply logic similar to that in getBeansOfType(), iterating through all beans, building up a collection of beans that match the given &apos;requiredType&apos; parameter.  If the resulting list contains exactly one bean, return it.  If the list contains zero beans, throw a NoSuchBeanDefinitionException.  If the list contains more than one matching bean, throw a BeansException specific to the issue.  No suitable BeansException currently exists for this, so a suggestion would be &apos;AmbiguousBeanLookupException extends BeansException&apos; with an appropriate error message, something to the effect of: &quot;3 beans match requested type com.acme.Foo.  Consider using getBean(String, Class&amp;lt;T&amp;gt;) to disambiguate.  Matching bean names are: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;#39;foo1&amp;#39;, &amp;#39;foo2&amp;#39;, &amp;#39;foo3&amp;#39;&amp;#93;&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;Qualified access by type:&lt;/p&gt;

&lt;p&gt;Currently we&apos;re supporting &amp;lt;T&amp;gt; T getBean(String, Class&amp;lt;T&amp;gt;).  This is a qualification-by-bean-name scenario.  We may also want to support qualification-by-@Qualifier.  Haven&apos;t given much thought to this, but something to the effect of:&lt;/p&gt;

&lt;p&gt;&amp;lt;T&amp;gt; T getBean(Class&amp;lt;? extends Annotation&amp;gt; qualifier, Class&amp;lt;T&amp;gt; requiredType)&lt;/p&gt;

&lt;p&gt;Such that a client can define two classes of the same supertype:&lt;/p&gt;

&lt;p&gt;@Production&lt;br/&gt;
@Service&lt;br/&gt;
public XyzCustomerService implements CustomerService &lt;/p&gt;
{ ... }&lt;br/&gt;
&lt;br/&gt;
@Testing&lt;br/&gt;
@Service&lt;br/&gt;
public TestCustomerService implements CustomerService { ... }

&lt;p&gt;Where @Production and @Testing are both meta-annotated as @Qualifier&lt;/p&gt;

&lt;p&gt;The user can then register bean definitions for both classes and access the production instance as follows:&lt;/p&gt;

&lt;p&gt;ApplicationContext ctx = ...&lt;br/&gt;
CustomerService productionInstance = ctx.getBean(Production.class, CustomerService.class);&lt;/p&gt;

&lt;p&gt;The latter portion of this issue may well be moved to an issue all its own.  Just including it here for completeness &amp;amp; concision.&lt;/p&gt;</description>
            <key id="25798">SPR-5529</key>
            <summary>Support BeanFactory#getBean(Class&lt;T&gt; requiredType)</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="cbeams">Chris Beams</reporter>
                        <labels>
                    </labels>
                <created>Fri, 27 Feb 2009 07:08:06 +0000</created>
                <updated>Tue, 19 Jun 2012 03:47:02 +0000</updated>
                            <resolved>Tue, 20 Oct 2009 07:40:55 +0000</resolved>
                                                    <fixVersion>3.0 RC2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="42813" author="cbeams" created="Fri, 27 Feb 2009 07:11:18 +0000"  >&lt;p&gt;getBean(Class&amp;lt;T&amp;gt; requiredType) will also need to account for excluding any beans marked as &apos;primary&apos; from the  collection of matching beans.&lt;/p&gt;</comment>
                            <comment id="42814" author="cbeams" created="Fri, 27 Feb 2009 07:26:48 +0000"  >&lt;p&gt;I suppose we&apos;ll need to consider providing variants of &lt;/p&gt;

&lt;p&gt;    containsBean(String)&lt;br/&gt;
    isSingleton(String)&lt;br/&gt;
    getBean(String, Object[])&lt;/p&gt;

&lt;p&gt;I&apos;m not necessarily advocating that we do, but it should be considered and discussed nonetheless.&lt;/p&gt;</comment>
                            <comment id="42815" author="cbeams" created="Fri, 27 Feb 2009 07:32:10 +0000"  >&lt;p&gt;Suggested JavaDoc:&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	/**&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * Return an instance, which may be shared or independent, of the specified bean.&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * &amp;lt;p&amp;gt;Behaves the same as {@link #getBean(String)}, but looks the bean up by its&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * type rather than by name.&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * &amp;lt;p&amp;gt;Will ask the parent factory if the bean cannot be found within this factory&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * instance.&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * @param requiredType the type (or any supertype) of the bean to retrieve&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * @return an instance of the bean&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * @throws NoSuchBeanDefinitionException if there&apos;s no bean definined matching&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * &amp;lt;var&amp;gt;requiredType&amp;lt;/var&amp;gt;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * @throws AmbiguousBeanLookupException if more than one bean matches&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * &amp;lt;var&amp;gt;requiredType&amp;lt;/var&amp;gt;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 * @throws BeansException if the bean could not be created&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	 */&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;	&amp;lt;T&amp;gt; T getBean(Class&amp;lt;T&amp;gt; requiredType) throws BeansException;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;</comment>
                            <comment id="42816" author="cbeams" created="Fri, 27 Feb 2009 07:33:50 +0000"  >&lt;p&gt;A side note: the &apos;may be shared or independent&apos; language found throughout the JavaDoc in BeanFactory seems to me to be antiquated.  I assume this was an early way of referring to singleton and prototype scopes respectively?  Let&apos;s consider revising/eliminating that phrase altogether.&lt;/p&gt;</comment>
                            <comment id="43257" author="juergen.hoeller" created="Sun, 22 Mar 2009 23:41:27 +0000"  >&lt;p&gt;We have BeanFactoryUtils.beanOfType(ListableBeanFactory, Class) which is pretty similar. This is the only such method in BeanFactoryUtils that does not simply provide ancestor-traversal behavior on top of ListableBeanFactory... so I suppose it&apos;s worth having in the core interfaces. I would add it to ListableBeanFactory, though, since it implies some level of bean definition traversal and matching. We could also call it getBeanOfType, which would nicely match the existing getBeansOfType method in ListableBeanFactory.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="43719" author="grzegorzborkowski" created="Fri, 17 Apr 2009 07:09:41 +0000"  >&lt;p&gt;Though not directly, but somehow related to it is my request &lt;a href=&quot;https://jira.spring.io/browse/SPR-5114&quot; title=&quot;Add ability to declare bean type and explicitely mark bean factories in XML configurations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-5114&quot;&gt;&lt;del&gt;SPR-5114&lt;/del&gt;&lt;/a&gt;. Perhaps it is also worth considering as candidate to inclusion in Spring 3.0.&lt;/p&gt;</comment>
                            <comment id="47203" author="cbeams" created="Sun, 4 Oct 2009 11:47:23 +0000"  >&lt;p&gt;Note that I&apos;ve just committed the initial revision of &lt;tt&gt;ConfigurationClassApplicationContext&lt;/tt&gt;, and it contains an implementation of &lt;tt&gt;getBean(Class&amp;lt;T&amp;gt; requiredType)&lt;/tt&gt; as discussed here.  When this issue is implemented, we&apos;ll simply need to remember to remove this method and rely on the superclass implementation.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="13834">SPR-1956</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="26352">SPR-5682</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        7 years, 12 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 22 Mar 2009 23:41:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04rgn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27823</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>