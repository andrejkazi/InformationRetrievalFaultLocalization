<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:50:04 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2218/SPR-2218.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2218] PropertyPlaceholderConfigurer doesn&apos;t work with default-lazy-init=&quot;true&quot;</title>
                <link>https://jira.spring.io/browse/SPR-2218</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;It seems that Spring 2.0 RC1 breaks the compatibility with Spring 1.2.x in this case.&lt;br/&gt;
I am using the following Spring configuration file:&lt;/p&gt;

&lt;p&gt;springApplicationContext.xml&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;!DOCTYPE beans PUBLIC &quot;-//SPRING//DTD BEAN//EN&quot; &quot;http://www.springframework.org/dtd/spring-beans.dtd&quot;&amp;gt;&lt;br/&gt;
&amp;lt;beans default-lazy-init=&quot;true&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean id=&quot;placeholderConfig&quot;&lt;br/&gt;
      class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;property name=&quot;location&quot; value=&quot;classpath:/spring.properties&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean id=&quot;person&quot; class=&quot;com.example.Person&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;property name=&quot;name&quot; value=&quot;$&lt;/p&gt;
{name}&quot; /&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;br/&gt;
&lt;br/&gt;
spring.properties:&lt;br/&gt;
name=Hugo&lt;br/&gt;
&lt;br/&gt;
com.example.Person:&lt;br/&gt;
package com.example;&lt;br/&gt;
&lt;br/&gt;
public class Person&lt;br/&gt;
{&lt;br/&gt;
  private String name = null;&lt;br/&gt;
  &lt;br/&gt;
  public String getName()&lt;br/&gt;
  { return this.name; }&lt;br/&gt;
&lt;br/&gt;
  public void setName(String name)&lt;br/&gt;
  { this.name = name; } &lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Main class:&lt;br/&gt;
package com.example;&lt;br/&gt;
&lt;br/&gt;
import org.springframework.context.support.ClassPathXmlApplicationContext;&lt;br/&gt;
&lt;br/&gt;
public class Launcher&lt;br/&gt;
{&lt;br/&gt;
  public static void main(String[] args)&lt;br/&gt;
  {
    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(&quot;/springApplicationContext.xml&quot;);
    Person p = (Person)context.getBean(&quot;person&quot;);
    System.out.println(p.getName());
  }&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
With Spring 2.0 RC1 it prints &quot;${name}
&lt;p&gt;&quot;, with Spring 1.2x &quot;Hugo&quot; as defined in spring.properties .&lt;/p&gt;</description>
            <key id="14380">SPR-2218</key>
            <summary>PropertyPlaceholderConfigurer doesn&apos;t work with default-lazy-init=&quot;true&quot;</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="springboy">Rick Evans</assignee>
                                    <reporter username="arcolf">Wolfgang Gruber</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Jun 2006 00:39:47 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:42 +0000</updated>
                            <resolved>Tue, 4 Jul 2006 21:51:23 +0000</resolved>
                                    <version>2.0 RC1</version>
                                    <fixVersion>2.0 RC2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="18314" author="juergen.hoeller" created="Thu, 29 Jun 2006 04:36:12 +0000"  >&lt;p&gt;This is a consequence of a deliberate change in Spring 2.0: Bean classes are now loaded as lazily as possible, in the case of lazy-init=&quot;true&quot; as late as when the bean will be actually touched. This means that beans that are supposed to be auto-detected by the ApplicationContext must not be marked as lazy-init anymore. This isn&apos;t a problem with local lazy-init markers on those beans, since noone used those in the first place. It&apos;s rather only a problem with default-lazy-init=&quot;true&quot;; in that case, you can easily solve it through putting lazy-init=&quot;false&quot; onto the PropertyPlaceholderConfigurer bean definition.&lt;/p&gt;

&lt;p&gt;The root cause of this new behavior is that autodetection by type (like in the case of the BeanFactoryPostProcessor interface, as implemented by the PropertyPlaceholderConfigurer) usually means loading &lt;b&gt;all&lt;/b&gt; bean classes of all bean definitions in the context. To get actual lazy loading of bean classes, this needs to be avoided - else lazy-init=&quot;true&quot; doesn&apos;t even load the bean classes anymore, with the unfortunate (but also unavoidable) consequence as outlined above...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18317" author="arcolf" created="Thu, 29 Jun 2006 10:21:29 +0000"  >&lt;p&gt;Thanks a lot for the detailed explanation, Juergen!&lt;br/&gt;
As far as I have heard Spring 2.0 should be fully backward compatible with Spring 1.X and the upgrade process should be a drop-in replacement of the spring.jar. So even if this problem can be fixed with an additional attribute, it should be documented somewhere, where it can be found easily (which means without reading the whole documentation &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, because I don&apos;t think that I am the only one who uses default-lazy-init in conjunction with the PropertyPlaceholderConfigurer.&lt;/p&gt;</comment>
                            <comment id="18322" author="springboy" created="Thu, 29 Jun 2006 19:22:22 +0000"  >&lt;p&gt;I&apos;ll document this when I am addressing &lt;a href=&quot;https://jira.spring.io/browse/SPR-1006&quot; title=&quot;Improve BeanFactoryPostProcessor and BeanPostProcessor documentation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1006&quot;&gt;&lt;del&gt;SPR-1006&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="18324" author="springboy" created="Thu, 29 Jun 2006 19:35:00 +0000"  >&lt;p&gt;Hi Wolfgang&lt;/p&gt;

&lt;p&gt;As Juergen has written, the most expedient solution to this issue is to add &apos;lazy-init=&quot;false&quot;&apos;  to the definition of your various PropertyPlaceholderConfigurers.&lt;/p&gt;

&lt;p&gt;This issue has come up before, and I have changed the Spring reference documentation in certain places to account for the new lazy-loading semantics. (See the first example of an MBeanExporter definition in the JMX chapter, where the MBeanExporter is explicitly marked as &apos;lazy-init=&quot;false&quot;&apos;).&lt;/p&gt;

&lt;p&gt;I will (as stated in a previous comment) document this explicitly in the Spring reference manual and the Javadoc for the affected classes. I will also resolve this issue as &apos;Wont Fix&apos; when I shortly resolve &lt;a href=&quot;https://jira.spring.io/browse/SPR-1006&quot; title=&quot;Improve BeanFactoryPostProcessor and BeanPostProcessor documentation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1006&quot;&gt;&lt;del&gt;SPR-1006&lt;/del&gt;&lt;/a&gt; (unless of course you comment further of course).&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Rick&lt;/p&gt;</comment>
                            <comment id="18341" author="arcolf" created="Fri, 30 Jun 2006 10:36:16 +0000"  >&lt;p&gt;For me the problem is solved with &apos;lazy-init=&quot;false&quot;&apos; and your last comment on &lt;a href=&quot;https://jira.spring.io/browse/SPR-1006&quot; title=&quot;Improve BeanFactoryPostProcessor and BeanPostProcessor documentation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1006&quot;&gt;&lt;del&gt;SPR-1006&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you, Rick and Juergen, for your help with this issue and the great work you do!&lt;/p&gt;</comment>
                            <comment id="18394" author="springboy" created="Tue, 4 Jul 2006 21:51:23 +0000"  >&lt;p&gt;Done. Thanks for raising this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                            <outwardlinks description="depends on">
                                        <issuelink>
            <issuekey id="11663">SPR-1006</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 26 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Jun 2006 04:36:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04uxb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28384</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>