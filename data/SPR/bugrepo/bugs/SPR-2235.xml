<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:49:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2235/SPR-2235.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2235] form:select not working when in tag file</title>
                <link>https://jira.spring.io/browse/SPR-2235</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The following works when placed directly in my jsp file.&lt;/p&gt;

&lt;p&gt;          &amp;lt;form:select path=&quot;ofaElbowsAgeInMonths&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;form:option value=&quot;&lt;del&gt;1&quot; label=&quot;&lt;/del&gt;-&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;c:forEach var=&quot;i&quot; begin=&quot;12&quot; end=&quot;28&quot;&amp;gt;&amp;lt;form:option value=&quot;$&lt;/p&gt;
{i}&quot; label=&quot;${i}
&lt;p&gt;&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/c:forEach&amp;gt;&lt;br/&gt;
          &amp;lt;/form:select&amp;gt;&lt;/p&gt;

&lt;p&gt;but does not work when the exact same text is put in a .tag file and called from the jsp.&lt;/p&gt;

&lt;p&gt;&amp;lt;&amp;lt;&amp;lt;selectNumber.tag&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;%@ tag body-content=&quot;empty&quot; %&amp;gt;&lt;br/&gt;
&amp;lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot;%&amp;gt;&lt;br/&gt;
&amp;lt;%@ taglib prefix=&quot;form&quot; uri=&quot;http://www.springframework.org/tags/form&quot;%&amp;gt;&lt;br/&gt;
&amp;lt;%@ attribute name=&quot;path&quot; required=&quot;true&quot; %&amp;gt;&lt;br/&gt;
&amp;lt;%@ attribute name=&quot;begin&quot; required=&quot;true&quot; %&amp;gt;&lt;br/&gt;
&amp;lt;%@ attribute name=&quot;end&quot; required=&quot;true&quot; %&amp;gt;&lt;br/&gt;
          &amp;lt;form:select path=&quot;ofaElbowsAgeInMonths&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;form:option value=&quot;&lt;del&gt;1&quot; label=&quot;&lt;/del&gt;-&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;c:forEach var=&quot;i&quot; begin=&quot;12&quot; end=&quot;28&quot;&amp;gt;&amp;lt;form:option value=&quot;$&lt;/p&gt;
{i}&quot; label=&quot;${i}
&lt;p&gt;&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/c:forEach&amp;gt;&lt;br/&gt;
          &amp;lt;/form:select&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;&amp;lt;&amp;lt;excerpt from foo.jsp&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;          &amp;lt;td&amp;gt;&lt;br/&gt;
          &amp;lt;escr:selectNumber path=&quot;ofaElbowsAgeInMonths&quot; begin=&quot;12&quot; end=&quot;240&quot; /&amp;gt;&lt;br/&gt;
          &amp;lt;/td&amp;gt;&lt;/p&gt;

&lt;p&gt;Note that the tag file is not even using the parameters. It fails in the same way when using the parameters instead of constant values. Without the call to escr:selectNumber the form renders correctly including rendering other escr namespace  tags. From the stack trace I am certain it is failing in the form:select tag.&lt;/p&gt;

&lt;p&gt;Stack dump is &lt;/p&gt;

&lt;p&gt;2006-07-04 08:24:16,750 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.web.servlet.tags.form.SelectTag&amp;#93;&lt;/span&gt; - Neither Errors instance nor plain target object for bean name &apos;null&apos; available as request attribute&lt;br/&gt;
java.lang.IllegalStateException: Neither Errors instance nor plain target object for bean name &apos;null&apos; available as request attribute&lt;br/&gt;
	at org.springframework.web.servlet.support.BindStatus.&amp;lt;init&amp;gt;(BindStatus.java:134)&lt;br/&gt;
	at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:148)&lt;br/&gt;
	at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.resolveCssClass(AbstractHtmlElementTag.java:502)&lt;br/&gt;
	at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:479)&lt;br/&gt;
	at org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag.writeDefaultAttributes(AbstractHtmlInputElementTag.java:166)&lt;br/&gt;
	at org.springframework.web.servlet.tags.form.SelectTag.writeTagContent(SelectTag.java:179)&lt;br/&gt;
	at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:81)&lt;br/&gt;
	at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:68)&lt;br/&gt;
	at org.apache.jsp.tag.web.registry.selectNumber_tag._jspx_meth_form_select_0(selectNumber_tag.java:129)&lt;br/&gt;
	at org.apache.jsp.tag.web.registry.selectNumber_tag.doTag(selectNumber_tag.java:99)&lt;br/&gt;
	at org.apache.jsp.WEB_002dINF.jsp.members.registrars.dogEdit_jsp._jspx_meth_escr_selectNumber_0(dogEdit_jsp.java:2201)&lt;br/&gt;
	at org.apache.jsp.WEB_002dINF.jsp.members.registrars.dogEdit_jsp._jspx_meth_form_form_0(dogEdit_jsp.java:909)&lt;br/&gt;
	at org.apache.jsp.WEB_002dINF.jsp.members.registrars.dogEdit_jsp._jspService(dogEdit_jsp.java:178)&lt;br/&gt;
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)&lt;br/&gt;
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:332)&lt;br/&gt;
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:314)&lt;br/&gt;
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:264)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:301)&lt;br/&gt;
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:115)&lt;br/&gt;
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:252)&lt;br/&gt;
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1053)&lt;br/&gt;
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:818)&lt;br/&gt;
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:727)&lt;br/&gt;
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:396)&lt;br/&gt;
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:350)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)&lt;br/&gt;
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)&lt;br/&gt;
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)&lt;br/&gt;
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)&lt;br/&gt;
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:524)&lt;br/&gt;
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)&lt;br/&gt;
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)&lt;br/&gt;
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:541)&lt;br/&gt;
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)&lt;br/&gt;
	at org.apache.catalina.valves.RequestDumperValve.invoke(RequestDumperValve.java:150)&lt;br/&gt;
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)&lt;br/&gt;
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)&lt;br/&gt;
	at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)&lt;br/&gt;
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)&lt;br/&gt;
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)&lt;br/&gt;
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:595)&lt;/p&gt;

&lt;p&gt;By the way, the new form tags are outstanding. A big step forward for Spring and JSPs. Many thanks, Rob.&lt;/p&gt;
</description>
            <key id="14432">SPR-2235</key>
            <summary>form:select not working when in tag file</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="dsurber">Douglas Surber</reporter>
                        <labels>
                    </labels>
                <created>Tue, 4 Jul 2006 04:51:03 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:38 +0000</updated>
                            <resolved>Mon, 17 Jul 2006 02:04:50 +0000</resolved>
                                    <version>2.0 M5</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="18429" author="gmazza" created="Thu, 6 Jul 2006 04:30:59 +0000"  >&lt;p&gt;Yes, the same problem has occurred to me as well&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &amp;#8211; it would be nice if functionality were added to allow for Spring form tags to work within JSP 2.0 tag files.  I think the solution may be just to create a new &quot;form:parent&quot; tag, that is to be used only within JSP tag files.  What form:parent will do is provide the commandBean object name that child elements like form:select and form:input will reference (getting rid of the &quot;null&quot; bean name error above), &lt;b&gt;without&lt;/b&gt; creating a new HTML form object in the output like form:form does.&lt;/p&gt;

&lt;p&gt;Glen&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;  &lt;a href=&quot;http://forum.springframework.org/showthread.php?t=26619&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?t=26619&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="18431" author="gmazza" created="Thu, 6 Jul 2006 07:24:25 +0000"  >&lt;p&gt;OK, as one possible solution, I created a new &quot;form:wrapper&quot; tag, which is basically form:form but thoroughly gutted out to do nothing but inform its child form:xxxxx elements the name of the commandBean.  I&apos;ve tested it with form:errors and form:input within a JSP tag file and it works well with those two on both IE and Firefox (I did not check the other form elements though).  (I named it form:wrapper after the XSL formatting object called &quot;fo:wrapper&quot;, which does nothing but pass properties onto its child formatting objects.)&lt;/p&gt;

&lt;p&gt;This changes requires a new file, Wrapper.java, and an update to the spring-form.tld file.&lt;/p&gt;

&lt;p&gt;Glen&lt;/p&gt;</comment>
                            <comment id="18440" author="dsurber" created="Thu, 6 Jul 2006 14:32:23 +0000"  >&lt;p&gt;If it is possible to make it work without a source change that identifies the name of the command object, that would be best. If not, then another alternative would be to add an optional commandName attribute to all of the tags. My guess would be that most tag files would contain at most one or two form tags so having to insert the command name would not be a big issue. Having to pass the command name to user written tags would be unfortunate, but I&apos;ve stumbled across too many restrictions in the way tag files work to be surprised.&lt;/p&gt;

&lt;p&gt;I would actually prefer to be able to set the command name on the form tags even in the jsp file, so maybe the form:wrapper tag isn&apos;t such a bad idea. An alternate name, form:command?&lt;/p&gt;

&lt;p&gt;Douglas&lt;/p&gt;</comment>
                            <comment id="18444" author="gmazza" created="Thu, 6 Jul 2006 22:45:08 +0000"  >&lt;p&gt;I really don&apos;t care about its name (form:command bean=&quot;whatever&quot; looks fine.)  The problem with having commandBeans set on individual tags is that AFAIK the MVC code is not designed to work with multiple command beans for a single form, and that would cause problems with users who would want to set commandName=&quot;xxx&quot; on one form element and commandName=&quot;yyy&quot; on another.  Implicit with per-element setting of this value is that you can name multiple beans in your form, and, if that turns out not to be supported by Spring MVC, it will cause confusion with users.&lt;/p&gt;

&lt;p&gt;The scope of the problem right now is just getting the form tags to work within JSP 2.0 tag files.  It really is not:  How can I get Spring MVC to work with multiple command beans for a given form?  While solving the latter may very well solve the former, it would probably be opening up an architectural can of worms at this stage for Spring MVC.  Also, the value of having multiple command beans for a single form I think should stand or fall on its own merits, not be inordinately influenced by our need to get form tags working in JSP tag files.&lt;/p&gt;

&lt;p&gt;I was also thinking, another option, besides form:wrapper (or whatever it would be called), is to provide a boolean attribute to the form:form tag, something like withinTagFile=&quot;true&quot; or &quot;commandBeanOnly=&quot;true&quot;, that would change the behavior of form:form to do nothing but pass the name of the command bean to its enclosing tags (i.e.., not create an HTML form).  That would be harder for the Spring team to code (form:form would have considerably different functionality based on the value of that parameter, making the coding for a single class to be rather tricky), but might be simpler to document/explain (Something like &quot;In JSP tag files, because they are compiled separately, it is necessary to enclose child elements in a form:form tag within the tag file to make sure the command bean is properly set for the child elements.  Also, it is important to set &quot;withinTagFile&quot; (or whatever) to &quot;true&quot; so form:form doesn&apos;t create an HTML form.&quot;) &lt;/p&gt;

&lt;p&gt;Anyway, it will be interesting to see the solution that the Spring team decides to go with.  (Assuming that they actually need to make a change, it may be that the form tags will work in JSP tags, but we were just unaware of the solution!)&lt;/p&gt;

&lt;p&gt;Glen&lt;/p&gt;</comment>
                            <comment id="18473" author="dsurber" created="Sat, 8 Jul 2006 17:35:53 +0000"  >&lt;p&gt;I&apos;ve thought about this quite a bit. Although I like the new tags a lot, I have one problem with them.&lt;/p&gt;

&lt;p&gt;I&apos;m an experienced Java programmer and I have no problem understanding and developing JSPs witth the new tags. My web developers are not programmers. I generally encapsulate all of the complex JSP code in tag files for them so they don&apos;t even use the JSP core tags. They do understand the expression language a bit. They are used to writing  $&lt;/p&gt;
{foo.bar} to get the bar value of the foo object. I frequently create tags that define foo for them, eg &amp;lt;myTags:useFoo id=&quot;${baz.id}&amp;gt;....${foo.bar}
&lt;p&gt;...&amp;lt;/myTags:useFoo&amp;gt;. They all seem to understand this and it works fine.&lt;/p&gt;

&lt;p&gt;My concern about the new Spring form tags is that they don&apos;t use this model. Instead of the command object being named explicitly, it is implicit. So, while the web developers will write $&lt;/p&gt;
{foo.bar}
&lt;p&gt; the will have to write &amp;lt;form:input path=&quot;bar&quot;/&amp;gt; This is a bit inconsistent. It would be more consistent to write &amp;lt;form:input path=&quot;foo.bar&quot;/&amp;gt;. Further I really can&apos;t use the myTag:useFoo model any more because that doesn&apos;t seem to mesh with the single command object that the form tag defines. Maybe I could get there via spring:bind, but it is not obvious to me.&lt;/p&gt;

&lt;p&gt;I understand that the command name (foo in this case) is not needed. I understand that requiring the command name would imply that one could use multiple command objects which is not supported (although it seems to me it probably could be.) I don&apos;t know what, if anything, could or should change. I&apos;m just pointing out a usability concern that I have.&lt;/p&gt;

&lt;p&gt;Again, Rob, thanks for the new tags. I think they are a huge improvement.&lt;/p&gt;</comment>
                            <comment id="18477" author="gmazza" created="Sun, 9 Jul 2006 10:14:31 +0000"  >&lt;p&gt;Quote:  &quot;My concern about the new Spring form tags is that they don&apos;t use this model. Instead of the command object being named explicitly, it is implicit.  So, while the web developers will write $&lt;/p&gt;
{foo.bar}
&lt;p&gt; they will have to write &amp;lt;form:input path=&quot;bar&quot;/&amp;gt;&quot;&lt;/p&gt;

&lt;p&gt;I see the 2.0 tags as more restrictive in expressivity than the 1.2.x tags, but in exchange for a sharply reduced number of lines of code.  Providing you hide the complexity behind tag files, the 1.2.x spring tags may provide you what you are looking for.  While the tag files themselves (which you would be writing) would be a bit more complex and wordy, your web developers would still be using simple &quot;foo:this&quot; and &quot;foo:that&quot; tags in their work.  (i.e., the fact that 1.2.x Spring tags are more verbose doesn&apos;t really matter, that would be hidden from them.)&lt;/p&gt;

&lt;p&gt;Quote:  &quot;Maybe I could get there via spring:bind, but it is not obvious to me.&quot;&lt;br/&gt;
Yes, you can.  spring:nestedPath and spring:bind both accept the &quot;foo.bar.myProperty&quot; type naming, for the property myProperty within a nested class &quot;bar&quot; under &quot;foo&quot;:&lt;br/&gt;
for example:&lt;br/&gt;
&amp;lt;spring:bind path=&quot;foo.bar.myProperty&quot;/&amp;gt;&lt;br/&gt;
or&lt;br/&gt;
&amp;lt;spring:nestedPath path=&quot;foo&quot;&amp;gt;&lt;br/&gt;
&amp;lt;spring:bind path=&quot;bar.myProperty/&amp;gt;&lt;br/&gt;
&amp;lt;/spring:nestedPath&amp;gt;&lt;br/&gt;
or&lt;br/&gt;
&amp;lt;spring:nestedPath path=&quot;foo.bar&quot;&amp;gt;&lt;br/&gt;
&amp;lt;spring:bind path=&quot;myProperty/&amp;gt;&lt;br/&gt;
&amp;lt;/spring:nestedPath&amp;gt;&lt;br/&gt;
or&lt;br/&gt;
&amp;lt;spring:nestedPath path=&quot;foo&quot;&amp;gt;&lt;br/&gt;
&amp;lt;spring:nestedPath path=&quot;bar&quot;&amp;gt;&lt;br/&gt;
&amp;lt;spring:bind path=&quot;myProperty/&amp;gt;&lt;br/&gt;
&amp;lt;/spring:nestedPath&amp;gt;&lt;br/&gt;
&amp;lt;/spring:nestedPath&amp;gt;&lt;/p&gt;

&lt;p&gt;etc. etc.&lt;/p&gt;

&lt;p&gt;Glen&lt;/p&gt;</comment>
                            <comment id="18478" author="gmazza" created="Sun, 9 Jul 2006 10:27:06 +0000"  >&lt;p&gt;Two more observations I have uncovered about this issue:&lt;/p&gt;

&lt;p&gt;1.)  Having a form:wrapper element may also be of use within a regular JSP file, not just within a JSP tag file.  Consider the case of a JSP tag file that includes the form:form tag, and calls the main jsp page via &amp;lt;jsp:doBody/&amp;gt; in order to include the page&apos;s specific form subelements.  Any form:select, form:input, etc. tags within the main JSP file would not have reference to the commandBean named in the tag file&apos;s form:form tag, so it would apparently need a form:wrapper as well.&lt;/p&gt;

&lt;p&gt;2.)  I think I better understand why form:input, form:select, etc. will not work within the JSP tag file when the parent form:form is within the main calling JSP page.  The FormTag.java class is attaching the command bean to the pageContext, but the pageContext does not exist within the tag file (as I understand you have to use jspContext instead.)  I think another solution to this bug (i.e., instead of the previously suggested form:wrapper or a &quot;commandBeanOnly&quot; attribute attached to form:form) is to use jspContext within the FormTag.java class instead.  I think if jspContext (which is the parent class of pageContext) is used, the tag file might be able to pick up the command bean referenced by form:form in the calling JSP page.&lt;/p&gt;

&lt;p&gt;Glen&lt;/p&gt;</comment>
                            <comment id="18479" author="gmazza" created="Sun, 9 Jul 2006 10:33:58 +0000"  >&lt;p&gt;Yes, (2) above is the problem (although my suggested solution is apparently wrong.)  Placing the commandBean in the page scope makes it inaccessible to the tag file.&lt;/p&gt;

&lt;p&gt;From &quot;Beginning Java Server Pages&quot; (Vivek Chopra et al, Wrox Books), Chapter 11, Developing Tag Files:  &quot;JSP files and the tag files they invoke share the application, session, and request scopes, while each has their own page scope. In an encapsulation sense, application, session, and request scopes provide global variables, common to both the tag and the JSP file, and the page scope provides only local variables to each. The page scope variables of the JSP page cannot be used inside the tag file, and vice versa.&quot;&lt;/p&gt;

&lt;p&gt;Glen&lt;/p&gt;</comment>
                            <comment id="18488" author="robh" created="Mon, 10 Jul 2006 01:55:30 +0000"  >&lt;p&gt;Thanks for looking into this so deeply. As you say, the problem lies in the fact that PageContext variables are directly accessible in the tag file, with a tag gettings its own PageContext. I&apos;m going to have a little play around with this, but I&apos;ll probably just switch to using request scope so that tag files can be used transparently.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="18493" author="gmazza" created="Mon, 10 Jul 2006 03:39:26 +0000"  >&lt;p&gt;Hopefully the solution can be as relatively simple as that.  If not, Tim Fennell&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; had mentioned a more complex solution that the Stripes&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; product (which he appears to be affiliated with) employed.&lt;/p&gt;

&lt;p&gt;Glen&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://www.jroller.com/page/gmazza?entry=spring_2_0_form_tags&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jroller.com/page/gmazza?entry=spring_2_0_form_tags&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://mc4j.org/confluence/display/stripes/Tag+Library+Doc&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://mc4j.org/confluence/display/stripes/Tag+Library+Doc&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="18622" author="robh" created="Mon, 17 Jul 2006 02:04:50 +0000"  >&lt;p&gt;Douglas,&lt;/p&gt;

&lt;p&gt;All context is now stored in the REQUEST_SCOPE.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="18935" author="dsurber" created="Mon, 7 Aug 2006 11:47:28 +0000"  >&lt;p&gt;Verified as working. Thanks.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11787" name="WrapperTag.java" size="3394" author="gmazza" created="Thu, 6 Jul 2006 07:27:34 +0000"/>
                            <attachment id="11786" name="spring-form-tld-patch.txt" size="1053" author="gmazza" created="Thu, 6 Jul 2006 07:25:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 21 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Jul 2006 04:30:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01907:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7336</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>