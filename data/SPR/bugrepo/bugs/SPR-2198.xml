<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:36:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2198/SPR-2198.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2198] @AfterThrowing: No access to the exception </title>
                <link>https://jira.spring.io/browse/SPR-2198</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;This code:&lt;/p&gt;

&lt;p&gt;@Aspect&lt;br/&gt;
public class ExceptionHandler {&lt;/p&gt;

&lt;p&gt;    private static int handled;&lt;/p&gt;

&lt;p&gt;    @AfterThrowing(pointcut=&quot;execution(* service.&lt;b&gt;.&lt;/b&gt;(..))&quot; , throwing=&quot;ex&quot;)&lt;br/&gt;
    public void handleTransactionRolledbackLocalException(&lt;br/&gt;
            TransactionRolledBackLocalException ex) &lt;/p&gt;
{
        System.out.println(&quot;Exception &quot; + ex);
    }

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;does not work with Spring AOP in Spring 2.0 RC 1. It works with AspectJ 5 and also this is documented in the Spring documentation. If you leave out the throwing it also works. There is also no Unit Test in RC 1 for this type of Advice. There is just a unit test without throwing. &lt;br/&gt;
This is my Spring configuration:&lt;/p&gt;

&lt;p&gt;&amp;lt;beans&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;myService&quot; class=&quot;service.MyService&quot;&amp;gt;&amp;lt;/bean&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;exceptionHandler&quot;&lt;br/&gt;
		class=&quot;exceptionhandling.ExceptionHandler&quot;&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean&lt;br/&gt;
		class=&quot;org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/beans&amp;gt;&lt;/p&gt;

&lt;p&gt;This is the stack trace:&lt;/p&gt;

&lt;p&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;myService&apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;beans.xml&amp;#93;&lt;/span&gt;: Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting &apos;identifier&apos; at character position 0&lt;/p&gt;

&lt;p&gt;^&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.IllegalArgumentException: Pointcut is not well-formed: expecting &apos;identifier&apos; at character position 0&lt;/p&gt;

&lt;p&gt;^&lt;/p&gt;

&lt;p&gt;	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:328)&lt;br/&gt;
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:170)&lt;br/&gt;
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:105)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:174)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:207)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:226)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:80)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:66)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:244)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:286)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:878)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:393)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:257)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:168)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:254)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:332)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:92)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:77)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.loadContextLocations(AbstractSpringContextTests.java:130)&lt;br/&gt;
	at org.springframework.test.AbstractDependencyInjectionSpringContextTests.loadContextLocations(AbstractDependencyInjectionSpringContextTests.java:224)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.getContext(AbstractSpringContextTests.java:110)&lt;br/&gt;
	at org.springframework.test.AbstractDependencyInjectionSpringContextTests.setUp(AbstractDependencyInjectionSpringContextTests.java:192)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:125)&lt;br/&gt;
	at org.springframework.test.ConditionalTestCase.runBare(ConditionalTestCase.java:69)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;
</description>
            <key id="14320">SPR-2198</key>
            <summary>@AfterThrowing: No access to the exception </summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="eberhardwolff">Eberhard Wolff</reporter>
                        <labels>
                    </labels>
                <created>Mon, 26 Jun 2006 22:05:38 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:29 +0000</updated>
                            <resolved>Tue, 11 Jul 2006 20:09:01 +0000</resolved>
                                    <version>2.0 RC1</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="18527" author="robh" created="Tue, 11 Jul 2006 20:09:01 +0000"  >&lt;p&gt;Fixed for After, AfterReturning and AfterThrowing.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 25 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 11 Jul 2006 20:09:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04utz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28369</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>