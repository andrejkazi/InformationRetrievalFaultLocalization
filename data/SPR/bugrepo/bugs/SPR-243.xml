<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:32:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-243/SPR-243.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-243] PropertyEditor not invoked when setter throws an Exception</title>
                <link>https://jira.spring.io/browse/SPR-243</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;It appears that if an exception is thrown by a property setter method on a command bean, the value that was being set is not converted using  a property editor before being being re-bound to the model.&lt;/p&gt;

&lt;p&gt;To illustrate, we had the following code:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;A Form object with a property of type Foo&lt;/li&gt;
	&lt;li&gt;A property editor FooPropertyEditor that converted Long values into instances of Foo&lt;/li&gt;
	&lt;li&gt;A select box on a jsp that displayed a list of Foo instances to select from.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The option values corresponded to a Long id property on Foo (retrieved using $&lt;/p&gt;
{foo.id}
&lt;p&gt;), and were compared with the value of the property on Form using the spring:bind tag to determine which was selected (ie $&lt;/p&gt;
{status.value == foo.id}
&lt;p&gt;).&lt;/p&gt;

&lt;p&gt;This is all pretty standard so far.&lt;/p&gt;

&lt;p&gt;However, a bug in our code threw up a what looks like a bug in Spring. It appears that if a setter method throws an exception, any custom property editor for that type will not be invoked when exposing the property value in the model.&lt;/p&gt;

&lt;p&gt;What we observed was that, when our setter method threw an exception, our jsp threw the following exception:&lt;/p&gt;

&lt;p&gt;javax.servlet.ServletException: javax.servlet.jsp.JspException: Attempt to coerce a value of type &quot;Foo&quot; to type &quot;java.lang.Long&quot;&lt;/p&gt;

&lt;p&gt;It looks like, after failing to set the selected Foo on our form object (because setFoo threw an exception), Foo iself was bound to the model, rather than the result of FooPropertyEditor.getAsText().&lt;/p&gt;</description>
            <key id="10446">SPR-243</key>
            <summary>PropertyEditor not invoked when setter throws an Exception</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="dhewitt">David Hewitt</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Aug 2004 21:35:25 +0000</created>
                <updated>Tue, 10 Aug 2004 08:48:06 +0000</updated>
                            <resolved>Tue, 10 Aug 2004 08:48:06 +0000</resolved>
                                    <version>1.1 RC1</version>
                                    <fixVersion>1.1 RC2</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10727" author="juergen.hoeller" created="Tue, 3 Aug 2004 22:40:22 +0000"  >&lt;p&gt;I suspect that this is caused by a basic mechanism that&apos;s by design: If binding of a value to a property fails, the rejected value will be exposed as field value - not using a registered editor&apos;s getAsText.&lt;/p&gt;

&lt;p&gt;The target use case for this is for example:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;a property of type java.util.Date&lt;/li&gt;
	&lt;li&gt;to be populated with a String value coming from an HTML form&lt;/li&gt;
	&lt;li&gt;an editor applies, trying to convert the String to a Date&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If conversion fails, the form will show the rejected String value (to allow for easy reediting) rather than getAsText for the previous value of the Date property. This is usually preferable, for example if the user just messed up a single character in the date string.&lt;/p&gt;

&lt;p&gt;So it seems that what you&apos;re experiencing is the same, just for your id-to-Foo conversion. If the setter fails, the rejected value - which is the erroneous id - will be exposed as field value. You seem to be expect getAsText for the previous Foo value, though.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="10728" author="dhewitt" created="Tue, 3 Aug 2004 23:35:41 +0000"  >&lt;p&gt;Juergen,&lt;/p&gt;

&lt;p&gt;&amp;gt;If conversion fails, the form will show the rejected String value &lt;br/&gt;
&amp;gt;(to allow for easy reediting)&lt;/p&gt;

&lt;p&gt;That is what I would expect, but it is not &lt;b&gt;conversion&lt;/b&gt; that is failing - it is setting the property after it has been converted. And in that instance, it seems the actual value is bound, rather than the text that was submitted.&lt;/p&gt;

&lt;p&gt;We are using the custom property editor to pick and instance, by its id, from a pre-defined list of instances. Consider the following JSP to build a select box, with the current value of command.foo pre-selected:&lt;/p&gt;

&lt;p&gt;&amp;lt;spring:bind path=&quot;command.foo&quot;&amp;gt;&lt;br/&gt;
 &amp;lt;select name=&quot;foo&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;c:forEach items=&quot;$&lt;/p&gt;
{entries}
&lt;p&gt;&quot; var=&quot;entry&quot;&amp;gt;&lt;br/&gt;
   &amp;lt;option value=&quot;$&lt;/p&gt;
{entry.id}
&lt;p&gt;&quot; &lt;br/&gt;
    &amp;lt;c:if test=&quot;$&lt;/p&gt;
{status.value == entry.id}
&lt;p&gt;&quot;&amp;gt;selected&amp;lt;/c:if&amp;gt;&lt;br/&gt;
   &amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;c:out value=&quot;$&lt;/p&gt;
{entry.name}
&lt;p&gt;&quot;/&amp;gt;&lt;br/&gt;
   &amp;lt;/option&amp;gt;&lt;br/&gt;
  &amp;lt;/c:forEach&amp;gt;  &lt;br/&gt;
 &amp;lt;/select&amp;gt;&lt;br/&gt;
&amp;lt;/spring:bind&amp;gt;&lt;/p&gt;

&lt;p&gt;The issue is that generally, the value of status.value will be the introspected id of the instance of Foo - the FooPropertyEditor will convert a string id to and from an actual instance, and it is the id that is bound in the model. However, if setFoo() throws an exception during the binding process, the actual instance is bound in the model, rather than a string representing its id. Therefore, status.value, in this case, will return an instance of Foo, rather than a string representing its id - and you get a nasty exception if you try and coerce it to a long value as we are doing above. So the above JSP works sometimes and fails sometimes, which surely can&apos;t be right.&lt;/p&gt;



</comment>
                            <comment id="10730" author="dhewitt" created="Wed, 4 Aug 2004 10:01:28 +0000"  >&lt;p&gt;Having looked around the code a little, I see where in BindException.getFieldValue(String field) you check to see if there is a FieldError and explicitly don&apos;t use PropertyEditors to unwrap any value. Judging by your earlier comment, this seems to assume that in the event of a TypeMismatchException or similar, the FieldError.getRejectedValue() will be the originally submitted text.&lt;/p&gt;

&lt;p&gt;Having looked at BeanWrapperImpl, if the PropertyEditor throws an IllegalArgumentException in setAsText (line 828 in the 1.0.2 source), then the TypeMismatchException will include the original text value.&lt;/p&gt;

&lt;p&gt;However, if an InvocationTargetException is thrown (line 649) after the value has been converted (line 637), then the resulting TypeMismatchException or MethodInvocationException will include the &lt;b&gt;converted&lt;/b&gt; value, and not the original text, which leads to inconsistent behaviour on the page - you don&apos;t get the original text back, which I believe was the intent.&lt;/p&gt;</comment>
                            <comment id="10755" author="juergen.hoeller" created="Tue, 10 Aug 2004 08:48:06 +0000"  >&lt;p&gt;You&apos;re right: If a setter throws an exception, BeanWrapperImpl should create a PropertyChangeEvent with the original value as &quot;newValue&quot;, rather than a potentially converted one. I&apos;ve just fixed this and added a corresponding test case.&lt;/p&gt;

&lt;p&gt;If you have the chance, you can give a CVS snapshot a try and see whether that actually solves your issue!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 21 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Aug 2004 22:40:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01b87:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7696</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>