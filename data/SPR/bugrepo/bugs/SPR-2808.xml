<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:53:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2808/SPR-2808.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2808] EhcacheFactoryBean breaks for caches that do not extend net.sf.ehcache.Cache</title>
                <link>https://jira.spring.io/browse/SPR-2808</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Since the cache field of the EhcacheFactoryBean is of type Cache instead of the interface Ehcache, when a cache has been registered in the CacheManager that does not extend Cache the factory will fail.  Specifically, the portion of afterPropertiesSet():&lt;/p&gt;

&lt;p&gt;if (this.cacheManager.cacheExists(this.cacheName)) {&lt;br/&gt;
			if (logger.isDebugEnabled()) &lt;/p&gt;
{
				logger.debug(&quot;Using existing EHCache cache region &apos;&quot; + this.cacheName + &quot;&apos;&quot;);
 			}
&lt;p&gt;			this.cache = this.cacheManager.getCache(this.cacheName);&lt;br/&gt;
		}&lt;/p&gt;

&lt;p&gt;will throw a ClassCastException because it uses getCache() instead of getEhcache().  An excerpt from one such exception:&lt;/p&gt;

&lt;p&gt;java.lang.ClassCastException: net.sf.ehcache.constructs.blocking.SelfPopulatingCache cannot be cast to net.sf.ehcache.Cache&lt;/p&gt;

&lt;p&gt;The solution would be to refactor the EhcacheFactoryBean class to use the Ehcache interface instead.  This may require some refactoring in classes that cast the result of getBean() to Cache (to be more explicitly type safe), but it shouldn&apos;t break because the implementations wouldn&apos;t change.&lt;/p&gt;</description>
            <key id="15440">SPR-2808</key>
            <summary>EhcacheFactoryBean breaks for caches that do not extend net.sf.ehcache.Cache</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="gk5885">Gregory Kick</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Nov 2006 04:11:59 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:22 +0000</updated>
                            <resolved>Wed, 8 Nov 2006 19:37:30 +0000</resolved>
                                    <version>2.0 final</version>
                                    <fixVersion>2.0.1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="20681" author="juergen.hoeller" created="Wed, 8 Nov 2006 19:37:30 +0000"  >&lt;p&gt;Indeed, this needs to be changed to allow for decorators. I&apos;ve already fixed this yesterday in the course of my own decorator tests; to be committed in a moment.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="20682" author="juergen.hoeller" created="Wed, 8 Nov 2006 19:38:46 +0000"  >&lt;p&gt;BTW, all of this is EHCache 1.2 only, as far as I see - and we only require EHCache 1.2 in Spring 2.0. As a consequence, those support classes are not fully up to date yet...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 8 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 8 Nov 2006 19:37:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00vbr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5120</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>