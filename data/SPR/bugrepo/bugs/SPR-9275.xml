<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:19:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-9275/SPR-9275.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-9275] Cache Abstraction Exception Handling</title>
                <link>https://jira.spring.io/browse/SPR-9275</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Currently there is no explicit exception handling in the cache abstraction.  For example, when an external cache server is not available, the exceptions are just sent back to the calling class.  I propose changing the caching abstraction to catch the exception and then invoke the underlying method.&lt;/p&gt;
</description>
            <key id="42743">SPR-9275</key>
            <summary>Cache Abstraction Exception Handling</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="snicoll">St&#233;phane Nicoll</assignee>
                                    <reporter username="bonhamcm">Chris Bonham</reporter>
                        <labels>
                            <label>cache-abstraction</label>
                    </labels>
                <created>Wed, 28 Mar 2012 11:54:05 +0000</created>
                <updated>Fri, 18 Jul 2014 10:16:37 +0000</updated>
                            <resolved>Tue, 20 May 2014 08:01:34 +0000</resolved>
                                    <version>3.1.1</version>
                                    <fixVersion>4.1 RC1</fixVersion>
                                    <component>Caching</component>
                        <due></due>
                            <votes>9</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="77577" author="cbeams" created="Fri, 13 Apr 2012 01:30:07 +0000"  >&lt;p&gt;Added @Costin as a watcher.&lt;/p&gt;

&lt;p&gt;Costin, did you consider anything like this when initially working on the caching abstraction?  It does seem reasonable to at least make error behavior configurable, i.e. what to do when the cache provider is unavailable.  Options could include (a) hard failure, i.e. propagate the exception, (b) log the exception and invoke the underlying method, (c) allow optional user-provided error handling strategy.&lt;/p&gt;
</comment>
                            <comment id="78992" author="aandrulis" created="Fri, 18 May 2012 09:46:39 +0000"  >&lt;p&gt;Hi Chris,&lt;br/&gt;
I would be glad to see this coming trough, is it possible to volunteer my time to try and fix it?&lt;br/&gt;
What&apos;s the procedure for such offer?&lt;/p&gt;

&lt;p&gt;Kind regards.&lt;/p&gt;</comment>
                            <comment id="78996" author="cbeams" created="Fri, 18 May 2012 12:02:55 +0000"  >&lt;p&gt;Hi Adriano.  You&apos;re certainly welcome to take a shot at it &amp;#8211; thanks for offering!  Read and follow the &lt;a href=&quot;https://github.com/SpringSource/spring-framework/wiki/Contributor-guidelines&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;contributor guidelines&lt;/a&gt; to understand how to put together a pull request.&lt;/p&gt;

&lt;p&gt;Since this isn&apos;t just a minor bug fix, but rather an improvement involving a bit of design, I would recommend that you put together as basic an implementation as possible (along with test cases) and submit the pull request early to solicit feedback.  That way, if there&apos;s something about the approach that doesn&apos;t work, you don&apos;t put too much effort in before finding out.&lt;/p&gt;</comment>
                            <comment id="79206" author="aandrulis" created="Wed, 23 May 2012 06:02:53 +0000"  >&lt;p&gt;Thanks Chris, I will download the source and try to make the proposed design implementation as soon as possible.&lt;/p&gt;</comment>
                            <comment id="83357" author="billkoch" created="Fri, 7 Sep 2012 12:11:12 +0000"  >&lt;p&gt;Hi Chris,&lt;/p&gt;

&lt;p&gt;I took a shot at implementing a FailSafeCache that will gracefully catch Exceptions thrown by the native cache implementation and simply logs them.  &lt;a href=&quot;https://github.com/SpringSource/spring-framework/pull/138&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Pull Request #138&lt;/a&gt; has the details of my changes.  Any feedback would be greatly appreciated!&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="83833" author="billkoch" created="Tue, 25 Sep 2012 20:39:27 +0000"  >&lt;p&gt;My proposed changes only help &lt;em&gt;CacheManager&lt;/em&gt; implementations that extend the &lt;em&gt;AbstractCacheManager&lt;/em&gt;.  For those that don&apos;t, (namely the &lt;em&gt;RedisCacheManager&lt;/em&gt;, although there very well could be others), this functionality can be added by leveraging the &lt;em&gt;FailSafeCache&lt;/em&gt; wrapper that I use in the &lt;em&gt;AbstractCacheManager&lt;/em&gt;.  I&apos;d be more than happy to apply this pattern to the &lt;em&gt;RedisCacheManager&lt;/em&gt; and submit another pull request to the spring-data-redis project.&lt;/p&gt;

&lt;p&gt;Thanks again!&lt;/p&gt;</comment>
                            <comment id="89827" author="naren3110" created="Fri, 3 May 2013 08:18:05 +0000"  >&lt;p&gt;@Chris Beams&lt;/p&gt;

&lt;p&gt;Eager to know if this ticket still waiting for triage or fixed? &lt;/p&gt;</comment>
                            <comment id="101593" author="danielfariati" created="Wed, 9 Apr 2014 07:47:30 +0000"  >&lt;p&gt;Eager to know if this ticket still waiting for triage or fixed? +1&lt;/p&gt;</comment>
                            <comment id="101597" author="snicoll" created="Wed, 9 Apr 2014 08:34:32 +0000"  >&lt;p&gt;Hi everyone,&lt;/p&gt;

&lt;p&gt;This issue has not been fixed. I like how &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=cbeams&quot; class=&quot;user-hover&quot; rel=&quot;cbeams&quot;&gt;Chris Beams&lt;/a&gt; described it in its original comment which seems to isolate this change in the transparent processing of cache operation (i.e. annotated methods) rather than on the &lt;tt&gt;CacheManager&lt;/tt&gt; directly as PR 138 suggests. Wrapping the &lt;tt&gt;CacheManager&lt;/tt&gt; may be an option but I would rather go for a strategy interface that could be configured somewhere with one or more sensible implementations of it. Any input or idea you guys might have would be more than appreciated.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="103640" author="snicoll" created="Tue, 20 May 2014 08:01:34 +0000"  >&lt;p&gt;A &lt;tt&gt;CacheErrorHandler&lt;/tt&gt; strategy interface has been added and allows you to handle issues for cache-related operations. Offer callbacks for put, get, evict and clear for both Spring&apos;s and JCache&apos;s caching abstraction.&lt;/p&gt;

&lt;p&gt;The error handler can be configured using &lt;tt&gt;CachingConfigurer&lt;/tt&gt; (check &lt;tt&gt;CachingConfigurerSupport&lt;/tt&gt;) or using the &lt;tt&gt;error-handler&lt;/tt&gt; property of the &lt;tt&gt;annotation-driven&lt;/tt&gt; XML element.&lt;/p&gt;

&lt;p&gt;A default &lt;tt&gt;SimpleCacheErrorHandler&lt;/tt&gt; is provided by default that just throws back any exception as it was the case before. It is suggested to override from this class if only one or a few callbacks should be overridden.&lt;/p&gt;

&lt;p&gt;This is going to be available in the next &lt;tt&gt;4.1.0.BUILD-SNAPSHOT&lt;/tt&gt;. Give it a try and let me know if you have comments to improve it. Thanks!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="42785">SPR-9295</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="56324">SPR-11540</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        2 years, 31 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 13 Apr 2012 01:30:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>snicoll</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05h5z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31987</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>