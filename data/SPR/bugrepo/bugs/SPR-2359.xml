<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:42:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2359/SPR-2359.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2359] Multi level Web App context configuration throws StackOverFlowError in debug mode</title>
                <link>https://jira.spring.io/browse/SPR-2359</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;m trying out 2.0 rc3-SNAPSHOT build 88.  I&apos;m running a webapp using Eclipse WTP.  The application works fine with RC1.  When I upgraded to the SNAPSHOT everything continues to work fine when I launch my server in non degug mode.  But when I launch my server in debug mode I get a StackOverflowError.  I know my problem sounds suspect but I can switch my version of spring from RC1 to RC3-SNAPSHOT and consistently have no error with RC1 and always get the stackoverflow error with the RC3-SNAPSHOT build 88.  Below is the stacktrace, serviceLoader.xml, and a snippet of web.xml.  All other context files are empty.  By setting a break point in the middle of the findPathMatchingResources loop I can see the resource it is trying to resolve is the &quot;classpath*:/service-context/**/*Context.xml&quot; of serviceContext.&lt;/p&gt;

&lt;p&gt;-------------------------&lt;del&gt;web.xml snippet&lt;/del&gt;-------------------&lt;br/&gt;
	&amp;lt;context-param&amp;gt;&lt;br/&gt;
		&amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;&lt;br/&gt;
		&amp;lt;param-value&amp;gt;&lt;br/&gt;
			/WEB-INF/view-context/**/*Context.xml&lt;br/&gt;
		&amp;lt;/param-value&amp;gt;&lt;br/&gt;
	&amp;lt;/context-param&amp;gt;&lt;br/&gt;
	&amp;lt;context-param&amp;gt;&lt;br/&gt;
		&amp;lt;param-name&amp;gt;locatorFactorySelector&amp;lt;/param-name&amp;gt;&lt;br/&gt;
		&amp;lt;param-value&amp;gt;&lt;br/&gt;
			classpath*:/org/lds/stack/service/serviceLoader.xml&lt;br/&gt;
		&amp;lt;/param-value&amp;gt;&lt;br/&gt;
	&amp;lt;/context-param&amp;gt;&lt;br/&gt;
	&amp;lt;context-param&amp;gt;&lt;br/&gt;
		&amp;lt;param-name&amp;gt;parentContextKey&amp;lt;/param-name&amp;gt;&lt;br/&gt;
		&amp;lt;param-value&amp;gt;serviceContext&amp;lt;/param-value&amp;gt;&lt;br/&gt;
	&amp;lt;/context-param&amp;gt;&lt;/p&gt;


&lt;p&gt;-------------&lt;del&gt;serviceLoader.xml&lt;/del&gt;-------------------------&lt;br/&gt;
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;&lt;br/&gt;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans &lt;a href=&quot;http://www.springframework.org/schema/beans/spring-beans.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/schema/beans/spring-beans.xsd&lt;/a&gt;&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- Application context for Service layer of app.  Created to help stop leaking of Web layer spring beans&lt;br/&gt;
         Into Service layer.  Should never have to modify this file.--&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;serviceContext&quot; lazy-init=&quot;true&quot;&lt;br/&gt;
          class=&quot;org.springframework.context.support.ClassPathXmlApplicationContext&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg&amp;gt;&lt;br/&gt;
            &amp;lt;list&amp;gt;&lt;br/&gt;
                &amp;lt;!-- all the XML files to include in a default application&apos;s service application Context. --&amp;gt;&lt;br/&gt;
                &amp;lt;value&amp;gt;classpath*:/service-context/**/*Context.xml&amp;lt;/value&amp;gt;&lt;br/&gt;
            &amp;lt;/list&amp;gt;&lt;br/&gt;
        &amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/beans&amp;gt;&lt;/p&gt;


&lt;p&gt;-------------------------&lt;del&gt;Stacktrace&lt;/del&gt;------------------------------&lt;br/&gt;
09:42:46,156 ERROR ContextLoader: Context initialization failed&lt;br/&gt;
org.springframework.beans.factory.access.BootstrapException: Unable to return specified BeanFactory instance: factory key &lt;span class=&quot;error&quot;&gt;&amp;#91;serviceContext&amp;#93;&lt;/span&gt;, from group with resource name &lt;span class=&quot;error&quot;&gt;&amp;#91;classpath*:/org/lds/stack/service/serviceLoader.xml&amp;#93;&lt;/span&gt;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;serviceContext&apos; defined in URL &lt;span class=&quot;error&quot;&gt;&amp;#91;jar:file:/C:/projects/Stack/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/webapps/joe/WEB-INF/lib/stack-code-2.0-SNAPSHOT.jar!/org/lds/stack/service/serviceLoader.xml&amp;#93;&lt;/span&gt;: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext&amp;#93;&lt;/span&gt;: Constructor threw exception; nested exception is java.lang.StackOverflowError&lt;br/&gt;
Caused by: &lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;serviceContext&apos; defined in URL &lt;span class=&quot;error&quot;&gt;&amp;#91;jar:file:/C:/projects/Stack/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/webapps/joe/WEB-INF/lib/stack-code-2.0-SNAPSHOT.jar!/org/lds/stack/service/serviceLoader.xml&amp;#93;&lt;/span&gt;: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext&amp;#93;&lt;/span&gt;: Constructor threw exception; nested exception is java.lang.StackOverflowError&lt;br/&gt;
Caused by: &lt;br/&gt;
org.springframework.beans.BeanInstantiationException: Could not instantiate bean class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ClassPathXmlApplicationContext&amp;#93;&lt;/span&gt;: Constructor threw exception; nested exception is java.lang.StackOverflowError&lt;br/&gt;
Caused by: &lt;br/&gt;
java.lang.StackOverflowError&lt;br/&gt;
	at java.lang.String.indexOf(String.java:1564)&lt;br/&gt;
	at java.lang.String.indexOf(String.java:1546)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.determineRootDir(PathMatchingResourcePatternResolver.java:353)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:321)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)&lt;/p&gt;

</description>
            <key id="14621">SPR-2359</key>
            <summary>Multi level Web App context configuration throws StackOverFlowError in debug mode</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="youngm">Mike Youngstrom</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Jul 2006 02:58:18 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:20 +0000</updated>
                            <resolved>Fri, 28 Jul 2006 02:04:16 +0000</resolved>
                                    <version>2.0 RC3</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="18802" author="youngm" created="Thu, 27 Jul 2006 03:05:14 +0000"  >&lt;p&gt;If I make my webapp not multilevel so it doesn&apos;t use the ClassPathXmlApplicationContext then everything works fine in debug mode too.&lt;/p&gt;</comment>
                            <comment id="18803" author="juergen.hoeller" created="Thu, 27 Jul 2006 06:30:39 +0000"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;First of all, thank for pointing this out - and thanks for the heavy testing of our recent snapshots in general!&lt;/p&gt;

&lt;p&gt;Unfortunately, I have trouble reproducing this locally. I see how that endless recursion can arise, but I can only get there with an invalid location pattern such as &quot;xx*:*&lt;b&gt;/&lt;/b&gt;.xy&quot;. I will definitely fix the latter to throw a nice exception instead. However, your case seems to use correct resource location and still get into this recursion, which I find quite puzzling...&lt;/p&gt;

&lt;p&gt;In particular, you were saying that the above only arises in &quot;debug mode&quot;. I assume you&apos;re referring to the JVM in debug mode? In any case, can you please try to reproduce this in a unit test? That should be possible with a simple ClassPathXmlApplicationContext and your location patterns, and the test VM run in debug mode...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18804" author="youngm" created="Thu, 27 Jul 2006 06:35:10 +0000"  >&lt;p&gt;I knew the &quot;debug mode&quot; thing would make it difficult. &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I&apos;ll see what kind of a test I can come up with.  Thanks for your prompt help.&lt;/p&gt;

&lt;p&gt;Mike&lt;/p&gt;</comment>
                            <comment id="18805" author="youngm" created="Thu, 27 Jul 2006 07:17:28 +0000"  >&lt;p&gt;Assuming you run eclipse try importing this project into your workspace.&lt;/p&gt;

&lt;p&gt;Setup the classpath requirements.&lt;/p&gt;

&lt;p&gt;Then right click on &quot;TestClassPathXmlApplicationContext.java&quot; and do run as-&amp;gt;JUnit Test&lt;/p&gt;

&lt;p&gt;That will succeed.  Now try Debug As-&amp;gt;JUnit Test&lt;/p&gt;

&lt;p&gt;That should give you the stack overflow error.  If you don&apos;t use eclipse I&apos;ll do some more work and get a commandline test running.&lt;/p&gt;

&lt;p&gt;Mike&lt;/p&gt;</comment>
                            <comment id="18806" author="youngm" created="Thu, 27 Jul 2006 08:46:42 +0000"  >&lt;p&gt;One other note.  If you replacing the testcase&apos;s SNAPSHOT jars with rc1 jars the test will run correctly in debug mode.  That makes me believe that it is not just an ide configuration issue or something.  But if needed I can create a commandline example to duplicate the issue.&lt;/p&gt;

&lt;p&gt;Mike&lt;/p&gt;
</comment>
                            <comment id="18820" author="juergen.hoeller" created="Fri, 28 Jul 2006 02:04:16 +0000"  >&lt;p&gt;This has to be the oddest issue I&apos;ve solved in a while...&lt;/p&gt;

&lt;p&gt;This is actually caused by a new default conversion rule in BeanWrapperImpl: If in doubt, it converts any object to a target String via a toString() call. Believe it or not, that&apos;s causing the endless loop in ClassPathXmlApplicationContext loading!!&lt;/p&gt;

&lt;p&gt;So here&apos;s the full story: You specified a &amp;lt;list&amp;gt; with a single &amp;lt;value&amp;gt; as constructor argument for your ClassPathXmlApplicationContext. This is supposed to hit the constructor variant with a String array argument, passing in an array with that single element. This actually works fine in non-debug mode, where the String array constructor is the first we analyze. &lt;/p&gt;

&lt;p&gt;However, in debug mode, Java reflection delivers the constructors in a different order, so we check the String constructor first. BeanWrapperImpl calls toString on your array - which results in the String &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;classpath*:...&amp;#93;&lt;/span&gt;&quot; (note the brackets) -, then we decide that this String is a fine match with the String constructor and pass it in there. So ClassPathXmlApplicationContext receives a single config location of value &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;classpath*:...&amp;#93;&lt;/span&gt;&quot;.&lt;/p&gt;

&lt;p&gt;Now ClassPathXmlApplicationContext passes that down to a PathMatchingResourcePatternResolver, which doesn&apos;t detect the &quot;classpath*&quot; prefix because the String actually begins with &quot;[classpath*&quot; and goes into this eternal recursion because of an invalid prefix (as I&apos;ve already suspected above).&lt;/p&gt;

&lt;p&gt;AAARGH! &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;OK, so the fix is the following: I&apos;ve simply dropped this new default toString conversion rule from BeanWrapperImpl completely, because it&apos;s too likely to cause side effects. Additionally, I&apos;ve added an explicit check for an invalid prefix to PathMatchingResourcePatternResolver, to prevent any such recursion there.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18821" author="youngm" created="Fri, 28 Jul 2006 02:10:30 +0000"  >&lt;p&gt;Thanks tons Juergen. &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I&apos;ll try the new nightly on Monday and let you know if I find anything else.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11843" name="TestClassPathXmlApplicationContext.zip" size="3391" author="youngm" created="Thu, 27 Jul 2006 07:17:28 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 22 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 Jul 2006 06:30:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i010h3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5954</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>