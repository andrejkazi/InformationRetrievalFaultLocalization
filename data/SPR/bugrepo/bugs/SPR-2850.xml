<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:22:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2850/SPR-2850.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2850] Upgrade to Quartz 1.6.1 (for trigger persistence with SimpleTriggerBean and CronTriggerBean)</title>
                <link>https://jira.spring.io/browse/SPR-2850</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Similar to &lt;a href=&quot;https://jira.spring.io/browse/SPR-2883&quot; title=&quot;TransactionSynchronizationUtils.triggerBeforeCompletion() is swallowing IllegalStateException&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2883&quot;&gt;&lt;del&gt;SPR-2883&lt;/del&gt;&lt;/a&gt;, a change in the Quartz 1.6 API has made some of the nice Spring-related features incompatible with that release. Namely, the changes related to the following issue have made SimpleTriggerBean and CronTriggerBean useless with Quartz 1.6&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jira.opensymphony.com/browse/QUARTZ-417&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.opensymphony.com/browse/QUARTZ-417&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This change resulted in org.quartz.impl.jdbcjobstore.JobStoreSupport#storeTrigger using &apos;==&apos; rather than instanceof to determine if the trigger is a SimpleTrigger or CronTrigger. Ostensibly, this is  to allow custom triggers to extend either of these classes, but it prevents Spring from providing extended configuration functionality through subclassing. Personally, I think a better solution on Quartz&apos;s part would have been to introduce a marker interface like CustomTrigger, but I&apos;m not sure how receptive the Quartz team will be to change this yet again to accomodate Spring code.&lt;/p&gt;

&lt;p&gt;My workaround has been to turn SimpleTriggerBean and CronTriggerBean into FactoryBeans. This is much clunkier, as it requires a lot more copying of data, but it gets the job done and is backwards-compatible.&lt;/p&gt;</description>
            <key id="15521">SPR-2850</key>
            <summary>Upgrade to Quartz 1.6.1 (for trigger persistence with SimpleTriggerBean and CronTriggerBean)</summary>
                <type id="3" iconUrl="https://jira.spring.io/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="shaug">Scott Haug</reporter>
                        <labels>
                    </labels>
                <created>Sat, 18 Nov 2006 10:59:34 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:27 +0000</updated>
                            <resolved>Wed, 7 May 2008 10:11:32 +0000</resolved>
                                    <version>2.0 final</version>
                                    <fixVersion>2.5.5</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>19</votes>
                                    <watches>22</watches>
                                                                <comments>
                            <comment id="20961" author="shaug" created="Sat, 18 Nov 2006 11:00:23 +0000"  >&lt;p&gt;Oops, I meant &lt;a href=&quot;https://jira.spring.io/browse/SPR-2833&quot; title=&quot;LocalTaskExecutorThreadPool for Quartz not compatible with Quartz 1.6&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2833&quot;&gt;&lt;del&gt;SPR-2833&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="21876" author="juergen.hoeller" created="Mon, 22 Jan 2007 21:23:14 +0000"  >&lt;p&gt;The Quartz guys certainly effectively made a non-backwards-compatible change in Quartz 1.6 there... Any subclasses of SimpleTrigger and CronTrigger will now not get persisted anymore, although they were before! So a simple solution would to stick with Quartz 1.5.2 for the time being, if you rely on trigger persistence.&lt;/p&gt;

&lt;p&gt;The FactoryBean approach could indeed provide a solution... However, the problem there is not so much the copying of all SimpleTrigger/CronTrigger properties (which is ugly enough), but the ongoing maintenance: For any new properties that Quartz adds, we&apos;d have to modify our corresponding FactoryBeans as well... And if we provided such FactoryBeans at all, they&apos;d have to be separate classes. Else we&apos;d break backwards compatibility for programmatic usage of our present SimpleTriggerBean and CronTriggerBean classes.&lt;/p&gt;

&lt;p&gt;I&apos;ll leave this issue open for Spring 2.0.4. In the meantime, we&apos;ll try to talk to the Quartz team and see what we can come up with. One possible solution would be for Quartz to add those bean convenience methods to the standard SimpleTrigger/CronTrigger classes. Another solution would be for Quartz to provide copy constructors in SimpleTrigger/CronTrigger, which would allow us to build FactoryBeans that inherit all the properties from SimpleTrigger/CronTrigger, and then build equivalent &lt;b&gt;plain&lt;/b&gt; SimpleTrigger/CronTrigger instances in their &quot;getObject()&quot; method.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21950" author="pledge" created="Mon, 29 Jan 2007 02:46:45 +0000"  >&lt;p&gt;This issue seems to also prevent the storing of application contexts into the scheduler context.  The following exceptions is received.&lt;/p&gt;

&lt;p&gt;org.springframework.beans.factory.BeanCreationException: &lt;/p&gt;

&lt;p&gt;Error creating bean with name &apos;schedulerFactory&apos; defined in class path&lt;br/&gt;
resource &lt;span class=&quot;error&quot;&gt;&amp;#91;spring-job.xml&amp;#93;&lt;/span&gt;: Invocation of init method failed; nested exception&lt;br/&gt;
is org.quartz.JobPersistenceException: Couldn&apos;t store trigger: org.springframework.web.context.support.XmlWebApplicationContext [See&lt;br/&gt;
nested exception: java.io.NotSerializableException: org.springframework.web.context.support.XmlWebApplicationContext]&lt;br/&gt;
Caused by: &lt;br/&gt;
org.quartz.JobPersistenceException: Couldn&apos;t store trigger: &lt;br/&gt;
org.springframework.web.context.support.XmlWebApplicationContext [See &lt;br/&gt;
nested exception: java.io.NotSerializableException: &lt;br/&gt;
org.springframework.web.context.support.XmlWebApplicationContext]&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://forum.springframework.org/showthread.php?t=34209&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?t=34209&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="24849" author="dmag" created="Tue, 17 Jul 2007 17:07:47 +0000"  >&lt;p&gt;Still I got this issue with 2.1 milestone builds&lt;/p&gt;

&lt;p&gt;&amp;lt;error type=&quot;org.springframework.beans.factory.BeanCreationException&quot; message=&quot;Error creating bean with name &amp;apos;scheduler&amp;apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;config/test-scheduler-service.xml&amp;#93;&lt;/span&gt;: Invocation of init method failed; nested exception is org.quartz.JobPersistenceException: Couldn&amp;apos;t store trigger: org.springframework.context.support.ClassPathXmlApplicationContext &lt;span class=&quot;error&quot;&gt;&amp;#91;See nested exception: java.io.NotSerializableException: org.springframework.context.support.ClassPathXmlApplicationContext&amp;#93;&lt;/span&gt;&quot;&amp;gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;apos;scheduler&amp;apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;config/test-scheduler-service.xml&amp;#93;&lt;/span&gt;: Invocation of init method failed; nested exception is org.quartz.JobPersistenceException: Couldn&amp;apos;t store trigger: org.springframework.context.support.ClassPathXmlApplicationContext &lt;span class=&quot;error&quot;&gt;&amp;#91;See nested exception: java.io.NotSerializableException: org.springframework.context.support.ClassPathXmlApplicationContext&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1174)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:425)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:251)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:156)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:248)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:160)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:284)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;amp;init&amp;amp;(ClassPathXmlApplicationContext.java:91)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;amp;init&amp;amp;(ClassPathXmlApplicationContext.java:75)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;amp;init&amp;amp;(ClassPathXmlApplicationContext.java:65)&lt;/p&gt;</comment>
                            <comment id="24852" author="juergen.hoeller" created="Tue, 17 Jul 2007 20:09:44 +0000"  >&lt;p&gt;Note that this issue has not been marked as &apos;resolved&apos; yet, hence this issue will appear with any Spring release - even 2.1 milestones.&lt;/p&gt;

&lt;p&gt;As I pointed out above, you could use Quartz 1.5.2 in the meantime, where trigger persistence is going to work even with the Spring-provided trigger bean classes.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="25826" author="htboehm" created="Thu, 30 Aug 2007 00:17:29 +0000"  >&lt;p&gt;If you use Quartz with CMT (to run with a database), the JobDetailBean can&apos;t be stored &lt;br/&gt;
because of the ApplicationContext.&lt;/p&gt;

&lt;p&gt;Solution or a first workaround: Mark the ApplicationContext  as transient.&lt;/p&gt;

&lt;p&gt;private transient ApplicationContext applicationContext;&lt;/p&gt;

&lt;p&gt;Henric&lt;/p&gt;</comment>
                            <comment id="26787" author="juergen.hoeller" created="Sun, 7 Oct 2007 23:09:15 +0000"  >&lt;p&gt;Related issues in the Quartz project, indicating that this problem will be addressed within Quartz:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jira.opensymphony.com/browse/QUARTZ-417&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.opensymphony.com/browse/QUARTZ-417&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://jira.opensymphony.com/browse/QUARTZ-600&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.opensymphony.com/browse/QUARTZ-600&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="28102" author="bayard" created="Thu, 29 Nov 2007 17:34:31 +0000"  >&lt;p&gt;QUARTZ-600 has now been closed as fixed. Once 1.6.1 is released, and Spring has upgraded to it, we believe the problem will go away.&lt;/p&gt;

&lt;p&gt;Any testing on the Spring side with the latest trunk from Quartz would be greatly appreciated.&lt;/p&gt;</comment>
                            <comment id="28701" author="juergen.hoeller" created="Sun, 30 Dec 2007 03:38:13 +0000"  >&lt;p&gt;Thanks for the update, Henri!&lt;/p&gt;

&lt;p&gt;Is there a binary Quartz 1.6.1 snapshot available somewhere? That would be great for Spring users to test...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="29105" author="kakoni" created="Thu, 17 Jan 2008 00:22:26 +0000"  >&lt;p&gt;Hi Juergen! I&apos;ve just tested this with latest quartz svn snapshot and it worked nicely.&lt;/p&gt;</comment>
                            <comment id="32869" author="juergen.hoeller" created="Wed, 5 Mar 2008 11:12:53 +0000"  >&lt;p&gt;Moving this to 2.5.4, since there probably won&apos;t be a Quartz 1.6.1 release by the end of March.&lt;/p&gt;

&lt;p&gt;I&apos;m keeping this issue open to track availability of Quartz 1.6.1 only - for inclusion in the Spring distribution.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="35476" author="juergen.hoeller" created="Wed, 7 May 2008 10:11:32 +0000"  >&lt;p&gt;Finally closing this from Spring&apos;s side, since Quartz 1.6.1 RC1 is available now (to be shipped with Spring 2.5.5).&lt;/p&gt;

&lt;p&gt;Quartz 1.6.1 support unfortunately required a compatibility breakage for a specific feature: SchedulerFactoryBean&apos;s &quot;jobSchedulingDataLocation&quot; feature requires Quartz 1.6.1 as of Spring 2.5.5 now, since the Quartz JobSchedulingDataProcessor changed its constructor in a way that makes it impossible to support both Quartz 1.6.0 and 1.6.1 (even with the use of reflection). Since &quot;jobSchedulingDataLocation&quot; is not really a mainstream feature in Spring&apos;s Quartz support, this should hopefully be acceptable.&lt;/p&gt;

&lt;p&gt;In all other respects, Spring&apos;s Quartz support remains compatible with Quartz 1.5.x as well.&lt;/p&gt;

&lt;p&gt;This should be available in tonight&apos;s 2.5.5 snapshot already (&lt;a href=&quot;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&lt;/a&gt;). Please give it a try, in particular with respect to the trigger persistence problem...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="15845">SPR-3019</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="15563">SPR-2877</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        8 years, 34 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 22 Jan 2007 21:23:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i041n3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23640</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>