<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:16:44 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1168/SPR-1168.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1168] InputStreamResource - lines 65-67 does not correspond to the API</title>
                <link>https://jira.spring.io/browse/SPR-1168</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;InputStreamResource - lines 65-67:&lt;br/&gt;
	public boolean isOpen() &lt;/p&gt;
{
		return true;
	}

&lt;p&gt;According to the API for this class:&lt;br/&gt;
boolean isOpen() &lt;br/&gt;
          This implementations always returns false.&lt;/p&gt;


&lt;p&gt;Initial problem that lead to this discovery: ((Resource) inputStreamSource).isOpen() on line 843 of MimeMessageHelper.java returns true and it leads to the IllegalArgumentException&lt;/p&gt;

&lt;p&gt;Request: It would be nice to have a helper method that can constract a Resource out of an Object in memory not just off URL, file, classpath:file. That would be very usefull for sending an attachments that do not come of urls.&lt;/p&gt;</description>
            <key id="12050">SPR-1168</key>
            <summary>InputStreamResource - lines 65-67 does not correspond to the API</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="vkolosov">Victor Kolosov</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Jul 2005 12:55:16 +0000</created>
                <updated>Fri, 11 Oct 2013 04:52:01 +0000</updated>
                            <resolved>Sun, 24 Jul 2005 03:57:47 +0000</resolved>
                                    <version>1.2.2</version>
                                    <fixVersion>1.2.3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="14066" author="juergen.hoeller" created="Sun, 24 Jul 2005 03:57:47 +0000"  >&lt;p&gt;Thanks for pointing this out. I&apos;ve fixed InputStreamResource&apos;s javadoc accordingly (not using the javadoc inherited from AbstractResource there) and also added a ByteArrayResource adapter that implements the Resource interface for a given byte array.&lt;/p&gt;

&lt;p&gt;The problem with JavaMail attachments is that JavaMail insists on reading the given data multiple times (once for the header, once for the content). For that reason, you can&apos;t simply pass a given InputStream to it - an InputStream can only be read once.&lt;/p&gt;

&lt;p&gt;That&apos;s also why a Spring InputStreamResource is not appropriate for JavaMail attachments created through MimeMessageHelper. You either need to create an InputStreamSource implementation yourself, for example as anonymous inner class that creates a new ByteArrayInputStream each time, or pass in a Resource implementation that creates a new InputStream for every &quot;getInputStream()&quot; call (ByteArrayResource is now available for that as one option).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="94410" author="rajesh.bachani" created="Fri, 11 Oct 2013 04:52:01 +0000"  >&lt;p&gt;Hi Juergen &lt;/p&gt;

&lt;p&gt;Why do we then have the interface in MimeMessageHelper to add attachments by passing in an InputStreamResource object? &lt;/p&gt;

&lt;p&gt;If the method is not usable, then shouldn&apos;t it just not exist? &lt;/p&gt;

&lt;p&gt;It&apos;s confusing, because we spent like some time to integrate against that method, and now it turns out it cannot be used, unless we spend more time to develop a custom implementation of Resource.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Rajesh. &lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        3 years, 10 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 24 Jul 2005 03:57:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>rajesh.bachani</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04wjb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28645</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>