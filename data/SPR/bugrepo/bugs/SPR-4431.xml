<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:11:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-4431/SPR-4431.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-4431] Support @autowiring of Loggers</title>
                <link>https://jira.spring.io/browse/SPR-4431</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;It occurred to me that a neat application of autowiring would be the ability to autowire logger objects.  &lt;/p&gt;

&lt;p&gt;Say a class declares something like:&lt;/p&gt;

&lt;p&gt;private @Autowired Log logger;&lt;/p&gt;

&lt;p&gt;where Log is from commons-logging.  Spring would then generate a Log object for the declaring class and then inject it.&lt;/p&gt;

&lt;p&gt;I don&apos;t think this can be done using the existing resolveResolvableDependency mechanism, since information about the dependent class isn&apos;t made available in order to create the Log.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</description>
            <key id="20492">SPR-4431</key>
            <summary>Support @autowiring of Loggers</summary>
                <type id="2" iconUrl="https://jira.spring.io/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="skaffman">Kenny MacLeod</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Feb 2008 22:59:51 +0000</created>
                <updated>Tue, 22 Sep 2015 18:55:04 +0000</updated>
                            <resolved>Tue, 22 Sep 2015 18:55:04 +0000</resolved>
                                                                    <component>Core</component>
                        <due></due>
                            <votes>11</votes>
                                    <watches>14</watches>
                                                                <comments>
                            <comment id="40883" author="paulg" created="Tue, 4 Nov 2008 21:26:15 +0000"  >&lt;p&gt;Can we add support for SL4J instead or as well as commons logging?&lt;br/&gt;
IMHO SL4J is a better solution for providing a common logging API and is gaining community adoption across main large OS projects.&lt;/p&gt;</comment>
                            <comment id="68777" author="jonfre" created="Wed, 27 Jul 2011 12:23:26 +0000"  >&lt;p&gt;JBoss Seam has a &lt;tt&gt;@Logger&lt;/tt&gt; annotation that does just this, and it&apos;s &lt;b&gt;&lt;em&gt;incredibly&lt;/em&gt;&lt;/b&gt; handy. I was surprised this kind of thing wasn&apos;t already in Spring, what with logging being so ubiquitous.&lt;/p&gt;

&lt;p&gt;I also agree with Paul Grove above: if/when this is added, please at least support &lt;a href=&quot;http://www.slf4j.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;SLF4J&lt;/a&gt; (if not outright replace commons with it). SLF4J (along with &lt;a href=&quot;http://logback.qos.ch/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;logback&lt;/a&gt;) is basically the new replacement for log4j... the creator of log4j is the same guy that created SLF4J and logback.&lt;/p&gt;</comment>
                            <comment id="83004" author="sinuhe" created="Wed, 29 Aug 2012 02:42:52 +0000"  >&lt;p&gt;Project Lombok has some similar annotations: &lt;a href=&quot;http://projectlombok.org/features/Log.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://projectlombok.org/features/Log.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An &quot;invisible&quot; log field is created at compile time. The advantage is it works for all objects (not only Spring beans).&lt;/p&gt;</comment>
                            <comment id="83044" author="gs1983" created="Thu, 30 Aug 2012 02:55:21 +0000"  >&lt;p&gt;I&apos;ve created BeanPostProcessor that injects slf4j logger into beans. See files attached.&lt;/p&gt;</comment>
                            <comment id="83493" author="chrisshayan" created="Wed, 12 Sep 2012 00:10:44 +0000"  >&lt;p&gt;Hi&lt;/p&gt;

&lt;p&gt;But if the scope is prototype then it will keep instantiate the logger which in case of lof4j i think is not necessary. Am I wrong or what? Please advice.&lt;/p&gt;</comment>
                            <comment id="83509" author="gs1983" created="Wed, 12 Sep 2012 07:04:56 +0000"  >&lt;p&gt;See this &lt;a href=&quot;http://www.slf4j.org/faq.html#declared_static&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;link&lt;/a&gt;. Since logger is injected at bean creation should be no difference to declare loggers as instance variables instead of static one.&lt;/p&gt;</comment>
                            <comment id="83511" author="slowman" created="Wed, 12 Sep 2012 07:51:09 +0000"  >&lt;p&gt;I don&apos;t like idea of a special annotation. This way I could end up with plenty annotations. Just consider for example private static final NLSBundle NLS = NLSBundle.of(ClassName.class). I created instead pluggable IAutowireCandidateFactory, see the code example, please. It just works with standard AutowiredAnnotationBeanPostProcessor.&lt;/p&gt;</comment>
                            <comment id="119907" author="juergen.hoeller" created="Tue, 22 Sep 2015 18:55:04 +0000"  >&lt;p&gt;Closing groups of outdated issues. Please reopen if still relevant.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="20494">SPR-4432</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="20489" name="IAutowireCandidateFactory.java" size="241" author="slowman" created="Wed, 12 Sep 2012 07:51:09 +0000"/>
                            <attachment id="20393" name="Log.java" size="566" author="gs1983" created="Thu, 30 Aug 2012 02:55:21 +0000"/>
                            <attachment id="20394" name="LogPostProcessor.java" size="1334" author="gs1983" created="Thu, 30 Aug 2012 02:55:21 +0000"/>
                            <attachment id="20490" name="LoggerAutowireFactory.java" size="1161" author="slowman" created="Wed, 12 Sep 2012 07:51:09 +0000"/>
                            <attachment id="20491" name="PluggableAutowireCandidateResolver.java" size="2145" author="slowman" created="Wed, 12 Sep 2012 07:51:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        1 year, 13 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 4 Nov 2008 21:26:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>juergen.hoeller</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00h8v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2839</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>