<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:29:37 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2469/SPR-2469.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2469] prototype scope bean doesn&apos;t take util:constant for property value</title>
                <link>https://jira.spring.io/browse/SPR-2469</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I have:&lt;br/&gt;
&amp;lt;bean id=&quot;fooController&quot; class=&quot;com.digizen.bar.FooController&quot; scope=&quot;prototype&quot;&amp;gt;&lt;br/&gt;
  &amp;lt;property name=&quot;resultListSessionKey&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;util:constant static-field=&quot;com.digizen.bar.ISessionKeys.RESULT_IDS&quot; /&amp;gt;&lt;br/&gt;
  &amp;lt;/property&amp;gt;&lt;br/&gt;
&amp;lt;/bean&amp;gt;&lt;br/&gt;
which causes an exception:&lt;br/&gt;
org.springframework.beans.factory.BeanDefinitionStoreException: Inner bean definition &apos;(inner bean)&apos; for bean property &apos;resultListSessionKey&apos; has scope &apos;singleton&apos; but co&lt;br/&gt;
ntaining bean definition &apos;fooController&apos; does not. Mark the inner bean definition with scope &apos;prototype&apos; instead.&lt;/p&gt;

&lt;p&gt;On the other hand, if I replace scope=&quot;prototype&quot; with singleton=&quot;false&quot;, it works fine.&lt;/p&gt;</description>
            <key id="14819">SPR-2469</key>
            <summary>prototype scope bean doesn&apos;t take util:constant for property value</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="manifoldronin">Jing Xue</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Aug 2006 14:06:22 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:14 +0000</updated>
                            <resolved>Wed, 30 Aug 2006 00:45:27 +0000</resolved>
                                    <version>2.0 RC3</version>
                                    <fixVersion>2.0 RC4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="19187" author="manifoldronin" created="Wed, 23 Aug 2006 14:13:40 +0000"  >&lt;p&gt;Actually scrap the last sentence above - singleton=&quot;false&quot; doesn&apos;t work either.  It must be something new in RC3.  I upgraded from RC1 to RC3 though, so don&apos;t know if this broke in RC2.&lt;/p&gt;</comment>
                            <comment id="19215" author="youngm" created="Fri, 25 Aug 2006 09:33:06 +0000"  >&lt;p&gt;I am experiencing the same error with a custom FactoryBean.  It appears that for some reason the &quot;singleton&quot; property of FactoryBeans are being ignored when BeanDefinitionValueResolver checks if it is a singleton.  I&apos;d recommend bumping priority up to critical.&lt;/p&gt;

&lt;p&gt;Config:&lt;br/&gt;
	&amp;lt;bean id=&quot;petSearchResourceBundle&quot; class=&quot;java.util.ResourceBundle&quot; factory-method=&quot;getBundle&quot; scope=&quot;request&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;constructor-arg index=&quot;0&quot; value=&quot;test&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;constructor-arg index=&quot;1&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;bean class=&quot;TestFactoryBean&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;Custom FactoryBean: &lt;br/&gt;
public class TestFactoryBean extends AbstractFactoryBean {&lt;/p&gt;

&lt;p&gt;	public TestFactoryBean() &lt;/p&gt;
{
		setSingleton(false);
	}

&lt;p&gt;	@Override&lt;br/&gt;
	protected Object createInstance() &lt;/p&gt;
{
	        return Locale.ENGLISH;
	}

&lt;p&gt;	@Override&lt;br/&gt;
	public Class getObjectType() &lt;/p&gt;
{
                return Locale.class;
	}
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Stacktrace:&lt;br/&gt;
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;petSearchResourceBundle&apos; defined in ServletContext resource &lt;span class=&quot;error&quot;&gt;&amp;#91;/WEB-INF/view-context/managedBeanContext.xml&amp;#93;&lt;/span&gt;: Cannot create inner bean &apos;(inner bean)&apos; while setting constructor argument with index 1; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Inner bean definition &apos;(inner bean)&apos; for constructor argument with index 1 has scope &apos;singleton&apos; but containing bean definition &apos;petSearchResourceBundle&apos; does not. Mark the inner bean definition with scope &apos;prototype&apos; instead.&lt;br/&gt;
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Inner bean definition &apos;(inner bean)&apos; for constructor argument with index 1 has scope &apos;singleton&apos; but containing bean definition &apos;petSearchResourceBundle&apos; does not. Mark the inner bean definition with scope &apos;prototype&apos; instead.&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBeanDefinition(BeanDefinitionValueResolver.java:191)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:116)&lt;br/&gt;
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:324)&lt;br/&gt;
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:192)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:560)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:367)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:280)&lt;br/&gt;
	at org.springframework.web.context.request.AbstractRequestAttributesScope.get(AbstractRequestAttributesScope.java:43)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:276)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:155)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:246)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:128)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:850)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:624)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:411)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$2.getObject(AbstractBeanFactory.java:280)&lt;br/&gt;
	at org.springframework.web.context.request.AbstractRequestAttributesScope.get(AbstractRequestAttributesScope.java:43)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:276)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:155)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:641)&lt;br/&gt;
	at org.springframework.web.jsf.DelegatingVariableResolver.resolveVariable(DelegatingVariableResolver.java:122)&lt;br/&gt;
	at com.sun.faces.el.VariableResolverChainWrapper.getValue(VariableResolverChainWrapper.java:93)&lt;br/&gt;
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:135)&lt;br/&gt;
	at com.sun.faces.el.FacesCompositeELResolver.getValue(FacesCompositeELResolver.java:62)&lt;br/&gt;
	at com.sun.el.parser.AstIdentifier.getValue(AstIdentifier.java:65)&lt;br/&gt;
	at com.sun.el.parser.AstValue.getValue(AstValue.java:106)&lt;br/&gt;
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:192)&lt;br/&gt;
	at com.sun.facelets.el.TagValueExpression.getValue(TagValueExpression.java:71)&lt;br/&gt;
	at javax.faces.component.UIOutput.getValue(UIOutput.java:173)&lt;br/&gt;
	at com.sun.faces.renderkit.html_basic.HtmlBasicInputRenderer.getValue(HtmlBasicInputRenderer.java:100)&lt;br/&gt;
	at com.sun.faces.renderkit.html_basic.HtmlBasicRenderer.getCurrentValue(HtmlBasicRenderer.java:279)&lt;br/&gt;
	at com.sun.faces.renderkit.html_basic.HtmlBasicRenderer.encodeEnd(HtmlBasicRenderer.java:207)&lt;br/&gt;
	at javax.faces.component.UIComponentBase.encodeEnd(UIComponentBase.java:848)&lt;br/&gt;
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:893)&lt;br/&gt;
	at javax.faces.render.Renderer.encodeChildren(Renderer.java:137)&lt;br/&gt;
	at javax.faces.component.UIComponentBase.encodeChildren(UIComponentBase.java:828)&lt;br/&gt;
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:883)&lt;br/&gt;
	at javax.faces.component.UIComponent.encodeAll(UIComponent.java:889)&lt;br/&gt;
	at com.sun.facelets.FaceletViewHandler.renderView(FaceletViewHandler.java:578)&lt;br/&gt;
	at com.sun.faces.lifecycle.RenderResponsePhase.execute(RenderResponsePhase.java:133)&lt;br/&gt;
	at com.sun.faces.lifecycle.LifecycleImpl.phase(LifecycleImpl.java:244)&lt;br/&gt;
	at com.sun.faces.lifecycle.LifecycleImpl.render(LifecycleImpl.java:140)&lt;br/&gt;
	at javax.faces.webapp.FacesServlet.service(FacesServlet.java:245)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)&lt;br/&gt;
	at org.apache.myfaces.webapp.filter.ExtensionsFilter.doFilter(ExtensionsFilter.java:144)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)&lt;br/&gt;
	at org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:113)&lt;br/&gt;
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:77)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:264)&lt;br/&gt;
	at org.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:107)&lt;br/&gt;
	at org.acegisecurity.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:72)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.ui.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:110)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:125)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:81)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:217)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.ui.logout.LogoutFilter.doFilter(LogoutFilter.java:108)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:191)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:274)&lt;br/&gt;
	at org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:148)&lt;br/&gt;
	at org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:90)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)&lt;br/&gt;
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)&lt;br/&gt;
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)&lt;br/&gt;
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)&lt;br/&gt;
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:432)&lt;br/&gt;
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)&lt;br/&gt;
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)&lt;br/&gt;
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)&lt;br/&gt;
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)&lt;br/&gt;
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)&lt;br/&gt;
	at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)&lt;br/&gt;
	at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)&lt;br/&gt;
	at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)&lt;br/&gt;
	at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)&lt;br/&gt;
	at java.lang.Thread.run(Unknown Source)&lt;/p&gt;</comment>
                            <comment id="19216" author="youngm" created="Fri, 25 Aug 2006 09:39:10 +0000"  >&lt;p&gt;ok, maybe this isn&apos;t &apos;critical&apos;....you just have to mark your factory bean as a prototype.  But this should really check if the inner bean is a factory bean and use that value if it is a factoryBean.&lt;/p&gt;</comment>
                            <comment id="19289" author="juergen.hoeller" created="Wed, 30 Aug 2006 00:45:27 +0000"  >&lt;p&gt;Thanks for pointing this out! We need to use the containing bean&apos;s scope / singleton status there by default, even for custom tags in namespaces.&lt;/p&gt;

&lt;p&gt;Essentially it&apos;s defined like as follows: Inner bean definitions inherit the singleton status of their containing bean definition, unless explicitly specified. The inner bean will be a singleton if the containing bean is a singleton, and a prototype if the containing bean has any other scope. This now applies to bean definitions generated by a namespace handler as well.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 18 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 25 Aug 2006 09:33:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04ugn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28309</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>