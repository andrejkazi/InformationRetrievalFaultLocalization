<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:24:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2228/SPR-2228.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2228] org.springframework.scheduling.quartz.SchedulerFactoryBean nonTransactionalDataSource property not working</title>
                <link>https://jira.spring.io/browse/SPR-2228</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;m trying to use a Spring Quartz configuration to use a JobStoreTX job store and a Spring managed dataSource. &lt;/p&gt;

&lt;p&gt;Using the &quot;dataSource&quot; property the Scheduler job store class is automatically set to JobStoreCMT. &lt;/p&gt;

&lt;p&gt;If you use the &quot;nonTransactionalDataSource&quot; property you get the following exception:&lt;/p&gt;

&lt;p&gt;org.quartz.SchedulerConfigException: DataSource name not set.&lt;br/&gt;
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.initialize(JobStoreSupport.java:470)&lt;br/&gt;
	at org.quartz.impl.jdbcjobstore.JobStoreTX.initialize(JobStoreTX.java:70)&lt;br/&gt;
	at org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1010)&lt;br/&gt;
	at org.quartz.impl.StdSchedulerFactory.getScheduler(StdSchedulerFactory.java:1152)&lt;br/&gt;
	at org.springframework.scheduling.quartz.SchedulerFactoryBean.createScheduler(SchedulerFactoryBean.java:604)&lt;br/&gt;
	at org.springframework.scheduling.quartz.SchedulerFactoryBean.afterPropertiesSet(SchedulerFactoryBean.java:509)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1091)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:396)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:145)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:277)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:313)&lt;br/&gt;
	at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:139)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:252)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:190)&lt;br/&gt;
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:50)&lt;/p&gt;

&lt;p&gt;The only way to configure the scheduler with JobStoreTx is to set it using the quartz properties like this:&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;scheduler&quot; class=&quot;org.springframework.scheduling.quartz.SchedulerFactoryBean&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;property name=&quot;quartzProperties&quot;&amp;gt; &lt;br/&gt;
        &amp;lt;props&amp;gt; &lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.jobStore.isClustered&quot;&amp;gt;false&amp;lt;/prop&amp;gt; &lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.scheduler.instanceId&quot;&amp;gt;AUTO&amp;lt;/prop&amp;gt; &lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.jobStore.class&quot;&amp;gt;org.quartz.impl.jdbcjobstore.JobStoreTX&amp;lt;/prop&amp;gt; &lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.jobStore.tablePrefix&quot;&amp;gt;T_QRTZ_&amp;lt;/prop&amp;gt; &lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.jobStore.driverDelegateClass&quot;&amp;gt;org.quartz.impl.jdbcjobstore.oracle.OracleDelegate&amp;lt;/prop&amp;gt; &lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.jobStore.selectWithLockSQL&quot;&amp;gt;SELECT * FROM &lt;/p&gt;
{0}
&lt;p&gt;LOCKS UPDLOCK WHERE LOCK_NAME= ?&amp;lt;/prop&amp;gt;&lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.jobStore.useProperties&quot;&amp;gt;true&amp;lt;/prop&amp;gt;&lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.dataSource.whatever.jndiURL&quot;&amp;gt;jdbc/WhateverDs&amp;lt;/prop&amp;gt;&lt;br/&gt;
          &amp;lt;prop key=&quot;org.quartz.jobStore.dataSource&quot;&amp;gt;whatever&amp;lt;/prop&amp;gt;&lt;br/&gt;
        &amp;lt;/props&amp;gt; &lt;br/&gt;
      &amp;lt;/property&amp;gt; &lt;/p&gt;

&lt;p&gt;But in this case you can&apos;t use a spring managed data source.&lt;/p&gt;</description>
            <key id="14414">SPR-2228</key>
            <summary>org.springframework.scheduling.quartz.SchedulerFactoryBean nonTransactionalDataSource property not working</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="nestorjb">N&#233;stor de Jesus Bosc&#225;n Bujanda</reporter>
                        <labels>
                    </labels>
                <created>Sun, 2 Jul 2006 13:55:49 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:31 +0000</updated>
                            <resolved>Mon, 3 Jul 2006 02:20:29 +0000</resolved>
                                    <version>1.2.8</version>
                                    <fixVersion>2.0 RC2</fixVersion>
                    <fixVersion>1.2.9</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="18367" author="juergen.hoeller" created="Mon, 3 Jul 2006 02:20:29 +0000"  >&lt;p&gt;The issue there is that &quot;nonTransactionalDataSource&quot; is not supposed to be specified on its own. It&apos;s rather just an add-on to a specified &quot;dataSource&quot;. Unfortunately, this case falls through the cracks at present - there is neither an error message nor a fallback for it.&lt;/p&gt;

&lt;p&gt;So in your case, the simplest way to solve the issue is to simply specify a &quot;dataSource&quot; instead of a &quot;nonTransactionalDataSource&quot;. Note that this does not make much difference for a Spring-specified DataSource in the first place, where a single given DataSource is capable of both transactional and non-transactional execution.&lt;/p&gt;

&lt;p&gt;Nevertheless, I&apos;ve refined our Quartz SchedulerFactoryBean to use a given &quot;nonTransactionalDataSource&quot; as default DataSource if no &quot;dataSource&quot; specified. This is probably an appropriate fallback, even if the fallback is usually applied the other way round (that is, just a &quot;dataSource&quot; specified, which serves as &quot;nonTransactionalDataSource&quot; as well).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18371" author="nestorjb" created="Mon, 3 Jul 2006 06:02:56 +0000"  >&lt;p&gt;Hi Juergen&lt;/p&gt;

&lt;p&gt;The problem is that I need a Quartz Scheduler with a JobStoreTX job store class. If I use the dataSource property it will replace my configuration with a JobStoreCMT job store class. We had a lot of problems using Quartz with the JobStoreCMT job store class. Also, it is important to let developers decide which job store class they want.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 26 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 3 Jul 2006 02:20:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i046sn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24475</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>