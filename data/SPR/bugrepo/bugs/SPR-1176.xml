<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:11:14 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1176/SPR-1176.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1176] Cannot use the RecordCreator when a connector doesn&apos;t support RecordFactory creation</title>
                <link>https://jira.spring.io/browse/SPR-1176</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;It isn&apos;t possible to use the RecordCreator facility with the CciTemplate when the connector doesn&apos;t support RecordFactory creation.&lt;br/&gt;
As a matter of the fact, the createRecord method of the CciTemplate catches the NotSupportedException on getConnectionFactory().getRecordFactory(), encapsulates it in a RecordTypeNotSupportException and throws it. So the creation of the record with the RecordCreator is never done...&lt;br/&gt;
The CICS connectors work like this.&lt;/p&gt;

&lt;p&gt;The workaround is to wrap the ConnectionFactory configured for the connector by a class that allows RecordFactory creation. This created proxy is a simple implementation that returns a RecordFactory which throws exceptions on the calls of its methods.&lt;/p&gt;

&lt;p&gt;It would be interesting to integrate this feature directly in the CciTemplate. So the RecordCreator feature would be used even if the connector doesn&apos;t support RecordFactory.&lt;/p&gt;</description>
            <key id="12069">SPR-1176</key>
            <summary>Cannot use the RecordCreator when a connector doesn&apos;t support RecordFactory creation</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="templth">Thierry Templier</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 Jul 2005 22:49:29 +0000</created>
                <updated>Sun, 31 Jul 2005 23:12:48 +0000</updated>
                            <resolved>Sun, 31 Jul 2005 21:32:05 +0000</resolved>
                                                    <fixVersion>1.2.4</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="14150" author="templth" created="Sat, 30 Jul 2005 22:46:48 +0000"  >&lt;p&gt;Workaround to this issue&lt;/p&gt;</comment>
                            <comment id="14166" author="juergen.hoeller" created="Sun, 31 Jul 2005 21:32:05 +0000"  >&lt;p&gt;Thanks for pointing this out, Thierry.&lt;/p&gt;

&lt;p&gt;I&apos;ve adopted a similar solution: CciTemplate returns a new NotSupportedRecordFactory instance if the ConnectionFactory.getRecordFactory() methods throws a NotSupportedException. That check happens lazily, as the creation of a NotSupportedRecordFactory is a cheap plain object instantiation.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14169" author="templth" created="Sun, 31 Jul 2005 23:12:48 +0000"  >&lt;p&gt;Ok, Juergen, for the lazy creation of a NotSupportedRecordFactory.&lt;br/&gt;
Thanks a lot.&lt;br/&gt;
Thierry&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11001" name="proposal.zip" size="5028" author="templth" created="Sat, 30 Jul 2005 22:50:25 +0000"/>
                            <attachment id="11000" name="workaround.zip" size="1848" author="templth" created="Sat, 30 Jul 2005 22:46:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 22 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 31 Jul 2005 21:32:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01f8n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8346</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>