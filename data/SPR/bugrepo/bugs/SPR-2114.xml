<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:20:25 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2114/SPR-2114.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2114] ContainerEntityManagerFactoryBean can&apos;t find persistence.xml in war file</title>
                <link>https://jira.spring.io/browse/SPR-2114</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Putting the persistence unit (persistence.xml) into a war file as /WEB-INF/classes/META-INF/persistence.xml does not work - the persistence.xml file is not found.  Putting it in as  /META-INF/persistence.xml (in the root of the war file) works.  The spec specifies the following:&lt;br/&gt;
-------&lt;br/&gt;
A persistence unit is defined by a persistence.xml file. The jar file or directory whose META-INF &lt;br/&gt;
directory contains the persistence.xml file is termed the root of the persistence unit. In Java EE, &lt;br/&gt;
the root of a persistence unit may be one of the following: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;an EJB-JAR file&lt;/li&gt;
	&lt;li&gt;the WEB-INF/classes directory of a WAR file&lt;span class=&quot;error&quot;&gt;&amp;#91;40&amp;#93;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;a jar file in the WEB-INF/lib directory of a WAR file&lt;/li&gt;
	&lt;li&gt;a jar file in the root of the EAR&lt;/li&gt;
	&lt;li&gt;a jar file in the EAR library directory&lt;/li&gt;
	&lt;li&gt;an application client jar file&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;40&amp;#93;&lt;/span&gt; The root of the persistence unit is the WEB-INF/classes directory; the persistence.xml file is therefore contained in the &lt;br/&gt;
WEB-INF/classes/META-INF directory.&lt;br/&gt;
--------&lt;/p&gt;

&lt;p&gt;Maybe we have to search the classpath as well.&lt;/p&gt;

&lt;p&gt;Here is the stacktrace:&lt;/p&gt;

&lt;p&gt;java.lang.IllegalArgumentException: Cannot parse persistence unit from ServletContext resource &lt;span class=&quot;error&quot;&gt;&amp;#91;/META-INF/persistence.xml&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.springframework.orm.jpa.PersistenceUnitReader.readPersistenceUnitInfos(PersistenceUnitReader.java:117)&lt;br/&gt;
	at org.springframework.orm.jpa.ContainerEntityManagerFactoryBean.parsePersistenceUnitInfo(ContainerEntityManagerFactoryBean.java:223)&lt;br/&gt;
	at org.springframework.orm.jpa.ContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(ContainerEntityManagerFactoryBean.java:141)&lt;br/&gt;
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:232)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:901)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:870)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:393)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:256)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:167)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:219)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:115)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:798)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:589)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:389)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:256)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:167)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:219)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:115)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:798)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:589)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:389)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBeanDefinition(BeanDefinitionValueResolver.java:168)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:111)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:798)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:589)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:389)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:256)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:167)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:129)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.setBeanFactory(AbstractAdvisorAutoProxyCreator.java:61)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:863)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:393)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:256)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:167)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:199)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:662)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:426)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:317)&lt;br/&gt;
	at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:156)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:246)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:184)&lt;br/&gt;
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:49)&lt;br/&gt;
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3692)&lt;br/&gt;
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4127)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)&lt;br/&gt;
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:603)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:535)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:470)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1118)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:310)&lt;br/&gt;
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1020)&lt;br/&gt;
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1012)&lt;br/&gt;
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)&lt;br/&gt;
	at org.apache.catalina.core.StandardService.start(StandardService.java:450)&lt;br/&gt;
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:680)&lt;br/&gt;
	at org.apache.catalina.startup.Catalina.start(Catalina.java:536)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:275)&lt;br/&gt;
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)&lt;br/&gt;
Caused by: java.io.FileNotFoundException: Could not open ServletContext resource &lt;span class=&quot;error&quot;&gt;&amp;#91;/META-INF/persistence.xml&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.springframework.web.context.support.ServletContextResource.getInputStream(ServletContextResource.java:99)&lt;br/&gt;
	at org.springframework.orm.jpa.PersistenceUnitReader.readPersistenceUnitInfos(PersistenceUnitReader.java:106)&lt;br/&gt;
	... 65 more&lt;/p&gt;</description>
            <key id="14162">SPR-2114</key>
            <summary>ContainerEntityManagerFactoryBean can&apos;t find persistence.xml in war file</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="thomas.risberg">Thomas Risberg</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Jun 2006 08:16:42 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:49 +0000</updated>
                            <resolved>Wed, 14 Jun 2006 00:44:37 +0000</resolved>
                                    <version>2.0 M5</version>
                                    <fixVersion>2.0 RC1</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="17915" author="juergen.hoeller" created="Wed, 7 Jun 2006 08:41:10 +0000"  >&lt;p&gt;Thanks for pointing this out, Thomas. We&apos;ll probably change the default persistenceXmlLocation to &quot;classpath:META-INF/persistence.xml&quot; and also determine the persistence root URL according to the directory/jar that we found the persistence.xml file in.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="17918" author="juergen.hoeller" created="Wed, 7 Jun 2006 09:09:31 +0000"  >&lt;p&gt;Changed the default to &quot;classpath:META-INF/persistence.xml&quot; right away. This doesn&apos;t make an actual difference in a standalone environment, but it does change the default location in a web application as per the spec.&lt;/p&gt;

&lt;p&gt;Persistence root URL as exposed to the persistence provider defaults to &quot;classpath:&quot;, which should be good enough for a start. However, according to the spec, it should actually point to the class path root that the &quot;META-INF/persistence.xml&quot; file has been found in.&lt;/p&gt;

&lt;p&gt;Have you by any chance already tried loading &quot;orm.xml&quot; files that way? This seems to be the main reason why we need to pass a persistence root URL to the persistence provider in the first place...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18008" author="juergen.hoeller" created="Wed, 14 Jun 2006 00:44:37 +0000"  >&lt;p&gt;Considered as fixed for the time being. To be reopened if persistence root URL determination needs to be smarter for specific JPA providers.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 29 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 7 Jun 2006 08:41:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01eov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8257</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>