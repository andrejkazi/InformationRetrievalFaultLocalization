<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:03:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1280/SPR-1280.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1280] Aggregation of Request Parameters flawed when using MultipartResolvers</title>
                <link>https://jira.spring.io/browse/SPR-1280</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Please imagine the following setup: A resource (&quot;target&quot;) is being requested with method=&quot;POST&quot;, enctype=&quot;multipart/form-data&quot; and no request parameters. Target is including another resource (&quot;fragment&quot;), using a request parameter, e.g. by using &amp;lt;c:import url=&quot;fragment.jsp?param=value&quot;/&amp;gt;.&lt;/p&gt;

&lt;p&gt;Now, imagine the usual Spring Web setup: A multipart resolver is configured for the RequestDispatcher (CommonsMultipartResolver, but I guess the same problem applies to other multipart resolvers as well).&lt;/p&gt;

&lt;p&gt;The following is happening:&lt;/p&gt;

&lt;p&gt;The request comes in and runs into the DispatcherServlet for the first time. It runs into the Resolver, any request parameters are copied into the wrapper (but there are none yet), and the wrapper is wrapped around the request. The now-multipart request is forwarded to the view, which invokes the include of &quot;fragment&quot;.&lt;/p&gt;

&lt;p&gt;The request comes in to DispatcherServlet for the second time (actually it might be the third, I&apos;m not sure about the forward to the view, but it does not matter). DispatcherServlet detects that the Request is already a Multipart Request and decides to skip the Multipart Resolver.&lt;/p&gt;

&lt;p&gt;THIS IS AN ERROR.&lt;/p&gt;

&lt;p&gt;Somehow, any request parameters passed into an include need to be aggregated into the request/wrapper. If we don&apos;t aggregate, we will lose the parameters!&lt;/p&gt;

&lt;p&gt;Just for your information: For the default encoding (www-url-encoded), the servlet containers provide the correct behaviour.&lt;/p&gt;</description>
            <key id="12328">SPR-1280</key>
            <summary>Aggregation of Request Parameters flawed when using MultipartResolvers</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="goonie">Andreas Schildbach</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Sep 2005 06:02:50 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:06 +0000</updated>
                            <resolved>Sat, 10 Sep 2005 06:31:47 +0000</resolved>
                                    <version>1.2.4</version>
                                    <fixVersion>1.2.5</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="14643" author="juergen.hoeller" created="Sat, 10 Sep 2005 06:31:47 +0000"  >&lt;p&gt;Thanks for pointing this out! I&apos;ve fixed CommonsMultipartResolver (and DefaultMultipartHttpServletRequest) to freshly check standard GET request parameters even after a forward/include.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14644" author="juergen.hoeller" created="Sat, 10 Sep 2005 06:35:52 +0000"  >&lt;p&gt;Please give one of the next nightly snapshots a try and let me know whether it works for you now! The commit is not gonna make tonight&apos;s snapshot but definitely tomorrow&apos;s.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14664" author="goonie" created="Sun, 11 Sep 2005 18:41:27 +0000"  >&lt;p&gt;Thanks very much for reacting so fast on this issue!&lt;/p&gt;

&lt;p&gt;The latest nightly build (2005-09-11) seems to not contain the fix yet, so I built from CVS head and installed spring.jar into my application. It looks very good so far, so I even set it productive (the resolved issue is worth the risk). I&apos;ll closely watch for any anomalies and let you know immediately if there is any.&lt;/p&gt;</comment>
                            <comment id="14665" author="goonie" created="Sun, 11 Sep 2005 20:49:52 +0000"  >&lt;p&gt;One minor issue that could be improved on this occasion: The message...&lt;/p&gt;

&lt;p&gt;Sep 12, 2005 11:41:24 AM org.springframework.web.servlet.DispatcherServlet checkMultipart&lt;br/&gt;
INFO: Request is already a MultipartHttpServletRequest - if not in a forward, this typically results from an additional MultipartFilter in web.xml&lt;/p&gt;

&lt;p&gt;...appears about 12 times for each multipart form submit in my app (because I&apos;ve got that much includes on each page).&lt;/p&gt;

&lt;p&gt;First I&apos;d like to ask why you are printing it in the first place? Has it been a real problem that people are configuring a Filter &lt;em&gt;and&lt;/em&gt; an Intercepter to serve the same purpose? I&apos;d like to propose to reduce the log level to DEBUG, if not to remove the message at all.&lt;/p&gt;

&lt;p&gt;And just for correctness, I think that an include also triggers that message, so it should maybe read &quot;...if not in a forward or include...&quot;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 16 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 10 Sep 2005 06:31:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01a6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7527</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>