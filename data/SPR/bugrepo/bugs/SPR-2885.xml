<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:33:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2885/SPR-2885.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2885] Poor performance creating prototype beans</title>
                <link>https://jira.spring.io/browse/SPR-2885</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I have also noticed a high performance degradation from Spring 1.2.8 to Spring 2.0.1 with heavy use of prototype beans. I have attached a very simple test application which creates 100,000 prototype beans without multithreading and generated the following results:&lt;/p&gt;

&lt;p&gt;Spring 1.2.8       2437ms&lt;br/&gt;
Spring 2.0 RC1 2813ms&lt;br/&gt;
Spring 2.0 RC2 3015ms&lt;br/&gt;
Spring 2.0 RC3 4515ms&lt;br/&gt;
Spring 2.0 RC4 4532ms&lt;br/&gt;
Spring 2.0          4594ms&lt;br/&gt;
Spring 2.0.1       4788ms&lt;/p&gt;

&lt;p&gt;Profiling shows that about 30% of each bean creation is spent in the constructor of org.springframework.beans.SimpleTypeConverter called by the constructor of org.springframework.beans.factory.support.BeanDefinitionValueResolver during ...applyPropertyValues().&lt;br/&gt;
I think the main reason for the performance loss is the registration of custom editors in the constructor of BeanDefinitionValueResolver added in revision 1.12:&lt;/p&gt;

&lt;p&gt;	public BeanDefinitionValueResolver(AbstractBeanFactory beanFactory, String beanName, BeanDefinition beanDefinition) &lt;/p&gt;
        {
	        this.beanName = beanName;
		this.beanDefinition = beanDefinition;
		this.beanFactory = beanFactory;
		beanFactory.registerCustomEditors(this.typeConverter);
	}

&lt;p&gt;Please look at the screenshot of my profiling session.&lt;br/&gt;
We can not upgrade our production system from Spring 1.2.8 to Spring 2.0.1, because the load of our system would increase to high.&lt;br/&gt;
I am willing to help, but I need comments from the architects.&lt;/p&gt;

&lt;p&gt;This is a duplicate of &lt;a href=&quot;https://jira.spring.io/browse/SPR-2772&quot; title=&quot;Poor performance creating non-singleton beans with many threads&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2772&quot;&gt;&lt;del&gt;SPR-2772&lt;/del&gt;&lt;/a&gt; with a changed issue type and a higher priority, because of missing feedback so far.&lt;/p&gt;</description>
            <key id="15572">SPR-2885</key>
            <summary>Poor performance creating prototype beans</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="gonne">Gonne Martens</reporter>
                        <labels>
                            <label>performance</label>
                    </labels>
                <created>Mon, 27 Nov 2006 20:58:39 +0000</created>
                <updated>Tue, 19 Jun 2012 02:28:17 +0000</updated>
                            <resolved>Wed, 29 Nov 2006 03:51:59 +0000</resolved>
                                    <version>2.0 RC1</version>
                    <version>2.0 RC2</version>
                    <version>2.0 RC3</version>
                    <version>2.0 RC4</version>
                    <version>2.0 final</version>
                    <version>2.0.1</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="21090" author="gonne" created="Mon, 27 Nov 2006 21:01:09 +0000"  >&lt;p&gt;Screenshot of my profiling session&lt;/p&gt;</comment>
                            <comment id="21091" author="gonne" created="Mon, 27 Nov 2006 21:02:17 +0000"  >&lt;p&gt;Simple test application&lt;/p&gt;</comment>
                            <comment id="21092" author="juergen.hoeller" created="Mon, 27 Nov 2006 21:38:29 +0000"  >&lt;p&gt;OK, thanks for raising attention on this one. I have turned this into a critical issue for the upcoming 2.0.2 release (I&apos;ve lowered the issue to &quot;Critical&quot; since it is not a blocker for the overall framework), and will try to address it ASAP. I&apos;ll keep you up to date and let you know once changes are reflected in the nightly snapshot.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21115" author="juergen.hoeller" created="Wed, 29 Nov 2006 03:51:59 +0000"  >&lt;p&gt;This is largely fixed in CVS HEAD now, and will be released in the next nightly 2.0.2 snapshot. Please give it an early try and let me know how it works for you!&lt;/p&gt;

&lt;p&gt;There were a couple of underlying problems here, one of them being the SimpleTypeConverter in BeanDefinitionValueResolver that you pointed out - which was easy enough to address. The main problem, however, was the PropertyDescriptor filtering for dependency checks, introduced in 2.0 RC3: Because of @Required and its RequiredAnnotationBeanPostProcessor, we performed the exclusion of non-eligible properties more eagerly than before. This alone caused a 15 times increase in bean creation time in a micro benchmark! I addressed this through appropriate upfront checks (avoiding it if no dependency check goes on in the first place) as well as the caching of markers for excluded PropertyDescriptors. So this remains fast even in case of active dependency checks.&lt;/p&gt;

&lt;p&gt;The overall performance increase in my micro benchmark is about a factor of 20. Bean creation is in general still about 30% slower than with Spring 1.2.8, depending on the concrete scenario, but it&apos;s even signifcantly faster than 1.2.8 with active dependency checks now. In any case, 2.0.2 should match the performance of 2.0 RC2 again. Further optimizations, which are bound to have a less dramatic effect, are left for a future tuning session.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="15362">SPR-2772</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12247" name="Spring2TestBean.java" size="672" author="gonne" created="Mon, 27 Nov 2006 21:02:17 +0000"/>
                            <attachment id="12246" name="screenshot profiling session.jpg" size="300083" author="gonne" created="Mon, 27 Nov 2006 21:01:09 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 5 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 27 Nov 2006 21:38:29 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01ysf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11513</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>