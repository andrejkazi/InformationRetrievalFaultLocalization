<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:59:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1695/SPR-1695.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1695] Cannot Lazily Instantiate Hibernate LocalSessionFactoryBean  using LazyInitTargetSource</title>
                <link>https://jira.spring.io/browse/SPR-1695</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;If I specify a ProxyFactoryBean with a targetSource of type LazyInitTargetSource which targets a LocalSessionFactoryBean, the underlying Hibernate SessionFactory is created anyway.&lt;/p&gt;

&lt;p&gt;The problem is that to create the proxy, the LazyInitTargetSource must determine the type of the object is must proxy.  So it calls getObjectType on the bean.  Because the bean is a FactoryBean, it must instantiate the FactoryBean to call getObjectType on it.  This, however, causes the SessionFactory to be created, because that is done in the afterPropertiesSet method.&lt;/p&gt;

&lt;p&gt;One solution would be to modify LocalSessionFactoryBean to delay instantiation of the SessionFactory until the getObject method is called.&lt;/p&gt;

&lt;p&gt;Another might be to first attempt to call getObjectType on the factory before setting any properties.  That way if the value is known beforehand (not dynamically), the rest of the methods wouldn&apos;t be called.&lt;/p&gt;

&lt;p&gt;The last solution that occurs to me is to provide another way to specify the object type.  Such as having it be a property you could set on the LazyInitTargetSource.  This would prevent instantiation of the Factory even, and therefore would seem to honor the intentions of not instantiating what you&apos;re proxying better.&lt;/p&gt;</description>
            <key id="13332">SPR-1695</key>
            <summary>Cannot Lazily Instantiate Hibernate LocalSessionFactoryBean  using LazyInitTargetSource</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="jrduncans">Stephen Duncan Jr</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Feb 2006 21:36:34 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:23 +0000</updated>
                            <resolved>Wed, 22 Feb 2006 06:21:32 +0000</resolved>
                                    <version>1.2.6</version>
                                    <fixVersion>1.2.7</fixVersion>
                    <fixVersion>2.0 M3</fixVersion>
                                    <component>Core</component>
                    <component>Core:AOP</component>
                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16552" author="juergen.hoeller" created="Wed, 22 Feb 2006 06:21:32 +0000"  >&lt;p&gt;Thanks for pointing this out!&lt;/p&gt;

&lt;p&gt;I&apos;ve addressed the issue through two changes:&lt;br/&gt;
1. AbstractBeanFactoryBasedTargetSource performs on-demand checking of the target type now, instead of eagerly calling BeanFactory.getType on startup.&lt;br/&gt;
2. AbstractBeanFactoryBasedTargetSource has a &quot;setTargetClass&quot; method now, allowing to explictly specify the target type.&lt;/p&gt;

&lt;p&gt;As a consequence, you have two ways to properly use a LazyInitTargetSource with a lazy FactoryBean as target:&lt;br/&gt;
1. Specify a proxy interface on your ProxyFactoryBean definition. In this case, the TargetSource will never be asked for its target type.&lt;br/&gt;
2. Specify &quot;targetClass&quot; on your LazyInitTargetSource definition, typically in combination with &quot;autodetectInterfaces&quot;=true on ProxyFactoryBean.&lt;/p&gt;

&lt;p&gt;BTW, &quot;autodetectInterfaces&quot;=true will be the default behavior of ProxyFactoryBean as of Spring 2.0, aligning it with TransactionProxyFactoryBean as far as possible.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 45 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 Feb 2006 06:21:32 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01ey7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8299</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>