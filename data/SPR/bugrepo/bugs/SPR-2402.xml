<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:22:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2402/SPR-2402.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2402] Regression from 1.2.x: PropertyTypeConverter fails on unmodifiable Map</title>
                <link>https://jira.spring.io/browse/SPR-2402</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Code that worked in 1.2.5 fails in 2.0 RC2 with exception below.&lt;/p&gt;

&lt;p&gt;Correct behaviour should probably be to catch UnsupportedOperationException (thrown because the Map is instantiated by it&apos;s constructor - don&apos;t ask me, I&apos;m just testing we can use 2.0), and return original.&lt;/p&gt;

&lt;p&gt;i.e. &lt;/p&gt;

&lt;p&gt;		for (Iterator it = original.entrySet().iterator(); it.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; {&lt;br/&gt;
			Map.Entry entry = (Map.Entry) it.next();&lt;br/&gt;
			Object key = entry.getKey();&lt;br/&gt;
			Object value = entry.getValue();&lt;br/&gt;
			String keyedPropertyName = buildKeyedPropertyName(propertyName, key);&lt;br/&gt;
			Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, keyType);&lt;br/&gt;
			Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, valueType);&lt;br/&gt;
			try &lt;/p&gt;
{
				convertedCopy.put(convertedKey, convertedValue);
			}
&lt;p&gt;			catch ( UnsupportedOperation e ) &lt;/p&gt;
{
				return original;
			}
&lt;p&gt;			actuallyConverted = actuallyConverted || (key != convertedKey) || (value != convertedValue);&lt;br/&gt;
		}&lt;br/&gt;
		return (actuallyConverted ? convertedCopy : original);&lt;/p&gt;



&lt;p&gt;java.lang.UnsupportedOperationException: Cannot modify this map&lt;br/&gt;
	at com.lm.web.JSTLConstants.put(JSTLConstants.java:91)&lt;br/&gt;
	at org.springframework.beans.PropertyTypeConverter.convertToTypedMap(PropertyTypeConverter.java:328)&lt;br/&gt;
	at org.springframework.beans.PropertyTypeConverter.convertIfNecessary(PropertyTypeConverter.java:190)&lt;br/&gt;
	at org.springframework.beans.PropertyTypeConverter.convertIfNecessary(PropertyTypeConverter.java:108)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:723)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:575)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValue(AbstractPropertyAccessor.java:49)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:68)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:57)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:816)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:592)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:392)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:240)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:132)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:237)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:153)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:254)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:337)&lt;br/&gt;
	at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:156)&lt;br/&gt;
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:308)&lt;br/&gt;
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:252)&lt;br/&gt;
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:221)&lt;br/&gt;
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:114)&lt;br/&gt;
	at javax.servlet.GenericServlet.init(GenericServlet.java:211)&lt;/p&gt;</description>
            <key id="14722">SPR-2402</key>
            <summary>Regression from 1.2.x: PropertyTypeConverter fails on unmodifiable Map</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="nealeu">Neale Upstone</reporter>
                        <labels>
                    </labels>
                <created>Thu, 10 Aug 2006 10:51:29 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:31 +0000</updated>
                            <resolved>Mon, 14 Aug 2006 10:53:08 +0000</resolved>
                                    <version>2.0 RC2</version>
                                    <fixVersion>2.0 RC4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="19046" author="juergen.hoeller" created="Mon, 14 Aug 2006 10:53:08 +0000"  >&lt;p&gt;Thanks for pointing this out! This is indeed a case which is not covered: namely, a special Collection/Map class that can be instantiated but does not support the &quot;put&quot; operation (note that Collections.unmodifiableMap doesn&apos;t support instantiation, hence is automatically bypassed).&lt;/p&gt;

&lt;p&gt;I have refined the code to always use an approximate collection there now, never bothering with the original Collection/Map type (unless there is nothing to convert, in which case we still use the original Collection/Map object as given).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="19057" author="nealeu" created="Mon, 14 Aug 2006 21:13:45 +0000"  >&lt;p&gt;Hi Juergen,&lt;/p&gt;

&lt;p&gt;One question, does this mean that the new approximate collection is now modifiable?   This would seem to be a change of behaviour compared to 1.2.x.&lt;/p&gt;

&lt;p&gt;Should it not be treated in the same way as the unmodifiableMap ?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Neale&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 20 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Aug 2006 10:53:08 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04ukf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28326</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>