<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:27:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-7451/SPR-7451.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-7451] Make ServletHandlerMethodResolver protected (instead of private) to allow subclassing</title>
                <link>https://jira.spring.io/browse/SPR-7451</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;If one wants to customize AnnotationMethodHandlerAdapter by subclassing it, it would be very useful to be able to also subclass ServletHandlerMethodResolver.&lt;/p&gt;</description>
            <key id="32688">SPR-7451</key>
            <summary>Make ServletHandlerMethodResolver protected (instead of private) to allow subclassing</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="rstoya05-aop">Rossen Stoyanchev</assignee>
                                    <reporter username="arikkfir">Arik Kfir</reporter>
                        <labels>
                            <label>handler-method-processing</label>
                    </labels>
                <created>Wed, 11 Aug 2010 04:45:59 +0000</created>
                <updated>Tue, 19 Jun 2012 02:28:24 +0000</updated>
                            <resolved>Fri, 3 Jun 2011 03:33:46 +0000</resolved>
                                    <version>3.0.3</version>
                                                    <component>Web</component>
                        <due></due>
                            <votes>3</votes>
                                    <watches>4</watches>
                                    <timeoriginalestimate seconds="300">5m</timeoriginalestimate>
                            <timeestimate seconds="300">5m</timeestimate>
                                        <comments>
                            <comment id="58510" author="arikkfir" created="Mon, 27 Sep 2010 16:35:49 +0000"  >&lt;p&gt;After some thinking, a small incremental change which won&apos;t require extensive changes in this class would be to extract another method from inside the &apos;invokeHandlerMethod&apos; method. &lt;/p&gt;

&lt;p&gt;My driving use-case is the need to perform some pre/post processing around the actual invocation of the handler&apos;s method, where the pre/post processing needs to be aware of the method chosen for execution. With the current design this is not possible since the method is chosen using internal private components of this handler adapter. But extracting the call &quot;methodInvoker.invokeHandlerMethod(handlerMethod, handler, webRequest, implicitModel);&quot; (line 427 in AnnotationMethodHandlerAdapter) to another protected method would solve this. This new method would receive the method invoker, handler, handler-method, request and model and its default behavior would be to simply invoke the method. Sub-classes, however, would be free to override that new method, wrapping it with further processing before/after, and calling the super-method for the actual invocation.&lt;/p&gt;

&lt;p&gt;This approach will allow to keep the current implementation while still providing a fast-to-implement solution that satifies most use-cases I believe.&lt;/p&gt;</comment>
                            <comment id="67039" author="rstoya05-aop" created="Fri, 3 Jun 2011 03:33:46 +0000"  >&lt;p&gt;I am resolving this as a duplicate of &lt;a href=&quot;https://jira.spring.io/browse/SPR-5087&quot; title=&quot;expose ServletHandlerMethodInvoker/Resolver to application code&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-5087&quot;&gt;&lt;del&gt;SPR-5087&lt;/del&gt;&lt;/a&gt;. See the &lt;a href=&quot;https://jira.springsource.org/browse/SPR-5087?focusedCommentId=67037&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-67037&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;comment&lt;/a&gt; I left there regarding the new annotated-controller infrastructure classes available in Spring 3.1 M2.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="26598">SPR-5763</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        5 years, 29 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 3 Jun 2011 03:33:46 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00pf3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4163</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>