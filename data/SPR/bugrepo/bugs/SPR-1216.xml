<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:38:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1216/SPR-1216.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1216] MBeanExporter attempts to register duplicate MBeans causing javax.management.InstanceAlreadyExistsException</title>
                <link>https://jira.spring.io/browse/SPR-1216</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Specific scenario, running JUnit test cases extending &lt;/p&gt;
{@link org.springframework.test.AbstractTransactionalSpringContextTests}
&lt;p&gt; where the application utilises org.hibernate.jmx.StatisticsService as defined in spring-data-access-context.xml (see below), test fail due to :&lt;/p&gt;

&lt;p&gt;&amp;lt;testcase classname=&quot;TestActionTypeDaoImpl&quot; name=&quot;testGetAll&quot; time=&quot;17.375&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;error message=&quot;Error creating bean with name &amp;apos;jmxExporter&amp;apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;spring-data-access-context.xml&amp;#93;&lt;/span&gt;: Initialization of bean failed; nested exception is javax.management.InstanceAlreadyExistsException: Hibernate:name=hbmStats&quot; type=&quot;org.springframework.beans.factory.BeanCreationException&quot;&amp;gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;apos;jmxExporter&amp;apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;spring-data-access-context.xml&amp;#93;&lt;/span&gt;: Initialization of bean failed; nested exception is javax.management.InstanceAlreadyExistsException: Hibernate:name=hbmStats&lt;br/&gt;
javax.management.InstanceAlreadyExistsException: Hibernate:name=hbmStats&lt;br/&gt;
	at com.sun.jmx.mbeanserver.RepositorySupport.addMBean(RepositorySupport.java:452)&lt;br/&gt;
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1410)&lt;br/&gt;
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:936)&lt;br/&gt;
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:337)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:497)&lt;br/&gt;
	at org.springframework.jmx.export.MBeanExporter.registerMBean(MBeanExporter.java:413)&lt;br/&gt;
	at org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:389)&lt;br/&gt;
	at org.springframework.jmx.export.MBeanExporter.registerBeanNameOrInstance(MBeanExporter.java:369)&lt;br/&gt;
	at org.springframework.jmx.export.MBeanExporter.registerBeans(MBeanExporter.java:296)&lt;br/&gt;
	at org.springframework.jmx.export.MBeanExporter.afterPropertiesSet(MBeanExporter.java:240)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1003)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:348)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:275)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:317)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:80)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:65)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.loadContextLocations(AbstractSpringContextTests.java:121)&lt;br/&gt;
	at org.springframework.test.AbstractDependencyInjectionSpringContextTests.loadContextLocations(AbstractDependencyInjectionSpringContextTests.java:159)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.getContext(AbstractSpringContextTests.java:101)&lt;br/&gt;
	at org.springframework.test.AbstractDependencyInjectionSpringContextTests.setUp(AbstractDependencyInjectionSpringContextTests.java:127)&lt;br/&gt;
&amp;lt;/error&amp;gt;&lt;/p&gt;

&lt;p&gt;spring-data-access-context.xml defined as ....&lt;/p&gt;

&lt;p&gt;...&lt;br/&gt;
    &amp;lt;bean id=&quot;jmxExporter&quot;&lt;br/&gt;
          class=&quot;org.springframework.jmx.export.MBeanExporter&quot;&lt;br/&gt;
          depends-on=&quot;jmxServer&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;beans&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;map&amp;gt;&lt;br/&gt;
                &amp;lt;entry key=&quot;Hibernate:name=hbmStats&quot;&amp;gt;&lt;br/&gt;
                    &amp;lt;ref bean=&quot;hibernateStatisticsJMXBean&quot;/&amp;gt;&lt;br/&gt;
                &amp;lt;/entry&amp;gt;&lt;br/&gt;
            &amp;lt;/map&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;hibernateStatisticsJMXBean&quot;      class=&quot;org.hibernate.jmx.StatisticsService&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;statisticsEnabled&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;sessionFactory&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;ref bean=&quot;sessionFactory&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;jmxServer&quot;         class=&quot;org.springframework.jmx.support.MBeanServerFactoryBean&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;defaultDomain&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;value&amp;gt;dummyDomain&amp;lt;/value&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
...&lt;/p&gt;


&lt;p&gt;My current work around class....&lt;/p&gt;

&lt;p&gt;/** The SpringFrameworks (v.1.2.3) &lt;/p&gt;
{@link org.springframework.jmx.export.MBeanExporter}
&lt;p&gt; does not detect&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;MBeans already registered and may attempt to register duplicate MBeans.  Either a unique / dynamic&lt;/li&gt;
	&lt;li&gt;object naming convention could be employed to avoid this or alternatively, simply ignore&lt;/li&gt;
	&lt;li&gt;{@link javax.management.InstanceAlreadyExistsException}
&lt;p&gt; exceptions which is the policy&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;employed by this class.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;@author Cameron Clarke&lt;/li&gt;
	&lt;li&gt;@version $Id: $&lt;br/&gt;
 */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;import org.springframework.beans.factory.BeanFactoryAware;&lt;br/&gt;
import org.springframework.beans.factory.DisposableBean;&lt;br/&gt;
import org.springframework.beans.factory.InitializingBean;&lt;br/&gt;
import org.springframework.jmx.export.MBeanExporter;&lt;/p&gt;

&lt;p&gt;import javax.management.JMException;&lt;br/&gt;
import javax.management.InstanceAlreadyExistsException;&lt;/p&gt;

&lt;p&gt;public class SpringMBeanExporter extends MBeanExporter implements BeanFactoryAware, InitializingBean, DisposableBean&lt;br/&gt;
{&lt;br/&gt;
    protected void registerBeans() throws JMException&lt;br/&gt;
    {&lt;br/&gt;
        try&lt;br/&gt;
        &lt;/p&gt;
{
            super.registerBeans();
        }
&lt;p&gt; catch (InstanceAlreadyExistsException ex)&lt;/p&gt;
        {
            logger.error(&quot;Instance already exists, registering JMX bean failed.&quot;, ex);
        }
&lt;p&gt;    }&lt;br/&gt;
}&lt;/p&gt;</description>
            <key id="12171">SPR-1216</key>
            <summary>MBeanExporter attempts to register duplicate MBeans causing javax.management.InstanceAlreadyExistsException</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="cam">Cameron Clarke</reporter>
                        <labels>
                    </labels>
                <created>Mon, 8 Aug 2005 22:17:20 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:30 +0000</updated>
                            <resolved>Thu, 15 Sep 2005 02:15:49 +0000</resolved>
                                    <version>1.2.3</version>
                                    <fixVersion>1.2.5</fixVersion>
                                    <component>JMX</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="14300" author="juergen.hoeller" created="Tue, 9 Aug 2005 01:14:13 +0000"  >&lt;p&gt;I assume you&apos;re running multiple tests in succession, with multiple application contexts involved? Obviously some application context already registered the Hibernate statistics service, and hasn&apos;t been shut down at the time another application context tries to start.&lt;/p&gt;

&lt;p&gt;I would, in general, not use any JMX export in unit tests. In a standard deployment environment, clear application context lifecycles help to avoid such JMX conflicts in the first place: All beans registered by a context will be unregistered on shutdown of the context, which even works for hot redeployment of WARs etc.&lt;/p&gt;

&lt;p&gt;After all, the JMX MBeanServer is usually shared at the VM level. It&apos;s the application deployer&apos;s responsibility to choose proper MBean names if multiple applications run on the same VM. A typical way to address is to use the application name as prefix, e.g. &quot;petclinic:&quot;. &lt;/p&gt;

&lt;p&gt;So I don&apos;t see much that MBeanExporter itself could do about this. The MBean names have to be specified by the application developer, who of course can choose to use a configurable prefix there (for example through a placeholder, with the actual value read from a properties file). The onus is really on the developer here.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14708" author="robh" created="Thu, 15 Sep 2005 02:15:49 +0000"  >&lt;p&gt;MBeanExporter now has registrationBehavior and registrationBehaviorName properties that allow you to choose one of three registration &lt;/p&gt;

&lt;p&gt;REGISTER_FAIL_ON_EXISTING (default) - fail when encountering existing MBeans &lt;br/&gt;
REGISTER_IGNORE_EXISTING - ignore existing MBeans, leaving the existing one registered and not attempting to re-register the new one&lt;br/&gt;
REGISTER_REPLACE_EXISTING - remove the existing MBean and reregister the new MBean&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12174">SPR-1219</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 16 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 9 Aug 2005 01:14:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03umf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22503</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>