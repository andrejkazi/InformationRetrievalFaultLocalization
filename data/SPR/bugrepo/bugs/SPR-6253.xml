<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:10:01 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-6253/SPR-6253.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-6253] Allow to define autowired collections and array elements order</title>
                <link>https://jira.spring.io/browse/SPR-6253</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Spring defines a contract for autowiring arrays and type collections (&lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/ch03s04.html#beans-factory-autowire&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;3.4.5 Autowiring collaborators&lt;/a&gt;, &lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/ch03s09.html#beans-autowired-annotation&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;3.9.2 @Autowired and @Inject&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;However, there is a possible use-case that a user wants to define particular order for autowired collection/array. It looks obvious in the case of autowiring typed lists (the client may want to preserve particular order for the list elements) but the same idea may be spread easily to sets/maps/arrays.&lt;/p&gt;

&lt;p&gt;I suggest the following rules to be used during examining the order for two elements:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;if both classes of compared object are marked by &lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/annotation/Order.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Ordered&lt;/a&gt; the one with lower value is considered to be less than another;&lt;/li&gt;
	&lt;li&gt;if class of one element is marked by &lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/annotation/Order.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Ordered&lt;/a&gt; and class of another is not marked by &lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/annotation/Order.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Ordered&lt;/a&gt; the former is considered to be less than the later;&lt;/li&gt;
	&lt;li&gt;if both classes of compared elements are not marked by &lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/core/annotation/Order.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Ordered&lt;/a&gt; but implement &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Comparable&lt;/a&gt; with consisting type parameter they are compared via &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html#compareTo(T)&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Comparable#compareTo(Object)&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please note that the rules above may be applied to all elements of autowired collection/array in order to define particular for them.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Implementation&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;That feature may be optional and defaults to perform ordering. It seems that most natural to allow to define it via additional method of &lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/beans/factory/annotation/Autowired.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;@Autowired&lt;/a&gt; annotation.&lt;/p&gt;

&lt;p&gt;So, it can be implemented easily via minor &lt;a href=&quot;http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;AutowiredAnnotationBeanPostProcessor&lt;/a&gt; modification - the argument to be injected is just sorted if necessary.&lt;/p&gt;

&lt;p&gt;Attached archive contains either feature implementation (classes from &lt;em&gt;&apos;org.springframework.beans.factory.annotation&apos;&lt;/em&gt; package) or usage example (classes from &lt;em&gt;&apos;com.spring.example&apos;&lt;/em&gt; package and its subpackages).&lt;/p&gt;</description>
            <key id="28398">SPR-6253</key>
            <summary>Allow to define autowired collections and array elements order</summary>
                <type id="2" iconUrl="https://jira.spring.io/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="cbeams">Chris Beams</assignee>
                                    <reporter username="denis.zhdanov">Denis Zhdanov</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Oct 2009 04:34:51 +0000</created>
                <updated>Thu, 7 Jul 2011 18:51:13 +0000</updated>
                            <resolved>Thu, 7 Jul 2011 18:51:10 +0000</resolved>
                                    <version>3.0 RC1</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>8</votes>
                                    <watches>6</watches>
                                    <timeoriginalestimate seconds="288000">10d</timeoriginalestimate>
                            <timeestimate seconds="288000">10d</timeestimate>
                                        <comments>
                            <comment id="47570" author="denis.zhdanov" created="Tue, 20 Oct 2009 04:37:21 +0000"  >&lt;p&gt;Sorry, didn&apos;t define priority for the ticket (it is &lt;em&gt;&apos;Major&apos;&lt;/em&gt; by default). Suggest to change it to &lt;em&gt;&apos;Minor&apos;&lt;/em&gt;&lt;/p&gt;</comment>
                            <comment id="47571" author="denis.zhdanov" created="Tue, 20 Oct 2009 04:52:54 +0000"  >&lt;p&gt;One more note - ticket text says about &lt;em&gt;&apos;Ordered&apos;&lt;/em&gt; annotation - should be replaced to &lt;em&gt;&apos;Order&apos;&lt;/em&gt; (the links are correct).&lt;/p&gt;</comment>
                            <comment id="57894" author="mck" created="Fri, 10 Sep 2010 08:16:17 +0000"  >&lt;p&gt;I haven&apos;t checked your patch, but i reckon the third approach should only work on SortedSet and SortedMap.&lt;br/&gt;
If autowired can already work on SortedSet and SortedMap&lt;/p&gt;
&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;//for example code like&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;private SortedSet&amp;lt;?&amp;gt; set;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;
&lt;p&gt;wouldn&apos;t this already implement this feature?&lt;/p&gt;</comment>
                            <comment id="57910" author="denis.zhdanov" created="Sat, 11 Sep 2010 04:06:01 +0000"  >&lt;p&gt;The point is to allow to define sorting rule via @Ordered. I.e. there is a possible situation that I have a number of different classes that, say, conform to the same interface and don&apos;t know anything about each other. I don&apos;t want to explicitly push that knowledge by introducing compareTo() to them. I want just configure fine-grained autowiring rules at the very similar way to standard Spring facilities.&lt;/p&gt;</comment>
                            <comment id="57934" author="mck" created="Sun, 12 Sep 2010 09:37:44 +0000"  >&lt;p&gt;Yes i understand and value both points one and two (and your last comment). They certainly are a required addition to Spring imho and already have my vote.&lt;/p&gt;

&lt;p&gt;My questioning was solely around your third point: &lt;br/&gt;
 &quot;if both classes of compared elements are not marked by Ordered but implement Comparable with consisting type parameter&quot;&lt;/p&gt;

&lt;p&gt;I didn&apos;t understand the need for this because it already works in Spring.&lt;br/&gt;
For example &lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;class AbcService implements Comparable&amp;lt;AbcService&amp;gt;{...}&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;class MyClass{&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @Autowired&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    SortedSet&amp;lt;AbcService&amp;gt; abcServices;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt; already works in Spring and does not need the code you&apos;ve added in AutowiredElementsComparator.compare(...)&lt;/p&gt;

&lt;p&gt;But i see here you&apos;re actually talking about the possibility to blend @Order and Comparable in the one sorting process? This sounds a bit scary to me... would people be expecting Autowired Lists to be sorted by their natural order (since that is what SortedSet is used for), and how would this effect backward-compatibility? If it were to be done, so that &quot;@Order fell back onto natural sorting&quot;, then i would expect that the sorting between two identical @Order values also fell back to the natural sorting if available (here this would mean changing AutowiredElementsComparator:47 to &lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;if (a1 != null &amp;amp;&amp;amp; a1.value() != a2.value()) {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;&lt;/p&gt;</comment>
                            <comment id="57955" author="denis.zhdanov" created="Sun, 12 Sep 2010 23:52:14 +0000"  >&lt;p&gt;Oh, I see your point now.&lt;/p&gt;

&lt;p&gt;My idea was to allow to define ordering during autowiring mixed collections, i.e. collections that consist from both @Ordered or non-@Ordered objects.&lt;/p&gt;

&lt;p&gt;Agreed that it looks more consistent to fall back to natural ordering in case of equal @Order-implied values.&lt;/p&gt;

&lt;p&gt;Unfortunately, it looks like Spring guys don&apos;t pay to much attention to this patch.&lt;/p&gt;</comment>
                            <comment id="60010" author="derickso" created="Tue, 26 Oct 2010 21:44:02 +0000"  >&lt;p&gt;I would love to see this feature as well, I was a little disappointed it wasn&apos;t already implemented given everything else I can dream up already works &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="68196" author="cbeams" created="Thu, 7 Jul 2011 18:51:11 +0000"  >&lt;p&gt;Duplicates &lt;a href=&quot;https://jira.spring.io/browse/SPR-5574&quot; title=&quot;Autowiring should support ordered collection driven by Order annotation or Ordered interface&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-5574&quot;&gt;&lt;del&gt;SPR-5574&lt;/del&gt;&lt;/a&gt;.  Please watch that issue to be notified of changes.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="25998">SPR-5574</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="15824" name="ordered-autowired-collection.tar.gz" size="9853" author="denis.zhdanov" created="Tue, 20 Oct 2009 04:35:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        5 years, 25 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 10 Sep 2010 08:16:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i039nr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19107</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>