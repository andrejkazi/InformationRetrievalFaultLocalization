<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:06:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2672/SPR-2672.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2672] TypeConverterDelegate does not cohearse primatives and their Object counterparts in Spring 2.0 as it did in 1.2.8</title>
                <link>https://jira.spring.io/browse/SPR-2672</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I have a class that has a property on it that is of type &quot;long&quot;.  There&apos;s also a public setter for it that takes in a long.&lt;/p&gt;

&lt;p&gt;My context file contains the following:&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;processingCommitInterval&quot; class=&quot;java.lang.Integer&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;constructor-arg index=&quot;0&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;1000&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;fcNameFileIngestor&quot; class=&quot;com.citigroup.futures.account.batch.FcNameFileIngestor&quot; parent=&quot;fileIngestorTemplate&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;		&amp;lt;!-- set to 0 if you want to commit only after all records are processed --&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;processingCommitInterval&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;ref bean=&quot;processingCommitInterval&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;		&amp;lt;property name=&quot;processorId&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;FcNameFileIngestor-$&lt;/p&gt;
{env.name}
&lt;p&gt;&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;While this used to work in Spring 1.2.8, it no longer does in Spring 2.0 final.  It raises this exception:&lt;/p&gt;

&lt;p&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;fcNameFileIngestor&apos; defined in file &lt;span class=&quot;error&quot;&gt;&amp;#91;C:\eclipse3.2\workspace\batchutil\classes\com\citigroup\futures\account\batch\testCtxBatchProcessors.xml&amp;#93;&lt;/span&gt;: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:&lt;br/&gt;
PropertyAccessException 1: org.springframework.beans.TypeMismatchException: Failed to convert property value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Integer&amp;#93;&lt;/span&gt; to required type &lt;span class=&quot;error&quot;&gt;&amp;#91;long&amp;#93;&lt;/span&gt; for property &apos;processingCommitInterval&apos;; nested exception is java.lang.IllegalArgumentException: No matching editors or conversion strategy found&lt;br/&gt;
Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessException details (1) are:&lt;br/&gt;
PropertyAccessException 1:&lt;br/&gt;
org.springframework.beans.TypeMismatchException: Failed to convert property value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Integer&amp;#93;&lt;/span&gt; to required type &lt;span class=&quot;error&quot;&gt;&amp;#91;long&amp;#93;&lt;/span&gt; for property &apos;processingCommitInterval&apos;; nested exception is java.lang.IllegalArgumentException: No matching editors or conversion strategy found&lt;br/&gt;
Caused by: java.lang.IllegalArgumentException: No matching editors or conversion strategy found&lt;br/&gt;
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:212)&lt;br/&gt;
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:127)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:775)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:608)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValue(AbstractPropertyAccessor.java:49)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:74)&lt;br/&gt;
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:57)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:970)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:729)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:416)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:92)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:77)&lt;br/&gt;
	at org.springframework.test.AbstractSingleSpringContextTests.loadContextLocations(AbstractSingleSpringContextTests.java:138)&lt;br/&gt;
	at org.springframework.test.AbstractSingleSpringContextTests.loadContext(AbstractSingleSpringContextTests.java:125)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.getContext(AbstractSpringContextTests.java:104)&lt;br/&gt;
	at org.springframework.test.AbstractSingleSpringContextTests.setUp(AbstractSingleSpringContextTests.java:75)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:128)&lt;br/&gt;
	at org.springframework.test.ConditionalTestCase.runBare(ConditionalTestCase.java:69)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:110)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:128)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:113)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:120)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:228)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:223)&lt;br/&gt;
	at org.junit.internal.runners.OldTestClassRunner.run(OldTestClassRunner.java:35)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;




&lt;p&gt;Can the TypeConverterDelegate be made more robust to cohearse some primatives into other types when no data would be lost in the transition (i.e. an int can go to a long, a float can go to a double)?  As I mentioned, the above example did work in 1.2.8.&lt;/p&gt;</description>
            <key id="15118">SPR-2672</key>
            <summary>TypeConverterDelegate does not cohearse primatives and their Object counterparts in Spring 2.0 as it did in 1.2.8</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="tonyjoe">Anthony Falabella</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Oct 2006 03:23:46 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:37 +0000</updated>
                            <resolved>Wed, 4 Oct 2006 19:23:35 +0000</resolved>
                                    <version>2.0 final</version>
                                    <fixVersion>2.0.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="20047" author="juergen.hoeller" created="Wed, 4 Oct 2006 05:09:44 +0000"  >&lt;p&gt;Thanks for pointing this out! We&apos;ll make sure that this works again in 2.0.1, like it did in 1.2.8.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="20901" author="dportello" created="Thu, 16 Nov 2006 06:01:12 +0000"  >&lt;p&gt;Is there a work around for this issue?&lt;/p&gt;</comment>
                            <comment id="20902" author="dportello" created="Thu, 16 Nov 2006 06:04:45 +0000"  >&lt;p&gt;At least a workaround until 2.0.1 is released?&lt;/p&gt;</comment>
                            <comment id="20904" author="juergen.hoeller" created="Thu, 16 Nov 2006 07:11:38 +0000"  >&lt;p&gt;You could register a custom editor to do this... That said, Spring 2.0.1 will be released by the end of this week, i.e. within the next 48 hours. You can also try a recent nightly snapshot (&lt;a href=&quot;http://www.springframework.org/snapshots&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/snapshots&lt;/a&gt;), which includes this fix already.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="20905" author="dportello" created="Thu, 16 Nov 2006 08:05:33 +0000"  >&lt;p&gt;Thank you for the swift response. I wasn&apos;t sure how close to release 2.0.1 was. It might be worth it to include in our project&apos;s current build (in the next hour)&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 7 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 4 Oct 2006 05:09:44 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00vnj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5173</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>