<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:38:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2690/SPR-2690.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2690] AbstractSingleSpringContextTests.contextKey()/loadContext() are now final</title>
                <link>https://jira.spring.io/browse/SPR-2690</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;We overload the contextKey() and loadContext() in AbstractSingleSpringContextTests in order to load our contexts via ContextSingletonBeanFactoryLocator.  Unfortunately, between rc3 and 2.0-final these methods were marked as final.    Overloading contextKey() is actually still recommended in the javadoc for AbstractSingleSpringContextTests despite now being final.   As an aside, it would actually be handy to build support for a parent context into AbstractSingleSpringContextTests/AbstractSpringContextTests, much like is supported from the web ContextLoaderListener.&lt;/p&gt;

&lt;p&gt;Excerpt from AbstractSingleSpringContextTests javadoc:&lt;br/&gt;
--------------------------------------------------------------------------------&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&amp;lt;p&amp;gt;If you don&apos;t want this behavior, you can override the &amp;lt;code&amp;gt;contextKey()&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;method, most likely to return the test class. In conjunction with this you would&lt;/li&gt;
	&lt;li&gt;probably override the &amp;lt;code&amp;gt;getContext&amp;lt;/code&amp;gt; method, which by default loads&lt;/li&gt;
	&lt;li&gt;the locations specified in the &amp;lt;code&amp;gt;getConfigLocations()&amp;lt;/code&amp;gt; method.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Here is an example of how we we are overloading it:&lt;br/&gt;
--------------------------------------------------------------------------------&lt;br/&gt;
    protected Object contextKey() &lt;/p&gt;
{
        return &quot;com.mycompany.domain&quot;;
    }

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Get the application context.  Adds the applicationContext-test.xml&lt;/li&gt;
	&lt;li&gt;to the normal domain parent context.&lt;br/&gt;
     */&lt;br/&gt;
    protected ConfigurableApplicationContext loadContext(Object key) {&lt;br/&gt;
        ContextSingletonBeanFactoryLocator factoryLocator = &lt;br/&gt;
            (ContextSingletonBeanFactoryLocator)ContextSingletonBeanFactoryLocator.getInstance();&lt;br/&gt;
        BeanFactoryReference beanFactoryReference = factoryLocator.useBeanFactory((String)key);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        ConfigurableApplicationContext parent = &lt;br/&gt;
            (ConfigurableApplicationContext)beanFactoryReference.getFactory();&lt;/p&gt;

&lt;p&gt;        return new ClassPathXmlApplicationContext(&lt;br/&gt;
                new String[] &lt;/p&gt;
{ &quot;applicationContext-test.xml&quot; }
&lt;p&gt;, parent);&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This method is unused because we are overloading&lt;/li&gt;
	&lt;li&gt;contextKey()/loadContext().&lt;br/&gt;
     */&lt;br/&gt;
    protected String[] getConfigLocations() 
{
        return null;
    }&lt;/li&gt;
&lt;/ul&gt;
</description>
            <key id="15149">SPR-2690</key>
            <summary>AbstractSingleSpringContextTests.contextKey()/loadContext() are now final</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="perfnorm">Jasper Rosenberg</reporter>
                        <labels>
                    </labels>
                <created>Fri, 6 Oct 2006 01:05:07 +0000</created>
                <updated>Tue, 19 Jun 2012 03:51:00 +0000</updated>
                            <resolved>Fri, 6 Oct 2006 02:34:01 +0000</resolved>
                                    <version>2.0 final</version>
                                    <fixVersion>2.0.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="20137" author="juergen.hoeller" created="Fri, 6 Oct 2006 02:34:01 +0000"  >&lt;p&gt;Thanks for pointing this out! This was a side effect of the recent factoring out of AbstractSingleSpringContextTests; previously, that code resided in AbstractDependencyInjectionSpringContextTests. I&apos;ve turned both &quot;contextKey()&quot; and &quot;loadContext(Object)&quot; to non-final again, and added a default implementation of &quot;getContextLocations()&quot; (since overriding this method is optional given the alternative of overriding &quot;contextKey()&quot; and &quot;loadContext(Object)&quot;).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 12 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 6 Oct 2006 02:34:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00vlr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5165</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>