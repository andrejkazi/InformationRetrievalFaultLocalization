<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:37:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-7091/SPR-7091.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-7091] AnnotationDrivenBeanDefinitionParser should allow injection of custom HttpMessageConverter&apos;s</title>
                <link>https://jira.spring.io/browse/SPR-7091</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;1. There should be a way to inject custom http message converters into AnnotationDrivenBeanDefinitionParser. Currently its hardcoded and set to a private method &lt;/p&gt;

&lt;p&gt;private ManagedList&amp;lt;RootBeanDefinition&amp;gt; getMessageConverters(Object source) &lt;/p&gt;
{ ... }

&lt;p&gt;2. AnnotationMethodHandlerAdapter has hardcoded the HttpMessageConverters as well, when replacing the bean with something like&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean class=&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;messageConverters&quot;&amp;gt;&lt;br/&gt;
		  &amp;lt;list&amp;gt;&lt;br/&gt;
		    &amp;lt;ref bean=&quot;customConverter&quot;/&amp;gt;&lt;br/&gt;
		  &amp;lt;/list&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;	&lt;/p&gt;

&lt;p&gt;The AnnotationMethodHandlerAdapter bean is never replaced within the Spring Context.&lt;/p&gt;


&lt;p&gt;Please let me know if there is a different solution?&lt;/p&gt;</description>
            <key id="30995">SPR-7091</key>
            <summary>AnnotationDrivenBeanDefinitionParser should allow injection of custom HttpMessageConverter&apos;s</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="rstoya05-aop">Rossen Stoyanchev</assignee>
                                    <reporter username="krasaee">Kasra Rasaee</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Apr 2010 02:20:46 +0000</created>
                <updated>Tue, 19 Jun 2012 03:25:15 +0000</updated>
                            <resolved>Tue, 19 Jun 2012 03:22:28 +0000</resolved>
                                    <version>3.0.1</version>
                    <version>3.0.2</version>
                                                    <component>Web</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="55877" author="felthy" created="Tue, 20 Jul 2010 12:34:35 +0000"  >&lt;p&gt;I&apos;ve worked around this by referring to the schema-generated bean by its name &quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter#0&quot; and using the MethodInvokingFactoryBean to call its setMessageConverters method - but this feels like a hack. As a user of the AnnotationMethodHandlerAdapter, I would expect my HttpMessageConverters to be auto-detected by type - in the same way as HandlerMapping and HandlerAdapter instances are auto-detected by the DispatcherServlet. I&apos;d like to see this added in a future release.&lt;/p&gt;</comment>
                            <comment id="55879" author="simonwg" created="Tue, 20 Jul 2010 12:51:46 +0000"  >&lt;p&gt;The following works fine for me. Since &amp;lt;mvc:annotation-driven / &amp;gt; did not cater the MessageConverter for ExceptionResolver, I have set it explicitly&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean class=&quot;org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping&quot;&lt;br/&gt;
          p:order=&quot;1&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean class=&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;webBindingInitializer&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;bean class=&quot;org.springframework.web.bind.support.ConfigurableWebBindingInitializer&quot;&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;conversionService&quot; ref=&quot;conversionService&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;property name=&quot;validator&quot; ref=&quot;validator&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/bean&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;messageConverters&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;list&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.ByteArrayHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.StringHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.ResourceHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.FormHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;com.google.protobuf.spring.http.ProtobufHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.json.MappingJacksonHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/list&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;annotationMethodHandlerExceptionResolver&quot; class=&quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver&quot;&lt;br/&gt;
          p:order=&quot;1&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;messageConverters&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;list&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.ByteArrayHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.StringHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.ResourceHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.FormHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;bean class=&quot;org.springframework.http.converter.json.MappingJacksonHttpMessageConverter&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;/list&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

</comment>
                            <comment id="55971" author="dma_k" created="Thu, 22 Jul 2010 20:49:36 +0000"  >&lt;p&gt;I vote for this issue. It would be nice if &lt;tt&gt;&amp;lt;mvc:annotation-driven /&amp;gt;&lt;/tt&gt; can detect already registered message converters. In my case I would like to customize &lt;tt&gt;MappingJacksonHttpMessageConverter&lt;/tt&gt; but I can&apos;t do it easily, as this class is created new by &lt;tt&gt;AnnotationDrivenBeanDefinitionParser&lt;/tt&gt;. I propose that (a) it should check the context for unknown implementations of &lt;tt&gt;HttpMessageConverter&lt;/tt&gt;&apos;s and (b) it should use already defined already customized beans for &quot;known&quot; &lt;tt&gt;HttpMessageConverter&lt;/tt&gt;&apos;s (e.g. &lt;tt&gt;FormHttpMessageConverter&lt;/tt&gt;, ...). Maybe this problem should be solved by &lt;tt&gt;AnnotationMethodHandlerAdapter&lt;/tt&gt; itself, which can collect all &lt;tt&gt;HttpMessageConverter&lt;/tt&gt;&apos;s just after context has been instantiated (&lt;tt&gt;ApplicationContextAware&lt;/tt&gt;). Relative to &lt;a href=&quot;https://jira.spring.io/browse/SPR-7190&quot; title=&quot;AnnotationMethodHandlerAdapter and AnnotationMethodHandlerExceptionResolver should supports MappingJacksonHttpMessageConverter by default&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7190&quot;&gt;&lt;del&gt;SPR-7190&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://jira.spring.io/browse/SPR-6750&quot; title=&quot;Add customArgumentResolvers to &amp;lt;mvc:annotation-driven&amp;gt;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-6750&quot;&gt;&lt;del&gt;SPR-6750&lt;/del&gt;&lt;/a&gt;, as having autodetection implemented solves them.&lt;/p&gt;</comment>
                            <comment id="62731" author="rstoya05-aop" created="Tue, 25 Jan 2011 10:28:18 +0000"  >&lt;p&gt;This issue should be resolved with the completion of &lt;a href=&quot;https://jira.spring.io/browse/SPR-7504&quot; title=&quot;Make it easier to add new Message Converters to AnnotationMethodHandlerAdapter&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7504&quot;&gt;&lt;del&gt;SPR-7504&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="31334">SPR-7191</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="33043">SPR-7504</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        5 years, 48 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 20 Jul 2010 12:34:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00pov:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4207</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>