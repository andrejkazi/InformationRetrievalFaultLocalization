<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:44:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1116/SPR-1116.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1116] AbstractBeanFactory.getType change dramatically alters bean instantiation order</title>
                <link>https://jira.spring.io/browse/SPR-1116</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Recent change to AbstractBeanFactory getType() causes all beans of the form &amp;lt;bean factory-method=&quot;&quot;/&amp;gt; to be instantiated as soon as the container encounters a bean using autowiring.&lt;/p&gt;

&lt;p&gt;This leads to an unpredictable (or at least, unexpected) order of bean instantiation.  Applications working under 1.2rc1 may fail under 1.2.2.&lt;/p&gt;

&lt;p&gt;Just want to make sure the implications of this change to the getType() method are fully thought through.  Those of us using factory-method to make legacy code amenable to IOC could have a tough time with this change.&lt;/p&gt;

&lt;p&gt;Is the run-time type returned by the factory-method really necessary here?  Couldn&apos;t we reflectively get at the return type of factory-method instead, and wouldn&apos;t that be good enough?  Or, could we not overload the class attribute of the bean?&lt;/p&gt;

&lt;p&gt;More details at:&lt;br/&gt;
&lt;a href=&quot;http://forum.springframework.org/viewtopic.php?t=6937&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/viewtopic.php?t=6937&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: &lt;a href=&quot;https://jira.spring.io/browse/SPR-1115&quot; title=&quot;AbstractBeanFactory should not create lazy-init beans to determine their type&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1115&quot;&gt;&lt;del&gt;SPR-1115&lt;/del&gt;&lt;/a&gt; outlines a (somewhat) related concern.&lt;/p&gt;</description>
            <key id="11941">SPR-1116</key>
            <summary>AbstractBeanFactory.getType change dramatically alters bean instantiation order</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="markjvickers">Mark Vickers</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Jul 2005 07:37:05 +0000</created>
                <updated>Sun, 25 Sep 2005 12:37:14 +0000</updated>
                            <resolved>Sun, 10 Jul 2005 22:10:22 +0000</resolved>
                                    <version>1.2.2</version>
                                    <fixVersion>1.2.3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13824" author="juergen.hoeller" created="Sun, 10 Jul 2005 22:10:22 +0000"  >&lt;p&gt;This has already been fixed in CVS. Please give the latest nightly snapshot a try and let us know whether it works for you again!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14764" author="dtabuenc" created="Sun, 25 Sep 2005 12:37:14 +0000"  >&lt;p&gt;In Spring 1.2.5 Still experiencing this issue (or something very similar).&lt;/p&gt;

&lt;p&gt;Many beans are started unexpectedly before all the BeanPostProcessors are registered thus making them ineligible for things like auto-proxy. This happens when trying to resolve dependencies early on during the creating of the AutoProxy beans it tries to get all the beans supporting a specific type neede for a dependency (such as an interceptor type or advisor type). &lt;/p&gt;

&lt;p&gt;The problem is I am using a standard spring factory bean (org.springframework.scheduling.quartz.SchedulerFactoryBean) and when it tryes to get the type of the bean it initializes all the beans it depends on which could be almost all the beans if the relationships are complex. &lt;/p&gt;

&lt;p&gt;As a work-arround currently I just disable autowiring on AutoProxyCreator beans.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="11929">SPR-1108</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="11971">SPR-1129</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 14 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 10 Jul 2005 22:10:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04w9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28602</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>