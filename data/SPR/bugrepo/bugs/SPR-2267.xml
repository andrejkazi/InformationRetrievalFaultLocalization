<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:12:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2267/SPR-2267.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2267] form:select selects everything</title>
                <link>https://jira.spring.io/browse/SPR-2267</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;A form:select tag creates a select box where all items are selected, not just the correct one. This may appear as if just the last item is selected depending on the browser. Firefox 1.5 shows only the last item selected, but looking at the HTML source shows that every items includes selected=&quot;selected&quot;.&lt;/p&gt;

&lt;p&gt;Problem is caused by a bug in SelectedValueComparator.exhaustiveCompare(Object., Object, PropertyEditor).&lt;/p&gt;

&lt;p&gt;	private static boolean exhaustiveCompare(Object value, Object candidate, PropertyEditor propertyEditor) {&lt;br/&gt;
		if (value instanceof LabeledEnum) {&lt;br/&gt;
			String enumCodeAtString = ObjectUtils.getDisplayString(((LabeledEnum) value).getCode());&lt;br/&gt;
			if (enumCodeAtString.equals(ObjectUtils.getDisplayString(candidate))) &lt;/p&gt;
{
				return true;
			}
&lt;p&gt;		}&lt;br/&gt;
		else if (ObjectUtils.getDisplayString(value).equals(ObjectUtils.getDisplayString(candidate))) &lt;/p&gt;
{
			return true;
		}
&lt;p&gt;		else if (propertyEditor != null &amp;amp;&amp;amp; candidate instanceof String) {&lt;/p&gt;

&lt;p&gt;			// try PE-based comparison (PE should &lt;b&gt;not&lt;/b&gt; be allowed to escape creating thread)&lt;br/&gt;
			Object originalValue = propertyEditor.getValue();&lt;br/&gt;
			try {&lt;br/&gt;
				String candidateAsString = (String) candidate;&lt;br/&gt;
				propertyEditor.setAsText(candidateAsString);  &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; setAsText(candidateAsString)&lt;br/&gt;
				if (ObjectUtils.nullSafeEquals(value, propertyEditor.getValue())) &lt;/p&gt;
{
					return true;
				}

&lt;p&gt;				if (propertyEditor.getValue() != null) &lt;/p&gt;
{
					return ObjectUtils.nullSafeEquals(candidateAsString, propertyEditor.getAsText()); &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; compare candidateAsString with getAsText(). This will always return true
				}
&lt;p&gt;			}&lt;br/&gt;
			finally &lt;/p&gt;
{
				propertyEditor.setValue(originalValue);
			}
&lt;p&gt;		}&lt;br/&gt;
		return false;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;As I noted in another bug related to form:select, I would have thought that this compare would be done using the itemValue property instead of the complicated tests that are used. JMHO.&lt;/p&gt;
</description>
            <key id="14475">SPR-2267</key>
            <summary>form:select selects everything</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="dsurber">Douglas Surber</reporter>
                        <labels>
                    </labels>
                <created>Sun, 9 Jul 2006 12:38:21 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:38 +0000</updated>
                            <resolved>Mon, 10 Jul 2006 03:52:22 +0000</resolved>
                                    <version>2.0 M5</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="18487" author="robh" created="Mon, 10 Jul 2006 00:02:23 +0000"  >&lt;p&gt;Douglas,&lt;/p&gt;

&lt;p&gt;I fixed this for RC1/RC2 already. Can you check your code with a later snapshot to see if it works for you? I agree that it would be simpler to compare based solely on the the bound value and the list item - however there have been many, many reported cases where the items being compared are not equals() but can be be considered logically equal hence the extent of the comparisons being carried out.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="18492" author="dsurber" created="Mon, 10 Jul 2006 03:08:44 +0000"  >&lt;p&gt;I guessed that it was probably already fixed, but I&apos;m working under tight schedule constraints and I don&apos;t have time to chase upgrades that don&apos;t do anything useful for me. I&apos;ll upgrade to the latest RC and let you know.&lt;/p&gt;

&lt;p&gt;It still seems to me that comparing the value of the itemValue property is the right thing. If two items have the same value for the itemValue property then they are indistinguishable in a select box since that (the value of the itemValue property) is the value passed in the POST request. Maybe there is a need to fall back to the existing code if the itemValue property is not defined, but even there I would suggest that the right thing is to compare the default itemValue property (toString?). I&apos;ll be the first to admit I don&apos;t fully understand what the existing code is doing, but it seems far more complex than I would have expected. &lt;/p&gt;

&lt;p&gt;In any case, great job. &lt;/p&gt;

&lt;p&gt;Douglas&lt;/p&gt;</comment>
                            <comment id="18494" author="robh" created="Mon, 10 Jul 2006 03:52:04 +0000"  >&lt;p&gt;Douglas,&lt;/p&gt;

&lt;p&gt;Let me know if you encounter any problems - I&apos;m going to close this for now.&lt;/p&gt;

&lt;p&gt;With regards to selected value comparison, what you are describing is essentially what happens already. If the bound value is a scalar value (not a collection or array) then we first try to do a null safe equals comparison against the value of the itemValue property for a given element in the reference data list. If this comparison fails we then dive into the exhaustive comparison routine.&lt;/p&gt;

&lt;p&gt;The reason this has to occur is that, since we are in the world of binding inside the tags the value of itemValue property might be a complex object and the value coming may be either the String representation or the converted type. Of course, if it is a String we can&apos;t simply rely on toString() comparison, although we do try that pretty early on to be certain. The PropertyEditor-based approach covers most of the remaining special cases where the input value is still a String but the bound value is some complex scalar type and the PE is needed for String-&amp;gt;Object conversion.&lt;/p&gt;

&lt;p&gt;Hope this clears that up.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 25 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 10 Jul 2006 00:02:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04uvb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28375</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>