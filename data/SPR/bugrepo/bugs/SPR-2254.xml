<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:57:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2254/SPR-2254.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2254] CommonsPoolTargetSource throws NullPointerException on context initialization</title>
                <link>https://jira.spring.io/browse/SPR-2254</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;m trying to create a pool of Converter objects, so I won&apos;t have to initialize them every time, but Spring throws NullPointerException on context initialization. My config is 1:1 copy from documentation but it doesn&apos;t work. Tested on Spring 2.0 RC1 and Spring 2.0 RC2&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;converterTarget&quot;&lt;br/&gt;
		class=&quot;xxx.openoffice.Converter&quot;&lt;br/&gt;
		singleton=&quot;false&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;converterCommonsPoolTargetSource&quot;&lt;br/&gt;
		class=&quot;org.springframework.aop.target.CommonsPoolTargetSource&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;maxSize&quot; value=&quot;10&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;targetBeanName&quot; value=&quot;converterTarget&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;openOfficeConverter&quot;&lt;br/&gt;
		class=&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;targetSource&quot;&lt;br/&gt;
			ref=&quot;converterCommonsPoolTargetSource&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;2006-07-07 12:01:45,256 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.web.context.ContextLoader&amp;#93;&lt;/span&gt; Context initialization failed&lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;openOfficeConverter&apos;: FactoryBean threw exception on object creation; nested exception is java.lang.NullPointerException&lt;br/&gt;
Caused by: &lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.springframework.util.ClassUtils.getAllInterfacesForClassAsSet(ClassUtils.java:486)&lt;br/&gt;
	at org.springframework.util.ClassUtils.getAllInterfacesForClass(ClassUtils.java:464)&lt;br/&gt;
	at org.springframework.aop.framework.ProxyFactoryBean.getSingletonInstance(ProxyFactoryBean.java:300)&lt;br/&gt;
	at org.springframework.aop.framework.ProxyFactoryBean.getObject(ProxyFactoryBean.java:253)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectFromFactoryBean(AbstractBeanFactory.java:991)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:960)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:215)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:168)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:609)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:566)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:389)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:277)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:168)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:199)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:188)&lt;br/&gt;
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:181)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findMatchingBeans(DefaultListableBeanFactory.java:325)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:648)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:571)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:389)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:257)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:168)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getType(AbstractBeanFactory.java:392)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.isBeanTypeMatch(DefaultListableBeanFactory.java:228)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:141)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:194)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:188)&lt;br/&gt;
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:181)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findMatchingBeans(DefaultListableBeanFactory.java:325)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:648)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:571)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:389)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:257)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:168)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:254)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:332)&lt;br/&gt;
	at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:156)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:246)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:184)&lt;br/&gt;
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:49)&lt;br/&gt;
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3729)&lt;br/&gt;
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4187)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)&lt;br/&gt;
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:503)&lt;br/&gt;
	at org.jboss.mx.server.RawDynamicInvoker.invoke(RawDynamicInvoker.java:164)&lt;br/&gt;
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)&lt;br/&gt;
	at org.apache.catalina.core.StandardContext.init(StandardContext.java:5116)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
	at org.apache.commons.modeler.BaseModelMBean.invoke(BaseModelMBean.java:503)&lt;br/&gt;
	at org.jboss.mx.server.RawDynamicInvoker.invoke(RawDynamicInvoker.java:164)&lt;br/&gt;
	at org.jboss.mx.server.MBeanServerImpl.invoke(MBeanServerImpl.java:659)&lt;br/&gt;
	at &lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;</description>
            <key id="14458">SPR-2254</key>
            <summary>CommonsPoolTargetSource throws NullPointerException on context initialization</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="endriu">Andrzej Dengusiak</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 Jul 2006 22:46:44 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:30 +0000</updated>
                            <resolved>Thu, 13 Jul 2006 02:22:44 +0000</resolved>
                                    <version>2.0 RC1</version>
                    <version>2.0 RC2</version>
                                    <fixVersion>2.0 RC3</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="18445" author="asenft" created="Thu, 6 Jul 2006 22:55:36 +0000"  >
&lt;p&gt;An issue in the vicinity of this problem is that the implementation of ProxyFactory#getSingletonInstance doesn&apos;t seem to take into account that TargetSource#getTargetClass() is allowed to return null. Though, that is not causing the problem at hand (as I see it).&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Andreas&lt;/p&gt;</comment>
                            <comment id="18511" author="robh" created="Tue, 11 Jul 2006 00:50:09 +0000"  >&lt;p&gt;I committed a new test for this case as CommonsPoolTargetSourceProxyTests. Unfortunately, I cannot get this test case to fail so I am stumped as to how to reproduce this. Can you check the test case to see if it accurately reflects what you are doing? Also, test CVS HEAD against your codebase to see if this has been fixed already.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="18532" author="endriu" created="Tue, 11 Jul 2006 22:14:30 +0000"  >&lt;p&gt;I&apos;ve made some changes to my config files and now I can&apos;t reproduce this error anymore neither on 2.0RC1 nor RC2 nor HEAD. My spring config had default-autowire=&quot;autodetect&quot; and I think this was the cause of error.&lt;br/&gt;
I&apos;ve switched to default-autowire=&quot;byName&quot; and now it works.&lt;/p&gt;

&lt;p&gt;Setting default-autowire=&quot;autodetect&quot; gives me now:&lt;/p&gt;

&lt;p&gt;2006-07-12 13:03:59,487 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.web.context.ContextLoader&amp;#93;&lt;/span&gt; Context initialization failed&lt;br/&gt;
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &apos;openOfficeConverter&apos; defined in ServletContext resource &lt;span class=&quot;error&quot;&gt;&amp;#91;/WEB-INF/applicationContext-eucore.xml&amp;#93;&lt;/span&gt;: Unsatisfied dependency expressed through bean property &apos;target&apos;: There are 71 beans of type &lt;span class=&quot;error&quot;&gt;&amp;#91;class java.lang.Object&amp;#93;&lt;/span&gt; for autowire by type. There should have been exactly 1 to be able to autowire property &apos;target&apos; of bean &apos;openOfficeConverter&apos;. Consider using autowire by name instead.&lt;/p&gt;

&lt;p&gt;As I can&apos;t reproduce my original error and this one is very clear I think you should close this issue. Sorry for bothering.&lt;br/&gt;
endriu&lt;/p&gt;</comment>
                            <comment id="18566" author="robh" created="Thu, 13 Jul 2006 02:22:44 +0000"  >&lt;p&gt;If this issues occurs again - please feel free to raise another issue.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 25 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 6 Jul 2006 22:55:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04utr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28368</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>