<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:54:43 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2729/SPR-2729.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2729] org.springframework.scheduling.commonj.DelegatingWork class needs a getRunnable() to return the runnable object contained in DelegatingWork object.</title>
                <link>https://jira.spring.io/browse/SPR-2729</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Once we schedule the Runnable object with WorkManagerTaskExecutor a WorkItem is returned to track the work submitted. There is a getResult() method in WorkItem to return the work object submitted. This method now returns the DelegatingWork object as it was used to submit the work. There is no method available currently to retrieve the actual Runnable object that is contained inside the DelegatingWork object. As the results are stored in the Runnable object and it needs to be retrieved for using the results. This problem can be solved by adding a getRunnable() method to DelegatingWork class and this method should return the contained runnable object.&lt;/p&gt;

&lt;p&gt;Optionally the runnable objects could be saved to be reused later for results but I think adding above method provides a clean implementation and is in sync with how workmanager API is used.&lt;/p&gt;
</description>
            <key id="15251">SPR-2729</key>
            <summary>org.springframework.scheduling.commonj.DelegatingWork class needs a getRunnable() to return the runnable object contained in DelegatingWork object.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="srl"> sr l</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Oct 2006 04:00:56 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:02 +0000</updated>
                            <resolved>Thu, 19 Oct 2006 23:38:11 +0000</resolved>
                                    <version>2.0 final</version>
                                    <fixVersion>2.0.1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="20349" author="juergen.hoeller" created="Thu, 19 Oct 2006 23:38:11 +0000"  >&lt;p&gt;Thanks for pointing this out! DelegatingWork exposes the wrapped Runnable implementation through its &quot;getRunnable()&quot; method now.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="20352" author="juergen.hoeller" created="Thu, 19 Oct 2006 23:44:05 +0000"  >&lt;p&gt;Small change: I&apos;ve named the method &quot;getDelegate()&quot; to reflect that it is the wrapped underlying Runnable - not the Work instance itself, which implements the Runnable interface as well...&lt;/p&gt;

&lt;p&gt;I&apos;ve also added corresponding &quot;getDelegate()&quot; method to DelegatingTimerTask and DelegatingJob.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 10 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Oct 2006 23:38:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00viv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5152</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>