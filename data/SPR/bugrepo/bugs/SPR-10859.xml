<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:26:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-10859/SPR-10859.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-10859] Provide better intercepting model for controllers returning @ResponseBody</title>
                <link>https://jira.spring.io/browse/SPR-10859</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;m using Spring as rest server where all controller actions return @ResponseBody annotated results. Just like Twitter I&apos;m implementing &apos;suppress_response_codes&apos; functionality.&lt;/p&gt;

&lt;p&gt;Normally I will return json response like:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;HTTP Status&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Body&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;200&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;{ &quot;first_name&quot;: &quot;Marcel&quot;, &quot;last_name&quot;: &quot;Overdijk&quot; }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;400&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;{ &quot;error&quot;: &quot;the error message&quot; }&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;But with a &lt;tt&gt;suppress_response_codes=true&lt;/tt&gt; query param in the request it is:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;HTTP Status&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Body&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;200&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;{ &quot;status&quot;: 200, &quot;data&quot;: { &quot;first_name&quot;: &quot;Marcel&quot;, &quot;last_name&quot;: &quot;Overdijk&quot; } }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;200&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;{ &quot;status&quot;: 400, &quot;data&quot;: { &quot;error&quot;: &quot;the error message&quot; } }&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;Implementing a HandlerInterceptor does not seem the best fit for intercepting controller actions returning @ResponseBody responsed as the converter seems to have already send the data in the postHandle.&lt;/p&gt;

&lt;p&gt;There should be decent intercepting model for @ResponseBody where it&apos;s possible to retrieve the original object being returned by the controller actions.&lt;/p&gt;</description>
            <key id="50522">SPR-10859</key>
            <summary>Provide better intercepting model for controllers returning @ResponseBody</summary>
                <type id="2" iconUrl="https://jira.spring.io/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="rstoya05-aop">Rossen Stoyanchev</assignee>
                                    <reporter username="marceloverdijk">Marcel Overdijk</reporter>
                        <labels>
                    </labels>
                <created>Mon, 26 Aug 2013 06:11:42 +0000</created>
                <updated>Thu, 30 Oct 2014 07:18:46 +0000</updated>
                            <resolved>Mon, 19 May 2014 13:06:54 +0000</resolved>
                                    <version>3.2.4</version>
                                    <fixVersion>4.1 RC1</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>12</watches>
                                                                <comments>
                            <comment id="93081" author="michael-o" created="Mon, 26 Aug 2013 10:27:57 +0000"  >&lt;p&gt;Isn&apos;t it absolutely pointless to repeat the same information again? I don&apos;t think that twitter is a good example here.&lt;/p&gt;</comment>
                            <comment id="93083" author="marceloverdijk" created="Mon, 26 Aug 2013 13:11:38 +0000"  >&lt;p&gt;~michael-o what point are you trying to make? your comment is completely worthless...&lt;/p&gt;</comment>
                            <comment id="93091" author="michael-o" created="Tue, 27 Aug 2013 01:14:50 +0000"  >&lt;p&gt;Your usecase is a bad example because the information in the response is redundant. There is no need to duplicate the response code.&lt;/p&gt;</comment>
                            <comment id="93095" author="marceloverdijk" created="Tue, 27 Aug 2013 03:25:01 +0000"  >&lt;p&gt;The response code is not duplicated.&lt;br/&gt;
The use case is sending a http 200 always and having the actual status code in response body.&lt;br/&gt;
Please read the ticket.&lt;/p&gt;</comment>
                            <comment id="93102" author="michael-o" created="Tue, 27 Aug 2013 06:33:02 +0000"  >&lt;p&gt;My bad, did not read careful enough. I have encountered such an API before. It remains bad design. This isn&apos;t REST because you do abuse the HTTP status codes.&lt;/p&gt;</comment>
                            <comment id="93132" author="jbrisbin" created="Wed, 28 Aug 2013 06:17:46 +0000"  >&lt;p&gt;This is simply JSONP without the function call. It&apos;s not abusing HTTP status codes but ensuring that handlers are always invoked no matter the outcome according to the status, which might be correct in a RESTful situation but can&apos;t be dealt with in a purely RESTful way because a browser isn&apos;t a RESTful client (it makes certain assumptions in the Ajax APIs that don&apos;t always fit well with what&apos;s being accomplished).&lt;/p&gt;

&lt;p&gt;If using JSONP, a similar situation exists where you need to take a string of JSON, change the Content-Type to application/javascript, change the HTTP status code to ensure that the Ajax library will actually invoke the function, and wrap the text with a call to a Javascript function. All this should happen &lt;b&gt;after&lt;/b&gt; all the other normal JSON processing. Currently, however, it&apos;s hard to do this with anything other than a ServletFilter.&lt;/p&gt;</comment>
                            <comment id="93154" author="marceloverdijk" created="Wed, 28 Aug 2013 14:16:16 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=jbrisbin&quot; class=&quot;user-hover&quot; rel=&quot;jbrisbin&quot;&gt;Jon Brisbin&lt;/a&gt; Please vote for issue if you think this is important, so it might get attention from from Spring devs.&lt;/p&gt;</comment>
                            <comment id="93233" author="sgluschenko" created="Sun, 1 Sep 2013 09:20:47 +0000"  >&lt;p&gt;The other usecase is that I need to add completely custom headers to response, while controller&apos;s methods are returning @ResponseBody&lt;/p&gt;</comment>
                            <comment id="93234" author="michael-o" created="Sun, 1 Sep 2013 10:22:36 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=sgluschenko&quot; class=&quot;user-hover&quot; rel=&quot;sgluschenko&quot;&gt;Sergey Gluschenko&lt;/a&gt;, why don&apos;t you simply use &lt;tt&gt;ResponseEntity&lt;/tt&gt;?&lt;/p&gt;</comment>
                            <comment id="93280" author="sgluschenko" created="Mon, 2 Sep 2013 06:48:03 +0000"  >&lt;p&gt;Michael Osipov, that&apos;s because I&apos;m writing an utility and I don&apos;t want to force end users to change their preferred approach of working with Spring MVC. I accept your proposal as a workaround, but I think you&apos;ll agree that there is already a number of live usecases that require improvement requested.&lt;/p&gt;</comment>
                            <comment id="93291" author="michael-o" created="Mon, 2 Sep 2013 10:55:47 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=sgluschenko&quot; class=&quot;user-hover&quot; rel=&quot;sgluschenko&quot;&gt;Sergey Gluschenko&lt;/a&gt;, yes, I do agree. I have created a similar ticket ages ago, see &lt;a href=&quot;https://jira.spring.io/browse/SPR-9980&quot; title=&quot;Make @RequestMapping inject the negotiated MediaType&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9980&quot;&gt;&lt;del&gt;SPR-9980&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="93525" author="chouksey17" created="Wed, 11 Sep 2013 22:17:25 +0000"  >&lt;p&gt;I do have a use case where we need to add customer header to response and our current approach is based on @ResponseBody and we dont want to change our implementation. As Sergey Gluschenko mentioned, this will be a good option to improvise.&lt;/p&gt;
</comment>
                            <comment id="99615" author="jasone" created="Fri, 28 Feb 2014 22:46:23 +0000"  >&lt;p&gt;I have a use case where I need to generate response headers where the header content depends on data generated during the request. I&apos;m currently using @ResponseBody widely and this issue is unexpected and a real pain. (I wish the need for @ResponseBody could be autodetected instead of manually setting this annotation on every method but thats another issue).&lt;/p&gt;</comment>
                            <comment id="99616" author="jasone" created="Fri, 28 Feb 2014 23:03:30 +0000"  >&lt;p&gt;I have a use case where I need to generate response headers where the header content depends on data generated during the request. I&apos;m currently using @ResponseBody widely and this issue is unexpected and a real pain. (I wish the need for @ResponseBody could be autodetected instead of manually setting this annotation on every method but thats another issue).&lt;/p&gt;

&lt;p&gt;I also tried this without @ResponseBody, using ResponseEntity instead and it made no difference. The response is always committed from ServletInvocableHandlerMethod before postHandle is called &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/sad.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

</comment>
                            <comment id="99675" author="rstoya05-aop" created="Mon, 3 Mar 2014 08:56:50 +0000"  >&lt;blockquote&gt;&lt;p&gt;I wish the need for @ResponseBody could be autodetected&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not sure I understand exactly what you mean but if you haven&apos;t yet, check &lt;tt&gt;@RestController&lt;/tt&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The response is always committed from ServletInvocableHandlerMethod before postHandle is called&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually we don&apos;t do that, at least not explicitly. There were some converters that would cause the OutputStream to be closed but those were fixed (see &lt;a href=&quot;https://github.com/spring-projects/spring-framework/commit/6661788748daccfc8d08b4a17a66beb4f01fc7b8&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this commit&lt;/a&gt;). Keep in mind however that when the content written to the response exceeds the Servlet container output buffer, at that point the response is committed. So waiting until after the content has been written isn&apos;t necessarily going to work and any additional &quot;post&quot;-writing hooks we provide through this ticket isn&apos;t going to change that .&lt;/p&gt;</comment>
                            <comment id="103478" author="jbrisbin" created="Fri, 16 May 2014 12:57:38 +0000"  >&lt;p&gt;I had to do something like this for JSONP support. It basically had to always return a 200 no matter what happened in the `@Controller` so it could return JavaScript that could be eval&apos;d in the browser to invoke an error handler. I did this by extending `RequestMappingHandlerMapping` and implementing my own invocation logic.&lt;/p&gt;</comment>
                            <comment id="103487" author="jeacott" created="Fri, 16 May 2014 16:40:02 +0000"  >&lt;p&gt;I ended up using an Aspect on my controller methods to modify all my responses. &lt;/p&gt;</comment>
                            <comment id="103610" author="rstoya05-aop" created="Mon, 19 May 2014 13:05:29 +0000"  >&lt;p&gt;Support for this has been added in the master branch.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/spring-projects/spring-framework/commit/96b18c8dc22c0c57605a594b21ceec84ec16ee37&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;commit 96b18c&lt;/a&gt; that adds &lt;tt&gt;ResponseBodyInterceptor&lt;/tt&gt; and also the next &lt;a href=&quot;https://github.com/spring-projects/spring-framework/commit/51fc3b4aaf01a3d8f8f0f9ec98f5e5c1215cc096&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;commit 51fc3b&lt;/a&gt; with a concrete &lt;tt&gt;JsonViewResponseBodyInterceptor&lt;/tt&gt; implementation. And &lt;a href=&quot;https://github.com/spring-projects/spring-framework/blob/51fc3b4aaf01a3d8f8f0f9ec98f5e5c1215cc096/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapterTests.java#L326-L339&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;here is a test&lt;/a&gt; that is based on the example in the original description.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Update May 30, 2014:&lt;/b&gt; &lt;tt&gt;ResponseBodyInterceptor&lt;/tt&gt; renamed to &lt;tt&gt;ResponseBodyAdvice&lt;/tt&gt;. &lt;/p&gt;
</comment>
                            <comment id="103611" author="rstoya05-aop" created="Mon, 19 May 2014 13:06:54 +0000"  >&lt;p&gt;Marking as resolved for now but this is very much still open for further refinements based on feedback!&lt;/p&gt;</comment>
                            <comment id="103645" author="rstoya05-aop" created="Tue, 20 May 2014 09:18:44 +0000"  >&lt;p&gt;I&apos;ve also added a JSONP &lt;tt&gt;ResponseBodyInterceptor&lt;/tt&gt; base class (&lt;a href=&quot;https://github.com/spring-projects/spring-framework/commit/1338d46a6ed6595dc73f3cac675d7e6c04f17da1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;see commit 1338d4&lt;/a&gt;). Also &lt;a href=&quot;https://github.com/spring-projects/spring-framework/blob/1338d46a6ed6595dc73f3cac675d7e6c04f17da1/spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapterTests.java#L341-L365&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;see updated test&lt;/a&gt; with JSONP advice.&lt;/p&gt;</comment>
                            <comment id="107578" author="khkwang" created="Sat, 6 Sep 2014 22:02:26 +0000"  >&lt;p&gt;Hey Rossen, first off awesome work on this piece! It&apos;s perfect for my needs of wrapping the return values from my Controllers.&lt;/p&gt;

&lt;p&gt;However, one small thing preventing me from making proper use of it is that the Advice is not triggered when the return value is null. I opened an issue about this &lt;a href=&quot;https://jira.spring.io/browse/SPR-12152&quot; title=&quot;ResponseBodyAdvice to accept null values?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-12152&quot;&gt;&lt;del&gt;SPR-12152&lt;/del&gt;&lt;/a&gt;. It would be great if you can take a look when you have time. Thanks.&lt;/p&gt;</comment>
                            <comment id="109180" author="marceloverdijk" created="Thu, 30 Oct 2014 02:29:07 +0000"  >&lt;p&gt;Nice to see this feature.&lt;br/&gt;
As the changed class is named &quot;ResponseBodyAdvice&quot; (Body) I wonder if this class should also be used to only add a Header to controllers returning ResponseEntity&apos;s?&lt;/p&gt;</comment>
                            <comment id="109190" author="rstoya05-aop" created="Thu, 30 Oct 2014 07:18:46 +0000"  >&lt;p&gt;Thanks and thanks for suggesting the idea! &lt;/p&gt;

&lt;p&gt;Yes you have a point about the name. It is meant as a reference to @ResponseBody-style methods where we use HttpMessageConverter&apos;s handle the controller&apos;s return value and for that ResponseEntity is another alternative (and a super set). So take the name for what it is, a compromise that&apos;s meant to be intuitive. The contract itself and the Javadoc should make it clear what you can do.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10150">
                    <name>Depend</name>
                                                                <inwardlinks description="is depended on by">
                                        <issuelink>
            <issuekey id="45795">SPR-9899</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="47699">SPR-10367</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="57604">SPR-11760</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="31200">SPR-7156</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10130">
                    <name>Supersede</name>
                                            <outwardlinks description="supersedes">
                                        <issuelink>
            <issuekey id="42562">SPR-9226</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="35924">SPR-7897</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        2 years, 8 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 26 Aug 2013 10:27:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>rstoya05-aop</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06jbb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38167</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>