<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:17:14 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2967/SPR-2967.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2967] NullPointerException in PathMatchingResourcePatternResolver on Resin</title>
                <link>https://jira.spring.io/browse/SPR-2967</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Application deployment fails with the following stack trace:&lt;/p&gt;

&lt;p&gt;ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;resin-36&amp;#93;&lt;/span&gt; (ContextLoader.java:205) - Context initialization failed&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:390)&lt;br/&gt;
        at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:318)&lt;br/&gt;
        at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:242)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.getResources(AbstractApplicationContext.java:770)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:141)&lt;br/&gt;
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:123)&lt;br/&gt;
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:91)&lt;br/&gt;
        at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:94)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:292)&lt;br/&gt;
        at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:156)&lt;br/&gt;
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:246)&lt;br/&gt;
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:184)&lt;br/&gt;
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:49)&lt;br/&gt;
        at com.caucho.server.webapp.Application.start(Application.java:1647)&lt;br/&gt;
        at com.caucho.server.deploy.DeployController.startImpl(DeployController.java:621)&lt;br/&gt;
        at com.caucho.server.deploy.DeployController.restartImpl(DeployController.java:584)&lt;br/&gt;
        at com.caucho.server.deploy.StartAutoRedeployAutoStrategy.alarm(StartAutoRedeployAutoStrategy.java:176)&lt;br/&gt;
        at com.caucho.server.deploy.DeployController.handleAlarm(DeployController.java:742)&lt;br/&gt;
        at com.caucho.util.Alarm.handleAlarm(Alarm.java:339)&lt;br/&gt;
        at com.caucho.util.Alarm.run(Alarm.java:309)&lt;br/&gt;
        at com.caucho.util.ThreadPool.runTasks(ThreadPool.java:516)&lt;br/&gt;
        at com.caucho.util.ThreadPool.run(ThreadPool.java:442)&lt;br/&gt;
        at java.lang.Thread.run(Thread.java:595)&lt;/p&gt;


&lt;p&gt;The code looks like (exception on marked line):&lt;/p&gt;

&lt;p&gt;	protected Set doFindPathMatchingJarResources(Resource rootDirResource, String subPattern) throws IOException {&lt;br/&gt;
		URLConnection con = rootDirResource.getURL().openConnection();&lt;br/&gt;
		JarFile jarFile = null;&lt;br/&gt;
		String jarFileUrl = null;&lt;br/&gt;
		String rootEntryPath = null;&lt;/p&gt;

&lt;p&gt;		if (con instanceof JarURLConnection) &lt;/p&gt;
{
			// Should usually be the case for traditional JAR files.
			JarURLConnection jarCon = (JarURLConnection) con;
			jarFile = jarCon.getJarFile();
			jarFileUrl = jarCon.getJarFileURL().toExternalForm();
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;		rootEntryPath = jarCon.getJarEntry().getName();
		}
&lt;p&gt;		else {&lt;br/&gt;
			// No JarURLConnection -&amp;gt; need to resort to URL file parsing.&lt;/p&gt;


&lt;p&gt;JavaDoc for JarURLConnection.getJarEntry() says:&lt;/p&gt;

&lt;p&gt;Returns:&lt;br/&gt;
    the JAR entry object for this connection, or null if the JAR URL for this connection points to a JAR file.&lt;/p&gt;

&lt;p&gt;Connecting with a debugger reveals that the classpath component that is being inspected when exception is thrown indeed is a jar file, namely &amp;lt;RESIN_HOME&amp;gt;/lib/activation.jar!/&lt;/p&gt;

&lt;p&gt;Changing the marked line to the folowing code (a kludge, I know) fixes the problem:&lt;/p&gt;

&lt;p&gt;                        if (jarCon.getJarEntry() == null)&lt;br/&gt;
                                rootEntryPath = jarFileUrl + &quot;!&quot;;&lt;br/&gt;
                        else&lt;br/&gt;
                                rootEntryPath = jarCon.getJarEntry().getName();&lt;/p&gt;

&lt;p&gt;regards,&lt;/p&gt;

&lt;p&gt;Marcin&lt;/p&gt;</description>
            <key id="15731">SPR-2967</key>
            <summary>NullPointerException in PathMatchingResourcePatternResolver on Resin</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="porridge">Marcin Owsiany</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Dec 2006 22:51:13 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:52 +0000</updated>
                            <resolved>Wed, 20 Dec 2006 09:32:02 +0000</resolved>
                                    <version>1.2.8</version>
                    <version>2.0.1</version>
                                    <fixVersion>2.0.2</fixVersion>
                    <fixVersion>1.2.9</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="21367" author="porridge" created="Wed, 20 Dec 2006 01:21:36 +0000"  >&lt;p&gt;I forgot to mention - for some reason this does not happen when we deploy on Tomcat.&lt;/p&gt;</comment>
                            <comment id="21381" author="juergen.hoeller" created="Wed, 20 Dec 2006 09:32:02 +0000"  >&lt;p&gt;Thanks for pointing this out! The standard Sun ClassLoader never resolves jar file roots in the first place, which is why patterns such as &quot;classpath*:*&lt;b&gt;/&lt;/b&gt;.xml&quot; are not guaranteed to work reliably. Resin&apos;s ClassLoader seems to return jar file roots there, in which case the JarEntry is null... I&apos;ve added a corresponding check.&lt;/p&gt;

&lt;p&gt;Please give this a try! The fix should be in the next nightly 2.0.2 snapshot (&lt;a href=&quot;http://www.springframework.org/snapshots&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/snapshots&lt;/a&gt;), and will also make it into the 1.2.9 release.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 2 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 20 Dec 2006 09:32:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00v0v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5071</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>