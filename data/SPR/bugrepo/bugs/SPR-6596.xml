<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:25:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-6596/SPR-6596.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-6596] Parameterized ApplicationListener does not work with AOP proxies</title>
                <link>https://jira.spring.io/browse/SPR-6596</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The documentation for 3.0 does not illustrate a parameterized &apos;ApplicationListener&apos;.  Assuming that the 2.5.x method applies, we find that events are not filtered prior to invoking the ApplicationListener and that, as a result, parameterized listeners cannot be used in 3.0.0.&lt;/p&gt;


&lt;p&gt;The ApplicationListener bean is registered in the applicationContext.xml as per usual:&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;sessionEvents&quot; class=&quot;org.example.SessionEventListener&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;The code established the appropriate callback:&lt;/p&gt;

&lt;p&gt;    public class SessionEventListener implements ApplicationListener&amp;lt;AbstractAuthenticationEvent&amp;gt; {&lt;br/&gt;
        public void onApplicationEvent(AbstractAuthenticationEvent authEvent) &lt;/p&gt;
{
            ...
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;But the events are not properly converted.&lt;/p&gt;

&lt;p&gt;java.lang.IllegalStateException: Failed to load ApplicationContext&lt;br/&gt;
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:308)&lt;br/&gt;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)&lt;br/&gt;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)&lt;br/&gt;
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:333)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:220)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:301)&lt;br/&gt;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:303)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)&lt;br/&gt;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&lt;br/&gt;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)&lt;br/&gt;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)&lt;br/&gt;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)&lt;br/&gt;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)&lt;br/&gt;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&lt;br/&gt;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;br/&gt;
Caused by: java.lang.ClassCastException: org.springframework.context.event.ContextRefreshedEvent cannot be cast to org.springframework.security.event.authentication.AbstractAuthenticationEvent&lt;br/&gt;
	at org.example.SessionEventListener.onApplicationEvent(SessionEventListener.java:29)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)&lt;br/&gt;
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:107)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)&lt;br/&gt;
	at $Proxy32.onApplicationEvent(Unknown Source)&lt;br/&gt;
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:97)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:294)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:858)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:419)&lt;br/&gt;
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:84)&lt;br/&gt;
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)&lt;br/&gt;
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:280)&lt;br/&gt;
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:304)&lt;br/&gt;
	... 24 more&lt;/p&gt;

</description>
            <key id="29346">SPR-6596</key>
            <summary>Parameterized ApplicationListener does not work with AOP proxies</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="jerry@jerrycarter.org">Jerry Carter</reporter>
                        <labels>
                    </labels>
                <created>Mon, 21 Dec 2009 06:20:27 +0000</created>
                <updated>Tue, 19 Jun 2012 03:43:50 +0000</updated>
                            <resolved>Mon, 11 Jan 2010 20:21:25 +0000</resolved>
                                    <version>3.0 GA</version>
                                    <fixVersion>3.0.1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="49535" author="jerry@jerrycarter.org" created="Mon, 21 Dec 2009 06:30:38 +0000"  >&lt;p&gt;Looking into potential similarity to &amp;lt;&lt;a href=&quot;http://jira.springframework.org/browse/SPR-5974&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.springframework.org/browse/SPR-5974&lt;/a&gt;&amp;gt;.&lt;/p&gt;</comment>
                            <comment id="49536" author="jerry@jerrycarter.org" created="Mon, 21 Dec 2009 07:00:46 +0000"  >&lt;p&gt;This appears to be a real bug.&lt;/p&gt;

&lt;p&gt;SimpleApplicationEventMulticaster.supportsEvent invokes GenericApplicationListenerAdapter.supportsEventType which in turn asks GenericTypeResolver.resolveTypeArgument for the class of the type argument.  The relevant code follows:&lt;/p&gt;

&lt;p&gt;	public boolean supportsEventType(Class&amp;lt;? extends ApplicationEvent&amp;gt; eventType) &lt;/p&gt;
{
		Class typeArg = GenericTypeResolver.resolveTypeArgument(this.delegate.getClass(), ApplicationListener.class);
		return (typeArg == null || typeArg.isAssignableFrom(eventType));
	}

&lt;p&gt;If the returned type is &apos;null&apos;, the ApplicationListener will be invoked.  Here the listener is parameterized by a class (SessionEventListener) but the GenericTypeResolver.resolveTypeArgument is returning null.  This causes the listener to be called for a parameter which it cannot support.&lt;/p&gt;</comment>
                            <comment id="50110" author="juergen.hoeller" created="Mon, 11 Jan 2010 20:21:25 +0000"  >&lt;p&gt;This fortunately got discovered and fixed a while ago. The issue should be fixed in recent 3.0.1 snapshots already; please give it a try and let us know whether it works for you!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="29598">SPR-6671</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        6 years, 50 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Jan 2010 20:21:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02ofj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15667</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>