<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:45:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2950/SPR-2950.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2950] Improper String treatment by StatementCreatorUtils.setParameterValue</title>
                <link>https://jira.spring.io/browse/SPR-2950</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;Folowing call for getJdbcTemplate().query(sql,new Object[]&lt;/p&gt;
{&quot;001&quot;},new RowCallbackHandler(){...});&lt;br/&gt;
may result in improper data. The same is true for getJdbcTemplate().update(&quot;select mumu from SOME_TABLE where umum=?&quot;,new Object[]{&quot;001&quot;}
&lt;p&gt;);&lt;br/&gt;
but in latter case data in DB may be corrupted so this issue is rather critical.&lt;/p&gt;

&lt;p&gt;The problem is caused by following code in StatementCreatorUtils.setParameterValue (that presumable has appeared there as result of SPR--1150 resolution, &lt;a href=&quot;http://opensource.atlassian.com/projects/spring/browse/SPR-1150&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://opensource.atlassian.com/projects/spring/browse/SPR-1150&lt;/a&gt;), line 186 in 2.0.1.&lt;/p&gt;

&lt;p&gt;else if (sqlType == SqlTypeValue.TYPE_UNKNOWN) {&lt;br/&gt;
//-----------------&amp;gt; Offendig check !!!!&lt;br/&gt;
	if (inValue instanceof StringBuffer || inValue instanceof StringWriter) &lt;/p&gt;
{
		ps.setString(paramIndex, inValue.toString());
	}
&lt;p&gt;	else if ((inValue instanceof java.util.Date) &amp;amp;&amp;amp; !(inValue instanceof java.sql.Date ||&lt;br/&gt;
		inValue instanceof java.sql.Time || inValue instanceof java.sql.Timestamp)) &lt;/p&gt;
{
		ps.setTimestamp(paramIndex, new java.sql.Timestamp(((java.util.Date) inValue).getTime()));
	}
&lt;p&gt;	else if (inValue instanceof Calendar) &lt;/p&gt;
{
		Calendar cal = (Calendar) inValue;
		ps.setTimestamp(paramIndex, new java.sql.Timestamp(cal.getTime().getTime()));
	}
&lt;p&gt;	else &lt;/p&gt;
{
		// Fall back to generic setObject call without SQL type specified.
		ps.setObject(paramIndex, inValue);
	}
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;As it can be seen from this code, StringBuffer gets special treatment and is recognized as string, but String itself  (along with StringBuider)- not! &lt;br/&gt;
As result databases treat this as parameter as integer if it is string representation of integer, that may render invalid results, &lt;br/&gt;
especially  if string has leading zeros. Do not know, if this behavior is database dependent, but at least Oracle exhibits it.&lt;/p&gt;

&lt;p&gt;In my opinion above-marked check should look as follows&lt;/p&gt;

&lt;p&gt;	if (inValue instanceof CharcterSequence || inValue instanceof StringWriter) {&lt;/p&gt;

&lt;p&gt;Regards, &lt;br/&gt;
Oleksandr&lt;/p&gt;
</description>
            <key id="15700">SPR-2950</key>
            <summary>Improper String treatment by StatementCreatorUtils.setParameterValue</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="al0">Oleksandr Alesinskyy</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Dec 2006 05:23:34 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:05 +0000</updated>
                            <resolved>Sat, 16 Dec 2006 04:38:01 +0000</resolved>
                                    <version>1.2.8</version>
                    <version>2.0.1</version>
                                    <fixVersion>2.0.2</fixVersion>
                    <fixVersion>1.2.9</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="21319" author="juergen.hoeller" created="Sat, 16 Dec 2006 04:38:01 +0000"  >&lt;p&gt;Thanks for the suggestion! We do treat all CharSequences as String values now in Spring 2.0.2 (which requires a JDK 1.4 check and is more far-reaching than the immediate fix for String itself), and simply explicitly treat a given String as String value in Spring 1.2.9 (immediate fix with minimal side effects).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21390" author="al0" created="Wed, 20 Dec 2006 22:57:56 +0000"  >&lt;p&gt;Thank you. I dare to suggest to add to 1.2.9 special treatment for StringBuilder (with JDK 1.5 check) or, at least, make a worning in the documentation.&lt;/p&gt;</comment>
                            <comment id="21396" author="juergen.hoeller" created="Thu, 21 Dec 2006 03:02:13 +0000"  >&lt;p&gt;OK, I&apos;ve backported the full CharSequence check to 1.2.9. I guess there won&apos;t be too many unintended CharSequences flying around...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 2 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 16 Dec 2006 04:38:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00v1j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5074</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>