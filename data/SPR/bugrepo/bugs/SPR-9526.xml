<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:39:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-9526/SPR-9526.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-9526] Ignore duplicated import files or property-placeholder files</title>
                <link>https://jira.spring.io/browse/SPR-9526</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;We have a web service architecture where any service (API - Int/Impl) could be exposed as a web service.  Because of this we have very granular deployment artifacts where each service builds down to a JAR.  That way we can pick and chose what JARs create a web service implementation (into a WAR).  Because of this we have duplicated property file imports and context file imports, but we know it is going to happen because each individual service needs to be buildable, runnable, and testable...and then it might be composed into a larger service.&lt;/p&gt;

&lt;p&gt;The example from this thread:&lt;br/&gt;
&lt;a href=&quot;http://forum.springsource.org/showthread.php?36482-Preventing-Spring-Context-to-be-loaded-more-than-once&amp;amp;highlight=duplicate+context+files&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springsource.org/showthread.php?36482-Preventing-Spring-Context-to-be-loaded-more-than-once&amp;amp;highlight=duplicate+context+files&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Is a perfect example:&lt;br/&gt;
&lt;a href=&quot;http://piotrga.wordpress.com/2007/03/21/preventing-spring-context-to-be-loaded-more-than-once/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://piotrga.wordpress.com/2007/03/21/preventing-spring-context-to-be-loaded-more-than-once/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We might Service B (which is it&apos;s own WAR), Service C (which is it&apos;s own WAR), and also a Service A (which has dependencies on Service B/C) and therefore pulls in duplicate import statements for the same context file.&lt;/p&gt;

&lt;p&gt;The following is a post that I made, without a response, describing the same issue with the property-placeholder.&lt;br/&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/8949174/does-spring-ignore-duplicate-property-placeholder-files&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/8949174/does-spring-ignore-duplicate-property-placeholder-files&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since we are aware of the duplicates, we don&apos;t want to have exceptions thrown when encountering duplicate bean ids.  We don&apos;t receive these errors/issues, but we can see that the duplicate files are loaded and override each other.&lt;/p&gt;

&lt;p&gt;It would be beneficial if both the import and property-placeholder had the capability to ignore-duplicate-files, or via a property in a custom ApplicationContext (like we extend XmlWebApplicationContext) which would allow the ignore-duplicate-files for properties or bean context files.&lt;/p&gt;</description>
            <key id="43962">SPR-9526</key>
            <summary>Ignore duplicated import files or property-placeholder files</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="1" iconUrl="https://jira.spring.io/images/icons/statuses/open.png" description="The issue is open and ready for the assignee to start work on it.">Open</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="jaybytez">Jay Blanton</reporter>
                        <labels>
                    </labels>
                <created>Wed, 20 Jun 2012 15:08:44 +0000</created>
                <updated>Thu, 11 Jun 2015 02:55:23 +0000</updated>
                                            <version>3.0.5</version>
                                    <fixVersion>Waiting for Triage</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>9</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="95805" author="vkopichenko" created="Thu, 21 Nov 2013 23:14:26 +0000"  >&lt;p&gt;This feature would be very convenient to handle transitive dependencies in multi-module projects.&lt;/p&gt;

&lt;p&gt;Currently spring forces us to explicitly import in the main application context all submodules&apos; contexts and contexts of their third-party dependencies.&lt;/p&gt;

&lt;p&gt;Alternatively, we could allow submodules to import their own context dependencies in their own context.&lt;/p&gt;

&lt;p&gt;Then any client module could import just contexts of modules it directly depends on without bothering with transitive dependencies.&lt;br/&gt;
This would also greatly simplify supporting multiple main application contexts and conditional activation of parts of application with spring profiles.&lt;/p&gt;</comment>
                            <comment id="116537" author="lucian" created="Wed, 10 Jun 2015 19:06:38 +0000"  >&lt;p&gt;The feature is very helpful in our projects. We have several modules with spring framework. some depend on others. without importing, we have to fix a lot of errors at runtime, duplicate many lines of xml config at the top modules. This kind of job take a lot of time, and unnecessary. It is really painful. Even worse, if the lower-level modules change their dependencies(like refactoring), the configs of every upper-level modules have got to be changed.&lt;/p&gt;</comment>
                            <comment id="116544" author="lucian" created="Thu, 11 Jun 2015 02:55:23 +0000"  >&lt;p&gt;Surely, if we let the lower-level module resolve its own injection,  it will lose the flexibility that we can change the implementation  at the high level. but in most cases I think,  the injection should be resolved at some level,   the top level doesn&apos;t need take care of injection at every level.&lt;br/&gt;
(I talked to someone who is familiar with dagger, he told me that in dagger, the modules resolve theirselves&apos; injections,  which means:&lt;br/&gt;
moduleA is the instances injected by using configA,  moduleB is the instances injected by using configB)&lt;/p&gt;

&lt;p&gt;I know there might be some problems, for instance,  there modules A, B, C A depends on B, C,  B depends on C&lt;br/&gt;
B resolve the injection of C by using config One,   if A wants to resolve injection for C by using config Two,  what is supposed to do? &lt;/p&gt;

&lt;p&gt;Or if B resolves the injection of C (or even C resolves its own injection),  can A replace the injection for C(by some kind of overriding?)&lt;/p&gt;



</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="57595">SPR-11757</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="11988">SPR-1142</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        1 year, 28 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 21 Nov 2013 23:14:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>lucian</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05nxj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33083</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?36482-Preventing-Spring-Context-to-be-loaded-more-than-once&highlight=duplicate+context+files]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    </customfields>
    </item>
</channel>
</rss>