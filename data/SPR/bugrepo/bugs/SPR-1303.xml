<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:27:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1303/SPR-1303.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1303] packaged war cannot handle wildcards in hibernate mappingLocation</title>
                <link>https://jira.spring.io/browse/SPR-1303</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I am developing a spring application for Weblogic Server 8.1SP4. Currently having the following problem:&lt;/p&gt;

&lt;p&gt;Using wildcards in servlet.xml for mapping hibernate .hbm.xml files as following:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;sessionFactory&quot;&lt;br/&gt;
	class=&quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&quot;&amp;gt;&lt;br/&gt;
	&amp;lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;property name=&quot;mappingLocations&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;value&amp;gt;classpath*:*.hbm.xml&amp;lt;/value&amp;gt;&lt;br/&gt;
	&amp;lt;/property&amp;gt;&lt;br/&gt;
	&amp;lt;property name=&quot;hibernateProperties&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;props&amp;gt;&lt;br/&gt;
			&amp;lt;prop key=&quot;hibernate.dialect&quot;&amp;gt;org.hibernate.dialect.PointbaseDialect&amp;lt;/prop&amp;gt;&lt;br/&gt;
			&amp;lt;prop key=&quot;hibernate.cache.use_second_level_cache&quot;&amp;gt;false&amp;lt;/prop&amp;gt;&lt;br/&gt;
		&amp;lt;/props&amp;gt;&lt;br/&gt;
	&amp;lt;/property&amp;gt;&lt;br/&gt;
&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;results in a IllegalArgumentException in deploying webapp as a WAR.&lt;/p&gt;

&lt;p&gt;Stacktrace follows:&lt;/p&gt;

&lt;p&gt;14.42.2005 06:42:45 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;1&amp;#39; for queue: &amp;#39;weblogic.kernel.System&amp;#39;&amp;#93;&lt;/span&gt; - servlet.DispatcherServlet - Context&lt;br/&gt;
 initialization failed&lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;sessionFactory&apos; defined in Servl&lt;br/&gt;
etContext resource &lt;span class=&quot;error&quot;&gt;&amp;#91;/WEB-INF/bug-servlet.xml&amp;#93;&lt;/span&gt;: Error setting property values; nested exception is org.springframework.be&lt;br/&gt;
ans.PropertyAccessExceptionsException: PropertyAccessExceptionsException (1 errors); nested propertyAccessExceptions are&lt;br/&gt;
: [org.springframework.beans.TypeMismatchException: Failed to convert property value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt; to requi&lt;br/&gt;
red type [&lt;span class=&quot;error&quot;&gt;&amp;#91;Lorg.springframework.core.io.Resource;&amp;#93;&lt;/span&gt; for property &apos;mappingLocations&apos;; nested exception is java.lang.Illega&lt;br/&gt;
lArgumentException: Could not convert location pattern &lt;span class=&quot;error&quot;&gt;&amp;#91;classpath*:*.hbm.xml&amp;#93;&lt;/span&gt; to Resource array]&lt;br/&gt;
PropertyAccessExceptionsException (1 errors)&lt;br/&gt;
org.springframework.beans.TypeMismatchException: Failed to convert property value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt; to required&lt;br/&gt;
 type [&lt;span class=&quot;error&quot;&gt;&amp;#91;Lorg.springframework.core.io.Resource;&amp;#93;&lt;/span&gt; for property &apos;mappingLocations&apos;; nested exception is java.lang.IllegalAr&lt;br/&gt;
gumentException: Could not convert location pattern &lt;span class=&quot;error&quot;&gt;&amp;#91;classpath*:*.hbm.xml&amp;#93;&lt;/span&gt; to Resource array&lt;br/&gt;
java.lang.IllegalArgumentException: Could not convert location pattern &lt;span class=&quot;error&quot;&gt;&amp;#91;classpath*:*.hbm.xml&amp;#93;&lt;/span&gt; to Resource array&lt;br/&gt;
        at org.springframework.core.io.support.ResourceArrayPropertyEditor.setAsText(ResourceArrayPropertyEditor.java:70&lt;br/&gt;
)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.doTypeConversionIfNecessary(BeanWrapperImpl.java:982)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:803)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:716)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:844)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.setPropertyValues(BeanWrapperImpl.java:871)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.setPropertyValues(BeanWrapperImpl.java:860)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAuto&lt;br/&gt;
wireCapableBeanFactory.java:926)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCap&lt;br/&gt;
ableBeanFactory.java:727)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapab&lt;br/&gt;
leBeanFactory.java:336)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:223)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListable&lt;br/&gt;
BeanFactory.java:271)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:312)&lt;br/&gt;
        at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableW&lt;br/&gt;
ebApplicationContext.java:134)&lt;br/&gt;
        at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:305)&lt;br/&gt;
        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:250)&lt;br/&gt;
        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:219)&lt;br/&gt;
        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:111)&lt;br/&gt;
        at javax.servlet.GenericServlet.init(GenericServlet.java:258)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl$ServletInitAction.run(ServletStubImpl.java:1028)&lt;br/&gt;
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)&lt;br/&gt;
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl.createServlet(ServletStubImpl.java:904)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl.createInstances(ServletStubImpl.java:883)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:822)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadServlet(WebAppServletContext.java:3333)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadServlets(WebAppServletContext.java:3278)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:3259)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.setStarted(WebAppServletContext.java:5949)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:862)&lt;br/&gt;
        at weblogic.j2ee.J2EEApplicationContainer.start(J2EEApplicationContainer.java:2127)&lt;br/&gt;
        at weblogic.j2ee.J2EEApplicationContainer.activate(J2EEApplicationContainer.java:2168)&lt;br/&gt;
        at weblogic.management.deploy.slave.SlaveDeployer$ComponentActivateTask.activateContainer(SlaveDeployer.java:250&lt;br/&gt;
3)&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;I have provided a minimal testcase for the issue which can be downloaded from &lt;a href=&quot;http://ivo.webmedia.ee/HibernatePattern_2.0.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ivo.webmedia.ee/HibernatePattern_2.0.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Steps to reproduce: &lt;br/&gt;
1. Have a Weblogic Server 8.1SP4 running in development mode.&lt;br/&gt;
2. unzip HibernatePattern_2.0.zip&lt;br/&gt;
3. deploy bug.war. Stacktrace should be displayed to you. &lt;/p&gt;

&lt;p&gt;Alternate scenarios: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;deploy war folder (exploded .war file)&lt;/li&gt;
	&lt;li&gt;Open browser for URL &lt;a href=&quot;http://localhost:7001/bug/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:7001/bug/&lt;/a&gt;. You should see a &quot;Hello world&quot; message. Everything works now.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Effect for the issue: need of manual listing of .bhm.xml files in servlet.xml, which can cause errors.&lt;/p&gt;

&lt;p&gt;Case can be reproduced with Spring version 1.2.4 &lt;/p&gt;</description>
            <key id="12382">SPR-1303</key>
            <summary>packaged war cannot handle wildcards in hibernate mappingLocation</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="ivom2gi">Ivo M&#228;gi</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Sep 2005 00:12:00 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:31 +0000</updated>
                            <resolved>Mon, 3 Oct 2005 07:16:40 +0000</resolved>
                                    <version>1.2.4</version>
                                    <fixVersion>1.2.5</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="14714" author="juergen.hoeller" created="Sat, 17 Sep 2005 07:08:56 +0000"  >&lt;p&gt;Could you please try a recent nightly Spring 1.2.5 snapshot? PathMatchingResourcePatternResolver has been refined to work with WebLogic&apos;s &quot;zip:&quot; protocol as well, not just with the JDK&apos;s &quot;jar:&quot; protocol.&lt;/p&gt;

&lt;p&gt;Furthermore, I&apos;ve just discovered that our ResourceArrayPropertyEditor doesn&apos;t include the IOException&apos;s message in its IllegalArgumentException, so the actual root cause gets lost. I&apos;ve just fixed this as well.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14718" author="ivom2gi" created="Sun, 18 Sep 2005 22:18:00 +0000"  >&lt;p&gt;Testcase worked with &quot;spring-framework-1.2.5-build.345-20050919.zip&quot;. Now testing with actual application which could take some time but initial feedback is quite good.&lt;/p&gt;</comment>
                            <comment id="14719" author="ivom2gi" created="Sun, 18 Sep 2005 23:57:14 +0000"  >&lt;p&gt;Our production code also seems to work. Due to the company policy we cannot apply the nightly build but have to wait for the 1.2.5 release.&lt;/p&gt;

&lt;p&gt;Otherwise - keep up the good work!&lt;/p&gt;</comment>
                            <comment id="14783" author="rein" created="Mon, 26 Sep 2005 21:26:06 +0000"  >&lt;p&gt;We are having trouble with this issue again in our actual application. It seemed to work beacuse there where no warning when deploying the app as with the earlier Spring version, but it throws a following exception in runtime.&lt;/p&gt;

&lt;p&gt;27.05.2005 01:05:57 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;ExecuteThread: &amp;#39;12&amp;#39; for queue: &amp;#39;weblogic.kernel.Default&amp;#39;&amp;#93;&lt;/span&gt; - button.SubmitButtonTag - Hibernat&lt;br/&gt;
e operation: could not execute query; bad SQL grammar &lt;span class=&quot;error&quot;&gt;&amp;#91;select  from&amp;#93;&lt;/span&gt;; nested exception is java.sql.SQLException: ORA-009&lt;br/&gt;
36: missing expression&lt;/p&gt;

&lt;p&gt;org.springframework.jdbc.BadSqlGrammarException: Hibernate operation: could not execute query; bad SQL grammar [select&lt;br/&gt;
from]; nested exception is java.sql.SQLException: ORA-00936: missing expression&lt;/p&gt;

&lt;p&gt;java.sql.SQLException: ORA-00936: missing expression&lt;/p&gt;

&lt;p&gt;        at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:125)&lt;br/&gt;
        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:305)&lt;br/&gt;
        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:272)&lt;br/&gt;
        at oracle.jdbc.driver.T4C8Oall.receive(T4C8Oall.java:623)&lt;br/&gt;
        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:181)&lt;br/&gt;
        at oracle.jdbc.driver.T4CPreparedStatement.execute_for_describe(T4CPreparedStatement.java:420)&lt;br/&gt;
        at oracle.jdbc.driver.OracleStatement.execute_maybe_describe(OracleStatement.java:894)&lt;br/&gt;
        at oracle.jdbc.driver.T4CPreparedStatement.execute_maybe_describe(T4CPreparedStatement.java:452)&lt;br/&gt;
        at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:984)&lt;br/&gt;
        at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:2885)&lt;br/&gt;
        at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:2926)&lt;br/&gt;
        at weblogic.jdbc.wrapper.PreparedStatement.executeQuery(PreparedStatement.java:124)&lt;br/&gt;
        at org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:120)&lt;br/&gt;
        at org.hibernate.loader.Loader.getResultSet(Loader.java:1265)&lt;br/&gt;
        at org.hibernate.loader.Loader.doQuery(Loader.java:384)&lt;br/&gt;
        at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:211)&lt;br/&gt;
        at org.hibernate.loader.Loader.doList(Loader.java:1588)&lt;br/&gt;
        at org.hibernate.loader.Loader.list(Loader.java:1571)&lt;br/&gt;
        at org.hibernate.hql.classic.QueryTranslatorImpl.list(QueryTranslatorImpl.java:890)&lt;br/&gt;
        at org.hibernate.impl.SessionImpl.list(SessionImpl.java:844)&lt;br/&gt;
        at org.hibernate.impl.QueryImpl.list(QueryImpl.java:74)&lt;br/&gt;
        at org.springframework.orm.hibernate3.HibernateTemplate$29.doInHibernate(HibernateTemplate.java:809)&lt;br/&gt;
        at org.springframework.orm.hibernate3.HibernateTemplate.execute(HibernateTemplate.java:358)&lt;br/&gt;
        at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:800)&lt;br/&gt;
        at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:792)&lt;br/&gt;
        at ee.envreg.bus.HibernateTextManager.getAllTexts(HibernateTextManager.java:23)&lt;br/&gt;
        at ee.envreg.bus.HibernateTextManager$$FastClassByCGLIB$$f44fd715.invoke(&amp;lt;generated&amp;gt;)&lt;br/&gt;
        at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:149)&lt;br/&gt;
        at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:69&lt;br/&gt;
8)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:122)&lt;br/&gt;
        at net.sf.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.&lt;br/&gt;
java:80)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
        at ee.envreg.bus.audit.AuditInterceptor.invoke(AuditInterceptor.java:17)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
        at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:643)&lt;/p&gt;

&lt;p&gt;        at ee.envreg.bus.HibernateTextManager$$EnhancerByCGLIB$$e0c69a80.getAllTexts(&amp;lt;generated&amp;gt;)&lt;br/&gt;
        at ee.envreg.util.CacheBean.createTextMap(CacheBean.java:262)&lt;br/&gt;
        at ee.envreg.util.CacheBean.getTexts(CacheBean.java:172)&lt;br/&gt;
        at ee.envreg.util.CacheBean.getText(CacheBean.java:253)&lt;br/&gt;
        at ee.envreg.util.CacheBean$$FastClassByCGLIB$$ef6c78bf.invoke(&amp;lt;generated&amp;gt;)&lt;br/&gt;
        at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:149)&lt;br/&gt;
        at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:69&lt;br/&gt;
8)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:122)&lt;br/&gt;
        at net.sf.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.&lt;br/&gt;
java:80)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
        at ee.envreg.bus.audit.AuditInterceptor.invoke(AuditInterceptor.java:17)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
        at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:643)&lt;/p&gt;

&lt;p&gt;        at ee.envreg.util.CacheBean$$EnhancerByCGLIB$$6bcd925e_2.getText(&amp;lt;generated&amp;gt;)&lt;br/&gt;
        at ee.envreg.util.EnvregMessageSource.resolveCodeWithoutArguments(EnvregMessageSource.java:22)&lt;br/&gt;
        at org.springframework.context.support.AbstractMessageSource.getMessageInternal(AbstractMessageSource.java:207)&lt;br/&gt;
        at org.springframework.context.support.AbstractMessageSource.getMessage(AbstractMessageSource.java:147)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.getMessage(AbstractApplicationContext.java:644&lt;br/&gt;
)&lt;br/&gt;
        at ee.envreg.web.tag.CommonTag.getMessageInternal(CommonTag.java:75)&lt;br/&gt;
        at ee.envreg.web.tag.CommonTag.getMessage(CommonTag.java:150)&lt;br/&gt;
        at ee.envreg.web.tag.button.ButtonTag.doStartTagInternal(ButtonTag.java:103)&lt;br/&gt;
        at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:68)&lt;br/&gt;
        at jsp_servlet.&lt;em&gt;web_45_inf._jsp.&lt;/em&gt;&lt;em&gt;hello._jspService(&lt;/em&gt;_hello.java:381)&lt;br/&gt;
        at weblogic.servlet.jsp.JspBase.service(JspBase.java:33)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl$ServletInvocationAction.run(ServletStubImpl.java:1008)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:419)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl.invokeServlet(ServletStubImpl.java:463)&lt;br/&gt;
        at weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:28)&lt;br/&gt;
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
        at net.sf.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:74)&lt;br/&gt;
        at net.sf.acegisecurity.intercept.web.SecurityEnforcementFilter.doFilter(SecurityEnforcementFilter.java:182)&lt;br/&gt;
        at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:125)&lt;br/&gt;
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
        at net.sf.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:15&lt;br/&gt;
3)&lt;br/&gt;
        at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:125)&lt;br/&gt;
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
        at net.sf.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:305)&lt;br/&gt;
        at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:125)&lt;br/&gt;
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
        at net.sf.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter&lt;br/&gt;
.java:152)&lt;br/&gt;
        at net.sf.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:125)&lt;br/&gt;
        at weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:27)&lt;br/&gt;
        at weblogic.servlet.internal.RequestDispatcherImpl.forward(RequestDispatcherImpl.java:326)&lt;br/&gt;
        at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:9&lt;br/&gt;
7)&lt;br/&gt;
        at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:250)&lt;br/&gt;
        at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:928)&lt;br/&gt;
        at org.springframework.web.servlet.Dispat&amp;lt;27.09.2005 13:05:57 EEST&amp;gt; &amp;lt;Error&amp;gt; &amp;lt;HTTP&amp;gt; &amp;lt;BEA-101017&amp;gt; &amp;lt;[ServletContext&lt;/p&gt;


&lt;p&gt;There is no problem when deploying WAR as an exploded directory.&lt;br/&gt;
Of course we used Spring version 1.2.5.&lt;/p&gt;</comment>
                            <comment id="14851" author="juergen.hoeller" created="Sat, 1 Oct 2005 07:56:32 +0000"  >&lt;p&gt;What&apos;s the root cause of that letter exception? Hibernate seems to send an incomplete SQL statement there, only having &quot;select from&quot; but no table name or where clause... Of course, it could be that Hibernate behaves that way if some mappings are missing or incomplete. Please turn on debug logging for the &quot;org.springframework.core.io&quot; package and see which resources were actually found for the &quot;classpath*:*.hbm.xml&quot; pattern.&lt;/p&gt;

&lt;p&gt;This probably originates from a limitation in the JDK&apos;s ClassLoader.getResources method which only returns file system locations but not jar roots for a passed-in empty String (indicating potential roots to search). Spring unfortunately cannot do anything about this, as far as I&apos;m aware. If this is the case in your scenario, the only way around this is to put the &quot;.hbm.xml&quot; files into a package, for example called &quot;mappings&quot;, and access them through a pattern like the following: &quot;classpath*:mappings/*.hbm.xml&quot;. Please give this a try and let me know whether it works for you!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="14867" author="rein" created="Sun, 2 Oct 2005 21:15:30 +0000"  >&lt;p&gt;Finally, good news. Using a separate subfolder for hibernate mappings worked.&lt;br/&gt;
Thank you!&lt;/p&gt;

&lt;p&gt;Rein Raudj&#228;rv&lt;/p&gt;</comment>
                            <comment id="14876" author="juergen.hoeller" created="Mon, 3 Oct 2005 07:16:39 +0000"  >&lt;p&gt;I consider this as fixed in 1.2.5 then, supporting a pattern search in jar/zip files as far as possible. The unfortunate limitation with patterns that point to the root of the classpath is caused by the JDK&apos;s ClassLoader behavior, not by Spring, which is clearly documented in PathMatchingResourcePatternResolver now.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 13 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 17 Sep 2005 07:08:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04w8v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28598</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>