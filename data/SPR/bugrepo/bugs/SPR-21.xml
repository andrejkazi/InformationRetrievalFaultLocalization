<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:20:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-21/SPR-21.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-21] OracleLobHandler needs flush after blob is written</title>
                <link>https://jira.spring.io/browse/SPR-21</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;For some implementations of the Oracle JDBC drivers, it appears you need to flush() the output stream on the BLOB in order to be sure it was written.&lt;/p&gt;

&lt;p&gt;In the comments below, added an additional logger.debug() to show the length of the actual BLOB as opposed to just the byte array that was used as an argument, too!&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;/p&gt;

&lt;p&gt;Specifically, within OracleLobHandler:&lt;/p&gt;

&lt;p&gt;		public void setBlobAsBytes(PreparedStatement ps, int parameterIndex, final byte[] content)&lt;br/&gt;
				throws SQLException {&lt;br/&gt;
			Blob blob = (Blob) createLob(ps, &quot;oracle.sql.BLOB&quot;, new LobCallback() {&lt;br/&gt;
				public void populateLob(Object lob) throws Exception &lt;/p&gt;
{
					Method methodToInvoke = lob.getClass().getMethod(&quot;getBinaryOutputStream&quot;, new Class[0]);
					OutputStream out = (OutputStream) methodToInvoke.invoke(lob, null);
                    out.write(content);
                    out.flush();
				}
&lt;p&gt;			});&lt;br/&gt;
			ps.setBlob(parameterIndex, blob);&lt;br/&gt;
			logger.debug(&quot;Set bytes for BLOB with length &quot; + content.length);&lt;br/&gt;
            logger.debug(&quot;Actual BLOB length: &quot; + blob.length() );&lt;br/&gt;
		}&lt;/p&gt;
</description>
            <key id="10073">SPR-21</key>
            <summary>OracleLobHandler needs flush after blob is written</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rod.johnson">Rod Johnson</assignee>
                                    <reporter username="fallofrome">Mike Rudolph</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Jan 2004 11:41:26 +0000</created>
                <updated>Wed, 21 Jan 2004 07:37:45 +0000</updated>
                            <resolved>Wed, 21 Jan 2004 07:37:45 +0000</resolved>
                                                    <fixVersion>1.0 RC1</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10100" author="juergen.hoeller" created="Wed, 21 Jan 2004 07:37:45 +0000"  >&lt;p&gt;Thanks, that&apos;s indeed necessary: The imagedb sample app uses setBlobAsBinaryStream, not setBlobAsBytes, so that unfortunately slipped through.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 50 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 16 Jan 2004 13:09:19 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01fx3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8456</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>