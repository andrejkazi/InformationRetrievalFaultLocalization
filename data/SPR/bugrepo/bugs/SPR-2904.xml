<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:24:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2904/SPR-2904.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2904] MethodInvocationProceedingJoinPoint.proceed() can be called multiple times but proceed(Object[] args) cannot be called multiple times.</title>
                <link>https://jira.spring.io/browse/SPR-2904</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;ve implemented some around advice to retry a transaction, very similar to the ConcurrentOperationExecutor example in the Spring AOP documentation.  Executing proceed() multiple times on the ProceedingJoinPoint (which is an instance of org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint) works just fine - the interceptors further down the chain (TransactionInterceptor in this case) get executed every time proceed is called.  However, calling proceed(Object[] args) multiple times does not work - the interceptors further down the chain are executed only the first time proceed(Object[] args) is called, but not on subsequent calls.  Looking at the source code for MethodInvocationProceedingJoinPoint, this seems to be because ReflectiveMethodInvocation.invocableClone() is called in the plain proceed() method, thus ensuring that the currentInterceptorIndex is preserved on each retry.  This cloning is not done in proceed(Object[] args), thus the currentInterceptorIndex is not preserved for the retry and subsequent interceptors are not invoked.  I didn&apos;t see anything indicating that proceed(Object[] args) was not intended to be called multiple times - is this a bug?  Can proceed(Object[] args) just call invocableClone() also?&lt;/p&gt;</description>
            <key id="15614">SPR-2904</key>
            <summary>MethodInvocationProceedingJoinPoint.proceed() can be called multiple times but proceed(Object[] args) cannot be called multiple times.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="dguist">Derek Guist</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Dec 2006 10:51:14 +0000</created>
                <updated>Tue, 19 Jun 2012 03:51:18 +0000</updated>
                            <resolved>Wed, 31 Jan 2007 05:23:27 +0000</resolved>
                                    <version>2.0.1</version>
                                    <fixVersion>2.0.3</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="21972" author="juergen.hoeller" created="Wed, 31 Jan 2007 05:23:27 +0000"  >&lt;p&gt;Thanks for pointing this out! MethodInvocationProceedingJoinPoint allows for multiple &quot;proceed(arguments)&quot; calls now, cloning the underlying invocation.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21973" author="juergen.hoeller" created="Wed, 31 Jan 2007 05:26:19 +0000"  >&lt;p&gt;This should be available in the next 2.0.3 snapshot (&lt;a href=&quot;http://www.springframework.org/snapshots&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.springframework.org/snapshots&lt;/a&gt;). If you have the chance, please give it an early try and let me know whether it works for you!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        9 years, 48 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 31 Jan 2007 05:23:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00v6n:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5097</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>