<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:56:39 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-6446/SPR-6446.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-6446] Provde setter for formatters in FormattingConversionServiceFactoryBean</title>
                <link>https://jira.spring.io/browse/SPR-6446</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;It would be nice to have convenience setters in FormattingConversionServiceFactoryBean to add custom formatters (and maybe converters and converter factories...). It&apos;s much easier to explicitly declare a &amp;lt;bean class=&quot;FormattingConversionServiceFactoryBean&quot;&amp;gt; and customize it than to implement, declare and customize a FormatterRegistry.&lt;/p&gt;</description>
            <key id="28936">SPR-6446</key>
            <summary>Provde setter for formatters in FormattingConversionServiceFactoryBean</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="sbeigel">Sebastian Beigel</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Nov 2009 00:08:15 +0000</created>
                <updated>Tue, 21 Dec 2010 20:42:56 +0000</updated>
                            <resolved>Tue, 21 Dec 2010 20:42:56 +0000</resolved>
                                    <version>3.0 RC2</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="48655" author="kdonald" created="Wed, 25 Nov 2009 08:52:20 +0000"  >&lt;p&gt;Can you elaborate on what is difficult about using the FormatterRegistry API to register custom formatters and converters?  It&apos;s a strongly typed interface, and doing the registration in Java instead of XML seems more elegant to me.&lt;/p&gt;</comment>
                            <comment id="48670" author="sbeigel" created="Wed, 25 Nov 2009 18:52:32 +0000"  >&lt;p&gt;With regard to setting up custom converters and/or formatters: Could you provide an example how to do this most elegantly? Right know (3.0 RC2) I have to declare a FormattingConversionServiceFactoryBean bean (and configure mvc:annotation-driven accordingly) and inject a parent DefaultConversionService in which I register the converters. Using no FormattingConversionServiceFactoryBean, I lose formatting for numbers and Joda Time... So what would be best practice to use custom converters and formatters?&lt;/p&gt;</comment>
                            <comment id="48711" author="kdonald" created="Thu, 26 Nov 2009 13:26:19 +0000"  >&lt;p&gt;I would recommend defining your own Factory bean like FormattingConverrsionServiceFactoryBean that registers exactly what you need.  I do not recommend using a hierarchy. &lt;/p&gt;</comment>
                            <comment id="48716" author="sbeigel" created="Thu, 26 Nov 2009 18:32:04 +0000"  >&lt;p&gt;Looking at the current (trunk) version, this seems reasonable &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; in RC2, it&apos;s quite painful (init* and install* methods are private for example in FormattingConversionServiceFactoryBean)... I will check this out w/ a nightly build.&lt;/p&gt;

&lt;p&gt;Is there a release date for the next RC (or even the final release? It&apos;s really great that you are significantly improving things in the rc cycle, some people just fix bugs at this stage &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; The Formatting/Conversion SPI looks much better in trunk than in RC2! Thanks for that!&lt;/p&gt;</comment>
                            <comment id="48717" author="sbeigel" created="Thu, 26 Nov 2009 18:33:43 +0000"  >&lt;p&gt;Oh, I think we can close this issue &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="61702" author="sbrannen" created="Tue, 21 Dec 2010 20:42:56 +0000"  >&lt;p&gt;Superseded by &lt;a href=&quot;https://jira.spring.io/browse/SPR-7732&quot; title=&quot;Make it easier to register custom Formatters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7732&quot;&gt;&lt;del&gt;SPR-7732&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10130">
                    <name>Supersede</name>
                                                                <inwardlinks description="is superseded by">
                                        <issuelink>
            <issuekey id="34805">SPR-7732</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        6 years, 1 week, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 25 Nov 2009 08:52:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01cqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7940</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>