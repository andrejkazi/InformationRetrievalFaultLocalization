<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:47:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-472/SPR-472.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-472] Issue SPR-368 (AOP proxy creation breaks property initialisation) not fixed in 1.1.2 </title>
                <link>https://jira.spring.io/browse/SPR-472</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;See issue &lt;a href=&quot;https://jira.spring.io/browse/SPR-368&quot; title=&quot;AOP proxy creation breaks property initialisation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-368&quot;&gt;&lt;del&gt;SPR-368&lt;/del&gt;&lt;/a&gt;, which should be reopened.&lt;/p&gt;

&lt;p&gt;Erwin&lt;/p&gt;</description>
            <key id="10751">SPR-472</key>
            <summary>Issue SPR-368 (AOP proxy creation breaks property initialisation) not fixed in 1.1.2 </summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="klr8">Erwin Vervaet</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Nov 2004 06:19:49 +0000</created>
                <updated>Tue, 19 Jun 2012 03:25:15 +0000</updated>
                            <resolved>Tue, 19 Jun 2012 03:22:29 +0000</resolved>
                                    <version>1.1.2</version>
                                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="11543" author="juergen.hoeller" created="Thu, 18 Nov 2004 18:49:59 +0000"  >&lt;p&gt;Rob, can you please have a look at this, at your earliest convenience?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="11546" author="robh" created="Thu, 18 Nov 2004 20:41:47 +0000"  >&lt;p&gt;After looking into this issue a little bit more I can see where the possible arises. The fix in 1.1.2 only half fixes this problem in that if the method(s) called by the constructor are advised then the behavior is as expected. However, if the method is unadvised then the property values will be overwritten as detailed in the bug report.&lt;/p&gt;

&lt;p&gt;The reason for this is that, internally, the Cglib2AopProxy class uses a CGLIB Dispatcher for unadvised methods rather than a MethodInterceptor. A Dispatcher sends calls directly to the proxy target whilst a MethodInterceptor can perform some processing either side of the invocation and thus can check to see the construction state of the proxy and decide whether or not to invoke the call on the target.&lt;/p&gt;

&lt;p&gt;A solution for the interim is to make sure that methods that are called by the constructor are advised. In the case of the example given in &lt;a href=&quot;https://jira.spring.io/browse/SPR-368&quot; title=&quot;AOP proxy creation breaks property initialisation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-368&quot;&gt;&lt;del&gt;SPR-368&lt;/del&gt;&lt;/a&gt; that means extending the pointcut regex pattern to cover the setA() method.&lt;/p&gt;

&lt;p&gt;There are a few ways to fix this problem:&lt;/p&gt;

&lt;p&gt;1. Remove use of Dispatchers altogether&lt;br/&gt;
2. Create a dummy object that Dispatchers can re-route to during construction&lt;br/&gt;
3. Mandate that all methods called from a constructor must be advised&lt;br/&gt;
4. Save target state before proxy creation and then restore afterwards&lt;/p&gt;

&lt;p&gt;I don&apos;t really favour approach 1 as the Dispatchers give a nice performance boost on unadvised methods. Approach 2 will have the least impact on end users but will result in a new object being created for every class that is proxied. Approach 3 is simple but I can&apos;t think of a way to check what methods are called during a constructor so that we can check in code that they are advised. Approach 4 seems like a good one, but not sure how we can reliably save state and restore it when some state may not be exposed externally.&lt;/p&gt;

&lt;p&gt;I&apos;ll post a link to this issue on the CGLIB dev list and see if they have any ideas. In meantime all comments would be welcome.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="11547" author="robh" created="Thu, 18 Nov 2004 21:45:17 +0000"  >&lt;p&gt;Had a response from Chris Nokleberg at CGLIB regarding this issue:&lt;/p&gt;

&lt;p&gt;Hi Rob,&lt;/p&gt;

&lt;p&gt;Probably #2 (&quot;Create a dummy object that Dispatchers can re-route to&lt;br/&gt;
during construction&quot;) is the simplest solution, but I don&apos;t like it&lt;br/&gt;
either. It is probably better for me to add an option to Enhancer:&lt;/p&gt;

&lt;p&gt;  e.setInterceptCallsFromConstructor(false);&lt;/p&gt;

&lt;p&gt;We actually have to jump through some hoops to intercept those calls in&lt;br/&gt;
the first place, so I hope it won&apos;t be hard to ignore them. You could&lt;br/&gt;
then also get rid of the code you added for the previous issue.&lt;/p&gt;

&lt;p&gt;I&apos;ll look into it tomorrow (3am here now...)&lt;/p&gt;

&lt;p&gt;Chris&lt;/p&gt;

&lt;p&gt;Looks like we will get a solution at the CGLIB level which is best all round. In the meantime making any methods called from the constructor advised will remedy this issue.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="11550" author="klr8" created="Fri, 19 Nov 2004 00:52:22 +0000"  >&lt;p&gt;Great!&lt;/p&gt;

&lt;p&gt;But just wondering, since the issue is easy to reproduce shouldn&apos;t there have been a unit test to verify that is was really fixed in 1.1.2?&lt;/p&gt;

&lt;p&gt;Erwin&lt;/p&gt;</comment>
                            <comment id="11552" author="robh" created="Fri, 19 Nov 2004 02:01:15 +0000"  >&lt;p&gt;There was, but due to an error on my part it wasn&apos;t comprehensive enough. In the test I had the method called in the constructor was advised and in the test your supplied it wasn&apos;t. I apologise.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="11565" author="juergen.hoeller" created="Sun, 21 Nov 2004 22:03:06 +0000"  >&lt;p&gt;I&apos;m closing this for the time being, as we&apos;ve reopened &lt;a href=&quot;https://jira.spring.io/browse/SPR-368&quot; title=&quot;AOP proxy creation breaks property initialisation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-368&quot;&gt;&lt;del&gt;SPR-368&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 6 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 18 Nov 2004 18:49:59 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04xy7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28874</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>