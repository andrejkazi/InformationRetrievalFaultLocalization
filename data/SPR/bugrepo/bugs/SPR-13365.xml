<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:27:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-13365/SPR-13365.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-13365] HTTP content negotiation does not respect media type parameters</title>
                <link>https://jira.spring.io/browse/SPR-13365</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The &lt;br/&gt;
&lt;tt&gt;org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor&lt;/tt&gt;&lt;br/&gt;
 class does not respect media-type parameters when doing content negotiation. In the &lt;tt&gt;writeWithMessageConverters&lt;/tt&gt; method, if a &lt;tt&gt;requestedType&lt;/tt&gt; has a non empty &lt;tt&gt;MimeType.getParameters()&lt;/tt&gt; map, those parameters have no effect on which type is the &lt;tt&gt;selectedMediaType&lt;/tt&gt;. I believe that HTTP standard conformance requires that those parameters &lt;b&gt;do&lt;/b&gt; have an effect on content negotiation.&lt;/p&gt;

&lt;p&gt;The cause of this seems to be that &lt;tt&gt;writeWithMessageConverters&lt;/tt&gt; uses &lt;tt&gt;MimeType.isCompatibleWith(MimeType)&lt;/tt&gt;, which ignores the parameters, and then (indirectly) sorts the produceable media types using &lt;tt&gt;MediaType.SPECIFICITY_COMPARATOR&lt;/tt&gt;, which also ignores the parameters.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;Worse still, if the &lt;tt&gt;selectedMediaType&lt;/tt&gt; (the supported media type of the chosen HTTP message converter) differs from the requested type only in the media-type parameters, the &lt;tt&gt;Content-Type&lt;/tt&gt; header of the response will contain the requested media type &lt;b&gt;even though&lt;/b&gt; the response body is actually of the &lt;tt&gt;selectedMediaType&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;The cause of that seems to be that the &lt;tt&gt;AbstractMessageConverterMethodProcessor.getMostSpecificMediaType(MediaType, MediaType)&lt;/tt&gt; chooses the &lt;tt&gt;acceptType&lt;/tt&gt; rather than the &lt;tt&gt;produceTypeToUse&lt;/tt&gt; when the two types have equal specificity, according to the &lt;tt&gt;MediaType.SPECIFICITY_COMPARATOR&lt;/tt&gt;, and that comparator ignores the media-type parameters.&lt;/p&gt;</description>
            <key id="65367">SPR-13365</key>
            <summary>HTTP content negotiation does not respect media type parameters</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="bclozel">Brian Clozel</assignee>
                                    <reporter username="Raedwald">Benedict Adamson</reporter>
                        <labels>
                    </labels>
                <created>Tue, 18 Aug 2015 06:25:00 +0000</created>
                <updated>Thu, 3 Sep 2015 13:28:34 +0000</updated>
                            <resolved>Thu, 3 Sep 2015 13:28:34 +0000</resolved>
                                    <version>4.1 GA</version>
                                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="118678" author="rstoya05-aop" created="Tue, 18 Aug 2015 13:49:50 +0000"  >&lt;p&gt;Can you provide a specific example or two with the requested media type(s) and expected vs actual behavior?&lt;/p&gt;</comment>
                            <comment id="118688" author="raedwald" created="Wed, 19 Aug 2015 01:29:17 +0000"  >&lt;p&gt;Here is some more information about the situation that lead me to discover this problem, with the details anonymized.&lt;/p&gt;

&lt;p&gt;My web client and server communicate using a custom binary format. I gave the first version of the format a media-type like &lt;tt&gt;application/vnd.example.app.thing; version=1&lt;/tt&gt;, with a custom HTTP message converter, &lt;tt&gt;BinaryThingConverter1&lt;/tt&gt;, which has that media-type as its sole supported media type. Both client and server had that HTTP message converter, and everything worked fine.&lt;/p&gt;

&lt;p&gt;I need to alter the custom binary format to add some new functionality. I need backwards compatibility, some my client and server should be able to communicate with the new version of the format and the old version of the format. I therefore chose to give the new version of the format a new media-type, like &lt;tt&gt;application/vnd.example.app.thing; version=2&lt;/tt&gt;: I used the &lt;tt&gt;version&lt;/tt&gt; parameter of the media-type to communicate the version of the format.&lt;/p&gt;

&lt;p&gt;I&apos;m using Test Driven Development, so I added a test-case for my current version of the web server (using &lt;tt&gt;AbstractJUnit4SpringContextTests&lt;/tt&gt;) in which I simulate the client making a GET with an &lt;tt&gt;Accept&lt;/tt&gt; header requesting the new format, &lt;tt&gt;application/vnd.example.app.thing; version=2&lt;/tt&gt;. At this stage the web server does not have a new message converter that has that new media type as its supported media type; it still had only the old &lt;tt&gt;BinaryThingConverter1&lt;/tt&gt;, which supports only &lt;tt&gt;application/vnd.example.app.thing; version=1&lt;/tt&gt;. I expected my test-case to fail with an HTTP status code of 406 (Not Acceptable). I was surprised to discover that my test-case passed: the server responded with 200 (OK). I did some debugging to track down what was happening.&lt;/p&gt;</comment>
                            <comment id="118702" author="raedwald" created="Wed, 19 Aug 2015 07:05:48 +0000"  >&lt;p&gt;I see now that this is a duplicate of &lt;a href=&quot;https://jira.spring.io/browse/SPR-10903&quot; title=&quot;Content negotiation ignores media type parameters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-10903&quot;&gt;&lt;del&gt;SPR-10903&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="118703" author="bclozel" created="Wed, 19 Aug 2015 07:21:58 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=Raedwald&quot; class=&quot;user-hover&quot; rel=&quot;Raedwald&quot;&gt;Benedict Adamson&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my opinion, &lt;tt&gt;&quot;application/vnd.example.app.thing; version=1&quot;&lt;/tt&gt; and &lt;tt&gt;&quot;application/vnd.example.app.thing; version=2&quot;&lt;/tt&gt; are compatible media types and should be processed by the same &lt;tt&gt;HttpMessageConverter&lt;/tt&gt;. It means that both media types should have &quot;similar content&quot;, but that the converter can process them differently.&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&quot;http://tools.ietf.org/html/rfc7231#section-3.1.1.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;RFC 7231 section 3.1.1.1&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The presence or absence of a parameter might be significant to the processing of a media-type, depending on its definition within the media type registry.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Given that your custom media type is not part of the registry, we can&apos;t really decide with this information.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tools.ietf.org/html/rfc2046#section-1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;RFC2046 section 1&lt;/a&gt; says:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Parameters are modifiers of the media subtype, and as such do not fundamentally affect the nature of the content.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you&apos;re changing the nature of the representation between those two, then you should probably use something like &lt;tt&gt;application/vnd.example.app.v1.thing&lt;/tt&gt; and &lt;tt&gt;application/vnd.example.app.v2.thing&lt;/tt&gt;. Check out &lt;a href=&quot;https://developer.github.com/v3/media/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;GitHub&apos;s API documentation on Media Type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Anyway, I think this question may duplicate &lt;a href=&quot;https://jira.spring.io/browse/SPR-10903&quot; title=&quot;Content negotiation ignores media type parameters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-10903&quot;&gt;&lt;del&gt;SPR-10903&lt;/del&gt;&lt;/a&gt; - could you take a look at the comments?&lt;/p&gt;</comment>
                            <comment id="118737" author="bclozel" created="Thu, 20 Aug 2015 04:57:56 +0000"  >&lt;p&gt;About the second part of this issue, the &lt;tt&gt;selectedMediaType&lt;/tt&gt; for the response.&lt;/p&gt;

&lt;p&gt;Are you sure &lt;tt&gt;MediaType.SPECIFICITY_COMPARATOR&lt;/tt&gt; ignores parameters? To me, it is:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;comparing the type and subtype specificity &lt;tt&gt;&quot;text/*&quot; &amp;lt; &quot;text/html&quot;&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;comparing types with their quality parameters&lt;/li&gt;
	&lt;li&gt;then comparing types with their number of parameters (see &lt;tt&gt;MimeType.SpecificityComparator.compareParameters&lt;/tt&gt;)&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Now &lt;tt&gt;AbstractMessageConverterMethodProcessor&lt;/tt&gt; sorts from the least specific media-type to the most specific and loops on those; the first concrete media-type in that list is selected as a Content-Type. In other words, we select the least specific media-type we can.&lt;/p&gt;

&lt;p&gt;I may be missing something here. If you&apos;ve got pointers for this (what&apos;s the expected behavior here for a server) or if you think this should be the opposite (and why?) - please let me know!&lt;/p&gt;</comment>
                            <comment id="118739" author="rstoya05-aop" created="Thu, 20 Aug 2015 06:04:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;Given that your custom media type is not part of the registry, we can&apos;t really decide with this information.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Precisely, how would we compare the version parameter? A numeric comparison would be the obvious place to start but what if it was 2a, 2.0.1.A, or other. Also suppose there were additional parameters, perhaps major and minor versions, or perhaps completely unrelated to versioning. From a framework perspective we have no knowledge about the meaning of those parameters and their possible values.&lt;/p&gt;

&lt;p&gt;As Brian outlined above we are quite intentionally sorting based on as much as we can assume, the type and sub-type, quality parameters, and number of parameters.&lt;/p&gt;</comment>
                            <comment id="118740" author="raedwald" created="Thu, 20 Aug 2015 06:28:28 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Precisely, how would we compare the version parameter&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Compare for equality.&lt;/p&gt;

&lt;p&gt;Here is a possible ranking scheme:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Prefer converters that have the same set of parameters as the request and equivalent values for all the parameters (that is, prefer exact matches)&lt;/li&gt;
	&lt;li&gt;Prefer converters that have a super-set of parameters, with equivalent values for the parameters in the request.&lt;/li&gt;
	&lt;li&gt;Prefer converters that have the fewest parameters that are present but have different values for the parameters (this will tend to prefer converters that have no parameters over converts with many parameters that do not match).&lt;/li&gt;
	&lt;li&gt;Prefer converters that have the most parameters that match the request.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                            <comment id="118745" author="raedwald" created="Thu, 20 Aug 2015 08:11:43 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Are you sure &lt;tt&gt;MediaType.SPECIFICITY_COMPARATOR&lt;/tt&gt; ignores parameters&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As you point out, it examines the number of parameters. But it ignores the values of the parameters, which is what I meant.&lt;/p&gt;</comment>
                            <comment id="119175" author="bclozel" created="Thu, 3 Sep 2015 13:28:34 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=Raedwald&quot; class=&quot;user-hover&quot; rel=&quot;Raedwald&quot;&gt;Benedict Adamson&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;I&apos;m closing this issue as a duplicate, but feel free to open a new issue (improvement proposal) regarding mediatype comparison + media type parameters.&lt;/p&gt;

&lt;p&gt;This is an interesting issue, but it will require developer interest (votes!) and use cases descriptions to really understand what we can do about that.&lt;/p&gt;

&lt;p&gt;Thanks! &lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="50829">SPR-10903</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        1 year, 16 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 18 Aug 2015 13:49:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>bclozel</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i08p2v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>