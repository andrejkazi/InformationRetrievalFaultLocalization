<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:48:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1518/SPR-1518.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1518] IllegalAccessException thrown in BeanWrapperImpl when accessing public method of private class</title>
                <link>https://jira.spring.io/browse/SPR-1518</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;An IllegalAccessException can be thrown by BeanWrapperImpl when accessing a public method defined in a private class (that implements a public interface). The bug does not occur each time, however, but seems to occur after some garbage collection has been performed.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a test case and associated class that illustrates the problem.&lt;/p&gt;</description>
            <key id="12852">SPR-1518</key>
            <summary>IllegalAccessException thrown in BeanWrapperImpl when accessing public method of private class</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="msqr">Matt Magoffin</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Dec 2005 13:39:01 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:41 +0000</updated>
                            <resolved>Wed, 21 Dec 2005 18:18:55 +0000</resolved>
                                    <version>1.2.6</version>
                                    <fixVersion>1.2.7</fixVersion>
                    <fixVersion>2.0 M1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="15648" author="msqr" created="Tue, 6 Dec 2005 13:40:30 +0000"  >&lt;p&gt;This interface illustrates the interface structure I&apos;m using that exposes this bug.&lt;/p&gt;</comment>
                            <comment id="15649" author="msqr" created="Tue, 6 Dec 2005 13:42:10 +0000"  >&lt;p&gt;Here is an implementation of the TestService interface, along with a JUnit TestCase that exposes the bug. The exception does not occur on the first loop iteration of the test, but some time afterwards. I&apos;m assuming that is due to some garbage collection happening that causing something to break.&lt;/p&gt;</comment>
                            <comment id="15650" author="msqr" created="Tue, 6 Dec 2005 13:43:45 +0000"  >&lt;p&gt;This bug seems similar:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://opensource2.atlassian.com/projects/spring/browse/SPR-763&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://opensource2.atlassian.com/projects/spring/browse/SPR-763&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15651" author="msqr" created="Tue, 6 Dec 2005 16:44:45 +0000"  >&lt;p&gt;Here is another JUnit TestCase, this one does the same as the TestServiceTestCase but uses the Jakarta BeanUtils class for reflection. This one does not throw the IllegalAccessException like the BeanWrapperImpl class does.&lt;/p&gt;</comment>
                            <comment id="15833" author="juergen.hoeller" created="Wed, 21 Dec 2005 18:18:55 +0000"  >&lt;p&gt;For some reason, the accessible flag set on the cached Method object seems to get lost over time here. I&apos;ve moved the accessible check to right before every method invocation now, re-setting setAccessible(true) for every invocation - this seems to work with a long-running loop as well now.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="21576" author="szegedia" created="Tue, 2 Jan 2007 23:55:08 +0000"  >&lt;p&gt;I&apos;ve run into this with Spring 1.2.8, i.e. with a package-private class that implements javax.jms.Session public interface, a shutdown failed because of&lt;/p&gt;

&lt;p&gt;ERROR org.springframework.beans.factory.xml.XmlBeanFactory - Couldn&apos;t invoke destroy method &apos;close&apos; of bean with name &apos;defaultJmsSession&apos;&lt;br/&gt;
java.lang.IllegalAccessException: Class org.springframework.beans.factory.support.AbstractBeanFactory can not access a member of class com.xxxxxxx.spiritwave.SpiritWaveSession with modifiers &quot;public&quot;&lt;br/&gt;
        at sun.reflect.Reflection.ensureMemberAccess(Reflection.java:57)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:317)&lt;/p&gt;

&lt;p&gt;May I suggest a better solution? Instead of setting the accessible flag (which might not work anyway under a security manager), you could do what I did for FreeMarker&apos;s reflection-based method invocation mechanism, namely:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;when introspecting a non-public class, do not use the Method objects returned by its Class object&apos;s getMethods(), but rather traverse recursively Class objects reachable through getSuperclass()/getInterfaces(), stopping the recursion at public Class objects, and collecting those classes&apos; Method objects instead. It&apos;s as if you dynamically &quot;cast&quot; the class to its public superclass/interfaces.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;See &lt;a href=&quot;http://www.koders.com/java/fidDA5FD451DE96C4AA79D3A9632FF18EE515C89644.aspx#L976&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.koders.com/java/fidDA5FD451DE96C4AA79D3A9632FF18EE515C89644.aspx#L976&lt;/a&gt; for an implementation.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11311" name="TestService.java" size="251" author="msqr" created="Tue, 6 Dec 2005 13:40:30 +0000"/>
                            <attachment id="11312" name="TestServiceImpl.java" size="571" author="msqr" created="Tue, 6 Dec 2005 13:42:10 +0000"/>
                            <attachment id="11314" name="TestServiceJakartaTestCase.java" size="1643" author="msqr" created="Tue, 6 Dec 2005 16:44:45 +0000"/>
                            <attachment id="11313" name="TestServiceTestCase.java" size="1310" author="msqr" created="Tue, 6 Dec 2005 13:42:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 21 Dec 2005 18:18:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04tzj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28232</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>