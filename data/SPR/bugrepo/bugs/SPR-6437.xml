<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:38:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-6437/SPR-6437.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-6437] @MVC should provide an &quot;onBind&quot; hook prior to automatic validation</title>
                <link>https://jira.spring.io/browse/SPR-6437</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;When using @Valid to drive automatic validation of a model object, it is currently not possible to modify the bound model object prior to validation. &lt;/p&gt;

&lt;p&gt;With the SimpleFormController hierarchy it was straightforward to override BaseCommandController&apos;s onBind() or onBindAndValidate() methods to achieve custom binding; however, with @MVC it is currently not possible. Neither the WebBindingInitializer API nor an @InitBinder method provides a mechanism to plug in custom binding. &lt;/p&gt;

&lt;p&gt;Note that this was not an issue prior to support for @Valid, since without @Valid developers were responsible for executing validation code within a handler method.&lt;/p&gt;

&lt;p&gt;One possible solution would be to add support for an @PostBinding method or @PreValidation method (or similar) which would be allowed to modify the model after binding but prior to executing the handler method.&lt;/p&gt;</description>
            <key id="28916">SPR-6437</key>
            <summary>@MVC should provide an &quot;onBind&quot; hook prior to automatic validation</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="rstoya05-aop">Rossen Stoyanchev</assignee>
                                    <reporter username="sbrannen">Sam Brannen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Nov 2009 07:48:59 +0000</created>
                <updated>Tue, 19 Jun 2012 03:44:08 +0000</updated>
                            <resolved>Fri, 3 Jun 2011 04:27:20 +0000</resolved>
                                    <version>3.0 RC2</version>
                                    <fixVersion>3.1 M2</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>6</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="48600" author="sbrannen" created="Tue, 24 Nov 2009 07:58:22 +0000"  >&lt;p&gt;The following is a description of a use case that requires this functionality.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;model object contains a list of Foo&lt;/li&gt;
	&lt;li&gt;HTML view uses JavaScript to allow the user to dynamically add new Foos to the list&lt;/li&gt;
	&lt;li&gt;the user accidentally creates extra, empty Foos or deletes all values from an existing Foo in the list&lt;/li&gt;
	&lt;li&gt;business case requires that such &lt;em&gt;empty&lt;/em&gt; Foos not be persisted and therefore be deleted from the list&lt;/li&gt;
	&lt;li&gt;the configured Validator, triggered via @Valid, automatically registers errors for required fields in &lt;em&gt;empty&lt;/em&gt; Foos&lt;/li&gt;
	&lt;li&gt;removing the empty Foos after validation has occurred is not a solution, because the errors are already present in the BindingResult&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A solution to this problem would be to add custom binding logic that removes empty Foos prior to execution of the Validator, but there is currently no hook in @MVC for plugging in such custom binding logic.&lt;/p&gt;</comment>
                            <comment id="48601" author="sbrannen" created="Tue, 24 Nov 2009 08:03:15 +0000"  >&lt;p&gt;The following technique suggested by Dave Syer could serve as a possible work-around in the interim.&lt;/p&gt;

&lt;p&gt;In an @InitBinder method, you can call&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;binder.setValidator(new DelegatingValidatorAdaptor(binder.getValidator()))&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;DelegatingValidatorAdaptor could then effectively modify the model before delegating to the real validator.&lt;/p&gt;</comment>
                            <comment id="48621" author="david_syer" created="Tue, 24 Nov 2009 17:03:34 +0000"  >&lt;p&gt;Since the binder is responsible for validation, I actually prefer my &quot;workaround&quot; to an additional method-level annotation.  Maybe if DataBinder were to pick up a preValidate() method it would be nicer.  And we should allow @InitBinder to return a modified binder:&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@InitBinder&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;public DataBinder initBinder(WebDataBinder binder) {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    return new SpecialBinder(binder);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;</comment>
                            <comment id="48624" author="sbrannen" created="Tue, 24 Nov 2009 18:19:49 +0000"  >&lt;p&gt;I would like to point out that the easiest work-around is simply to avoid using @Valid to trigger validation. You can then modify the model as you wish before manually invoking a validator (as you would in Spring 2.5 anyway).&lt;/p&gt;</comment>
                            <comment id="67042" author="rstoya05-aop" created="Fri, 3 Jun 2011 04:27:20 +0000"  >&lt;p&gt;Closing this issue due to the identified approach with invoking a validator directly. &lt;/p&gt;

&lt;p&gt;I should also mention that the &lt;tt&gt;ModelAttributeMethodProcessor&lt;/tt&gt; used with the new &lt;tt&gt;RequestMappingHandlerAdapter&lt;/tt&gt; provides hooks around data binding and validation. This may be a suitable option for cross-cutting concerns that apply to all controllers.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="35248">SPR-7793</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="25377">SPR-5417</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="29021">SPR-6472</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        5 years, 29 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Nov 2009 17:03:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00pef:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4160</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>