<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:24:05 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2221/SPR-2221.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2221] DB2 Universial Driver and unnamed savepoints</title>
                <link>https://jira.spring.io/browse/SPR-2221</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Spring seems to assume (rightly so or not) that Connection.setSavepoint() will always return a savepoint with a unique name for each call.    When I use nested transactions using the DB2 Universal Driver, I get the following execeptions in the tracelog:&lt;/p&gt;

&lt;p&gt;com.ibm.db2.jcc.b.SqlException: This is an un-named savepoint.&lt;br/&gt;
        at com.ibm.db2.jcc.b.dd.getSavepointName(dd.java:45)&lt;br/&gt;
        at com.ibm.db2.jcc.b.o.a(o.java:1896)&lt;br/&gt;
        at com.ibm.db2.jcc.b.o.setSavepoint(o.java:1866)&lt;br/&gt;
        at org.apache.commons.dbcp.DelegatingConnection.setSavepoint(DelegatingConnection.java:338)&lt;br/&gt;
        at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.setSavepoint(PoolingDataSource.java:340)&lt;br/&gt;
        at org.springframework.jdbc.datasource.JdbcTransactionObjectSupport.createSavepoint(JdbcTransactionObjectSupport.java:131)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractTransactionStatus.createAndHoldSavepoint(AbstractTransactionStatus.java:132)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.handleExistingTransaction(AbstractPlatformTransactionManager.java:375)&lt;br/&gt;
        at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:296)&lt;br/&gt;
        at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:234)&lt;br/&gt;
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:93)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:170)&lt;br/&gt;
        at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:647)&lt;br/&gt;
        at cv.vendorlink.service.ActivityItemProcessor$$EnhancerByCGLIB$$2179b703.processFilledOrder(&amp;lt;generated&amp;gt;)&lt;br/&gt;
        at cv.vendorlink.service.LoadFileProcessorImpl.processLoadVault(LoadFileProcessorImpl.java:140)&lt;br/&gt;
        at cv.vendorlink.service.LoadFileProcessorImpl.processFile(LoadFileProcessorImpl.java:106)&lt;br/&gt;
        at cv.vendorlink.service.LoadFileProcessorImpl$$FastClassByCGLIB$$7ef95e46.invoke(&amp;lt;generated&amp;gt;)&lt;br/&gt;
        at net.sf.cglib.proxy.MethodProxy.invoke(MethodProxy.java:149)&lt;br/&gt;
        at org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation.invokeJoinpoint(Cglib2AopProxy.java:709)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:148)&lt;br/&gt;
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:100)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:170)&lt;br/&gt;
        at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:647)&lt;br/&gt;
        at cv.vendorlink.service.LoadFileProcessorImpl$$EnhancerByCGLIB$$b3a8bf83.processFile(&amp;lt;generated&amp;gt;)&lt;br/&gt;
        at cv.vendorlink.service.LoadServiceImpl.runService(LoadServiceImpl.java:113)&lt;br/&gt;
        at cv.vendorlink.service.AbstractService.run(AbstractService.java:80)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
        at org.springframework.util.MethodInvoker.invoke(MethodInvoker.java:276)&lt;br/&gt;
        at org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean$MethodInvokingJob.executeInternal(MethodInvokingJobDetailFactoryBean.java:&lt;br/&gt;
177)&lt;br/&gt;
        at org.springframework.scheduling.quartz.QuartzJobBean.execute(QuartzJobBean.java:90)&lt;br/&gt;
        at org.quartz.core.JobRunShell.run(JobRunShell.java:203)&lt;br/&gt;
        at org.quartz.simpl.SimpleThreadPool$WorkerThread.run(SimpleThreadPool.java:520)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt; END TRACE_DIAGNOSTICS&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;time:1151618230305&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;thread:Vendorlink_Worker-2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;tracepoint:5&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Request.flush&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;        SEND BUFFER: EXCSQLIMM              (ASCII)           (EBCDIC)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;        0 1 2 3 4 5 6 7   8 9 A B C D E F   0123456789ABCDEF  0123456789ABCDEF&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0000   0058D05100010052  200A00442113C3E5  .X.Q...R ..D!...  ..}...........CV&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0010   C9C1E3E2C4C24040  4040404040404040  ......@@@@@@@@@@  IATSDB&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0020   D5E4D3D3C9C44040  4040404040404040  ......@@@@@@@@@@  NULLID&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0030   4040E2E8E2E2C8F2  F0F0404040404040  @@........@@@@@@    SYSSH200&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0040   404040405359534C  564C303100410005  @@@@SYSLVL01.A..      ...&amp;lt;.&amp;lt;......&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0050   2105F10005210E01                    !....!..          ..1.....&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;        SEND BUFFER: SQLSTT                 (ASCII)           (EBCDIC)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0000   004DD00300010047  2414000000003D53  .M.....G$.....=S  .(}.............&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0010   415645504F494E54  20224A43435F4745  AVEPOINT &quot;JCC_GE  ...&amp;amp;|.+.........&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0020   4E454E4552415445  445F4E414D455F31  NENERATED_NAME_1  &lt;ins&gt;.&lt;/ins&gt;.......+.(...&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0030   22204F4E20524F4C  4C4241434B205245  &quot; ON ROLLBACK RE  ..|+..|&amp;lt;&amp;lt;.......&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0040   5441494E20435552  534F5253FF        TAIN CURSORS.     ...+.....|...&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt; &lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;time:1151618230306&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;thread:Vendorlink_Worker-2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;tracepoint:2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Reply.fill&amp;#93;&lt;/span&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;        RECEIVE BUFFER: SQLCARD             (ASCII)           (EBCDIC)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;        0 1 2 3 4 5 6 7   8 9 A B C D E F   0123456789ABCDEF  0123456789ABCDEF&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt; 0000   000BD00300010005  2408FF            ........$..       ..}........&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;ibm&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;db2&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;jcc&amp;#93;&lt;/span&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;t4&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You&apos;ll notice that the name the driver assigns to the savepoint is &quot;JCC_GENERATED_NAME_1&quot;.  subsequent calls to Connection.setSavepoint() generate the same exception and the same savepoint name.  The end result is that no new savepoint is actually created and the entire transaction becomes one big transaction.   A call to rollback(Savepoint) results in all transactions getting rolled back because they all have the same name!  So nested transactions don&apos;t seem to work with the DB2 Universal Driver.&lt;/p&gt;

&lt;p&gt;Have you guys run your nested transaction unit tests against the IBM Universal Driver?&lt;/p&gt;</description>
            <key id="14385">SPR-2221</key>
            <summary>DB2 Universial Driver and unnamed savepoints</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="hildenl">Louis C. Hilden</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Jun 2006 10:32:15 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:42 +0000</updated>
                            <resolved>Tue, 4 Jul 2006 23:14:17 +0000</resolved>
                                    <version>2.0 M5</version>
                                    <fixVersion>2.0 RC2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="18334" author="hildenl" created="Fri, 30 Jun 2006 03:29:02 +0000"  >&lt;p&gt;Update: &lt;/p&gt;

&lt;p&gt;1) we are using FP8 not FP12.&lt;/p&gt;


&lt;p&gt;2) The JavaDocs for Savepoint indicate that if you attempt to call Savepoint.getSavepointName() on an unnamed savepoint you&apos;ll get a SQLException back.   Oddly enough, the JDBC 3.0 spec doesn&apos;t mention anything about that.  Irregardless, I&apos;m tempted to blame the JDBC driver implementation for the SQLException since the driver is the one calling getSavepointName() not Spring.   This however does not change the underlying problem which is that using unnamed savepoints to implement nested transactions with the IBM Universial Driver doesn&apos;t work.&lt;/p&gt;</comment>
                            <comment id="18397" author="juergen.hoeller" created="Tue, 4 Jul 2006 23:14:17 +0000"  >&lt;p&gt;Thanks for pointing this out! Oh well, JDBC drivers and actual compliance to the spec... a never-ending story. We haven&apos;t done any savepoint tests against DB2 ourselves yet (just against various Oracle versions and against MySQL 4), as far as I&apos;m aware, hence your input is even more valuable.&lt;/p&gt;

&lt;p&gt;It seems that DB2 simply doesn&apos;t support unnamed savepoints (at least not properly). As a consequence, I have reworked our savepoint support to not rely on unnamed savepoints anymore but rather use Connection.setSavepoint(name) with its own auto-generated names (&quot;SAVEPOINT_1&quot;, &quot;SAVEPOINT_2&quot;, etc for each connection). This should work fine on all databases, even ones without support for unnamed savepoints, so I assume it&apos;s the better general strategy for our nested transactions.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18412" author="hildenl" created="Wed, 5 Jul 2006 06:23:31 +0000"  >&lt;p&gt;Hi Juergen,&lt;/p&gt;

&lt;p&gt;Thanks for fixing this so quickly.  We&apos;ll test it out in our application when RC2 is released.   &lt;/p&gt;

&lt;p&gt;Your unit tests mock-out the Connection and DriverManager interfaces and it looks like you don&apos;t integration test on DB2, so could I ask if  you have some tests I can run to verify nested transactions now work against the real DB2 Universal Driver in our environment?&lt;/p&gt;

&lt;p&gt;Also, we have a fairly close relationship with the IBM DB2 support team (particularly in the area of running the Universal Driver on JDK 5).  If you can elaborate on how the Universal Driver unnamed savepoint implementation doesn&apos;t work properly, perhaps we can work with you to open up a PMR with IBM to get the issue resolved.&lt;/p&gt;

&lt;p&gt;Wheras I do agree the DB2 implementation is unusable for this use case, I wouldn&apos;t go so far as to say that their JDBC driver is broken.  IMHO, the problem is the Sun JDBC 3.0 specs which as far as I can tell, say virtually nothing about how unnamed savepoints should be implemented.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 26 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 4 Jul 2006 23:14:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i046xb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24496</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>