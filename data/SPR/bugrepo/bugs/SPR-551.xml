<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:53:18 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-551/SPR-551.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-551] NPE initializing factory bean</title>
                <link>https://jira.spring.io/browse/SPR-551</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;These beans were working with 1.1.2, but after updating to 1.1.3 this morning, I get a NPE.  I noticed that AbstractAutowireCapableBeanFactory and AbstractBeanFactory underwent some several changes between versions.  Let me know if I can provide more information to help track down the issue, or whether I am abusing Spring somehow.&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean name=&quot;mBeanServers&quot;&lt;br/&gt;
        class=&quot;javax.management.MBeanServerFactory&quot;&lt;br/&gt;
        factory-method=&quot;findMBeanServer&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;constructor-arg index=&quot;0&quot;&amp;gt;&amp;lt;null/&amp;gt;&amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean name=&quot;mBeanServer&quot;&lt;br/&gt;
        factory-bean=&quot;mBeanServers&quot;&lt;br/&gt;
        factory-method=&quot;get&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;constructor-arg index=&quot;0&quot;&amp;gt;&amp;lt;value&amp;gt;0&amp;lt;/value&amp;gt;&amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;   &lt;/p&gt;


&lt;p&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;mBeanServer&apos; defined in URL &lt;a href=&quot;file:/D:/opt/jonas-3.3.9/webapps/jonas/edith/WEB-INF/classes/beanOverrides.xml&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/D:/opt/jonas-3.3.9/webapps/jonas/edith/WEB-INF/classes/beanOverrides.xml&lt;/a&gt;: Instantiation of bean failed; nested exception is java.lang.NullPointerException: null&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:381)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:264)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:223)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:236)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:159)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveReference(AbstractAutowireCapableBeanFactory.java:945)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveValueIfNecessary(AbstractAutowireCapableBeanFactory.java:879)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveConstructorArguments(AbstractAutowireCapableBeanFactory.java:526)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:358)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:264)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:223)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:236)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:159)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:261)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:317)&lt;br/&gt;
	at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:131)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:177)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:105)&lt;br/&gt;
	at org.springframework.web.context.ContextLoaderServlet.init(ContextLoaderServlet.java:81)&lt;br/&gt;
	at javax.servlet.GenericServlet.init(GenericServlet.java:256)&lt;/p&gt;</description>
            <key id="10871">SPR-551</key>
            <summary>NPE initializing factory bean</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="jss">Joshua Spiewak</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Dec 2004 02:50:12 +0000</created>
                <updated>Mon, 20 Dec 2004 07:07:57 +0000</updated>
                            <resolved>Mon, 20 Dec 2004 05:59:37 +0000</resolved>
                                    <version>1.1.3</version>
                                    <fixVersion>1.1.4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="11838" author="juergen.hoeller" created="Mon, 20 Dec 2004 05:59:37 +0000"  >&lt;p&gt;Thanks for the report!&lt;/p&gt;

&lt;p&gt;This is unfortunately a side effect of another fix, namely to only create a prototype once for use as factory-bean. For that fix, use of BeanFactory&apos;s &quot;getType&quot; was introduced, which may in some cases return null as type - hence the potential for an NPE.&lt;/p&gt;

&lt;p&gt;Furthermore, the problem only shows if the backend bean (with a static factory-method) is not already created when the frontend bean (that refers to it as factory-bean) gets created.&lt;/p&gt;

&lt;p&gt;I&apos;ve fixed the problem through slightly reworking the internal InstantiationStrategy SPI, passing the factory-bean instance in rather than fetching it within the strategy implementation. This allows to fetch the factory-bean instance eagerly and use it directly for finding the factory-method, without the need to go through BeanFactory&apos;s &quot;getType&quot;.&lt;/p&gt;

&lt;p&gt;As a side note, instead of such a chain of factory-method definitions, I recommend to implement a custom FactoryBean that performs the entire lookup. In particular in cases like yours, this would not only be less fragile but also more concise: a single bean definition that performs the entire retrieval of the MBeanServer.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="11840" author="jss" created="Mon, 20 Dec 2004 06:24:40 +0000"  >&lt;p&gt;I too would love a single bean definition, but I would rather not create a bean with no real purpose.  It would be great if I could use Jakarta commons-beanutils style notation in a factory-method attribute instead.  Anyway, thanks for fixing this.&lt;/p&gt;</comment>
                            <comment id="11842" author="juergen.hoeller" created="Mon, 20 Dec 2004 07:07:57 +0000"  >&lt;p&gt;There is org.springframework.beans.factory.config.PropertyPathFactoryBean, with a concise bean name notation (last example in its javadoc). It supports BeanWrapper&apos;s full syntax capabilities, including &quot;list&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;&quot; collection traversal etc.&lt;/p&gt;

&lt;p&gt;However, this just applies to &lt;b&gt;bean properties&lt;/b&gt; of type Collection, not to &lt;b&gt;bean instances&lt;/b&gt; of type Collection (which are unusual). So I&apos;m afraid you&apos;ll have to stick to factory-methods or a FactoryBean in such a case.&lt;/p&gt;

&lt;p&gt;BTW, JMX support will be the primary new feature in Spring 1.2. We already have most of it in our CVS sandbox. As part of that support package, there&apos;s an MBeanServerFactoryBean, which currently just supports creating new MBeanServers though. We should probably extend it to find existing MBeanServers when appropriate.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 2 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 20 Dec 2004 05:59:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04xrz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28846</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>