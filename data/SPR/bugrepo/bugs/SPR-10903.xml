<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:15:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-10903/SPR-10903.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-10903] Content negotiation ignores media type parameters</title>
                <link>https://jira.spring.io/browse/SPR-10903</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;When a &lt;tt&gt;@RequestMapping&lt;/tt&gt; specifies &lt;tt&gt;produces=&quot;foo/bar;param=quux&quot;&lt;/tt&gt; and a request comes in with &lt;tt&gt;Accept: foo/bar;param=xuuq&lt;/tt&gt; the mapping is still selected.&lt;br/&gt;
But the description of the &lt;tt&gt;Accept&lt;/tt&gt; header in RFC 2616 shows that parameters should influence content negotiation.&lt;/p&gt;

&lt;p&gt;Unfortunately the handler compatibility check done from &lt;tt&gt;RequestMappingHandlerMapping&lt;/tt&gt; is ultimately performed via &lt;tt&gt;isCompatibleWith&lt;/tt&gt; in &lt;tt&gt;MediaType&lt;/tt&gt;, and this method completely ignores media type parameters.&lt;/p&gt;</description>
            <key id="50829">SPR-10903</key>
            <summary>Content negotiation ignores media type parameters</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="9">Works as Designed</resolution>
                                        <assignee username="bclozel">Brian Clozel</assignee>
                                    <reporter username="mpol">Micha&#322; Politowski</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Sep 2013 02:03:33 +0000</created>
                <updated>Tue, 8 Nov 2016 21:53:06 +0000</updated>
                            <resolved>Wed, 23 Jul 2014 06:41:37 +0000</resolved>
                                    <version>3.2.2</version>
                                                    <component>Web</component>
                        <due></due>
                            <votes>2</votes>
                                    <watches>7</watches>
                                                                <comments>
                            <comment id="93546" author="rstoya05-aop" created="Thu, 12 Sep 2013 11:50:16 +0000"  >&lt;p&gt;What specific section (text) of the RFC are you referring to? Also providing a concrete example of two types that are incompatible would be useful.&lt;/p&gt;</comment>
                            <comment id="105392" author="w_c_smith" created="Mon, 7 Jul 2014 08:59:33 +0000"  >&lt;p&gt;This is actually a major bug, not a minor one; it contradicts RFC behavior and is inconsistent in Spring MVC mapping internals. I&apos;ve produced &lt;a href=&quot;https://github.com/chrylis/spring-SPR-10903&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;a runnable Spring Boot test case&lt;/a&gt; demonstrating the bug. Parameters are a core syntactical element of media types; see, for example, &lt;a href=&quot;http://tools.ietf.org/html/rfc6838#section-4.3&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;RFC 6838 4.3&lt;/a&gt; for a discussion.&lt;/p&gt;

&lt;p&gt;Note that my test case is against the latest release, 4.0.5.&lt;/p&gt;</comment>
                            <comment id="105412" author="bclozel" created="Mon, 7 Jul 2014 11:24:31 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=w_c_smith&quot; class=&quot;user-hover&quot; rel=&quot;w_c_smith&quot;&gt;Christopher Smith&lt;/a&gt; - I&apos;ve found other resources as well.&lt;/p&gt;

&lt;p&gt;First, it looks like the importance of parameters is a per-media type thing.&lt;br/&gt;
&lt;a href=&quot;http://tools.ietf.org/html/rfc7231#section-3.1.1.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;RFC 7231 3.1.1.1 &lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;The presence or absence of a parameter might be significant to the processing of a media-type, depending on its definition within the media type registry.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Also, &quot;proactive negotiation&quot; isn&apos;t an exact science and the RFC does not specify the actual algorithm the server should implement. &lt;a href=&quot;http://tools.ietf.org/html/rfc7231#section-3.4.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;RFC 7231 3.4.1&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A user agent cannot rely on proactive negotiation preferences being consistently honored, since the origin server might not implement proactive negotiation for the requested resource or might decide that sending a response that doesn&apos;t conform to the user agent&apos;s preferences is better than sending a 406 (Not Acceptable) response.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe the next step should be trying this exact case with well-known static servers (nginx, apache) and see what kind of response you get when asking for a resource with &quot;text/css;param=foo&quot;? I&apos;m wondering what is the &quot;de facto&quot; standard on this.&lt;/p&gt;</comment>
                            <comment id="105437" author="w_c_smith" created="Mon, 7 Jul 2014 14:50:29 +0000"  >&lt;p&gt;Please see the README for my test case: It shows that the DispatcherServlet is actually recognizing the types as separate (and based on the returned content type, it understands the distinction) but isn&apos;t applying those mappings at resolution time.&lt;/p&gt;

&lt;p&gt;Note that an extremely common parameter, especially with text, is encoding.&lt;/p&gt;</comment>
                            <comment id="105527" author="bclozel" created="Wed, 9 Jul 2014 06:52:30 +0000"  >&lt;p&gt;Hi &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=w_c_smith&quot; class=&quot;user-hover&quot; rel=&quot;w_c_smith&quot;&gt;Christopher Smith&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for the very complete report and repro project. This is a rather complex field and it always requires quite some RFC/documentation reading...&lt;/p&gt;

&lt;p&gt;Tell me if I&apos;m wrong, but I think that:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;parameters are specific to each media-type (see &lt;a href=&quot;https://www.iana.org/assignments/media-types/media-types.xhtml&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;IANA registry&lt;/a&gt;)&lt;/li&gt;
	&lt;li&gt;parameters could or could not be used in the negotiation process; again, this is so specific to each media type that the mechanism you asked for could not work in many other cases&lt;/li&gt;
	&lt;li&gt;so the most &quot;suitable&quot; method for comparing Accepts/Produces parameters is: the number of parameters and their value. Which we are doing. In any case, relying on this for matching requests is a very bad idea.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So &lt;tt&gt;isCompatibleWith&lt;/tt&gt; should select a compatible Media Type and the response should be understood by the client (judging from HTTP RFCs).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It shows that the DispatcherServlet is actually recognizing the types as separate&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We are recognizing those as separate everywhere, but I don&apos;t know any rule for comparing media types with their parameters effectively. It really depends on the media type. Technically &lt;tt&gt;&quot;application/x-spring+json;version=2&quot;&lt;/tt&gt; and &lt;tt&gt;&quot;application/x-spring+json;version=1&quot;&lt;/tt&gt; are compatible media types. Where should the framework route the request in those cases:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;request &lt;tt&gt;&quot;application/x-spring+json&quot;&lt;/tt&gt;, produces &lt;tt&gt;&quot;application/x-spring+json;version=1&quot;&lt;/tt&gt; and &lt;tt&gt;&quot;application/x-spring+json;version=2&quot;&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;request &lt;tt&gt;&quot;application/x-spring+json;version=2;foo=bar&quot;&lt;/tt&gt;, produces &lt;tt&gt;&quot;application/x-spring+json;version=2&quot;&lt;/tt&gt; and &lt;tt&gt;&quot;application/x-spring+json;foo=bar&quot;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you&apos;re actually trying to achieve REST versioning through media types, it seems that the most common solution is to use different media types, since their format obviously changed between versions:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;tt&gt;&quot;application/vnd.spring.foo.v1+json&quot;&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;&lt;tt&gt;&quot;application/vnd.spring.foo.v2+json&quot;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For all those reasons, I&apos;m closing this issue for now - but I&apos;m not closing comments, so feel free to continue the discussion!&lt;/p&gt;

&lt;p&gt;Note: our overall design is actually pretty close to JAX-RS. Also, I&apos;ve looked into several frameworks and libs and none seemed to use media type parameters for routing requests.&lt;/p&gt;</comment>
                            <comment id="106092" author="w_c_smith" created="Tue, 22 Jul 2014 14:26:17 +0000"  >&lt;p&gt;I saw the resolution change on this issue but am not sure what &quot;complete&quot; means for this context. Juergen, can you explain what the resolution was?&lt;/p&gt;</comment>
                            <comment id="106119" author="bclozel" created="Wed, 23 Jul 2014 06:42:15 +0000"  >&lt;p&gt;Right, that&apos;s the proper status for this issue.&lt;br/&gt;
Thanks &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=rstoya05-aop&quot; class=&quot;user-hover&quot; rel=&quot;rstoya05-aop&quot;&gt;Rossen Stoyanchev&lt;/a&gt;!&lt;/p&gt;</comment>
                            <comment id="118705" author="raedwald" created="Wed, 19 Aug 2015 07:27:40 +0000"  >&lt;p&gt;Yesterday I submitted &lt;a href=&quot;https://jira.spring.io/browse/SPR-13365&quot; title=&quot;HTTP content negotiation does not respect media type parameters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-13365&quot;&gt;&lt;del&gt;SPR-13365&lt;/del&gt;&lt;/a&gt;, which I now see is a duplicate of this issue.&lt;/p&gt;

&lt;p&gt;Note that in my submission I found a second, closely related, piece of unexpected behaviour: if the &lt;tt&gt;selectedMediaType&lt;/tt&gt; (the supported media type of the chosen HTTP message converter) differs from the requested type only in the media-type parameters, the &lt;tt&gt;Content-Type&lt;/tt&gt; header of the response will contain the requested media type even though the response body is actually of the &lt;tt&gt;selectedMediaType&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;My interpretation of the statement in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-3.1.1.1&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://tools.ietf.org/html/rfc7231#section-3.1.1.1&lt;/a&gt; that &quot;The presence or absence of a parameter might be significant to the processing of a media-type, depending on its definition within the media type registry.&quot; is that each HTTP message converter is the only appropriate place in which to indicate whether a parameter is significant, as an HTTP message converter is where the smarts are for handling media types. If a media type has various parameters, and a particular converter can handle some parameter values and not others, it is should be responsible for setting its &lt;tt&gt;supportedMediaTypes&lt;/tt&gt; for all the variant parameter values it handles, and the &lt;tt&gt;AbstractMessageConverterMethodProcessor&lt;/tt&gt; should be doing exact matching of parameter values, rather than ignoring them.&lt;/p&gt;</comment>
                            <comment id="133279" author="markhobson" created="Tue, 8 Nov 2016 21:53:06 +0000"  >&lt;p&gt;A real world example of when this is problematic can be seen with Atom documents. The &lt;a href=&quot;https://tools.ietf.org/html/rfc5023#section-12&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Atom Publishing Protocol&lt;/a&gt; defines two media types:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Atom Feed Documents: &lt;tt&gt;application/atom+xml;type=feed&lt;/tt&gt;&lt;/li&gt;
	&lt;li&gt;Atom Entry Documents: &lt;tt&gt;application/atom+xml;type=entry&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A controller can declare that it produces only entry documents, but when presented with a feed accept header it will merrily respond with an incorrect feed content type.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="65367">SPR-13365</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        6 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 12 Sep 2013 11:50:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>markhobson</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06kpr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>38394</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>