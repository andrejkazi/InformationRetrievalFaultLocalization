<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:12:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-753/SPR-753.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-753] DataSourceUtils.doCloseConnectionIfNecessary &apos;==&apos; not sufficient.</title>
                <link>https://jira.spring.io/browse/SPR-753</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Currently (1.1.5) )doCloseConnectionIfNecessary reads like this ...&lt;/p&gt;

&lt;p&gt;ConnectionHolder conHolder = (ConnectionHolder) TransactionSynchronizationManager.getResource(dataSource);&lt;br/&gt;
if (conHolder != null &amp;amp;&amp;amp; con == conHolder.getConnection()) {&lt;br/&gt;
// It&apos;s the transactional Connection: Don&apos;t close it.&lt;br/&gt;
	conHolder.released();&lt;br/&gt;
	return;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;But there are cases where the connection passed in as a parameter no longer has the wrapper Connection (named PoolGuardxxxx...)  surrounding it, however the conHolder.getConnection() still references the wrapper. In this case the ID&apos;s of the objects will not match, but the wrapper implementation of equals uses it&apos;s actual connection to perform the comparision.&lt;/p&gt;

&lt;p&gt;Changing the 1.1.4 code to .... &lt;/p&gt;

&lt;p&gt;ConnectionHolder conHolder = (ConnectionHolder) TransactionSynchronizationManager.getResource(dataSource);&lt;/p&gt;

&lt;p&gt;if (conHolder != null &amp;amp;&amp;amp; conHolder.getConnection().equals(con)) {&lt;br/&gt;
	// It&apos;s the transactional Connection: Don&apos;t close it.&lt;br/&gt;
        return;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;.. has solved a Connection &apos;leak&apos; for me, whereby Connections which were not involved in transactions were not getting closed. &lt;/p&gt;

&lt;p&gt;I appreciate there may not be enough detail in this, if this is the case I would be glad to expand.&lt;/p&gt;

&lt;p&gt;Alan.&lt;/p&gt;
</description>
            <key id="11211">SPR-753</key>
            <summary>DataSourceUtils.doCloseConnectionIfNecessary &apos;==&apos; not sufficient.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="alanmcsherry">Alan McSherry</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Feb 2005 21:18:52 +0000</created>
                <updated>Sun, 20 Mar 2005 04:32:01 +0000</updated>
                            <resolved>Sun, 20 Mar 2005 04:32:01 +0000</resolved>
                                    <version>1.1.4</version>
                    <version>1.1.5</version>
                                    <fixVersion>1.2 RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12488" author="juergen.hoeller" created="Thu, 3 Mar 2005 21:58:05 +0000"  >&lt;p&gt;In which cases do you pass a different Connection handle to closeConnectionIfNecessary than the one registered in the ConnectionHolder? In general, you should always pass the exact same handle in that you originally received from getConnection. This is also what all of Spring&apos;s JDBC access classes do.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12568" author="alanmcsherry" created="Sun, 13 Mar 2005 08:40:19 +0000"  >&lt;p&gt;This example class shows, in hugely pared down format, how I am using the DataSourceUtils. In &apos;run&apos; below the Connection is used to create a statement, but when it comes to releasing the statement the connection returned from aStatement.getConnection() is not the wrapping connection but rather the wrapped connection. &lt;/p&gt;

&lt;p&gt;	public void run() throws Exception &lt;/p&gt;
{
		Connection conn = getConnection(&quot;Debug info string&quot;);
		Statement stmt = conn.createStatement();
		release(stmt);
	}

&lt;p&gt;____________________________________________________&lt;br/&gt;
Locator just loads the applicationcontext file, and retrieves the instance of Example. &lt;/p&gt;

&lt;p&gt;The datasource is a commons BasicDataSource. &lt;/p&gt;

&lt;p&gt;I have a situation where a layer is aware of statements but is not coupled with connections. By retrieving the connection from the statement I can keep it that way! &lt;/p&gt;

&lt;p&gt;(Was out of the office last all this week, hence the delay) &lt;/p&gt;</comment>
                            <comment id="12617" author="juergen.hoeller" created="Sun, 20 Mar 2005 04:32:01 +0000"  >&lt;p&gt;OK, I see - there are indeed valid use cases for this. OK, I&apos;ve change DataSourceUtils.closeConnectionIfNecessary to use an equals check, and even to perform an equals check on the underlying target Connection in case of a Spring ConnectionProxy (as used by LazyConnectionDataSourceProxy, for example - with special equals/hashCode behavior on the proxy).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="10582" name="Example.java" size="1638" author="alanmcsherry" created="Sun, 13 Mar 2005 08:40:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 41 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 3 Mar 2005 21:58:05 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i010f3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5945</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>