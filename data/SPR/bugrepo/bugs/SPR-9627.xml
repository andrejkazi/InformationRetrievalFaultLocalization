<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:31:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-9627/SPR-9627.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-9627] Regression: scoped beans being cached too aggressively</title>
                <link>https://jira.spring.io/browse/SPR-9627</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The bugfix &lt;a href=&quot;https://jira.spring.io/browse/SPR-9176&quot; title=&quot;Scoped-proxy memory leak w/ @Resource injection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9176&quot;&gt;&lt;del&gt;SPR-9176&lt;/del&gt;&lt;/a&gt; &quot;Scoped-proxy memory leak w/ &lt;tt&gt;@Resource&lt;/tt&gt; injection&quot; leads to bean instances being cached too eagerly in &lt;tt&gt;CommonAnnotationBeanPostProcessor&lt;/tt&gt;. Besides the (desired) caching of AOP scoped-proxies to prevent the memory leak the current code also caches custom scoped bean instances that should not be cached. This happens for example if client code uses &lt;tt&gt;AutowireCapableBeanFactory#autowireBean(Object)&lt;/tt&gt; to inject dependencies (annotation-based) into a manually created bean. In this case no AOP proxies are involved but the cached instances are still used. The underlying scope is never consulted and can thus never signalize that a new instance is to be created and injected because the context of the scope (e.g. request, session) is different from the first call which resulted in the cached instance.&lt;/p&gt;

&lt;p&gt;I attached a Test-Case (JUnit 4 Test, requires JUnit and Spring to run). The test-case illustrates the breaking change: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Runs fine with Spring version 3.1.1 and older (tested with 3.0.5)&lt;/li&gt;
	&lt;li&gt;Fails with Spring version 3.1.2 and 3.2.M1&lt;/li&gt;
	&lt;li&gt;The defect was introduced in the bugfix for &lt;a href=&quot;https://jira.spring.io/browse/SPR-9176&quot; title=&quot;Scoped-proxy memory leak w/ @Resource injection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9176&quot;&gt;&lt;del&gt;SPR-9176&lt;/del&gt;&lt;/a&gt; in version 3.2.M1 with commit f779c199ea272cf61781e120b1ab2efc50de0cbb&lt;/li&gt;
	&lt;li&gt;The defect was back-ported to version 3.1.2 with &lt;a href=&quot;https://jira.spring.io/browse/SPR-9363&quot; title=&quot;Backport &amp;quot;Scoped-proxy memory leak w/ @Resource injection&amp;quot;&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9363&quot;&gt;&lt;del&gt;SPR-9363&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I understand this calling pattern is not very common but nevertheless the affected API is public and our framework relies on this to provide service beans to instances of &quot;visual&quot; classes (a visual models a single page in a web application). This basically renders custom scoped beans (also being used heavily) unusable for us in releases &amp;gt; 3.1.1, thus my classification as &quot;major&quot;.&lt;/p&gt;

&lt;p&gt;Best regards&lt;br/&gt;
Samuel Bernet&lt;br/&gt;
MSc ETH Software Engineering&lt;br/&gt;
samuel.bernet@raiffeisen.ch&lt;/p&gt;</description>
            <key id="44660">SPR-9627</key>
            <summary>Regression: scoped beans being cached too aggressively</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="sam_bernet">Samuel Bernet</reporter>
                        <labels>
                            <label>repro-project-submitted</label>
                    </labels>
                <created>Tue, 24 Jul 2012 10:55:22 +0000</created>
                <updated>Wed, 31 Oct 2012 11:34:00 +0000</updated>
                            <resolved>Fri, 31 Aug 2012 02:53:28 +0000</resolved>
                                    <version>3.1.2</version>
                    <version>3.2 M1</version>
                                    <fixVersion>3.1.3</fixVersion>
                    <fixVersion>3.2 M2</fixVersion>
                                    <component>Core:DI</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="82531" author="woutercoekaerts" created="Tue, 14 Aug 2012 03:37:51 +0000"  >&lt;p&gt;Also see the test case attached to &lt;a href=&quot;https://jira.spring.io/browse/SPR-9684&quot; title=&quot;@Resource injection regression with scope prototype&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9684&quot;&gt;&lt;del&gt;SPR-9684&lt;/del&gt;&lt;/a&gt;: it shows it happens for prototype scoped beans injected with @Resource, but not with @Autowired.&lt;/p&gt;</comment>
                            <comment id="82627" author="cbeams" created="Thu, 16 Aug 2012 00:58:17 +0000"  >&lt;p&gt;See also the reproduction project attached to duplicate issue &lt;a href=&quot;https://jira.spring.io/browse/SPR-9684&quot; title=&quot;@Resource injection regression with scope prototype&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9684&quot;&gt;&lt;del&gt;SPR-9684&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="44913">SPR-9684</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="42406">SPR-9176</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="44448">SPR-9580</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="43154">SPR-9363</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="45631">SPR-9852</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="20123" name="SPR-9176-TestCase.zip" size="3359" author="sam_bernet" created="Tue, 24 Jul 2012 10:55:22 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        4 years, 19 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 14 Aug 2012 03:37:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>cbeams</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05qtb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33550</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>