<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:43:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-4702/SPR-4702.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-4702] Support for @DirtiesContext at the test class level</title>
                <link>https://jira.spring.io/browse/SPR-4702</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Expected behavior:&lt;br/&gt;
  Context should be close()&apos;d after end of test class execution&lt;/p&gt;

&lt;p&gt;Observed behavior:&lt;br/&gt;
  Context only closed when @DirtiesContext annotates method&lt;/p&gt;

&lt;p&gt;Multiple test classes can re-use the same context, which allows for faster test execution, so automatically closing a context after test class execution is probably not the best mechanism.  &lt;/p&gt;

&lt;p&gt;However, there should be a way to annotate that a context should be close()&apos;d after all tests in a test class are executed. &lt;/p&gt;

&lt;p&gt;Suggested fix:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;allow @DirtiesContext to annotate class&lt;/li&gt;
	&lt;li&gt;add TestExecutionListener#destroyTestInstance&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Willing to implementing, if given approval of design. &lt;/p&gt;</description>
            <key id="21689">SPR-4702</key>
            <summary>Support for @DirtiesContext at the test class level</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="sbrannen">Sam Brannen</assignee>
                                    <reporter username="flicken">Noel Flicken</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Apr 2008 13:06:57 +0000</created>
                <updated>Tue, 19 Jun 2012 03:47:13 +0000</updated>
                            <resolved>Mon, 6 Jul 2009 05:07:47 +0000</resolved>
                                                    <fixVersion>3.0 M4</fixVersion>
                                    <component>Test</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>6</watches>
                                                                <comments>
                            <comment id="36272" author="flicken" created="Thu, 29 May 2008 06:35:08 +0000"  >&lt;p&gt;This issue differs from &lt;a href=&quot;https://jira.spring.io/browse/SPR-2007&quot; title=&quot;ANT does not call destroy-method after tests&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2007&quot;&gt;&lt;del&gt;SPR-2007&lt;/del&gt;&lt;/a&gt; in expected implementation.  SPR_2007 is difficult to implement due to JUnit architectural limitations.  &lt;/p&gt;

&lt;p&gt;This issue suggests a feature to optionally allow a context to be automatically closed after all test methods in a given Test Class are run, i.e. when JUnit @AfterClass methods are run. &lt;/p&gt;</comment>
                            <comment id="36273" author="juergen.hoeller" created="Thu, 29 May 2008 06:38:23 +0000"  >&lt;p&gt;OK, good point - although I&apos;m not entirely clear how exactly such @AfterClass closing will fit with context sharing. We&apos;ll see.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="36275" author="flicken" created="Thu, 29 May 2008 08:33:13 +0000"  >&lt;p&gt;Fair enough.  Allowing @DirtiesContext to annotate a test class has a clear semantic meaning, and is a natural extension to its currently method-only usage.   This means that the interaction between @DirtiesContext and context-sharing would be unchanged from the current implementation. &lt;/p&gt;</comment>
                            <comment id="42728" author="ejain" created="Mon, 23 Feb 2009 06:49:13 +0000"  >&lt;p&gt;This would also be beneficial for TestNG tests (e.g. using AbstractTestNGSpringContextTests) where one would like to make use of TestNG&apos;s support for explicit dependencies between test methods. Not being able to control context reloading at the class level makes this feature a lot less useful (and the functional tests a lot uglier).&lt;/p&gt;</comment>
                            <comment id="43837" author="olaf" created="Sun, 26 Apr 2009 06:58:57 +0000"  >&lt;p&gt;I would also like a convenient way to enforce context destruction after test class execution. In my specific case, I have observed that the refresh() that takes place on test class execution creates a seemingly new context but does not dispose old singletons (those are destroyed after all test classes have finished or if an exception is thrown...) which causes a significant memory consumption...&lt;/p&gt;</comment>
                            <comment id="44106" author="jdboer" created="Tue, 12 May 2009 00:48:15 +0000"  >&lt;p&gt;Destroying the context would be very welcome. I have several testcases with multiple testmethods which, when using @DirtiesContext on method level, cause test failures because when creating a new context for the last testmethods no new db2 connections can be made. Apparently a problem with our db2 servers which cannot handle setting up and destroying connections so fast. Destroying the whole context would be a great solution for this problem.&lt;/p&gt;

&lt;p&gt;I tried to work around it by creating a @DirtiesBean annotation which just destroys the one bean I had used in the test. It seemed to work fine but I now run into different destroy behaviour between running in Maven and in Eclipse. (See &lt;a href=&quot;http://forum.springsource.org/showthread.php?p=240436#post240436&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springsource.org/showthread.php?p=240436#post240436&lt;/a&gt;)&lt;/p&gt;
</comment>
                            <comment id="45281" author="sbrannen" created="Mon, 6 Jul 2009 05:07:47 +0000"  >&lt;p&gt;@DirtiesContext is now supported at the class level as well as at the method level.&lt;/p&gt;

&lt;p&gt;This is made possible via new support for &apos;before class&apos; and &apos;after class&apos; callbacks in the TestExecutionListener interface. DirtiesContextTestExecutionListener now implements afterTestClass(TestContext) which provides the class-level support for @DirtiesContext.&lt;/p&gt;</comment>
                            <comment id="45282" author="sbrannen" created="Mon, 6 Jul 2009 05:08:49 +0000"  >&lt;p&gt;Note: due to the limitations of JUnit 3.8, @DirtiesContext is not supported at the class level for tests run with subclasses of AbstractJUnit38SpringContextTests.&lt;/p&gt;</comment>
                            <comment id="45283" author="sbrannen" created="Mon, 6 Jul 2009 05:12:30 +0000"  >&lt;p&gt;Noel, Eric, Olaf, Joost, et al,&lt;/p&gt;

&lt;p&gt;Please try out this new functionality in one of the upcoming nightly snapshots or in 3.0.0.RC1, and let me know if this meets your needs. Note that using @DirtiesContext at the class level should be fully supported in JUnit 4.6 and TestNG 5.9.&lt;/p&gt;

&lt;p&gt;Thanks for all of your input!&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="25259">SPR-5395</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="24779">SPR-5305</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                            <outwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="26202">SPR-5640</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="13960">SPR-2007</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="25259">SPR-5395</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        7 years, 25 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 May 2008 06:38:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i033h3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18105</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>