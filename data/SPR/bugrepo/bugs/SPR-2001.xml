<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:03:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2001/SPR-2001.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2001] Stored Procedure hangs due to bug in JDBC driver</title>
                <link>https://jira.spring.io/browse/SPR-2001</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The scenario is similar to that described in &lt;a href=&quot;https://jira.spring.io/browse/SPR-1840&quot; title=&quot;StoredProcedure hangs on Oracle&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1840&quot;&gt;&lt;del&gt;SPR-1840&lt;/del&gt;&lt;/a&gt;. I tracked down the issue by just copying &amp;amp; executing the stored procedure example from the reference manual.&lt;/p&gt;

&lt;p&gt;My analysis had following result:&lt;br/&gt;
In JdbcTemplate#extractReturnedResultSets the method CallableStatement#getUpdateCount() is invoked and the result is used as criterion in a do/while loop. Unfortunately there seems to be a bug in Oracle&apos;s jdbc driver (10.1.0.2.0; this is the version supplied with WebLogic 8.1SP4). This method erroneously returns 1, causing an endless loop. I know that this is no bug in Spring, but maybe the loop could be changed  to handle such failures more graceful.&lt;/p&gt;

&lt;p&gt;As an aside: the driver versions 10.1.0.4.0 (provided with WebLogic 8.1SP5) and 10.2.0.1.0 do &lt;em&gt;not&lt;/em&gt; show the erroneous behavior. Unfortunately I cannot change the JDBC driver at this time.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Andreas&lt;/p&gt;</description>
            <key id="13948">SPR-2001</key>
            <summary>Stored Procedure hangs due to bug in JDBC driver</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thomas.risberg">Thomas Risberg</assignee>
                                    <reporter username="asenft">Andreas Senft</reporter>
                        <labels>
                    </labels>
                <created>Wed, 10 May 2006 19:42:15 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:34 +0000</updated>
                            <resolved>Sun, 2 Jul 2006 11:43:37 +0000</resolved>
                                    <version>1.2.8</version>
                    <version>2.0 M4</version>
                                    <fixVersion>2.0 RC2</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="17549" author="asenft" created="Wed, 10 May 2006 20:09:00 +0000"  >&lt;p&gt;&lt;br/&gt;
As an addition: Would it make sense to provide an option to disable ResultSet processing? Actually, I do not use that feature and if I could disable it, the problem would go away. I know that portability requirements encourage to do this processing first, however for cases like these it might be helpful.&lt;/p&gt;</comment>
                            <comment id="17550" author="asenft" created="Wed, 10 May 2006 20:42:32 +0000"  >
&lt;p&gt;After some thinking, I propose a solution for optimizing the loop:&lt;br/&gt;
The loop does only perform a logic for SqlReturnResultSet parameters. If it could be verified, that no such parameter is declared, the processing could be skipped. This would avoid the problem for my case. &lt;br/&gt;
However, some verification logic would be nice in any case to prevent an endless loop in the presence of SqlReturnResultSet parameters. I am just not sure, what to check for.&lt;/p&gt;</comment>
                            <comment id="17577" author="fabio" created="Sat, 13 May 2006 00:06:36 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://jira.spring.io/browse/SPR-826&quot; title=&quot;Oracle 10g Jdbc thin driver &quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-826&quot;&gt;&lt;del&gt;SPR-826&lt;/del&gt;&lt;/a&gt;. Ciao, Fabio.&lt;/p&gt;</comment>
                            <comment id="17607" author="asenft" created="Sun, 14 May 2006 17:19:11 +0000"  >
&lt;p&gt;Didn&apos;t see this one (actually stopped searching after finding the other mentioned issue).&lt;br/&gt;
Though it seems to have been rejected before, maybe something could be done. One option I mentioned above. Another one could be to throw an exception when the counter inside the loop overflows (or maybe reaches a specific value).&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Andreas&lt;/p&gt;</comment>
                            <comment id="17617" author="juergen.hoeller" created="Mon, 15 May 2006 00:33:39 +0000"  >&lt;p&gt;Thomas, can you please revisit this issue? Is there anything we can do to workaround inappropriate JDBC driver behavior here?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="17664" author="thomas.risberg" created="Thu, 18 May 2006 09:42:53 +0000"  >&lt;p&gt;Maybe we could provide a system property like &quot;-Dspring.jdbc.skipUpdateCountProcessing=true&quot; and then change the JdbcTemplate to look for this property and bypass the getUpdateCount() call and assume that -1 is returned.  I&apos;d rather not check the version number of the driver since there are some inconsistencies.  The BEA supplied drivers are sometimes different builds even if they have the same version number.&lt;/p&gt;</comment>
                            <comment id="17665" author="asenft" created="Fri, 19 May 2006 00:17:21 +0000"  >
&lt;p&gt;I just investigated a bit and found a possible solution to the endless loop problem.&lt;br/&gt;
CallableStatement.getMetaData() yields a ResultSetMetaData on which getColumnCount() can be invoked to determine the maximum number of columns. If the rsIndex variable exceeds this value the loop could be aborted with an appropriate exception.&lt;br/&gt;
As last resort, rsIndex could be changed to be a long instead of an int. So an overflow could be tracked by comparing against Integer.MAX_INT. Would probably take a while, but will terminate eventually.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Andreas&lt;/p&gt;</comment>
                            <comment id="17666" author="asenft" created="Fri, 19 May 2006 00:20:48 +0000"  >
&lt;p&gt;Adding to my comment above:&lt;br/&gt;
Based on the API documentation getMetaData() could be expensive. So an optimization would be nice: The determination of the row count could be delayed until the index variable reaches some higher value (e.g. 5000). So in the most cases the operation will not happen, but in an error case it will be triggered.&lt;/p&gt;</comment>
                            <comment id="17983" author="juergen.hoeller" created="Tue, 13 Jun 2006 01:58:43 +0000"  >&lt;p&gt;Thomas, what&apos;s the status of this? If such a &quot;skipUpdateCountProcessing&quot; flag makes sense, we can certainly add that - preferably as bean property on JdbcTemplate rather than as system property (since Spring doesn&apos;t use system properties anywhere else either). Also, optimizations in terms of only acually performing the processing when absolutely necessary sounds good as well.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="18357" author="thomas.risberg" created="Sun, 2 Jul 2006 11:43:37 +0000"  >&lt;p&gt;Added indicator &apos;skipResultsProcessing&apos; that can be set to true to avoid the extra work involved here and to avoid the bug in some earlier Oracle drivers like 10.1.0.2.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 26 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 13 May 2006 00:06:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01erz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8271</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>