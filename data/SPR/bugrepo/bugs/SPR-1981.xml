<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 17:51:33 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1981/SPR-1981.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1981] RequiredBeanFactoryPostProcessor doesn&apos;t work with beans without a class attribute</title>
                <link>https://jira.spring.io/browse/SPR-1981</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Beans that use parent and doesn&apos;t override class fails.&lt;/p&gt;

&lt;p&gt;java.lang.IllegalStateException: Bean definition does not carry a resolved bean class&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanDefinition.getBeanClass(AbstractBeanDefinition.java:266)&lt;br/&gt;
	at org.springframework.beans.factory.annotation.RequiredBeanFactoryPostProcessor.processBeanDefinition(RequiredBeanFactoryPostProcessor.java:103)&lt;br/&gt;
	at org.springframework.beans.factory.annotation.RequiredBeanFactoryPostProcessor.postProcessBeanFactory(RequiredBeanFactoryPostProcessor.java:81)&lt;/p&gt;</description>
            <key id="13893">SPR-1981</key>
            <summary>RequiredBeanFactoryPostProcessor doesn&apos;t work with beans without a class attribute</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="magnus">Magnus Heino</reporter>
                        <labels>
                    </labels>
                <created>Wed, 3 May 2006 23:03:41 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:22 +0000</updated>
                            <resolved>Mon, 15 May 2006 20:44:05 +0000</resolved>
                                    <version>2.0 M4</version>
                                    <fixVersion>2.0 M5</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="17488" author="juergen.hoeller" created="Thu, 4 May 2006 06:22:57 +0000"  >&lt;p&gt;This is actually a more general issue: The entire mechanism is at present not capable of handling bean definitions that use inheritance. It will apply all @Required annotations to the bean definition that carries the bean class, while the correct handling would require to apply the overall set if annotations to the merged bean definitions that results from resolving the inheritance hierarchy (if any).&lt;/p&gt;

&lt;p&gt;As a consequence, I&apos;m afraid that we need to reimplement the entire mechanism for 2.0 RC1.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="17567" author="habuma" created="Fri, 12 May 2006 00:28:46 +0000"  >&lt;p&gt;For what it&apos;s worth...I&apos;m getting the same exception as reported above when using a plain-vanilla bean (no inheritence of any kind). I&apos;m using the latest nightly build (spring-framework-2.0-rc1-with-dependencies-build.20-20060508.zip). If I roll back to M4, then it works.&lt;/p&gt;

&lt;p&gt;I see that RequiredBeanFactoryPostProcessor.java hasn&apos;t changed between M4 and the nightly build, but AbstractBeanDefinition has changed quite a bit...perhaps those changes are what has broken RequiredBeanFactoryPostProcessor.&lt;/p&gt;

&lt;p&gt;I&apos;d love to follow the progress along more closely, but with SF&apos;s anonymous CVS down, I&apos;m kinda in the dark.&lt;/p&gt;</comment>
                            <comment id="17642" author="juergen.hoeller" created="Mon, 15 May 2006 20:44:05 +0000"  >&lt;p&gt;I&apos;ve reworked RequiredBeanFactoryPostProcessor into RequiredAnnotationBeanPostProcessor, properly handling bean inheritance and also autowired properties now. As the name change indicates, this is now a BeanPostProcessor that operates on the actual property values that the factory is about to apply (through a new hook in the core container), rather than a BeanFactoryPostProcessor as before.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="17644" author="magnus" created="Mon, 15 May 2006 21:08:50 +0000"  >&lt;p&gt;I still think that my original proposal back in &lt;a href=&quot;https://jira.spring.io/browse/SPR-1047&quot; title=&quot;Annotation to validate required bean attributes&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-1047&quot;&gt;&lt;del&gt;SPR-1047&lt;/del&gt;&lt;/a&gt; using a BeanFactoryPostProcessor adds more value than this though.&lt;/p&gt;

&lt;p&gt;It will validate that the bean will be populated with properties of the required type, when a instance is created later on. &lt;/p&gt;

&lt;p&gt;I guess you could do the same thing with a integration test and this implementation though, looping through all spring beans doing a getBean on them.&lt;/p&gt;

&lt;p&gt;Having a exception that my spring xml is missing required properties after maybe a few days or so for lazy beans or prototypes is a bit late imho.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 33 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 4 May 2006 06:22:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01cl3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7916</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>