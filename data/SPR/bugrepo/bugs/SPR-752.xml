<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:19:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-752/SPR-752.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-752] AbstractBeanFactory.getType() ignores exceptions</title>
                <link>https://jira.spring.io/browse/SPR-752</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;AbstractBeanFactory.getType() catches BeanCreationException, but does nothing except log a debug message.&lt;/p&gt;

&lt;p&gt;This behavior completely hid an exception that occured in one of our bean factories in the afterPropertiesSet() method.&lt;/p&gt;

&lt;p&gt;(We use a bean factory post processor to add TX support to our startup bean. The post processor issues a call to configurableListableBeanFactory.getBeansOfType(), causing the bean factories to be initialized, in order to do type checking.)&lt;/p&gt;</description>
            <key id="11210">SPR-752</key>
            <summary>AbstractBeanFactory.getType() ignores exceptions</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="fabgo">Fabian Gonzales</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Feb 2005 10:45:16 +0000</created>
                <updated>Mon, 21 Mar 2005 00:25:16 +0000</updated>
                            <resolved>Mon, 21 Mar 2005 00:25:16 +0000</resolved>
                                    <version>1.1.5</version>
                                    <fixVersion>1.2 RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12637" author="juergen.hoeller" created="Mon, 21 Mar 2005 00:25:16 +0000"  >&lt;p&gt;This is unfortunately a bit tricky: getType should not fail if called during autowiring of a bean just because some FactoryBean has a reference to the currently created bean (such a FactoryBean will usually get instantiated only to find out that the type of the object that it exposes does not match).&lt;/p&gt;

&lt;p&gt;Anyway, I&apos;ve refined AbstractBeanFactory&apos;s &quot;getType&quot; to only suppress specific exceptions like BeanCurrentlyInCreationException now (even when contained as nested exception).&lt;/p&gt;

&lt;p&gt;On the occasion, I&apos;ve also refined AbstractAutowireCapableBeanFactory&apos;s &quot;autowireConstructor&quot; to only suppress UnsatisfiedDependencyException rather than all BeansExceptions. The previous implementation of this could have led to similar silent suppression of important failures.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 41 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 21 Mar 2005 00:25:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04xcv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28778</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>