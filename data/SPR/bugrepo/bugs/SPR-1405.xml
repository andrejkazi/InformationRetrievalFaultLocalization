<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:49:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1405/SPR-1405.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1405] JdbcTemplate.fetchSize not propagated to JDBC driver</title>
                <link>https://jira.spring.io/browse/SPR-1405</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;When setting the fetch size with JdbcTemplate.setFetchSize, the attribute is only propagated to the JDBC driver when using some of the query methods in JdbcTemplate. When using the execute methods with a callback (StatementCallback, ConnectionCallback etc.), the fetch size is ignored and the JDBC driver default is used anyway.&lt;/p&gt;</description>
            <key id="12593">SPR-1405</key>
            <summary>JdbcTemplate.fetchSize not propagated to JDBC driver</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="jarnbjo">Tor-Einar Jarnbjo</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Oct 2005 01:40:05 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:30 +0000</updated>
                            <resolved>Fri, 21 Oct 2005 21:04:36 +0000</resolved>
                                    <version>1.2.5</version>
                                    <fixVersion>1.2.6</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="15085" author="juergen.hoeller" created="Fri, 21 Oct 2005 21:04:36 +0000"  >&lt;p&gt;Thanks for the report! Indeed, JdbcTemplate should apply &quot;fetchSize&quot; and &quot;maxRows&quot; settings to all created Statements, not just to &quot;query&quot; operations. I&apos;ve just fixed this.&lt;/p&gt;

&lt;p&gt;However, the values are still not applied to a ConnectionCallback, as the Statements created there are not in control of JdbcTemplate. We could only solve this through Statement proxies, which we do not intend to do within JdbcTemplate. I strongly recommend the XxxStatementCallback versions if you want JdbcTemplate-managed Statements with full settings applied.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="15103" author="juergen.hoeller" created="Sat, 22 Oct 2005 19:25:38 +0000"  >&lt;p&gt;Following your new JIRA issue, I have revisited the ConnectionCallback issue: I missed that it is actually sufficient to just proxy the JDBC Connection there, with no need to proxy the individual Statements. Statement settings such as fetch size and max rows can simply be applied by the Connection proxy, before returning the Statement objects. Hence, I have added such a Connection proxy for exposure toa ConnectionCallback, also suppressing close calls (similar to what we already have for a HibernateCallback and JdoCallback, so it&apos;s even consistent with those). The only exception is if JdbcTemplate has a NativeJdbcExtractor specified: In this case, the proxy will be omitted - else user code couldn&apos;t cast the passed-in Connection to OracleConnection or the like.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 10 weeks, 5 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 21 Oct 2005 21:04:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01f53:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8330</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>