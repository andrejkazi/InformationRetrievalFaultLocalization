<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:25:35 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1681/SPR-1681.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1681] NPE when args() identifier doesn&apos;t match POJO advice argument name</title>
                <link>https://jira.spring.io/browse/SPR-1681</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;For this configuration:&lt;/p&gt;

&lt;p&gt;    &amp;lt;aop:config&amp;gt;&lt;br/&gt;
        &amp;lt;aop:pointcut id=&quot;authenticationMethod&quot; expression=&quot;execution(boolean *..SecurityManager.authenticate(..)) and args(username,java.lang.String)&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;aop:aspect ref=&quot;authenticationLogger&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;aop:advice pointcut-ref=&quot;authenticationMethod&quot; method=&quot;logAuthenticationAttempt(java.lang.String)&quot; kind=&quot;before&quot;/&amp;gt;&lt;br/&gt;
            &amp;lt;aop:advice pointcut-ref=&quot;authenticationMethod&quot; method=&quot;logAuthenticationAttempt(int)&quot; kind=&quot;before&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/aop:aspect&amp;gt;&lt;br/&gt;
    &amp;lt;/aop:config&amp;gt;&lt;/p&gt;

&lt;p&gt;this POJO advice:&lt;/p&gt;

&lt;p&gt;public class AuthenticationLogger {&lt;br/&gt;
    private static Log log = LogFactory.getLog(AuthenticationLogger.class);&lt;/p&gt;

&lt;p&gt;    public void logAuthenticationAttempt(int userIdentifier) &lt;/p&gt;
{
        log.info(&quot;User ID [&quot; + userIdentifier + &quot;] attempts to authenticate.&quot;);
    }

&lt;p&gt;    public void logAuthenticationAttempt(String username) &lt;/p&gt;
{
        log.info(&quot;User [&quot; + username + &quot;] attempts to authenticate.&quot;);
    }


&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;And this target class:&lt;/p&gt;

&lt;p&gt;public class SecurityManager {&lt;br/&gt;
    public boolean authenticate(String username, String password) &lt;/p&gt;
{
        return RandomUtils.nextBoolean();
    }&lt;br/&gt;
&lt;br/&gt;
    public boolean authenticate(int userId, String password) {        return RandomUtils.nextBoolean();    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;I get the exception below because the args() identifier &apos;username&apos; doesn&apos;t match the advice method argument name &apos;userIdentifier&apos; when the debug option on javac is enabled.&lt;/p&gt;



&lt;p&gt;Exception trace:&lt;br/&gt;
================&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.argBinding(AbstractAspectJAdvice.java:424)&lt;br/&gt;
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:485)&lt;br/&gt;
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:41)&lt;br/&gt;
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:159)&lt;br/&gt;
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:53)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:159)&lt;br/&gt;
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:170)&lt;br/&gt;
	at org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor.intercept(Cglib2AopProxy.java:643)&lt;br/&gt;
	at com.apress.beginning_spring.chapter4.security.SecurityManager$$EnhancerByCGLIB$$5b295183.authenticate(&amp;lt;generated&amp;gt;)&lt;br/&gt;
	at com.apress.beginning_spring.chapter4.security.SecurityManagerIntegrationTests.testShowLogStatements(SecurityManagerIntegrationTests.java:27)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at com.intellij.rt.execution.junit2.JUnitStarter.main(JUnitStarter.java:31)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:86)&lt;/p&gt;
</description>
            <key id="13306">SPR-1681</key>
            <summary>NPE when args() identifier doesn&apos;t match POJO advice argument name</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="adrian.colyer">Adrian Colyer</assignee>
                                    <reporter username="devijvers">Steven Devijver</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Feb 2006 05:02:05 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:26 +0000</updated>
                            <resolved>Wed, 8 Feb 2006 01:43:57 +0000</resolved>
                                    <version>2.0 M2</version>
                                    <fixVersion>2.0 M3</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16357" author="adrian.colyer" created="Tue, 7 Feb 2006 20:59:30 +0000"  >&lt;p&gt;Firstly, this is an error scenario (just that we are not handling it correctly). When we try to marry the pointcut expression (using &quot;username&quot;) with the second advice declaration (which has a parameter name &quot;userIdentifier&quot; in the associated advice method), we should be giving an &quot;invalidAbsoluteTypeName&quot; BeanInstantiationException.  The reason for this is that &quot;username&quot; in the pointcut is not bound to any parameter and hence must be interpreted as a type name - but the type &quot;username&quot; can&apos;t be found.&lt;/p&gt;

&lt;p&gt;However... this report uncovers a subtle issue. AspectJExpressionPointcut objects are stateful, but the ConfigBeanDefinitionParser creates a single bean for the aop:pointcut declaration. Both advice declarations refer to the same bean instance, which is bad because they share the same discovered parameter names and types (last man wins). &lt;/p&gt;

&lt;p&gt;Changing the bean definition to be prototype across the board causes a good number of test failures (to do with usage when a pointcut expression is used inline via the pointcut attribute). I&apos;ve changed ConfigBeanDefinitionParser to create prototype beans for aop:pointcut declarations (which can be shared), but to keep using singletons for inline pointcut declarations. All the tests pass, including the new one added to cover this case, but I&apos;m still nervous of the side-effects of making the bean prototype because of potential unanticipated side-effects (such as the ones that cause inline definitions to fail).&lt;/p&gt;

&lt;p&gt;I&apos;m not going to commit this change just yet pending further investigation. &lt;/p&gt;</comment>
                            <comment id="16365" author="adrian.colyer" created="Wed, 8 Feb 2006 01:43:57 +0000"  >&lt;p&gt;fix committed following discussion with Rob. Will be available in 2.0 M3, and in HEAD as of now.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 47 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 7 Feb 2006 20:59:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04vr3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28518</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>