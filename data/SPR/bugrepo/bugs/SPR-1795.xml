<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:21:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1795/SPR-1795.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1795]  Constructor arguments with generic Collections seems to break singletons</title>
                <link>https://jira.spring.io/browse/SPR-1795</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I wish to inject a singleton hash map via constructor injection. If my constructor signature includes a typed generic collection  declaration.&lt;br/&gt;
 public TypedGenericConstructor(Map&amp;lt;String, String&amp;gt; state,Map&amp;lt;String, String&amp;gt; state2) &lt;/p&gt;

&lt;p&gt;An injected singleton map here becomes 2 seperate objects after class construction.&lt;/p&gt;

&lt;p&gt; If my constructor signature includes a non-typed generic collection  declaration.&lt;br/&gt;
 public NonTypedGenericConstructor(Map state,Map state2)&lt;/p&gt;

&lt;p&gt;An injected singleton map here is the same object after class construction.&lt;/p&gt;

&lt;p&gt;&amp;lt;beans&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;state&quot; class=&quot;java.util.concurrent.ConcurrentHashMap&quot;&lt;br/&gt;
		singleton=&quot;true&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;nonTyped&quot; class=&quot;test2.NonTypedGenericConstructor&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;constructor-arg ref=&quot;state&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;constructor-arg ref=&quot;state&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;typed&quot; class=&quot;test2.TypedGenericConstructor&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;constructor-arg ref=&quot;state&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;constructor-arg ref=&quot;state&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;br/&gt;
public class TypedGenericConstructor {&lt;/p&gt;

&lt;p&gt;    private Map&amp;lt;String, String&amp;gt; state;&lt;br/&gt;
    private Map&amp;lt;String, String&amp;gt; state2;&lt;/p&gt;

&lt;p&gt;    public TypedGenericConstructor(Map&amp;lt;String, String&amp;gt; state,Map&amp;lt;String, String&amp;gt; state2) &lt;/p&gt;
{
        this.state = state;
        this.state2 = state2;
    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;public class NonTypedGenericConstructor {&lt;/p&gt;

&lt;p&gt;    private Map&amp;lt;String, String&amp;gt; state;&lt;br/&gt;
    private Map&amp;lt;String, String&amp;gt; state2;&lt;/p&gt;

&lt;p&gt;    public NonTypedGenericConstructor(Map state,Map state2) &lt;/p&gt;
{
        this.state = state;
        this.state2 = state2;

    }
&lt;p&gt;}&lt;/p&gt;



</description>
            <key id="13550">SPR-1795</key>
            <summary> Constructor arguments with generic Collections seems to break singletons</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="jevans12">jason evans</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Mar 2006 23:54:24 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:23 +0000</updated>
                            <resolved>Tue, 21 Mar 2006 01:48:42 +0000</resolved>
                                    <version>2.0 M3</version>
                                    <fixVersion>2.0 M4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16836" author="jevans12" created="Wed, 15 Mar 2006 23:56:19 +0000"  >&lt;p&gt;Source with application context, classes, test driver&lt;/p&gt;</comment>
                            <comment id="16888" author="juergen.hoeller" created="Tue, 21 Mar 2006 01:33:14 +0000"  >&lt;p&gt;This is probably caused by the generics-driven type conversion: Your input Map will be auto-converted to a Map with typed arguments if necessary. In general, you do &lt;em&gt;not&lt;/em&gt; have a guarantee to receive the exact Map that you injected. However, I will try to refine the conversion algorithm to keep the original Map as far as possible, that is, as long as there is no actual element conversion required.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16889" author="juergen.hoeller" created="Tue, 21 Mar 2006 01:48:42 +0000"  >&lt;p&gt;Actually, I&apos;ve already changed this behavior in CVS HEAD a while ago, as a side measure of another feature (to apply editors to collection elements even without generic type, if an editor has been explicitly registered for the affected property path). I&apos;ve added a test for your use case, which passes for me right away.&lt;/p&gt;

&lt;p&gt;So if you have the chance, please check out a recent nightly snapshot and let me know whether it works for you as well!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16892" author="jevans12" created="Tue, 21 Mar 2006 02:41:17 +0000"  >&lt;p&gt;I just ran a CVS update, compiled and ran my test. The object ID&apos;s are the same. Thanks for the fix!&lt;br/&gt;
Cheers,&lt;br/&gt;
Jason&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11508" name="test.jar" size="1575" author="jevans12" created="Wed, 15 Mar 2006 23:56:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 41 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Mar 2006 01:33:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04vi7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28478</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>