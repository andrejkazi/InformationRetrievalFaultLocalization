<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:35:22 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-191/SPR-191.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-191] BeanWrapperImpl marks readable properties as &apos;unradable&apos; (inside array&apos;s and java.util.Properties)</title>
                <link>https://jira.spring.io/browse/SPR-191</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I&apos;ve just made a simple bean with&lt;/p&gt;

&lt;p&gt;setStringArray(String[] arr);&lt;br/&gt;
setProperties(Properties props);&lt;/p&gt;

&lt;p&gt;in combination with&lt;/p&gt;

&lt;p&gt;&amp;lt;bean...&amp;gt;&lt;br/&gt;
  &amp;lt;property name=&quot;stringArray&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;value&amp;gt;one,two,three,four&amp;lt;/value&amp;gt;&lt;br/&gt;
  &amp;lt;/property&amp;gt;&lt;br/&gt;
  &amp;lt;property name=&quot;properties&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;value&amp;gt;&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;inline properties file:&lt;br/&gt;
    test.one = yes&lt;br/&gt;
    test.two = no&lt;br/&gt;
    &amp;lt;/value&amp;gt;&lt;br/&gt;
  &amp;lt;/property&amp;gt;&lt;br/&gt;
&amp;lt;/bean&amp;gt;&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;then I wrapped the configured bean in a BeanWrapperImpl and found the &lt;br/&gt;
following to be counter-intuitive:&lt;/p&gt;


&lt;p&gt;1/&lt;br/&gt;
wrapper.getPropertyValue(&quot;stringArray&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&quot;) returns &quot;three&quot; (no surprise)&lt;br/&gt;
BUT: wrapper.isReadable(&quot;stringArrray&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;&quot;) returns false?&lt;/p&gt;


&lt;p&gt;2/&lt;br/&gt;
wrapper.getPropertyValue(&quot;properties&lt;span class=&quot;error&quot;&gt;&amp;#91;test.two&amp;#93;&lt;/span&gt;&quot;) returns &quot;no&quot; (no surprise)&lt;br/&gt;
BUT: wrapper.isReadable(&quot;properties&lt;span class=&quot;error&quot;&gt;&amp;#91;test.two&amp;#93;&lt;/span&gt;&quot;) returns false?&lt;/p&gt;


&lt;p&gt;briefly browsing the cvs the reason for the mismatch between the two methods seems to come from how they lookup their propertyDescriptor.&lt;/p&gt;


&lt;p&gt;line 993:&lt;br/&gt;
PropertyDescriptor pd = getPropertyDescriptorInternal(propertyName);&lt;/p&gt;



&lt;p&gt;versus lines 531-538:&lt;br/&gt;
public Object getPropertyValue(String propertyName) throws ...{&lt;br/&gt;
    BeanWrapperImpl nestedBw = ...&lt;br/&gt;
    String[] tokens = getPropertyNameTokens(getFinalPath(nestedBw, propertyName));&lt;br/&gt;
    return nestedBw.getPropertyValue(tokens&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, tokens&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, tokens&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;);&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;protected Object getPropertyValue(String propertyName, String actualName, String key) throws BeansException {&lt;/p&gt;

&lt;p&gt;    PropertyDescriptor pd = getPropertyDescriptorInternal(actualName);&lt;br/&gt;
    ...&lt;/p&gt;

&lt;p&gt;notice how actualName is used here and not propertyName!&lt;/p&gt;



&lt;p&gt;it&apos;s probably fair to suspect an equal mismatch between isWritableProperty(...) and setPropertyValue(...)?&lt;/p&gt;</description>
            <key id="10366">SPR-191</key>
            <summary>BeanWrapperImpl marks readable properties as &apos;unradable&apos; (inside array&apos;s and java.util.Properties)</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="mpo@outerthought.org">Marc Portier</reporter>
                        <labels>
                    </labels>
                <created>Mon, 28 Jun 2004 00:14:02 +0000</created>
                <updated>Tue, 6 Jul 2004 20:05:11 +0000</updated>
                            <resolved>Tue, 6 Jul 2004 20:05:11 +0000</resolved>
                                                    <fixVersion>1.1 RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10591" author="juergen.hoeller" created="Tue, 6 Jul 2004 20:05:11 +0000"  >&lt;p&gt;Fixed through special fallback checks in isReadableProperty and isWritableProperty.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 26 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 6 Jul 2004 20:05:11 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04yfz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28954</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>