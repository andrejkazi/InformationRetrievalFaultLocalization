<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:17:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2726/SPR-2726.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2726] extractJarFileURL throws java.net.MalformedURLException incorrectly</title>
                <link>https://jira.spring.io/browse/SPR-2726</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The method extractJarFileURL in org.springframework.util.ResourceUtils attempts to construct a new URL using only the file portion of the original URL, this results in a java.net.MalformedURLException because there is not a valid protocol specified. This error does not occur when running locally from Eclipse, only when running in WebLogic.&lt;/p&gt;

&lt;p&gt;I am attempting to setup a LocalContainerEntityManagerFactory:&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;entityManagerFactory&quot;&lt;br/&gt;
        class=&quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;persistenceUnitName&quot; value=&quot;jpajta&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;jpaVendorAdapter&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;bean class=&quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;    &lt;/p&gt;


&lt;p&gt;My persistence.xml is:&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;br/&gt;
&amp;lt;persistence xmlns=&quot;http://java.sun.com/xml/ns/persistence&quot;&lt;br/&gt;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;br/&gt;
    xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/persistence &lt;a href=&quot;http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd&lt;/a&gt;&quot;&lt;br/&gt;
    version=&quot;1.0&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;persistence-unit name=&quot;jpajta&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;class&amp;gt;dto.Invoice&amp;lt;/class&amp;gt;&lt;br/&gt;
        &amp;lt;class&amp;gt;dto.InvoiceLine&amp;lt;/class&amp;gt;&lt;br/&gt;
        &amp;lt;exclude-unlisted-classes&amp;gt;true&amp;lt;/exclude-unlisted-classes&amp;gt;&lt;br/&gt;
        &amp;lt;properties&amp;gt;&lt;br/&gt;
            &amp;lt;property name=&quot;hibernate.dialect&quot;&lt;br/&gt;
                value=&quot;org.hibernate.dialect.DerbyDialect&quot; /&amp;gt;&lt;br/&gt;
            &amp;lt;property name=&quot;hibernate.show_sql&quot; value=&quot;true&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;/properties&amp;gt;&lt;br/&gt;
    &amp;lt;/persistence-unit&amp;gt;&lt;br/&gt;
&amp;lt;/persistence&amp;gt;&lt;/p&gt;

&lt;p&gt;I am using the WebLogicJtaTransactionManager in WebLogic:&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;transactionManager&quot;&lt;br/&gt;
        class=&quot;org.springframework.transaction.jta.WebLogicJtaTransactionManager&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;and the JpaTransactionManager locally:&lt;/p&gt;

&lt;p&gt;    &amp;lt;bean id=&quot;transactionManager&quot;&lt;br/&gt;
        class=&quot;org.springframework.orm.jpa.JpaTransactionManager&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;entityManagerFactory&quot; ref=&quot;entityManagerFactory&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;I am using the same JNDI based datastore in both configurations (the datasource is setup in WebLogic JNDI).&lt;/p&gt;

&lt;p&gt;I am using annotation driven transactions:&lt;br/&gt;
    &amp;lt;tx:annotation-driven transaction-manager=&quot;transactionManager&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;The URL that comes back from the ClassLoader.getResources(&quot;META-INF/persistence.xml&quot;) call looks like:&lt;/p&gt;

&lt;p&gt;zip&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/biggrin.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;:/sandbox/wl9/domains/jpajta/./servers/bcdevapp1/tmp/_WL_user/_appsdir_getResources_war/cnul88/war/WEB-INF/lib/_wl_cls_gen.jar!/META-INF/persistence.xml&lt;/p&gt;

&lt;p&gt;The extractJarFileURL method first calls getFile on the URL to get:&lt;/p&gt;

&lt;p&gt;D:/sandbox/wl9/domains/jpajta/./servers/bcdevapp1/tmp/_WL_user/_appsdir_getResources_war/cnul88/war/WEB-INF/lib/_wl_cls_gen.jar!/META-INF/persistence.xml&lt;/p&gt;

&lt;p&gt;And then strips off the everything after (and including) !/ which leaves:&lt;/p&gt;

&lt;p&gt;D:/sandbox/wl9/domains/jpajta/./servers/bcdevapp1/tmp/_WL_user/_appsdir_getResources_war/cnul88/war/WEB-INF/lib/_wl_cls_gen.jar&lt;/p&gt;

&lt;p&gt;The method than attempts to construct a URL using that string which is not a valid URL spec.&lt;/p&gt;

&lt;p&gt;If the method is changed from:&lt;/p&gt;

&lt;p&gt;			return new URL(urlFile.substring(0, separatorIndex));&lt;/p&gt;

&lt;p&gt;to:&lt;br/&gt;
			return new URL(jarUrl.getProtocol(), jarUrl.getHost(), jarUrl.getPort(), urlFile.substring(0, separatorIndex));&lt;/p&gt;

&lt;p&gt;the URL will no longer be malformed.&lt;/p&gt;</description>
            <key id="15243">SPR-2726</key>
            <summary>extractJarFileURL throws java.net.MalformedURLException incorrectly</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="bcurnow">Brian Curnow</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Oct 2006 22:50:21 +0000</created>
                <updated>Tue, 19 Jun 2012 03:50:49 +0000</updated>
                            <resolved>Fri, 20 Oct 2006 02:00:24 +0000</resolved>
                                    <version>2.0 final</version>
                                    <fixVersion>2.0.1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="20355" author="juergen.hoeller" created="Fri, 20 Oct 2006 02:00:24 +0000"  >&lt;p&gt;Thanks for pointing this out! WebLogic&apos;s URL format is a bit odd there, since jar entry URLs usually look like this: &quot;jar:&lt;a href=&quot;file:C:/mydir/my.jar!/my.xml&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:C:/mydir/my.jar!/my.xml&lt;/a&gt;&quot;, that is, allow for stripping the &quot;jar:&quot; prefix and treating the remainder as a valid URL. Specifying the original URL protocol wouldn&apos;t help here, since we want the file location of the jar file, not an entry within the jar file (so specifying the &quot;jar&quot; protocol again is not appropriate). Hence, I&apos;ve fixed this through explicitly checking whether we got an invalid URL there and prepending &quot;file:&quot; to turn it into a valid URL (since such plain file paths usually indicate a location in the file system).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="20895" author="masf" created="Thu, 16 Nov 2006 03:06:11 +0000"  >&lt;p&gt;I beleive you should add &apos;/&apos; between FILE_URL_PREFIX and jarFile, otherwise Hibernate EntityManager 3.2GA crashes later on URL like &quot;file:C:/myDir/myJar.jar&quot; with following exception:&lt;br/&gt;
java.lang.IllegalArgumentException: URI is not hierarchical&lt;br/&gt;
        at java.io.File.&amp;lt;init&amp;gt;(File.java:335)&lt;br/&gt;
        at org.jboss.util.file.ArchiveBrowser.getBrowser(Unknown Source)&lt;br/&gt;
        at org.hibernate.ejb.Ejb3Configuration.scanForClasses(Ejb3Configuration.java:588)&lt;br/&gt;
        at org.hibernate.ejb.Ejb3Configuration.configure(Ejb3Configuration.java:341)&lt;br/&gt;
        at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:126)&lt;br/&gt;
        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:204)&lt;br/&gt;
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:244)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1057)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1024)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:421)&lt;br/&gt;
        ...&lt;/p&gt;

&lt;p&gt;When I modified line 230 of org/springframework/util/ResourceUtils.java to look like this:&lt;br/&gt;
return new URL(FILE_URL_PREFIX + &apos;/&apos; + jarFile);&lt;br/&gt;
Hibernate EntityManager was happy with URL in form: &quot;file:/C:/myDir/myJar.jar&quot;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 7 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 20 Oct 2006 02:00:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00vjb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5154</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>