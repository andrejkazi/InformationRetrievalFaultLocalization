<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:24:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-11837/SPR-11837.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-11837] Create utility class HttpHeader with HTTP header names constants</title>
                <link>https://jira.spring.io/browse/SPR-11837</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;In public class HttpHeaders all standard HTTP header names now declared as private static final. Feature request: make these standard HTTP header names public static final in utility class HttpHeader, for ability to easy reuse these constants in user code, for example:&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: gray; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;(value = &lt;/span&gt;&lt;span style=&quot;color: blue; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;&quot;/register/*&quot;&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;, method = RequestMethod.POST)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; registerUnknownContentType(&lt;/span&gt;&lt;span style=&quot;color: gray; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@RequestHeader&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;(HttpHeader.CONTENT_TYPE) String contentType) {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;throw&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; UnknownContentTypeException(contentType);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    }&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;HttpHeaders requestHeaders = &lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; HttpHeaders();&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;requestHeaders.setContentType(MediaType.APPLICATION_JSON);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;requestHeaders.set(HttpHeader.USER_AGENT, userAgent);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;... restTemplate.exchange(serviceUrl, HttpMethod.POST, &lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; HttpEntity&amp;lt;&amp;gt;(request, requestHeaders), RESPONSE_TYPE_REFERENCE);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;For example, this already done in public class MediaType from Spring Framework and it is very useful for reusing these constants in user code.&lt;/p&gt;

&lt;p&gt;Ideally - make constants for all most commonly used HTTP header names, from &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_HTTP_header_fields&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://en.wikipedia.org/wiki/List_of_HTTP_header_fields&lt;/a&gt;&lt;br/&gt;
or even almost all most frequently used HTTP header hames from &lt;a href=&quot;http://www.iana.org/assignments/message-headers/message-headers.xhtml&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.iana.org/assignments/message-headers/message-headers.xhtml&lt;/a&gt;&lt;/p&gt;</description>
            <key id="58027">SPR-11837</key>
            <summary>Create utility class HttpHeader with HTTP header names constants</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="rstoya05-aop">Rossen Stoyanchev</assignee>
                                    <reporter username="csdoc">Gena Makhomed</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 May 2014 05:09:25 +0000</created>
                <updated>Tue, 3 Jun 2014 06:23:32 +0000</updated>
                            <resolved>Fri, 30 May 2014 06:43:42 +0000</resolved>
                                    <version>4.0.5</version>
                                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="103976" author="rstoya05-aop" created="Fri, 30 May 2014 06:42:22 +0000"  >&lt;p&gt;This was done recently as part of &lt;a href=&quot;https://jira.spring.io/browse/SPR-11749&quot; title=&quot;Make constants in HttpHeaders public&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-11749&quot;&gt;&lt;del&gt;SPR-11749&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Moreover the key use cases, e.g. building client side headers with RestTemplate and server-side with ResponseEntity are going to have dedicated builder support. See &lt;a href=&quot;https://jira.spring.io/browse/SPR-11752&quot; title=&quot;Provide builders for HttpEntity and ResponseEntity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-11752&quot;&gt;&lt;del&gt;SPR-11752&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                            <comment id="103994" author="csdoc" created="Fri, 30 May 2014 09:22:13 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/browse/SPR-11749&quot; title=&quot;Make constants in HttpHeaders public&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-11749&quot;&gt;&lt;del&gt;SPR-11749&lt;/del&gt;&lt;/a&gt; has disadvantages: &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;bad name HttpHeaders.CONTENT_TYPE instead of expected and natural name HttpHeader.CONTENT_TYPE&lt;/li&gt;
	&lt;li&gt;very limited list of included HTTP header names&lt;/li&gt;
	&lt;li&gt;pollution of HttpHeaders class with public constants&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;my proposal differs from &lt;a href=&quot;https://jira.spring.io/browse/SPR-11749&quot; title=&quot;Make constants in HttpHeaders public&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-11749&quot;&gt;&lt;del&gt;SPR-11749&lt;/del&gt;&lt;/a&gt; in all areas:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;uniform naming inside framework, compare: MediaType.APPLICATION_JSON not MediaTypes.APPLICATION_JSON&lt;/li&gt;
	&lt;li&gt;other HTTP headers can be included, al least all widely used.&lt;/li&gt;
	&lt;li&gt;HttpHeaders class have only one main function, without blurring as it done in &lt;a href=&quot;https://jira.spring.io/browse/SPR-11749&quot; title=&quot;Make constants in HttpHeaders public&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-11749&quot;&gt;&lt;del&gt;SPR-11749&lt;/del&gt;&lt;/a&gt;, also - HttpHeader class will have only one goal - this is will be more easy to understand by Spring Framework users.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;If all HTTP header names moved to separate class, private static final fields can be removed from HttpHeaders, and this class (and any other classes in Spring Framework) can use constants from HttpHeader class, uniformly with MediaType class and other Spring Framework classes.&lt;/p&gt;

&lt;p&gt;I can create pull request if you argree with such changes to Spring Framework.&lt;/p&gt;</comment>
                            <comment id="103997" author="rstoya05-aop" created="Fri, 30 May 2014 11:03:51 +0000"  >&lt;p&gt;I for once don&apos;t think HttpHeaders is a bad place for header-related constants. I consider it an obvious place as the class that contains HTTP header related functionality. This is no different than MediaType, which also contians both behavior and constants in one class. Introducing a separate HttpHeader type with nothing but constants, next to HttpHeaders, is also not ideal IMO.&lt;/p&gt;

&lt;p&gt;Aside from naming choices and questions of consistency which are subjective and we may not agree on, the underlying question is what is the purpose of the header constants. How do you intend to use them? If it is with ResponseEntity or the RestTemplate, which is what HttpHeaders was built for, that&apos;s where the ResponseEntity and (the upcoming) RequestEntity builder options become important because they guide the preparation of headers in client vs server specific contexts and therefore are likely to be come the API of choice vs HttpHeaders with one long list of all headers.&lt;/p&gt;

&lt;p&gt;BTW if there are other commonly used standard headers let&apos;s have them added to HttpHeaders and the ResponseEntity/RequestEntity builders respectively. &lt;/p&gt;
</comment>
                            <comment id="104005" author="csdoc" created="Fri, 30 May 2014 13:09:06 +0000"  >&lt;blockquote&gt;
&lt;p&gt;...the underlying question is what is the purpose of the header constants. How do you intend to use them?&lt;/p&gt;&lt;/blockquote&gt;

&lt;ol&gt;
	&lt;li&gt;in Spring MVC controllers: ...@RequestHeader(HttpHeader.X_REAL_IP) String remoteIp, ...&lt;/li&gt;
	&lt;li&gt;with RestTemplate: requestHeaders.set(HttpHeader.USER_AGENT, userAgent);&lt;/li&gt;
&lt;/ol&gt;


&lt;blockquote&gt;
&lt;p&gt;BTW if there are other commonly used standard headers let&apos;s have them added to HttpHeaders and the ResponseEntity/RequestEntity builders respectively.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;from my point of view, commonly used headers:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&quot;Referer&quot;&lt;/li&gt;
	&lt;li&gt;&quot;User-Agent&quot;&lt;/li&gt;
	&lt;li&gt;&quot;X-Real-IP&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&quot;X-Real-IP&quot; header used by default in &lt;a href=&quot;http://nginx.org/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;nginx&lt;/a&gt; for client IP delivery to backend by &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ngx_http_realip_module&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;P.S.&lt;/p&gt;

&lt;p&gt;You are right, better all constants place inside Spring class HttpHeaders, and users in this case can easy create own class HttpHeader with non-standard header names, for example, &quot;X-Auth-Token&quot; or &quot;X-JVM-Id&quot;.&lt;/p&gt;</comment>
                            <comment id="104098" author="rstoya05-aop" created="Tue, 3 Jun 2014 06:23:32 +0000"  >&lt;p&gt;Yeah, good point about non-standard headers.  I&apos;ve added a comment under &lt;a href=&quot;https://jira.spring.io/browse/SPR-11752&quot; title=&quot;Provide builders for HttpEntity and ResponseEntity&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-11752&quot;&gt;&lt;del&gt;SPR-11752&lt;/del&gt;&lt;/a&gt; about the suggested common headers.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="57459">SPR-11749</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        2 years, 29 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 30 May 2014 06:42:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>rstoya05-aop</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i07lbj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>44326</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://en.wikipedia.org/wiki/List_of_HTTP_header_fields]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>