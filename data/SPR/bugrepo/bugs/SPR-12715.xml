<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:33:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-12715/SPR-12715.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-12715] All HttpMessageConverters should support StreamingHttpOutputMessage</title>
                <link>https://jira.spring.io/browse/SPR-12715</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I would be nice if HttpComponentsClientHttpRequestFactory was able to fully support streaming (non-buffered) requests.  Currently, the HttpComponentsStreamingClientHttpRequest class does not support the getBodyInternal() method which prevents it from being used with many MessageConverters.  &lt;/p&gt;

&lt;p&gt;I would think the HttpComponentsClientHttpRequestFactory should mirror the SimpleClientHttpRequestFactory which does provide full streaming support.&lt;/p&gt;</description>
            <key id="62227">SPR-12715</key>
            <summary>All HttpMessageConverters should support StreamingHttpOutputMessage</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rstoya05-aop">Rossen Stoyanchev</assignee>
                                    <reporter username="springiscool">John Mark</reporter>
                        <labels>
                    </labels>
                <created>Fri, 13 Feb 2015 11:06:32 +0000</created>
                <updated>Sat, 30 Jan 2016 16:03:45 +0000</updated>
                            <resolved>Mon, 2 Mar 2015 06:33:51 +0000</resolved>
                                                    <fixVersion>4.2 RC1</fixVersion>
                                    <component>Web:Client</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="112930" author="arjen.poutsma" created="Fri, 27 Feb 2015 04:06:58 +0000"  >&lt;p&gt;I&apos;m not entirely sure what you mean with &quot;full streaming&quot;. The whole point of the &lt;tt&gt;HttpComponentsStreamingClientHttpRequest&lt;/tt&gt; is that it does do streaming through HTTP Components&apos;s &lt;tt&gt;HttpEntity&lt;/tt&gt; interface, so that instead of writing to an internal buffer first, we write directly to the output stream through this interface when the request is executed.&lt;/p&gt;

&lt;p&gt;It does work differently than the &lt;tt&gt;SimpleClientHttpRequestFactory&lt;/tt&gt;, which does allow you to write directly to the output stream, either by giving the content-length upfront, or by using chunked mode. However, due to the design of HTTP Components, we cannot simply copy that approach over. Instead, the way to do streaming with HTTP components is to use HttpEntity, AFAIK.&lt;/p&gt;

&lt;p&gt;As for the MessageConverters: most converters in Spring extend from the AbstractMessageConverter, which knows how to deal with &lt;tt&gt;StreamingHttpOutputMessage&lt;/tt&gt; instances, see &lt;a href=&quot;https://github.com/poutsma/spring-framework/blob/master/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java#L188&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/poutsma/spring-framework/blob/master/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java#L188&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="112973" author="springiscool" created="Sun, 1 Mar 2015 10:05:20 +0000"  >&lt;p&gt;Well, the reason that I wrote this ticket was because I was trying to stream a multipart form and I was getting an UnsupportedOperationException. It appears that &lt;tt&gt;FormHttpMessageConverter&lt;/tt&gt; does not implement &lt;tt&gt;AbstractMessageConverter&lt;/tt&gt; and that make it not possible to stream a form using &lt;tt&gt;HttpComponentsClientHttpRequestFactory&lt;/tt&gt;. Perhaps this ticket should be about getting &lt;tt&gt;FormHttpMessageConverter&lt;/tt&gt; (and any others that don&apos;t already) to use &lt;tt&gt;AbstractMessageConverter&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="112998" author="arjen.poutsma" created="Mon, 2 Mar 2015 06:33:51 +0000"  >&lt;p&gt;Fixed.&lt;/p&gt;

&lt;p&gt;PR at &lt;a href=&quot;https://github.com/spring-projects/spring-framework/pull/750&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-framework/pull/750&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="52273">SPR-11199</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="67473">SPR-13906</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        1 year, 42 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 27 Feb 2015 04:06:58 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>juergen.hoeller</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0878f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>