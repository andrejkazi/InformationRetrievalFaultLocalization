<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:19:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1615/SPR-1615.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1615] org.springframework.beans.factory.BeanCurrentlyInCreationException when using constructor in bean config</title>
                <link>https://jira.spring.io/browse/SPR-1615</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;org.springframework.beans.factory.BeanCurrentlyInCreationException is being thrown with the following config, which looks correct to me. As well, there is another instance that looks similiar but this one should be explanatory:&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE beans PUBLIC &quot;-//SPRING//DTD BEAN//EN&quot; &quot;http://www.springframework.org/dtd/spring-beans.dtd&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;beans&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;swapper&quot; class=&quot;org.springframework.aop.target.HotSwappableTargetSource&quot;&amp;gt;&lt;br/&gt;
	    &amp;lt;constructor-arg&amp;gt;&lt;br/&gt;
	    	&amp;lt;bean class=&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;&amp;gt;&lt;br/&gt;
		        &amp;lt;property name=&quot;driverClassName&quot;&amp;gt;&amp;lt;value&amp;gt;org.postgresql.Driver&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
		        &amp;lt;property name=&quot;url&quot;&amp;gt;&amp;lt;value&amp;gt;jdbc:postgresql:postgres&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
		        &amp;lt;property name=&quot;username&quot;&amp;gt;&amp;lt;value&amp;gt;postgres&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
		        &amp;lt;property name=&quot;password&quot;&amp;gt;&amp;lt;value&amp;gt;forgot&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
		    &amp;lt;/bean&amp;gt; &lt;br/&gt;
	    &amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;myDataSource&quot; class=&quot;org.springframework.aop.framework.ProxyFactoryBean&quot;&amp;gt;&lt;br/&gt;
	    &amp;lt;property name=&quot;targetSource&quot;&amp;gt;&lt;br/&gt;
	        &amp;lt;ref local=&quot;swapper&quot;/&amp;gt;&lt;br/&gt;
	    &amp;lt;/property&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;/p&gt;

&lt;p&gt;Stack trace:&lt;/p&gt;

&lt;p&gt;DEBUG - AbstractBeanFactory.getBean(222) | Creating shared instance of singleton bean &apos;swapper&apos;&lt;br/&gt;
DEBUG - AbstractAutowireCapableBeanFactory.createBean(295) | Creating instance of bean &apos;swapper&apos; with merged definition [Root bean: class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.aop.target.HotSwappableTargetSource&amp;#93;&lt;/span&gt;; abstract=false; singleton=true; lazyInit=false; autowire=0; dependencyCheck=0; initMethodName=null; destroyMethodName=null; factoryMethodName=null; factoryBeanName=null; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;WEB-INF/devDatabase.xml&amp;#93;&lt;/span&gt;]&lt;br/&gt;
DEBUG - AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(224) | Invoking BeanPostProcessors before instantiation of bean &apos;swapper&apos;&lt;br/&gt;
DEBUG - AbstractAutoProxyCreator.getCustomTargetSource(296) | Checking for custom TargetSource for bean with name &apos;swapper&apos;&lt;br/&gt;
DEBUG - BeanDefinitionValueResolver.resolveInnerBeanDefinition(144) | Resolving inner bean definition &apos;org.springframework.jdbc.datasource.DriverManagerDataSource#8ddc4c&apos; of bean &apos;swapper&apos;&lt;br/&gt;
DEBUG - AbstractAutowireCapableBeanFactory.createBean(295) | Creating instance of bean &apos;org.springframework.jdbc.datasource.DriverManagerDataSource#8ddc4c&apos; with merged definition [Root bean: class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#93;&lt;/span&gt;; abstract=false; singleton=true; lazyInit=false; autowire=0; dependencyCheck=0; initMethodName=null; destroyMethodName=null; factoryMethodName=null; factoryBeanName=null; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;WEB-INF/devDatabase.xml&amp;#93;&lt;/span&gt;]&lt;br/&gt;
DEBUG - AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(224) | Invoking BeanPostProcessors before instantiation of bean &apos;org.springframework.jdbc.datasource.DriverManagerDataSource#8ddc4c&apos;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(141) | Getting BeanInfo for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(157) | Caching PropertyDescriptors for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;class&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Class&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;connection&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.sql.Connection&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;connectionProperties&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.util.Properties&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;driverClassName&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;logWriter&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.io.PrintWriter&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;loginTimeout&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;int&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;password&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;url&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;username&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.forClass(87) | Class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#93;&lt;/span&gt; is cache-safe&lt;br/&gt;
DEBUG - BeanWrapperImpl.setPropertyValue(593) | About to invoke write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(java.lang.String) throws org.springframework.jdbc.CannotGetJdbcConnectionException&amp;#93;&lt;/span&gt; on object of class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#93;&lt;/span&gt;&lt;br/&gt;
INFO - DriverManagerDataSource.setDriverClassName(155) | Loaded JDBC driver: org.postgresql.Driver&lt;br/&gt;
DEBUG - BeanWrapperImpl.setPropertyValue(598) | Invoked write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(java.lang.String) throws org.springframework.jdbc.CannotGetJdbcConnectionException&amp;#93;&lt;/span&gt; with value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - BeanWrapperImpl.setPropertyValue(593) | About to invoke write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.jdbc.datasource.DriverManagerDataSource.setUrl(java.lang.String)&amp;#93;&lt;/span&gt; on object of class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - BeanWrapperImpl.setPropertyValue(598) | Invoked write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.jdbc.datasource.DriverManagerDataSource.setUrl(java.lang.String)&amp;#93;&lt;/span&gt; with value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - BeanWrapperImpl.setPropertyValue(593) | About to invoke write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.jdbc.datasource.DriverManagerDataSource.setUsername(java.lang.String)&amp;#93;&lt;/span&gt; on object of class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - BeanWrapperImpl.setPropertyValue(598) | Invoked write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.jdbc.datasource.DriverManagerDataSource.setUsername(java.lang.String)&amp;#93;&lt;/span&gt; with value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - BeanWrapperImpl.setPropertyValue(593) | About to invoke write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.jdbc.datasource.DriverManagerDataSource.setPassword(java.lang.String)&amp;#93;&lt;/span&gt; on object of class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.jdbc.datasource.DriverManagerDataSource&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - BeanWrapperImpl.setPropertyValue(598) | Invoked write method &lt;span class=&quot;error&quot;&gt;&amp;#91;public void org.springframework.jdbc.datasource.DriverManagerDataSource.setPassword(java.lang.String)&amp;#93;&lt;/span&gt; with value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.String&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(243) | Invoking BeanPostProcessors before initialization of bean &apos;org.springframework.jdbc.datasource.DriverManagerDataSource#8ddc4c&apos;&lt;br/&gt;
DEBUG - AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(262) | Invoking BeanPostProcessors after initialization of bean &apos;org.springframework.jdbc.datasource.DriverManagerDataSource#8ddc4c&apos;&lt;br/&gt;
DEBUG - AbstractBeanFactory.getType(358) | Ignoring BeanCreationException on FactoryBean type check&lt;br/&gt;
org.springframework.beans.factory.BeanCurrentlyInCreationException: Error creating bean with name &apos;swapper&apos;: Requested bean is currently in creation (circular reference when autowiring constructor?)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getType(AbstractBeanFactory.java:317)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.isBeanTypeMatch(DefaultListableBeanFactory.java:249)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:158)&lt;br/&gt;
	at org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(BeanFactoryUtils.java:176)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator.findCandidateAdvisors(DefaultAdvisorAutoProxyCreator.java:107)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:76)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:62)&lt;br/&gt;
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:235)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:267)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:364)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBeanDefinition(BeanDefinitionValueResolver.java:147)&lt;br/&gt;
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:96)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveConstructorArguments(AbstractAutowireCapableBeanFactory.java:714)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:611)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:329)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:275)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:320)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:87)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:72)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.loadContextLocations(AbstractSpringContextTests.java:121)&lt;br/&gt;
	at org.springframework.test.AbstractDependencyInjectionSpringContextTests.loadContextLocations(AbstractDependencyInjectionSpringContextTests.java:210)&lt;br/&gt;
	at org.springframework.test.AbstractSpringContextTests.getContext(AbstractSpringContextTests.java:101)&lt;br/&gt;
	at org.springframework.test.AbstractDependencyInjectionSpringContextTests.setUp(AbstractDependencyInjectionSpringContextTests.java:178)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:125)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
DEBUG - CollectionFactory.createLinkedSetIfPossible(90) | Creating &lt;span class=&quot;error&quot;&gt;&amp;#91;java.util.LinkedHashSet&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(141) | Getting BeanInfo for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.aop.target.HotSwappableTargetSource&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(157) | Caching PropertyDescriptors for class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.aop.target.HotSwappableTargetSource&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;class&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Class&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;static&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;boolean&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;target&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Object&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.&amp;lt;init&amp;gt;(165) | Found property &apos;targetClass&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.lang.Class&amp;#93;&lt;/span&gt;&lt;br/&gt;
DEBUG - CachedIntrospectionResults.forClass(87) | Class &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.aop.target.HotSwappableTargetSource&amp;#93;&lt;/span&gt; is cache-safe&lt;br/&gt;
DEBUG - AbstractAutowireCapableBeanFactory.autowireConstructor(674) | Bean &apos;swapper&apos; instantiated via constructor &lt;span class=&quot;error&quot;&gt;&amp;#91;public org.springframework.aop.target.HotSwappableTargetSource(java.lang.Object)&amp;#93;&lt;/span&gt;&lt;/p&gt;</description>
            <key id="13143">SPR-1615</key>
            <summary>org.springframework.beans.factory.BeanCurrentlyInCreationException when using constructor in bean config</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="mwaschkowski">Mark Waschkowski</reporter>
                        <labels>
                    </labels>
                <created>Sat, 14 Jan 2006 02:48:56 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:30 +0000</updated>
                            <resolved>Mon, 16 Jan 2006 05:54:50 +0000</resolved>
                                    <version>1.2.6</version>
                                    <fixVersion>1.2.7</fixVersion>
                    <fixVersion>2.0 M2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16074" author="juergen.hoeller" created="Sun, 15 Jan 2006 11:17:03 +0000"  >&lt;p&gt;Note that this is just a debug message - saying &quot;Ignoring BeanCreationException on FactoryBean type check &quot;! You obviously have a DefaultAdvisorAutoProxyCreator defined in your context as well, which tries to find candidate advisors and ignores a currently created bean there. This is actually expected behavior, as long as the application is nevertheless started up properly.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16077" author="juergen.hoeller" created="Sun, 15 Jan 2006 11:48:37 +0000"  >&lt;p&gt;On this occasion, I&apos;ve refined DefaultListableBeanFactory&apos;s &quot;getBeansOfType&quot; to log the BeanCurrentlyInCreationException message instead of the full stacktrace. The stacktrace is arguably misleading, even if it just appears in the debug log.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16080" author="mwaschkowski" created="Mon, 16 Jan 2006 01:15:07 +0000"  >&lt;p&gt;Thanks so much Juergen. I agree, it could be misleading (it was for me). &lt;/p&gt;

&lt;p&gt;I noticed this one after I upgraded to 1.2.6, although it could have been there prior to that, not sure. I hate to see exception stack traces, I&apos;m always on the lookout for them! Spring has so much functionality and if I see a stack trace, I immediately get worried that some part of it has been misconfigured, so NOT seeing any stack traces helps for me to know that things are working/configured as they should be, or at least not obviously out of whack.&lt;/p&gt;

&lt;p&gt;I have great respect for the work that you have done with Spring, you have made a big impact on a lot of people&apos;s lives and I personally thank you for it.&lt;/p&gt;

&lt;p&gt;Mark&lt;/p&gt;</comment>
                            <comment id="16083" author="juergen.hoeller" created="Mon, 16 Jan 2006 05:54:50 +0000"  >&lt;p&gt;As of both Spring 1.2.7 and 2.0 M2, there will only be a log message instead of a logged stacktrace.&lt;/p&gt;

&lt;p&gt;And thanks for your kind words - they&apos;re much appreciated &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 50 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 15 Jan 2006 11:17:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04vv3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28536</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>