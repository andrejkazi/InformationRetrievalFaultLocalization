<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:01:00 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-4975/SPR-4975.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-4975] Provide integrated support for validation within @MVC lifecycle</title>
                <link>https://jira.spring.io/browse/SPR-4975</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Today the @MVC programming model requires manual instantiation and invocation of Validator classes:&lt;/p&gt;

&lt;p&gt;public String onSubmit(@ModelAttribute Customer customer, BindingResult result) {&lt;br/&gt;
    new CustomerValidator().validate(customer, result);&lt;br/&gt;
    if(result.hasErrors()) &lt;/p&gt;
{
        return &quot;editAccount&quot;;
    }
&lt;p&gt;    return &quot;...&quot;;&lt;br/&gt;
}&lt;/p&gt;


&lt;p&gt;It would be preferable to have validation be an integrated part of the @MVC lifecycle.&lt;/p&gt;

&lt;p&gt;For instance, Validator instances could be annotated as @Component and be subject to component scanning.  At any rate, whether declared via bean definitions or component scanned, registered Validator instances should be iterated through, and any returning true from Validator#supports() should be used to validate candidate objects.&lt;/p&gt;


&lt;p&gt;Additionally, I believe the interface-based approach is preferable here, vs a @Validator approach, because the strong contract of supports()-&amp;gt;validate() is a useful and expressive one.  It would be sufficient to simply allow Validator instances to be component scanned.  We just need to add iterating through and invoking registered validators to the lifecycle.&lt;/p&gt;</description>
            <key id="22964">SPR-4975</key>
            <summary>Provide integrated support for validation within @MVC lifecycle</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="cbeams">Chris Beams</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Jul 2008 16:12:53 +0000</created>
                <updated>Tue, 19 Jun 2012 02:28:09 +0000</updated>
                            <resolved>Wed, 13 Jun 2012 07:21:02 +0000</resolved>
                                                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                    <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="10177">SPR-69</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        8 years, 26 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i013on:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6474</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>