<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:56:51 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-845/SPR-845.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-845] Conflict between advice and jmx</title>
                <link>https://jira.spring.io/browse/SPR-845</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I am exporting beans as mbeans and accessign them via jconsole. However, if I also advise the same bean (eg, with around advice) then the mbean attribute access fails with an error indicating &quot;Target method not found&quot;.&lt;/p&gt;

&lt;p&gt;Attached is a psuedo test case, since I don&apos;t yet know how to use spring on the jmx client side. But also since the problem I am seeing is via jconsole. &lt;/p&gt;

&lt;p&gt;One thing to note is that the jmx attributes are /not/ defined on any interface, only the bean itself.&lt;/p&gt;

&lt;p&gt;Also, this is running on jdk 1.5 using &apos;-Dcom.sun.management.jmxremote&apos; to allow jconsole to connect.&lt;/p&gt;

&lt;p&gt;Hopefully the psuedo test will be enough allow for repoducing the problem. If not, please let me know. In the mean time I will try to dig deeper to determine the cause of this problem.&lt;/p&gt;</description>
            <key id="11371">SPR-845</key>
            <summary>Conflict between advice and jmx</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="memelet">Barry Kaplan</reporter>
                        <labels>
                    </labels>
                <created>Sun, 3 Apr 2005 06:06:44 +0000</created>
                <updated>Mon, 4 Apr 2005 02:58:27 +0000</updated>
                            <resolved>Mon, 4 Apr 2005 02:58:27 +0000</resolved>
                                    <version>1.2 RC1</version>
                                    <fixVersion>1.2 RC2</fixVersion>
                                    <component>JMX</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12814" author="memelet" created="Sun, 3 Apr 2005 06:27:18 +0000"  >&lt;p&gt;The way I have defined things, jmxAdapter is adapting the non-proxied listener and the autoProxyCreator is proxying the non-jmx proxied bean.&lt;/p&gt;

&lt;p&gt;But I&apos;m not sure how to achieve the desired result: To handle these two crosscutting concerns on the same bean (other than using aspectj).&lt;/p&gt;</comment>
                            <comment id="12815" author="juergen.hoeller" created="Sun, 3 Apr 2005 07:41:57 +0000"  >&lt;p&gt;Rob, can you please have a look at this?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="12822" author="robh" created="Mon, 4 Apr 2005 01:33:56 +0000"  >&lt;p&gt;Barry,&lt;/p&gt;

&lt;p&gt;After a little investigation I managed to find out what the problem is here. Essentially a JDK Proxy (which is created by Spring when you advise the listener) has no declared methods for reflective access.&lt;/p&gt;

&lt;p&gt;This introduces two problems - firstly Spring can&apos;t find out any information about object to be exposed (such as methods and properties) and the JMX implementation can&apos;t reflectively invoke the attribute/operation anyway.&lt;/p&gt;

&lt;p&gt;A possible solution is to somehow &apos;unwrap&apos; the proxy so that Spring can access the metadata, but this is only half the problem. To enable the JMX infrastructure to access any methods on the MBean the proxy cannot be used - so you won&apos;t get advised calls when accessing a bean using JMX.&lt;/p&gt;

&lt;p&gt;Fortunately, there is a relatively simple way around all of this - use the CGLIB proxy support. I tested this in the test case you gave me and it works fine:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;autoProxyCreator&quot; class=&quot;org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator&quot;&amp;gt;&lt;br/&gt;
	&amp;lt;property name=&quot;proxyTargetClass&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt;&lt;br/&gt;
	&amp;lt;/property&amp;gt;&lt;br/&gt;
&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="12824" author="memelet" created="Mon, 4 Apr 2005 02:14:27 +0000"  >&lt;p&gt;What version of cglib did you test with? I&apos;m getting stack-overflow (see below). I&apos;m using cglib-full-2.0.2. I&apos;ll dig and see if I can figure out what is going on.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;java.lang.StackOverflowError&lt;br/&gt;
	at org.objectweb.asm.Item.isEqualTo(Unknown Source)&lt;br/&gt;
	at org.objectweb.asm.ClassWriter.get(Unknown Source)&lt;br/&gt;
	at org.objectweb.asm.ClassWriter.newString(Unknown Source)&lt;br/&gt;
	at org.objectweb.asm.ClassWriter.newCst(Unknown Source)&lt;br/&gt;
	at org.objectweb.asm.CodeWriter.visitLdcInsn(Unknown Source)&lt;br/&gt;
	at org.objectweb.asm.CodeAdapter.visitLdcInsn(Unknown Source)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.push(CodeEmitter.java:317)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$6.processCase(EmitUtils.java:285)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.process_switch(CodeEmitter.java:610)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.process_switch(CodeEmitter.java:583)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.string_switch_hash(EmitUtils.java:268)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.string_switch(EmitUtils.java:170)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.member_helper_type(EmitUtils.java:810)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.access$900(EmitUtils.java:24)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$16.processCase(EmitUtils.java:812)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$6.processCase(EmitUtils.java:293)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.process_switch(CodeEmitter.java:610)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.process_switch(CodeEmitter.java:583)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.string_switch_hash(EmitUtils.java:268)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.string_switch(EmitUtils.java:170)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.member_helper_type(EmitUtils.java:810)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.access$900(EmitUtils.java:24)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$16.processCase(EmitUtils.java:812)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$6.processCase(EmitUtils.java:293)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.process_switch(CodeEmitter.java:610)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.process_switch(CodeEmitter.java:583)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.string_switch_hash(EmitUtils.java:268)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.string_switch(EmitUtils.java:170)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.member_helper_type(EmitUtils.java:810)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.access$900(EmitUtils.java:24)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$16.processCase(EmitUtils.java:812)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$6.processCase(EmitUtils.java:293)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.process_switch(CodeEmitter.java:610)&lt;br/&gt;
	at net.sf.cglib.core.CodeEmitter.process_switch(CodeEmitter.java:583)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.string_switch_hash(EmitUtils.java:268)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.string_switch(EmitUtils.java:170)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.member_helper_type(EmitUtils.java:810)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils.access$900(EmitUtils.java:24)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$16.processCase(EmitUtils.java:812)&lt;br/&gt;
	at net.sf.cglib.core.EmitUtils$6.processCase(EmitUtils.java:293)&lt;/p&gt;</comment>
                            <comment id="12826" author="robh" created="Mon, 4 Apr 2005 02:23:32 +0000"  >&lt;p&gt;I am using CGLIB 2.1 from the Spring 1.2 distribution. Also you can make this work with JDK proxies by exposing your MBean attributes and operations on the interface that your class implements.&lt;/p&gt;</comment>
                            <comment id="12828" author="memelet" created="Mon, 4 Apr 2005 02:36:45 +0000"  >&lt;p&gt;Rob, I upgraded to cglib-2.1 and all is well. Thanks!!&lt;/p&gt;</comment>
                            <comment id="12829" author="robh" created="Mon, 4 Apr 2005 02:58:27 +0000"  >&lt;p&gt;No problem - thanks for your input. We will be documenting this case thoroughly in the JMX documentation that will be released with the final 1.2.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="10631" name="ProxiedMbeanTests.java" size="3393" author="memelet" created="Sun, 3 Apr 2005 06:07:41 +0000"/>
                            <attachment id="10630" name="proxiedMbeanContext.xml" size="1293" author="memelet" created="Sun, 3 Apr 2005 06:07:31 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 39 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 3 Apr 2005 07:41:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04x7j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28754</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>