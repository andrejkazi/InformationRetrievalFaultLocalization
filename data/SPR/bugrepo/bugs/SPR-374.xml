<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:44:53 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-374/SPR-374.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-374] ResourceEditor.resolvePath(String) should loop through ALL placeholders, not just first</title>
                <link>https://jira.spring.io/browse/SPR-374</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;org.springframework.core.io.ResourceEditor.resolvePath(String)&lt;/p&gt;

&lt;p&gt;Should loop through and replace all placeholders, NOT just the FIRST one...&lt;/p&gt;

&lt;p&gt;This is apparent when using org.springframework.beans.factory.config.PropertyPlaceholderConfigurer locations property, and it only allows you to substitute one placeholder.  The second placeholder is unused.&lt;/p&gt;</description>
            <key id="10622">SPR-374</key>
            <summary>ResourceEditor.resolvePath(String) should loop through ALL placeholders, not just first</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="thewoolleyman">Chad Woolley</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Oct 2004 09:05:44 +0000</created>
                <updated>Wed, 6 Oct 2004 11:04:11 +0000</updated>
                            <resolved>Wed, 6 Oct 2004 10:06:25 +0000</resolved>
                                    <version>1.1 final</version>
                                    <fixVersion>1.1.2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="11223" author="juergen.hoeller" created="Wed, 6 Oct 2004 10:06:25 +0000"  >&lt;p&gt;Thanks for the report! Indeed, ResourceEditor should resolve all such placeholders, not just the first one...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="11224" author="thewoolleyman" created="Wed, 6 Oct 2004 10:53:22 +0000"  >&lt;p&gt;It would also be convenient if there was a way to ignore unresolved placeholders in the list of locations for PropertyPlaceholderConfigurer.&lt;/p&gt;

&lt;p&gt;We are using this to set up a flexible mechanism to override property file locations on multiple locations, or accept the default, in a consistent way across multiple applications.  &lt;/p&gt;

&lt;p&gt;Unfortunately, Spring will fail if a placeholder in a property location contains an undefined placeholder.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;propertyConfigurer&quot; class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&amp;gt; &lt;br/&gt;
&amp;lt;property name=&quot;locations&quot;&amp;gt;&lt;br/&gt;
&amp;lt;list&amp;gt;&lt;br/&gt;
&amp;lt;!-- this would be packaged with the app on the classpath,&lt;br/&gt;
     with one version for each runmode (dev, staging, prod) --&amp;gt;&lt;br/&gt;
&amp;lt;value&amp;gt;appname-$&lt;/p&gt;
{appname.runmode}.properties&amp;lt;/value&amp;gt;&lt;br/&gt;
&amp;lt;!-- this would be optionally defined by the user&amp;gt;&lt;br/&gt;
&amp;lt;value&amp;gt;&lt;a href=&quot;file:${user.home}/appname-$&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:${user.home}/appname-$&lt;/a&gt;{appname.runmode}
&lt;p&gt;-override.properties&amp;lt;/value&amp;gt;&lt;br/&gt;
&amp;lt;/list&amp;gt;&lt;br/&gt;
&amp;lt;/property&amp;gt;&lt;br/&gt;
&amp;lt;property name=&quot;properties&quot;&amp;gt;&lt;br/&gt;
&amp;lt;props&amp;gt;&lt;br/&gt;
&amp;lt;prop key=&quot;foo&quot;&amp;gt;default value for tests&amp;lt;/prop&amp;gt;&lt;br/&gt;
&amp;lt;/props&amp;gt;&lt;br/&gt;
&amp;lt;/property&amp;gt;&lt;br/&gt;
&amp;lt;property name=&quot;ignoreResourceNotFound&quot;&amp;gt;&amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;                 &lt;br/&gt;
&amp;lt;/bean&amp;gt; &lt;/p&gt;

&lt;p&gt;The idea being that the &quot;appname.runmode&quot; would be a system property that would only be specified when the app is deployed to some environment (dev, staging, prod).  &quot;appname.runmode&quot; would be undefined during unit testing, so the default property values would be used.&lt;/p&gt;

&lt;p&gt;Unfortunately, Spring will fail if appname.runmode is undefined.  This means that a separate class must be used to define appname.runmode to some default &quot;undefined&quot; value, just so the PropertyPlaceholderConfigurer won&apos;t blow up.  In the case of a webapp, this means defining a whole servlet which is loaded to define the property before the actual application servlet runs.&lt;/p&gt;

&lt;p&gt;If there were some additional property on PropertyPlaceholderConfigurer to ignore unresolved placeholders in the location list values, that would solve the problem nicely.&lt;/p&gt;

&lt;p&gt;If you would be open to this, I&apos;d be glad to open an enhancement request and even try to submit a patch if you don&apos;t have time.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Chad&lt;/p&gt;</comment>
                            <comment id="11225" author="thewoolleyman" created="Wed, 6 Oct 2004 11:04:11 +0000"  >&lt;p&gt;I copied this request to a new issue: &lt;br/&gt;
&lt;a href=&quot;http://opensource.atlassian.com/projects/spring/browse/SPR-375&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://opensource.atlassian.com/projects/spring/browse/SPR-375&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 13 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Oct 2004 10:06:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04y5z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28909</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>