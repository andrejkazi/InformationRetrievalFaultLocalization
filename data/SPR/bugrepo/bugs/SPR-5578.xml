<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:57:32 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-5578/SPR-5578.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-5578] @Autowired vs. &lt;property</title>
                <link>https://jira.spring.io/browse/SPR-5578</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;@Autowired is capable to handle private Fields, setting Fields with &amp;lt;property declaration is not possible. Two reasons why it should be possible:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Information Hiding, for the user of the class there must not be the possibility to call the setter.&lt;/li&gt;
	&lt;li&gt;@Autowired is the annotation part of &amp;lt;property, since it should behave identically .&lt;/li&gt;
&lt;/ul&gt;
</description>
            <key id="26010">SPR-5578</key>
            <summary>@Autowired vs. &lt;property</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="cbeams">Chris Beams</assignee>
                                    <reporter username="bacsik">Paul Bacsik</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Mar 2009 05:42:19 +0000</created>
                <updated>Tue, 28 Feb 2012 05:58:43 +0000</updated>
                            <resolved>Tue, 21 Feb 2012 02:41:13 +0000</resolved>
                                    <version>2.5.6</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="76038" author="sslavic" created="Tue, 21 Feb 2012 01:39:50 +0000"  >&lt;p&gt;If I understood well, this is reported as bug because of assumption that field injection using annotations and setter injection via properties in XML should provide same capabilities. IMO that assumption is wrong and this basically improvement request is invalid. It is API designer decision to enable field injection by placing appropriate annotations on fields; similarly it is API designer decision to enable or not property or constructor injection. API of a Java type is defined by API designer/developer and it should be respected. &lt;/p&gt;

&lt;p&gt;If for whatever reason API user needs to do something that API designer didn&apos;t intend to support, one can always create a wrapper (adapter pattern), and do whatever needed (e.g. make use of reflection API, but that is generally not recommended and IMO shouldn&apos;t be made easier and thus encouraged as practice by DI framework like Spring).&lt;/p&gt;</comment>
                            <comment id="76044" author="cbeams" created="Tue, 21 Feb 2012 02:41:13 +0000"  >&lt;p&gt;Duplicates &lt;a href=&quot;https://jira.spring.io/browse/SPR-2605&quot; title=&quot;add support for field injection&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2605&quot;&gt;&lt;del&gt;SPR-2605&lt;/del&gt;&lt;/a&gt;.  Thanks Stevo for the comment.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="15005">SPR-2605</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        4 years, 44 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Feb 2012 01:39:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02e4v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>13999</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>