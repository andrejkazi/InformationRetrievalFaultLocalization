<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:21:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2406/SPR-2406.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2406] JDOException not translated (InvalidDataAccessResourceUsageException instead of  DataIntegrityViolationException)</title>
                <link>https://jira.spring.io/browse/SPR-2406</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;If you try to persist a new object (insert) with duplicate key you get:&lt;/p&gt;

&lt;p&gt;org.springframework.dao.InvalidDataAccessResourceUsageException: Could not invoke JDO makePersistent(Object) method; nested exception is javax.jdo.JDODataStoreException: Insert request failed: INSERT INTO `ACCOUNT` (`CITY`,`STATUS`,`PHONE`,`COUNTRY`,`EMAIL`,`LANGUAGE_PREFERENCE`,`LAST_NAME`,`ZIP`,`ADDRESS2`,`USERID`,`ADDRESS1`,`FIRST_NAME`,`PASSWORD`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)&lt;br/&gt;
NestedThrowables:&lt;br/&gt;
java.sql.SQLException: Duplicate entry &apos;a&apos; for key 2&lt;br/&gt;
Caused by: javax.jdo.JDODataStoreException: Insert request failed: INSERT INTO `ACCOUNT` (`CITY`,`STATUS`,`PHONE`,`COUNTRY`,`EMAIL`,`LANGUAGE_PREFERENCE`,`LAST_NAME`,`ZIP`,`ADDRESS2`,`USERID`,`ADDRESS1`,`FIRST_NAME`,`PASSWORD`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)&lt;br/&gt;
	at org.jpox.store.rdbms.request.InsertRequest.execute(InsertRequest.java:412)&lt;br/&gt;
	at org.jpox.store.rdbms.table.ClassTable.insert(ClassTable.java:2379)&lt;br/&gt;
	at org.jpox.store.StoreManager.insert(StoreManager.java:775)&lt;br/&gt;
	at org.jpox.state.StateManagerImpl.internalMakePersistent(StateManagerImpl.java:3512)&lt;br/&gt;
	at org.jpox.state.StateManagerImpl.makePersistent(StateManagerImpl.java:3485)&lt;br/&gt;
	at org.jpox.AbstractPersistenceManager.internalMakePersistent (AbstractPersistenceManager.java:1146)&lt;br/&gt;
	at org.jpox.AbstractPersistenceManager.makePersistent(AbstractPersistenceManager.java:1201)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at org.springframework.orm.jdo.JdoTemplate$9.doInJdo(JdoTemplate.java:406)&lt;br/&gt;
	at org.springframework.orm.jdo.JdoTemplate.execute(JdoTemplate.java:259)&lt;br/&gt;
	at org.springframework.orm.jdo.JdoTemplate.makePersistent(JdoTemplate.java:403)&lt;br/&gt;
	at improvit.web.skill.dao.jdo.JdoAccountDao.storeAccount(JdoAccountDao.java:48)&lt;br/&gt;
	at improvit.web.skill.dao.jdo.JdoAccountDao.insertAccount(JdoAccountDao.java:52)&lt;br/&gt;
	at improvit.web.skill.domain.logic.WebSkillImpl.insertAccount(WebSkillImpl.java:111)&lt;br/&gt;
	at improvit.web.skill.test.dao.AbstractAccountDaoTests.testDuplicateAccount(AbstractAccountDaoTests.java:123)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at improvit.web.skill.test.dao.ConditionalTestCase.runBare(ConditionalTestCase.java:69)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
NestedThrowablesStackTrace:&lt;br/&gt;
java.sql.SQLException: Duplicate entry &apos;a&apos; for key 2&lt;br/&gt;
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:2928)&lt;br/&gt;
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1571)&lt;br/&gt;
	at com.mysql.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:1124)&lt;br/&gt;
	at com.mysql.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:676)&lt;br/&gt;
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:773)&lt;br/&gt;
	at org.jpox.store.rdbms.ParamLoggingPreparedStatement.execute(ParamLoggingPreparedStatement.java:213)&lt;br/&gt;
	at org.jpox.store.rdbms.request.Request.executeUpdate(Request.java:88)&lt;br/&gt;
	at org.jpox.store.rdbms.request.InsertRequest.execute(InsertRequest.java:283)&lt;br/&gt;
	at org.jpox.store.rdbms.table.ClassTable.insert(ClassTable.java:2379)&lt;br/&gt;
	at org.jpox.store.StoreManager.insert(StoreManager.java:775)&lt;br/&gt;
	at org.jpox.state.StateManagerImpl.internalMakePersistent(StateManagerImpl.java:3512)&lt;br/&gt;
	at org.jpox.state.StateManagerImpl.makePersistent(StateManagerImpl.java:3485)&lt;br/&gt;
	at org.jpox.AbstractPersistenceManager.internalMakePersistent(AbstractPersistenceManager.java:1146)&lt;br/&gt;
	at org.jpox.AbstractPersistenceManager.makePersistent(AbstractPersistenceManager.java:1201)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at org.springframework.orm.jdo.JdoTemplate$9.doInJdo(JdoTemplate.java:406)&lt;br/&gt;
	at org.springframework.orm.jdo.JdoTemplate.execute(JdoTemplate.java:259)&lt;br/&gt;
	at org.springframework.orm.jdo.JdoTemplate.makePersistent(JdoTemplate.java:403)&lt;br/&gt;
.... (rest omitted)&lt;/p&gt;

&lt;p&gt;A &quot;duplicate key&quot; error should be translated to a DataIntegrityViolationException.&lt;br/&gt;
Possible cause: First JPOX wraps a JDODataStoreException around the SQLException. &lt;br/&gt;
Than reflection wrapped an InvocationTargetException and in JdoTemplate.makePersistent(..) the InvocationTargetException is caught which will prevent the translation in JdoTemplate.execute(..).&lt;/p&gt;

&lt;p&gt;Possible solution for ALL &quot;catch (InvocationTargetException ex) &quot; in JdoTemplate:&lt;br/&gt;
&amp;#8211; before:&lt;br/&gt;
  catch (InvocationTargetException ex) &lt;/p&gt;
{
    throw new InvalidDataAccessResourceUsageException(
        &quot;Could not invoke JDO makePersistentAll(Collection) method&quot;, ex.getTargetException());
  }

&lt;p&gt;&amp;#8211; after:&lt;br/&gt;
  catch (InvocationTargetException ex) &lt;/p&gt;
{
    if (ex.getTargetException() instanceof JDOException)
      throw (JDOException) ex.getTargetException();
    else
      throw new InvalidDataAccessResourceUsageException(
        &quot;Could not invoke JDO makePersistentAll(Collection) method&quot;, ex.getTargetException());
  }</description>
            <key id="14731">SPR-2406</key>
            <summary>JDOException not translated (InvalidDataAccessResourceUsageException instead of  DataIntegrityViolationException)</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="frank">Frank Titius</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Aug 2006 01:56:02 +0000</created>
                <updated>Tue, 19 Jun 2012 03:51:20 +0000</updated>
                            <resolved>Mon, 11 Sep 2006 08:24:31 +0000</resolved>
                                    <version>1.2.8</version>
                    <version>2.0 RC2</version>
                    <version>2.0 RC3</version>
                                    <fixVersion>2.0 RC4</fixVersion>
                    <fixVersion>1.2.9</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="19535" author="juergen.hoeller" created="Mon, 11 Sep 2006 08:23:37 +0000"  >&lt;p&gt;Thanks for pointing this out! Indeed, we need to propagate any exception as-is there, even when thrown from a reflective invocation.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 16 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Sep 2006 08:23:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04udr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28296</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>