<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:01:23 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2186/SPR-2186.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2186] When used to invoke a &quot;void method&quot; the MethodInvokingFactoryBean returns null instead of VoidType</title>
                <link>https://jira.spring.io/browse/SPR-2186</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;When used for a void method invocation the MethodInvokingFactoryBean returns a &apos;null&apos;  value instead of  VoidType.  &lt;br/&gt;
(Test is attached)&lt;/p&gt;</description>
            <key id="14291">SPR-2186</key>
            <summary>When used to invoke a &quot;void method&quot; the MethodInvokingFactoryBean returns null instead of VoidType</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="tzolov">Christian Tzolov</reporter>
                        <labels>
                    </labels>
                <created>Sun, 25 Jun 2006 10:42:32 +0000</created>
                <updated>Tue, 19 Jun 2012 03:52:37 +0000</updated>
                            <resolved>Mon, 26 Jun 2006 03:55:12 +0000</resolved>
                                    <version>2.0 RC1</version>
                                    <fixVersion>2.0 RC2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="18185" author="tzolov" created="Sun, 25 Jun 2006 10:48:07 +0000"  >&lt;p&gt;Below is the error trace:&lt;/p&gt;

&lt;p&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;printString&apos;: postProcessAfterInitialization method of BeanPostProcessor &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ApplicationContextAwareProcessor@1a001ff&amp;#93;&lt;/span&gt; returned null for bean &lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt; with name &lt;span class=&quot;error&quot;&gt;&amp;#91;printString&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:288)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.postProcessObjectFromFactoryBean(AbstractAutowireCapableBeanFactory.java:958)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectFromFactoryBean(AbstractBeanFactory.java:996)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:960)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:215)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:168)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:250)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:332)&lt;br/&gt;
	at org.springframework.context.support.FileSystemXmlApplicationContext.&amp;lt;init&amp;gt;(FileSystemXmlApplicationContext.java:89)&lt;br/&gt;
	at org.springframework.context.support.FileSystemXmlApplicationContext.&amp;lt;init&amp;gt;(FileSystemXmlApplicationContext.java:74)&lt;br/&gt;
	at org.springframework.context.support.FileSystemXmlApplicationContext.&amp;lt;init&amp;gt;(FileSystemXmlApplicationContext.java:65)&lt;br/&gt;
	at test.MethodInvokingFactoryBean_VoidReturnValueTest.setUp(MethodInvokingFactoryBean_VoidReturnValueTest.java:18)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:125)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;</comment>
                            <comment id="18190" author="asenft" created="Sun, 25 Jun 2006 18:26:53 +0000"  >&lt;p&gt;&lt;br/&gt;
This issue has been addressed in &lt;a href=&quot;https://jira.spring.io/browse/SPR-854&quot; title=&quot;Fix MethodInvoker to return NULL if the invocation returns null (instead of VoidType)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-854&quot;&gt;&lt;del&gt;SPR-854&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="18198" author="springboy" created="Sun, 25 Jun 2006 22:16:45 +0000"  >&lt;p&gt;Hi Christian&lt;/p&gt;

&lt;p&gt;The contract for MIFB changed (slightly) in this regard between Spring 1.2.x and Spring 2.0.&lt;/p&gt;

&lt;p&gt;FactoryBean implementations can now return null, and as such the need to return VOID for void return typed methods was dropped. The Javadoc for the 2.x MIFB has been updated to reflect this.&lt;/p&gt;

&lt;p&gt;I am resolving this issue as a duplicate (because it has already been addressed in the issue decribed by Andreas). Feel free to reopen it if this &apos;change&apos; is causing you issues.&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Rick&lt;/p&gt;</comment>
                            <comment id="18206" author="tzolov" created="Mon, 26 Jun 2006 02:10:17 +0000"  >&lt;p&gt;Hi Rick,&lt;/p&gt;

&lt;p&gt;IMO the &lt;a href=&quot;https://jira.spring.io/browse/SPR-854&quot; title=&quot;Fix MethodInvoker to return NULL if the invocation returns null (instead of VoidType)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-854&quot;&gt;&lt;del&gt;SPR-854&lt;/del&gt;&lt;/a&gt; issue does not resolve the MIFB problem when &apos;void methods&apos; are invoked. For  example if you try to execute the System.out.println(&quot;PRINTED MESSAGE&quot;) method as shown below:&lt;/p&gt;

&lt;p&gt; 	&amp;lt;bean	id=&quot;printString&quot;  class=&quot;org.springframework.beans.factory.config.MethodInvokingFactoryBean&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;		&amp;lt;property name=&quot;targetObject&quot;&amp;gt; &amp;lt;util:constant static-field=&quot;java.lang.System.out&quot;/&amp;gt; &amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;		&amp;lt;property name=&quot;targetMethod&quot;&amp;gt;&amp;lt;value&amp;gt;println&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;/p&gt;

&lt;p&gt;		&amp;lt;property name=&quot;arguments&quot;&amp;gt; &amp;lt;list&amp;gt;&amp;lt;value&amp;gt;PRINTED MESSAGE&amp;lt;/value&amp;gt;&amp;lt;/list&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
 	&amp;lt;/bean&amp;gt; 	 	&lt;/p&gt;

&lt;p&gt;(complete TestContext.xml  attached)&lt;/p&gt;

&lt;p&gt;Then try to open the application context: &lt;/p&gt;

&lt;p&gt;       ApplicationContext  appContext = new FileSystemXmlApplicationContext(&quot;TestContext.xml&quot;);&lt;/p&gt;

&lt;p&gt;and you get the following exception:  &lt;br/&gt;
    org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;printString&apos;: postProcessAfterInitialization method of BeanPostProcessor &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.context.support.ApplicationContextAwareProcessor@1e328e0&amp;#93;&lt;/span&gt; returned null for bean &lt;span class=&quot;error&quot;&gt;&amp;#91;null&amp;#93;&lt;/span&gt; with name &lt;span class=&quot;error&quot;&gt;&amp;#91;printString&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;If you change the printString bean to a non-singleton (e.g. singleton=&quot;false&quot;) then you can create the appContext but an attempt to retrieve the &quot;printString&quot; bean (e.g. this.appContext.getBean(&quot;printString&quot;) throws the same exception.  &lt;/p&gt;

&lt;p&gt;If I understand correctly the new semantic, the FactoryBean returns null if the method invoked returns null or the method is &apos;void&apos;. But shouldn&apos;t the MIFB recognize when the void method is used replace the return value to VoidType? &lt;/p&gt;

&lt;p&gt;Also it seems that the MethodInvokingFactoryBean.getObjectType()  (2.0RC1 -build61) method returns a &apos;VoidType&apos;  in case of void methods, but this is not mentioned in the javadoc.&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
 Chris&lt;/p&gt;</comment>
                            <comment id="18207" author="springboy" created="Mon, 26 Jun 2006 02:53:50 +0000"  >&lt;p&gt;Hi Chris&lt;/p&gt;

&lt;p&gt;Ok, I &apos;get&apos; it now. I will reopen the issue myself shortly.&lt;/p&gt;

&lt;p&gt;FactoryBeans can now return null, that part is correct. Your configuration will work if you use a plain BeanFactory as opposed to an ApplicationContext implementation; for example, this works fine with your exact same configuration...&lt;/p&gt;

&lt;p&gt;        BeanFactory factory = new XmlBeanFactory(new ClassPathResource(&quot;beans.xml&quot;));&lt;br/&gt;
        factory.getBean(&quot;printString&quot;);&lt;/p&gt;

&lt;p&gt;In an ApplicationContext  this will fail because the AbstractAutowireCapableBeanFactory checks that nulls are never being returned from BeanPostProcessors.&lt;/p&gt;

&lt;p&gt;I&apos;m going to email Juergen about the specific semantics of the contract for this. I&apos;ll get back to you (tomorrow most likely).&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Rick&lt;/p&gt;</comment>
                            <comment id="18208" author="juergen.hoeller" created="Mon, 26 Jun 2006 03:55:12 +0000"  >&lt;p&gt;Fixed through removing the BPP null checks in AbstractAutowireCapableBeanFactory. Those are indeed not appropriate anymore with the new semantics.&lt;/p&gt;

&lt;p&gt;Thanks for pointing this out!&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11723" name="MethodInvokingFactoryBean_VoidReturnValueTest.java" size="1085" author="tzolov" created="Sun, 25 Jun 2006 10:44:10 +0000"/>
                            <attachment id="11724" name="TestContext.xml" size="877" author="tzolov" created="Sun, 25 Jun 2006 10:44:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 27 weeks, 3 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 25 Jun 2006 18:26:53 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04uzb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28393</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>