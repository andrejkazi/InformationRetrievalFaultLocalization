<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:44:36 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1111/SPR-1111.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1111] JdbcUtil&apos;s getResultSetValue hack for Oracle Timestamp Broken for 10g Driver</title>
                <link>https://jira.spring.io/browse/SPR-1111</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;When using the 10g driver for oracle (specifically, oracle-jdbc-1.4-10.1.0.20.jar), getObject returns a java.util.Date for a column with a type of DATE.&lt;/p&gt;

&lt;p&gt;This is correct.&lt;/p&gt;

&lt;p&gt;However, the driver will return a Date with only year-month-day, even if the DATE column contains hours:minutes:seconds.&lt;/p&gt;

&lt;p&gt;To get a full date, with both day and time info, you have to use getTimestamp.&lt;/p&gt;

&lt;p&gt;The getResultSetValue() method attempts to detect if the object returned from getObject is a &quot;oracle.sql.TIMESTAMP&quot;.  Unfortunately, with 10g drivers and a column of type DATE, getObject().getClass().getName() will return &quot;java.sql.Date&quot;.&lt;/p&gt;

&lt;p&gt;For instance:&lt;/p&gt;

&lt;p&gt;System.out.println(rs.getObject(&quot;date_created&quot;) + &quot; &quot; + rs.getObject(&quot;date_created&quot;).getClass());&lt;/p&gt;

&lt;p&gt;will print out:&lt;/p&gt;

&lt;p&gt;2005-07-01 class java.sql.Date&lt;/p&gt;

&lt;p&gt;Now, even with a queryForObject(&quot;sql&quot;, Timestamp.class) you will receive this error:&lt;/p&gt;

&lt;p&gt;org.springframework.dao.TypeMismatchDataAccessException: Result object with column type &apos;DATE&apos; and value &lt;span class=&quot;error&quot;&gt;&amp;#91;2005-07-01&amp;#93;&lt;/span&gt; is of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.sql.Timestamp&amp;#93;&lt;/span&gt; and could not be converted to required type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.sql.Timestamp&amp;#93;&lt;/span&gt;&lt;/p&gt;
</description>
            <key id="11932">SPR-1111</key>
            <summary>JdbcUtil&apos;s getResultSetValue hack for Oracle Timestamp Broken for 10g Driver</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thomas.risberg">Thomas Risberg</assignee>
                                    <reporter username="sethladd">Seth Ladd</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Jul 2005 07:39:34 +0000</created>
                <updated>Wed, 20 Jul 2005 10:26:23 +0000</updated>
                            <resolved>Wed, 20 Jul 2005 09:11:44 +0000</resolved>
                                    <version>1.2.2</version>
                                    <fixVersion>1.2.3</fixVersion>
                                    <component>Data</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13831" author="juergen.hoeller" created="Mon, 11 Jul 2005 00:36:03 +0000"  >&lt;p&gt;Thomas, could you please have a look at this? It would be great to resolve this for 1.2.3 (due next week).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="13944" author="thomas.risberg" created="Tue, 19 Jul 2005 08:34:51 +0000"  >&lt;p&gt;The problem is that Oracle decided to only return the date portion starting with the 10g driver.  The metadata however indicates that the returned value is of type java.sql.Timestamp.  They know about this, but they don&apos;t seem to want to fix it - either the return type or the metadata - as long as they match we would not get this error.&lt;/p&gt;

&lt;p&gt;We would have to add some code to detect this mismatch and do a getTimestamp when this is detected. &lt;/p&gt;</comment>
                            <comment id="13945" author="sethladd" created="Tue, 19 Jul 2005 08:49:17 +0000"  >&lt;p&gt;Thanks Thomas,&lt;/p&gt;

&lt;p&gt;Do you want me to provide a patch?&lt;/p&gt;</comment>
                            <comment id="13976" author="juergen.hoeller" created="Tue, 19 Jul 2005 23:12:33 +0000"  >&lt;p&gt;Firstly, I&apos;ve changed the error message in SingleColumnRowMapper to include the class name of the actual object value returned, not the one from the metadata. Hence, a misleading exception that says that &quot;java.sql.Timestamp could not be converted to java.sql.Timestamp&quot; is not possible anymore.&lt;/p&gt;

&lt;p&gt;To make this work on Oracle 10g, we could put a special check either into JdbcUtils.getResultSetValue or into SingleColumnRowMapper and ColumnMapRowMapper.&lt;/p&gt;

&lt;p&gt;We could use the ResultSetMetaData to detect a mismatch between metadata type and returned object: If the returned object is an instance of java.util.Date, then check the metadata. If the metadata says Timestamp, then call ResultSet.getTimestamp for that field. This special check avoid metadata access for all other return types.&lt;/p&gt;

&lt;p&gt;In JdbcUtils, that would have to happen on a per-row basis - which is potentially (depending on the JDBC driver) rather inefficient due to repeated ResultSetMetaData access. Any experiences whether that is worth avoiding?&lt;/p&gt;

&lt;p&gt;In SingleColumnRowMapper / ColumnMapRowMapper, that could happen on a per-ResultSet basis, only detecting the field type in the first row and then applying the same rule to all other rows. We would have to repeat the workaround code, though.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="13982" author="thomas.risberg" created="Wed, 20 Jul 2005 02:30:59 +0000"  >&lt;p&gt;I changed the error message as well - one of our changes should make it into 1.2.3 &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Now, we haven&apos;t really solved the original problem which stems from Oracle&apos;s change to return a Date rather than a Timestamp for getObject on a column with an Oracle SQL type of DATE.  We do in general rely on the data returned from a getObject call.  This means that we will get a Date (javs.sql.Date without time info) for any DATE columns using 10g drivers.  If we want to be able to override this, then that&apos;s more like a new feature request and will take a little bit more time than we have before the next release.&lt;/p&gt;

&lt;p&gt;Seth, could you add a new feature request for this and I will look at this for the release following 1.2.3 (1.3 RC 1?).&lt;/p&gt;

&lt;p&gt;Also, take a look at the following FAQ entry&lt;br/&gt;
&lt;a href=&quot;http://www.oracle.com/technology/tech/java/sqlj_jdbc/htdocs/jdbc_faq.htm#08_01&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.oracle.com/technology/tech/java/sqlj_jdbc/htdocs/jdbc_faq.htm#08_01&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use a system property or a connection property to use the old mapping.&lt;/p&gt;

&lt;p&gt;java -Doracle.jdbc.V8Compatibility=&quot;true&quot; MyApp&lt;/p&gt;</comment>
                            <comment id="13983" author="thomas.risberg" created="Wed, 20 Jul 2005 02:34:12 +0000"  >&lt;p&gt;This fix only inlcudes a fix for the error message.  Any other issues will be a new feature request for the following release.&lt;/p&gt;</comment>
                            <comment id="13999" author="thomas.risberg" created="Wed, 20 Jul 2005 08:58:08 +0000"  >&lt;p&gt;I will add a fix specific to the Oracle 10g date problem.  Since I had no luck using the propety settings suggested in the Oracle FAQ I think a quick fix is in order.&lt;/p&gt;</comment>
                            <comment id="14001" author="thomas.risberg" created="Wed, 20 Jul 2005 09:11:44 +0000"  >&lt;p&gt;I have added a fix for the missing time portion.  It only applies to objects returned as java.sql.Date and with a metadata class name specified as java.sql.Timestamp (specifically the 10g drivers fit this scenario).  This will work for both queryForObject and queryForList.  For queryForObject it&apos;s best to specify java.util.Date as the target class since that covers both java.sql.Date and java.sql.Timestamp.&lt;/p&gt;</comment>
                            <comment id="14004" author="sethladd" created="Wed, 20 Jul 2005 10:26:23 +0000"  >&lt;p&gt;Thanks again Thomas, most appreciated!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 24 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Jul 2005 00:36:03 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01f9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>8351</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>