<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:20:40 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-25/SPR-25.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-25] Invalid exception in BeanWrapperImpl</title>
                <link>https://jira.spring.io/browse/SPR-25</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;In BeanWrapperImpl, there is an exception thrown that will be reported during property type conversion.  This exception will be misleading if the type conversion occurs within an array, as opposed to on a single value...  See code for details:&lt;/p&gt;

&lt;p&gt;	public Object doTypeConversionIfNecessary(String propertyName, Object oldValue, Object newValue,&lt;br/&gt;
																						Class requiredType) throws BeansException {&lt;br/&gt;
		if (newValue instanceof List &amp;amp;&amp;amp; requiredType.isArray()) {&lt;br/&gt;
			List list = (List) newValue;&lt;br/&gt;
			Class componentType = requiredType.getComponentType();&lt;br/&gt;
			try {&lt;br/&gt;
				Object[] arr = (Object[]) Array.newInstance(componentType, list.size());&lt;br/&gt;
				for (int i = 0; i &amp;lt; list.size(); i++) &lt;/p&gt;
{
					arr[i] = doTypeConversionIfNecessary(propertyName, null, list.get(i), componentType);
				}&lt;br/&gt;
				return arr;&lt;br/&gt;
			}&lt;br/&gt;
			catch (ArrayStoreException ex) {
                ex.printStackTrace();
				throw new TypeMismatchException(createPropertyChangeEvent(propertyName, oldValue, newValue), requiredType, ex);
			}&lt;br/&gt;
		}&lt;br/&gt;
&lt;br/&gt;
&amp;#8212;&lt;br/&gt;
&lt;br/&gt;
In the above code, if it is invoked for an array (bc newValue instanceof List is true), it will proceed to execute the same method for each object in the array:&lt;br/&gt;
&lt;br/&gt;
				for (int i = 0; i &amp;lt; list.size(); i++) {					arr[i] = doTypeConversionIfNecessary(propertyName, null, list.get(i), componentType);				}


&lt;p&gt;If the inner type conversion fails to convert to the type of value that the array expects, it will throw an ArrayStoreException, that is then caught by:&lt;/p&gt;

&lt;p&gt;			} catch (ArrayStoreException ex) &lt;/p&gt;
{
                ex.printStackTrace();
				throw new TypeMismatchException(createPropertyChangeEvent(propertyName, oldValue, newValue), requiredType, ex);
			}


&lt;p&gt;Which will then report the conversion error as being a type mismatch converting the ArrayList to the specified type (on the set method).  In fact the error is in converting a single element within the array to the type the array expects.&lt;/p&gt;


&lt;p&gt;For example:&lt;/p&gt;

&lt;p&gt;PropertyVetoExceptionsException: 1 errors:-- ErrorCodedPropertyVetoException: message=[Failed to convert property value of type &lt;span class=&quot;error&quot;&gt;&amp;#91;java.util.ArrayList&amp;#93;&lt;/span&gt; to required type [[Lorg.springframework.web.servl&lt;br/&gt;
t.HandlerInterceptor;] for property named &apos;interceptors&apos;; nested exception is:&lt;/p&gt;


&lt;p&gt;Would indicate (if you didn&apos;t step through the source) that the method setInterceptors() takes a single HandlerInterceptor as an argument.  This is not true, it does in fact take a List and that is what you are passing into it.  It was just that one of the elements in this list wasn&apos;t a HandlerInterceptor (perhaps because you accidentally specified a String instead of a beanref in the XML).&lt;/p&gt;



</description>
            <key id="10083">SPR-25</key>
            <summary>Invalid exception in BeanWrapperImpl</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rod.johnson">Rod Johnson</assignee>
                                    <reporter username="fallofrome">Mike Rudolph</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Jan 2004 12:00:15 +0000</created>
                <updated>Thu, 29 Jan 2004 20:10:25 +0000</updated>
                            <resolved>Thu, 29 Jan 2004 20:10:25 +0000</resolved>
                                    <version>1.0 M4</version>
                                    <fixVersion>1.0 RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="10110" author="juergen.hoeller" created="Thu, 29 Jan 2004 20:10:25 +0000"  >&lt;p&gt;Actually, &quot;[[Lorg.springframework.web.servlet.HandlerInterceptor;&quot; is the JDK&apos;s standard toString output for a HandlerInterceptor array, so the message is arguably correct. Nevertheless, I&apos;ve changed it to &quot;array of org.springframework.web.servlet.HandlerInterceptor&quot;, through an explicit check for array types.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        12 years, 48 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Jan 2004 20:10:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01ux3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10886</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                </customfields>
    </item>
</channel>
</rss>