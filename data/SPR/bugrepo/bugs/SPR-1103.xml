<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:15:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1103/SPR-1103.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1103] BeanFactoryPostProcessor processing</title>
                <link>https://jira.spring.io/browse/SPR-1103</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I get an exception when trying to initialize this context:&lt;br/&gt;
Code:&lt;/p&gt;


&lt;p&gt;    &amp;lt;!-- ========================= GENERAL DEFINITIONS ========================= --&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- Configurer that replaces $&lt;/p&gt;
{...}
&lt;p&gt; placeholders with values from a properties file --&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;propertyConfigurer&quot; class=&quot;org.springframework.beans.factory.config.PropertyPlaceholderConfigurer&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;order&quot;&amp;gt;&amp;lt;value&amp;gt;1&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;location&quot;&amp;gt;&amp;lt;value&amp;gt;/WEB-INF/ecos.properties&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- Message source for this context, loaded from localized &quot;messages_xx&quot; files --&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;messageSource&quot; class=&quot;org.springframework.context.support.ReloadableResourceBundleMessageSource&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;basename&quot;&amp;gt;&amp;lt;value&amp;gt;WEB-INF/messages&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;defaultEncoding&quot;&amp;gt;&amp;lt;value&amp;gt;Windows-1250&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- ========================= RESOURCE DEFINITIONS ========================= --&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- Local DataSource that works in any environment --&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;dataSourceImpl&quot; class=&quot;com.generalynx.ecos.db.datasource.InfoBasicDataSource&quot; destroy-method=&quot;close&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;driverClassName&quot;&amp;gt;&amp;lt;value&amp;gt;$&lt;/p&gt;
{jdbc.driverClassName}&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;url&quot;&amp;gt;&amp;lt;value&amp;gt;${jdbc.url}&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;username&quot;&amp;gt;&amp;lt;value&amp;gt;${jdbc.username}&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;password&quot;&amp;gt;&amp;lt;value&amp;gt;${jdbc.password}&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;validationQuery&quot;&amp;gt;&amp;lt;value&amp;gt;${jdbc.validationQuery}&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
&lt;br/&gt;
    &amp;lt;bean id=&quot;dataSource&quot; class=&quot;org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg&amp;gt;&amp;lt;ref local=&quot;dataSourceImpl&quot;/&amp;gt;&amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
&lt;br/&gt;
    &amp;lt;!-- Hibernate SessionFactory --&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;sessionFactory&quot; class=&quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&quot; depends-on=&quot;resources&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;useTransactionAwareDataSource&quot;&amp;gt;&amp;lt;value&amp;gt;false&amp;lt;/value&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;dataSource&quot;&amp;gt;&amp;lt;ref local=&quot;dataSource&quot;/&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;mappingJarLocations&quot;&amp;gt;&lt;br/&gt;
           &amp;lt;list&amp;gt;&lt;br/&gt;
              &amp;lt;value&amp;gt;${sms.jar}&amp;lt;/value&amp;gt;&lt;br/&gt;
           &amp;lt;/list&amp;gt;&lt;br/&gt;
       &amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;mappingDirectoryLocations&quot;&amp;gt;&lt;br/&gt;
           &amp;lt;list&amp;gt;&lt;br/&gt;
              &amp;lt;value&amp;gt;classpath:/com/generalynx&amp;lt;/value&amp;gt;&lt;br/&gt;
           &amp;lt;/list&amp;gt;&lt;br/&gt;
       &amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;hibernateProperties&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;props&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.show_sql&quot;&amp;gt;${hibernate.show_sql}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.dialect&quot;&amp;gt;${hibernate.dialect}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.connection.release_mode&quot;&amp;gt;${hibernate.connection.release_mode}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.cache.provider_class&quot;&amp;gt;${hibernate.cache.provider_class}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.cache.use_query_cache&quot;&amp;gt;${hibernate.cache.use_query_cache}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.query.substitutions&quot;&amp;gt;${hibernate.query.substitutions}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.jdbc.use_scrollable_resultset&quot;&amp;gt;${hibernate.jdbc.use_scrollable_resultset}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.jdbc.batch_size&quot;&amp;gt;${hibernate.jdbc.batch_size}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.jdbc.batch_versioned_data&quot;&amp;gt;${hibernate.jdbc.batch_versioned_data}&amp;lt;/prop&amp;gt;&lt;br/&gt;
                &amp;lt;prop key=&quot;hibernate.generate_statistics&quot;&amp;gt;${hibernate.generate_statistics}&amp;lt;/prop&amp;gt;&lt;br/&gt;
            &amp;lt;/props&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
        &amp;lt;property name=&quot;eventListeners&quot;&amp;gt;&lt;br/&gt;
            &amp;lt;map&amp;gt;&lt;br/&gt;
                &amp;lt;entry key=&quot;delete&quot;&amp;gt;&lt;br/&gt;
                    &amp;lt;bean id=&quot;deleteEvent&quot; class=&quot;com.generalynx.ecos.beans.orm.BasicDeleteEventListener&quot; /&amp;gt;&lt;br/&gt;
                &amp;lt;/entry&amp;gt;&lt;br/&gt;
            &amp;lt;/map&amp;gt;&lt;br/&gt;
        &amp;lt;/property&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;br/&gt;
&lt;br/&gt;
    &amp;lt;bean id=&quot;configuration&quot; factory-bean=&quot;&amp;amp;sessionFactory&quot; factory-method=&quot;getConfiguration&quot;/&amp;gt;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
It breaks since DefaultListableBeanFactory.getBeanNamesForType() calls isBeanTypeMatch() and this eventually calls this line&lt;br/&gt;
&lt;br/&gt;
Code:&lt;br/&gt;
&lt;br/&gt;
            if (mergedBeanDefinition.getFactoryMethodName() != null &amp;amp;&amp;amp; mergedBeanDefinition.isSingleton()) {
               return getBean(name).getClass();
            }&lt;br/&gt;
&lt;br/&gt;
in AbstractBeanFactory.getType(String name) method. Since &apos;configuration&apos; bean is method made it is picked up. And this tries to initialize DataSource bean before PropertyPlaceholderConfigurer bean.&lt;br/&gt;
&lt;br/&gt;
This worked in previous version 1.2.1.&lt;br/&gt;
&lt;br/&gt;
Rgds, Ales&lt;br/&gt;
&lt;br/&gt;
------&lt;br/&gt;
exception stack trace:&lt;br/&gt;
Code:&lt;br/&gt;
&lt;br/&gt;
org.apache.commons.dbcp.SQLNestedException: Cannot load JDBC driver class &apos;${jdbc.driverClassName}
&lt;p&gt;&apos;&lt;br/&gt;
   at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:766)&lt;br/&gt;
   at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:540)&lt;br/&gt;
   at org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.afterPropertiesSet(LazyConnectionDataSourceProxy.java:137)&lt;br/&gt;
   at org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy.&amp;lt;init&amp;gt;(LazyConnectionDataSourceProxy.java:103)&lt;br/&gt;
   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&lt;br/&gt;
   at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)&lt;br/&gt;
   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)&lt;br/&gt;
   at java.lang.reflect.Constructor.newInstance(Constructor.java:274)&lt;br/&gt;
   at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:100)&lt;br/&gt;
   at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:75)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:579)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:322)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:176)&lt;br/&gt;
   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:105)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:920)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:731)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:340)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:414)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:318)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:226)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)&lt;br/&gt;
   at org.springframework.beans.factory.support.AbstractBeanFactory.getType(AbstractBeanFactory.java:329)&lt;br/&gt;
   at org.springframework.beans.factory.support.DefaultListableBeanFactory.isBeanTypeMatch(DefaultListableBeanFactory.java:250)&lt;br/&gt;
   at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:156)&lt;br/&gt;
   at org.springframework.context.support.AbstractApplicationContext.getBeanNamesForType(AbstractApplicationContext.java:585)&lt;br/&gt;
   at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:353)&lt;br/&gt;
   at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:294)&lt;br/&gt;
   at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:134)&lt;br/&gt;
   at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:230)&lt;br/&gt;
   at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:156)&lt;br/&gt;
   at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:48)&lt;br/&gt;
   at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3212)&lt;br/&gt;
   at org.apache.catalina.core.StandardContext.start(StandardContext.java:3554)&lt;br/&gt;
   at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1141)&lt;br/&gt;
   at org.apache.catalina.core.StandardHost.start(StandardHost.java:707)&lt;br/&gt;
   at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1141)&lt;br/&gt;
   at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:316)&lt;br/&gt;
   at org.apache.catalina.core.StandardService.start(StandardService.java:450)&lt;br/&gt;
   at org.apache.catalina.core.StandardServer.start(StandardServer.java:2143)&lt;br/&gt;
   at org.apache.catalina.startup.Catalina.start(Catalina.java:463)&lt;br/&gt;
   at org.apache.catalina.startup.Catalina.execute(Catalina.java:350)&lt;br/&gt;
   at org.apache.catalina.startup.Catalina.process(Catalina.java:129)&lt;br/&gt;
   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
   at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
   at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:156) &lt;/p&gt;</description>
            <key id="11923">SPR-1103</key>
            <summary>BeanFactoryPostProcessor processing</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="1" iconUrl="https://jira.spring.io/images/icons/priorities/blocker.png">Blocker</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="alesj">Ales Justin</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 Jul 2005 21:48:51 +0000</created>
                <updated>Mon, 18 Jul 2005 23:44:20 +0000</updated>
                            <resolved>Wed, 6 Jul 2005 00:14:38 +0000</resolved>
                                    <version>1.2.2</version>
                                    <fixVersion>1.2.3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="13758" author="juergen.hoeller" created="Wed, 6 Jul 2005 00:14:38 +0000"  >&lt;p&gt;Thanks for the report! This is unfortunately a side effect of a bug fix in the &quot;factory-method&quot; area. The test suite didn&apos;t cover that particular combination before, that&apos;s why it slipped into the 1.2.2 release.&lt;/p&gt;

&lt;p&gt;I&apos;ve fixed this in CVS already. Please give the next nightly snapshot a try and check whether it works for you again.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="13777" author="alesj" created="Wed, 6 Jul 2005 19:30:33 +0000"  >&lt;p&gt;Yep, it works &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;What exactly did you fix?&lt;/p&gt;</comment>
                            <comment id="13826" author="juergen.hoeller" created="Sun, 10 Jul 2005 22:18:48 +0000"  >&lt;p&gt;I refined AbstractBeanFactory/DefaultListableBeanFactory to avoid creation of a bean with &quot;factory-method&quot; as far as possible, in particular if &quot;getBeansOfType&quot; gets called with &quot;includeFactoryBeans=false&quot; (which is the case for BeanFactoryPostProcessors such as PropertyPlaceholderConfigurer).&lt;/p&gt;

&lt;p&gt;BTW, it would be great if you could give the latest nightly snapshot a try as well. I&apos;ve done some further refinement to analyze the static return type for factory methods where it makes sense, to be able to determine their type without instantiating the bean (where that makes sense). It would be great to make sure that the current code still works for you.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="13849" author="alesj" created="Mon, 11 Jul 2005 22:22:30 +0000"  >&lt;p&gt;It still works.&lt;/p&gt;

&lt;p&gt;How come static checking (in AbstractAutowireCapableBeanFactory) is done after&lt;/p&gt;

&lt;p&gt;// Create bean in case of factory method, to find out actual type.&lt;/p&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;// Return &quot;undeterminable&quot; for beans without class and for non-singleton beans with factory method.&lt;/p&gt;

&lt;p&gt;?&lt;/p&gt;

&lt;p&gt;Rgds, Ales&lt;/p&gt;</comment>
                            <comment id="13919" author="juergen.hoeller" created="Mon, 18 Jul 2005 23:44:20 +0000"  >&lt;p&gt;Well-spotted: The inline comments are misleading there.&lt;/p&gt;

&lt;p&gt;Those checks only affect beans with &quot;factory-bean&quot; declaration (i.e. with a non-static factory method), not ones with a pure static &quot;factory-method&quot;. The actual static analysis code is only meant to analyze &lt;em&gt;static&lt;/em&gt; factory methods.&lt;/p&gt;

&lt;p&gt;I&apos;ve fixed the inline comments.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 24 weeks, 2 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Jul 2005 00:14:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04c7b:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25351</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>