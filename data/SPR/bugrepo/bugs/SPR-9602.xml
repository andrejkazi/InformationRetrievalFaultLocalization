<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:07:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-9602/SPR-9602.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-9602] BeanFactory.getType() can return inaccurate (non-proxied) type when using AOP</title>
                <link>https://jira.spring.io/browse/SPR-9602</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The javadoc for BeanFactory.getType(&amp;lt;bean_name&amp;gt;) specifies that it will &quot;Determine the type of the bean with the given name. More specifically, determine the type of object that getBean(java.lang.String) would return for the given name.&quot;&lt;/p&gt;

&lt;p&gt;However, when using AOP, there are cases where this will not hold true.  We have demonstrated two cases: 1) when using the lazy-init=&quot;true&quot; attribute on a bean which will have an AOP proxy, and 2) when a bean using ApplicationContextAware calls getType(), for a bean which will have an AOP proxy, in it&apos;s init-method.&lt;/p&gt;

&lt;p&gt;In both cases getType(&amp;lt;name&amp;gt;) can return a different type than getBean(&amp;lt;name&amp;gt;).class().  More specifically getType() will return the base class of the bean and not the proxy, which getBean().class() will return.  After calling getBean(), future calls to getType() will return the correct type, the proxy.  &lt;/p&gt;

&lt;p&gt;We have ran into issues with the second case when using Mule + Spring.  &lt;/p&gt;

&lt;p&gt;I have attached a sample Maven project demonstrating the first case, with lazy-init.&lt;/p&gt;

&lt;p&gt;-Derek&lt;/p&gt;</description>
            <key id="44564">SPR-9602</key>
            <summary>BeanFactory.getType() can return inaccurate (non-proxied) type when using AOP</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="cbeams">Chris Beams</assignee>
                                    <reporter username="dbeauregard">Derek Beauregard</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Jul 2012 12:43:14 +0000</created>
                <updated>Tue, 11 Feb 2014 09:54:46 +0000</updated>
                            <resolved>Fri, 3 Aug 2012 06:39:38 +0000</resolved>
                                    <version>3.1 GA</version>
                                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="82220" author="cbeams" created="Fri, 3 Aug 2012 06:39:40 +0000"  >&lt;p&gt;Thanks, Derek.  Put a watch on &lt;a href=&quot;https://jira.spring.io/browse/SPR-9638&quot; title=&quot;BeanFactory.getType(String) may not return a Proxy class depending on the order of bean declarations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9638&quot;&gt;SPR-9638&lt;/a&gt;, which appears to be dealing with the same issue.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="44694">SPR-9638</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="20111" name="SpringLifecycle.zip" size="9397" author="dbeauregard" created="Wed, 18 Jul 2012 12:43:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        4 years, 20 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 3 Aug 2012 06:39:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>juergen.hoeller</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05q7z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33454</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>