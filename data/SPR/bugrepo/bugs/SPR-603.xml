<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 19:00:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-603/SPR-603.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-603] A default toString() is missing from Spring JAX-RPC</title>
                <link>https://jira.spring.io/browse/SPR-603</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;I am playing with Spring&apos;s webservice support.&lt;br/&gt;
See forum: &lt;a href=&quot;http://forum.springframework.org/viewtopic.php?p=11579#11579&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/viewtopic.php?p=11579#11579&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;I was outputting debug information and I stumpled on an exception.&lt;/p&gt;

&lt;p&gt;First the stack-trace:&lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;ediDao&apos; defined in ServletConte&lt;br/&gt;
eptionsException: PropertyAccessExceptionsException (1 errors); nested propertyAccessExceptions are: [org.springframewo&lt;br/&gt;
ion:  toString - none defined]&lt;br/&gt;
PropertyAccessExceptionsException (1 errors)&lt;br/&gt;
org.springframework.beans.MethodInvocationException: Property &apos;service&apos; threw exception; nested exception is javax.xml.&lt;br/&gt;
javax.xml.rpc.JAXRPCException: Cannot find operation:  toString - none defined&lt;br/&gt;
        at org.apache.axis.client.Call.setOperation(Call.java:1253)&lt;br/&gt;
        at org.apache.axis.client.AxisClientProxy.invoke(AxisClientProxy.java:184)&lt;br/&gt;
        at $Proxy0.toString(Unknown Source)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
        at org.springframework.remoting.rmi.RmiClientInterceptorUtils.doInvoke(RmiClientInterceptorUtils.java:98)&lt;br/&gt;
        at org.springframework.remoting.rmi.RmiClientInterceptorUtils.invoke(RmiClientInterceptorUtils.java:67)&lt;br/&gt;
        at org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor.invoke(JaxRpcPortClientInterceptor.java:341)&lt;br/&gt;
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)&lt;br/&gt;
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:174)&lt;br/&gt;
        at $Proxy1.toString(Unknown Source)&lt;br/&gt;
        at dk.webfragt.access.edi.EDIDao.setService(EDIDao.java:49)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
        at java.lang.reflect.Method.invoke(Method.java:324)&lt;br/&gt;
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:779)&lt;/p&gt;




&lt;p&gt;And my spring.xml file&lt;br/&gt;
	&amp;lt;bean id=&quot;ediWS&quot; class=&quot;dk.webfragt.access.edi.EDIWebServiceFactory&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;serviceInterface&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;dk.webfragt.access.edi.Version&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;wsdlDocumentUrl&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;&lt;a href=&quot;http://localhost:8181/axis/services/Version?wsdl&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8181/axis/services/Version?wsdl&lt;/a&gt;&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;namespaceUri&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;&lt;a href=&quot;http://localhost:8181/axis/services/Version&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://localhost:8181/axis/services/Version&lt;/a&gt;&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;serviceName&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;VersionService&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;portName&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;Version&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;




&lt;p&gt;And the code that causes this error&lt;/p&gt;

&lt;p&gt;	public void setService(Version v) &lt;/p&gt;
{
		logger.debug(&quot;Setting service: &quot; + v);
		this.ver = v;
	}



&lt;p&gt;The problem:&lt;/p&gt;

&lt;p&gt;Using Spring JAX-RPC will throw an exception if using toString() on the service interface. In my code above I log to debug the service interface (Version). If I remove the debug code line it works fine.&lt;/p&gt;

&lt;p&gt;Since Version is an interface I can not implemenet a toString method. &lt;/p&gt;

&lt;p&gt;I think Spring should have a default toString() that output the  JAX-RPC Service/Port name.&lt;/p&gt;</description>
            <key id="10958">SPR-603</key>
            <summary>A default toString() is missing from Spring JAX-RPC</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="davsclaus">Claus Ibsen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 10 Jan 2005 00:06:48 +0000</created>
                <updated>Fri, 14 Jan 2005 00:35:30 +0000</updated>
                            <resolved>Fri, 14 Jan 2005 00:35:30 +0000</resolved>
                                    <version>1.1.3</version>
                                    <fixVersion>1.1.4</fixVersion>
                                    <component>Remoting</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="11935" author="davsclaus" created="Mon, 10 Jan 2005 00:08:17 +0000"  >&lt;p&gt;Version is Axis&apos;s default example webservice that output the version information for the Axis implementation.&lt;/p&gt;

&lt;p&gt;As I said I was playing with Spring JAX-RPC support as to replace my own Axis generated code.&lt;/p&gt;</comment>
                            <comment id="11978" author="davsclaus" created="Fri, 14 Jan 2005 00:02:11 +0000"  >&lt;p&gt;Okay I added the toString() fix.&lt;/p&gt;

&lt;p&gt;In file JaxRpcPortClientInterceptor.java I change the invoke() method with a &quot;toString&quot; check in the start. The code is pasted here:&lt;/p&gt;

&lt;p&gt;	public Object invoke(MethodInvocation invocation) throws Throwable {&lt;br/&gt;
		if (&quot;toString&quot;.equals(invocation.getMethod().getName())) &lt;/p&gt;
{
			logger.debug(&quot;toString() operation invoked - returning server information instead of invoking remote port as usually there isn&apos;t a toString() operation defined using WebServices&quot;);
			return &quot;JAX-RPC service [&quot; + jaxRpcService.getServiceName() + &quot;] on port [&quot; + portName + &quot;]&quot;; 
		}

&lt;p&gt;		Remote stub = getPortStub();&lt;br/&gt;
		if (stub != null) {&lt;br/&gt;
			// JAX-RPC stub available -&amp;gt; traditional RMI stub invocation.&lt;br/&gt;
			if (logger.isDebugEnabled()) &lt;/p&gt;
{
				logger.debug(&quot;Invoking operation &apos;&quot; + invocation.getMethod().getName() +
						&quot;&apos; on JAX-RPC port stub&quot;);
			}
&lt;p&gt;			return RmiClientInterceptorUtils.invoke(invocation, stub, getPortQName().toString());&lt;br/&gt;
		}&lt;/p&gt;

&lt;p&gt;		else {&lt;br/&gt;
			// No JAX-RPC stub -&amp;gt; using JAX-RPC dynamic calls.&lt;br/&gt;
			if (logger.isDebugEnabled()) &lt;/p&gt;
{
				logger.debug(&quot;Invoking operation &apos;&quot; + invocation.getMethod().getName() +
						&quot;&apos; as JAX-RPC dynamic call&quot;);
			}
&lt;p&gt;			return performJaxRpcCall(invocation);&lt;br/&gt;
		}&lt;br/&gt;
	}&lt;/p&gt;




&lt;p&gt;Sorry I couldnt get SF CVS to work and creat a diff/patch file.&lt;/p&gt;</comment>
                            <comment id="11979" author="davsclaus" created="Fri, 14 Jan 2005 00:08:01 +0000"  >&lt;p&gt;And from the Tomcat log the toString() does not fail now&lt;/p&gt;

&lt;p&gt;main 14 jan 2005 15:04:58 DEBUG org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean - toString() operation invoked - returning server information instead of invoking remote port as usually there isn&apos;t a toString() operation defined using WebServices&lt;/p&gt;

&lt;p&gt;JAX-RPC service [&lt;/p&gt;
{http://localhost:8181/axis/services/Version}
&lt;p&gt;VersionService] on port &lt;span class=&quot;error&quot;&gt;&amp;#91;Version&amp;#93;&lt;/span&gt;&lt;/p&gt;



&lt;p&gt;So this code&lt;/p&gt;

&lt;p&gt;	public void setService(Version v) &lt;/p&gt;
{
		this.ver = v;
		System.out.println(ver);
	}


&lt;p&gt;Can not output the toString() operation of the WebService serviceInterface as it doesn&apos;t invoke a remote WebService call but instead returns a human readble text:&lt;/p&gt;

&lt;p&gt;JAX-RPC service [&lt;/p&gt;
{http://localhost:8181/axis/services/Version}
&lt;p&gt;VersionService] on port &lt;span class=&quot;error&quot;&gt;&amp;#91;Version&amp;#93;&lt;/span&gt;&lt;/p&gt;
</comment>
                            <comment id="11980" author="davsclaus" created="Fri, 14 Jan 2005 00:11:50 +0000"  >&lt;p&gt;Damm not edit&lt;/p&gt;

&lt;p&gt;&amp;gt; Can not output the toString() operation of the WebService serviceInterface as it doesn&apos;t invoke a remote WebService call but instead returns a human readble text: &lt;/p&gt;

&lt;p&gt;Should be can &lt;em&gt;NOW&lt;/em&gt; output&lt;/p&gt;


&lt;p&gt;And Juergen I think you can come up with a better logging message than mine.&lt;/p&gt;</comment>
                            <comment id="11981" author="juergen.hoeller" created="Fri, 14 Jan 2005 00:35:30 +0000"  >&lt;p&gt;Thanks, Claus, for pointing out this issue and even looking at how to fix it.&lt;/p&gt;

&lt;p&gt;Indeed, we need a toString check here. It&apos;s a bit unclear, though, why a proxy returned by the JAX-RPC getPort method doesn&apos;t expose proper toString behavior out-of-the-box.&lt;/p&gt;

&lt;p&gt;Anyway, we already have similar checks in HttpInvokerClientInterceptor and RmiClientInterceptor. I&apos;ve adapted this for JaxRpcPortClientInterceptor, with the following message (following the style of the other proxies, but with the contents you suggested):&lt;/p&gt;

&lt;p&gt;if (AopUtils.isToStringMethod(invocation.getMethod())) {&lt;br/&gt;
  return &quot;JAX-RPC proxy for port &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot; + getPortName() + &amp;quot;&amp;#93;&lt;/span&gt; of service &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot; + getJaxRpcService().getServiceName() + &amp;quot;&amp;#93;&lt;/span&gt;&quot;;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        11 years, 50 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 14 Jan 2005 00:35:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04xof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28830</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>