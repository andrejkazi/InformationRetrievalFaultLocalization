<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:52:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-3198/SPR-3198.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-3198] Create javadoc and source jars for seperate modules (Maven friendliness)</title>
                <link>https://jira.spring.io/browse/SPR-3198</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;Note: There are a number of already existing related issues, but none seemed to address this one specific improvement: create companion javadoc and source archives for every spring jar, including module jars, and make them available via maven.&lt;/p&gt;

&lt;p&gt;One of the benefits to using maven is the automatic downloading and configuration of source and javadoc for a specific library.  This can be done directly from maven (e.g. mvn idea:idea or mvn eclipse:eclipse) or through an IDE plugin (e.g. Maven Reloaded).  When it works, it&apos;s really quite nice and brings us a step closer to an ideal development environment.&lt;/p&gt;

&lt;p&gt;Currently, the javadoc and source archives are created and made available only for the mondo, all-encompassing spring.jar.  In this case, auto-fetching and configuration of source and javadoc works great.  One could even say it works &lt;em&gt;awesome&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately, we&apos;re only using a subset of spring and we explicitly list our dependencies on each module.  In this case, there aren&apos;t any javadoc or source modules to be associated with the class jars.  It would be fantastic if spring also provided these for those of us who only require a small subset of spring and would like to leverage maven&apos;s ability to auto-fetch and configure these.&lt;/p&gt;

&lt;p&gt;With future versions of spring, is it possible to include the associated javadoc and source archies for all of the spring jars, including the seperate module jars?&lt;/p&gt;

&lt;p&gt;Christian&lt;/p&gt;</description>
            <key id="16187">SPR-3198</key>
            <summary>Create javadoc and source jars for seperate modules (Maven friendliness)</summary>
                <type id="3" iconUrl="https://jira.spring.io/images/icons/issuetypes/task.png">Task</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="nebhale">nebhale</assignee>
                                    <reporter username="cnelson">Christian Nelson</reporter>
                        <labels>
                    </labels>
                <created>Fri, 23 Feb 2007 08:39:04 +0000</created>
                <updated>Tue, 19 Jun 2012 03:25:15 +0000</updated>
                            <resolved>Tue, 19 Jun 2012 03:22:29 +0000</resolved>
                                    <version>2.0.2</version>
                                                        <due></due>
                            <votes>9</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="22432" author="tblachowicz" created="Mon, 26 Feb 2007 01:10:33 +0000"  >&lt;p&gt;I think Christian is right, I&apos;d be handy to have javadocs and sources boundled with jar files available in Maven central repository.&lt;/p&gt;

&lt;p&gt;I&apos;d like to take a look a that. Can you just answer a quick question? How do you create bundle for central repository at the moment? Is there any script or other automated way of doing that? I just don&apos;t want to reinvent the wheel &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="22802" author="paul4christ79" created="Mon, 19 Mar 2007 06:48:42 +0000"  >&lt;p&gt;The Maven super POM has a built-in profile which allow the automatic packaging of sources and javadocs. Activate it with parameter -DperformRelease=true&lt;/p&gt;</comment>
                            <comment id="22803" author="nebhale" created="Mon, 19 Mar 2007 06:50:58 +0000"  >&lt;p&gt;We don&apos;t use maven for our build system, so it&apos;s going to take more than just that.  Thanks for the input though.&lt;/p&gt;</comment>
                            <comment id="23205" author="perfnorm" created="Thu, 12 Apr 2007 03:38:53 +0000"  >&lt;p&gt;This would be very handy.  In particular, it would be nice to have for the spring-mock artifact as we do use the &quot;spring&quot; artifact which does have sources, but of course does not include the indepenently declared spring-mock testing classes/sources (in other words, no workaround).&lt;/p&gt;</comment>
                            <comment id="23524" author="gdub" created="Mon, 30 Apr 2007 14:11:24 +0000"  >&lt;p&gt;In case this helps:&lt;/p&gt;

&lt;p&gt;Every time we update the Spring version in our POMs, I run through the spring module directories in .m2 and copy  the full Spring source jar, appropriately renamed, into it. mvn eclipse:eclipse then happily attaches the sources.&lt;/p&gt;

&lt;p&gt;So, I think one possible solution would be to simply include the full Spring source jar, renamed appropriately, in each module directory on the central repo.&lt;/p&gt;

&lt;p&gt;  -dub&lt;/p&gt;</comment>
                            <comment id="23526" author="nebhale" created="Mon, 30 Apr 2007 22:18:03 +0000"  >&lt;p&gt;We&apos;ll get this done, I promise.  It&apos;s on the list and pretty high priority, I just have to get the time when we&apos;re not right up against a release.&lt;/p&gt;</comment>
                            <comment id="24127" author="nebhale" created="Thu, 31 May 2007 05:01:18 +0000"  >&lt;p&gt;Track &lt;a href=&quot;https://jira.spring.io/browse/SPR-2704&quot; title=&quot;Create and upload Maven Source and Javadoc Bundles for Spring 2.0&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-2704&quot;&gt;&lt;del&gt;SPR-2704&lt;/del&gt;&lt;/a&gt; for progress on this issue&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="15195">SPR-2704</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        9 years, 31 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 26 Feb 2007 01:10:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04tdb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28132</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>