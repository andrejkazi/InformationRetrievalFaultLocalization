<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 21:41:56 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-5120/SPR-5120.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-5120] Spring component scanning does not work within JBoss EJB container</title>
                <link>https://jira.spring.io/browse/SPR-5120</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;The spring scanner functionality do not work when I create my ApplicationContext from a EJB managed by JBoss. I do test the same spring application context on diferents enviroments. Just on a managed EJB on a JBoos it is not workin.&lt;/p&gt;

&lt;p&gt;EJB code&lt;br/&gt;
        appContext = new GenericApplicationContext();&lt;br/&gt;
        ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner(appContext);&lt;br/&gt;
        scanner.scan(&quot;com&quot;);&lt;br/&gt;
        appContext.refresh();&lt;/p&gt;

&lt;p&gt;Annotated class&lt;br/&gt;
       @Service&lt;br/&gt;
        public class TransactionService {&lt;/p&gt;

&lt;p&gt;Exception&lt;br/&gt;
        ERROR: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named &apos;transactionService&apos; is defined&lt;/p&gt;</description>
            <key id="23775">SPR-5120</key>
            <summary>Spring component scanning does not work within JBoss EJB container</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thomas.risberg">Thomas Risberg</assignee>
                                    <reporter username="pedrosans">Pedro Santos</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Aug 2008 04:12:18 +0000</created>
                <updated>Wed, 18 Nov 2009 21:52:16 +0000</updated>
                            <resolved>Thu, 17 Sep 2009 02:58:53 +0000</resolved>
                                    <version>2.5.5</version>
                                    <fixVersion>3.0 RC1</fixVersion>
                                        <due></due>
                            <votes>24</votes>
                                    <watches>34</watches>
                                                                <comments>
                            <comment id="39262" author="juergen.hoeller" created="Wed, 27 Aug 2008 20:05:34 +0000"  >&lt;p&gt;Well, I suppose that the JBoss EJB container does not properly resolve your &quot;com&quot; package in the classpath there. This is what Spring&apos;s component scanner relies on.&lt;/p&gt;

&lt;p&gt;You could give the following a try:&lt;/p&gt;

&lt;p&gt;  myEjb.getClass().getClassLoader().getResources(&quot;com&quot;)&lt;/p&gt;

&lt;p&gt;and see what gets returned there. If that unexpectedly correctly resolves all roots of the &quot;com&quot; package in the classpath, try the following:&lt;/p&gt;

&lt;p&gt;  appContext.setClassLoader(myEjb.getClass().getClassLoader());&lt;/p&gt;

&lt;p&gt;before calling the component scanner. In general, always make sure that the ApplicationContext is configured with the correct target ClassLoader.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="39271" author="pedrosans" created="Thu, 28 Aug 2008 03:28:11 +0000"  >&lt;p&gt;The classloader correct resolves the jar resources, the problem are ocuring when spring try to get the resouce as a File object and can&apos;t do that cause the protocol used is &quot;vfszip&quot;.&lt;/p&gt;

&lt;p&gt;class: ResourceUtils &lt;br/&gt;
method: getFile&lt;br/&gt;
implementation:&lt;br/&gt;
if (!URL_PROTOCOL_FILE.equals(resourceUrl.getProtocol())) &lt;/p&gt;
{
			throw new FileNotFoundException(
					description + &quot; cannot be resolved to absolute file path &quot; +
					&quot;because it does not reside in the file system: &quot; + resourceUrl);
		}

&lt;p&gt;There is one workaround for it? Except the xml one...&lt;/p&gt;</comment>
                            <comment id="39276" author="juergen.hoeller" created="Thu, 28 Aug 2008 06:32:01 +0000"  >&lt;p&gt;When exactly is that ResourceUtils.getFile method called during component scanning in your case? I suppose during PathMatchingResourcePatternResolver.findPathMatchingResources? The actual problem is then probably the preceding isJarURL check that doesn&apos;t detect &quot;vfszip&quot; as jar files yet...&lt;/p&gt;

&lt;p&gt;I&apos;ve added &quot;vfszip&quot; for 2.5.6; this will be available in tonight&apos;s 2.5.6 snapshot (&lt;a href=&quot;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/downloads/nightly/snapshot-download.php?project=SPR&lt;/a&gt;). It would be great if you could give that snapshot a try against your JBoss environment...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="39279" author="pedrosans" created="Thu, 28 Aug 2008 07:36:38 +0000"  >&lt;p&gt;Exactly:&lt;/p&gt;

&lt;p&gt;org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:336)&lt;br/&gt;
org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:263)&lt;br/&gt;
org.springframework.context.support.AbstractApplicationContext.getResources(AbstractApplicationContext.java:1019)&lt;br/&gt;
org.springframework.context.support.GenericApplicationContext.getResources(GenericApplicationContext.java:192)&lt;br/&gt;
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:177)&lt;br/&gt;
org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:201)&lt;br/&gt;
org.springframework.context.annotation.ClassPathBeanDefinitionScanner.scan(ClassPathBeanDefinitionScanner.java:180)&lt;/p&gt;

&lt;p&gt;ok, i will test this on 2.5.6 version. I return the result...&lt;/p&gt;</comment>
                            <comment id="39347" author="pedrosans" created="Mon, 1 Sep 2008 06:19:47 +0000"  >&lt;p&gt;the incompatibility still remains, I&apos;m geting this error now:&lt;/p&gt;

&lt;p&gt;Caused by: java.io.FileNotFoundException: C:\jboss\server\default\deploy\VO-ejbEAR.ear\VO-ejb.jar\com (the system can&apos;t find de specified path)&lt;br/&gt;
	at java.util.zip.ZipFile.open(Native Method)&lt;br/&gt;
	at java.util.zip.ZipFile.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at java.util.jar.JarFile.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at java.util.jar.JarFile.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(PathMatchingResourcePatternResolver.java:448)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:339)&lt;br/&gt;
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:263)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.getResources(AbstractApplicationContext.java:1019)&lt;br/&gt;
	at org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:182)&lt;br/&gt;
	... 100 more&lt;/p&gt;</comment>
                            <comment id="39350" author="pedrosans" created="Mon, 1 Sep 2008 07:30:11 +0000"  >&lt;p&gt;I was looking at the problem... the &quot;vfszip&quot; url protocol is not recognized as a JarURLConnection.&lt;br/&gt;
So the String urlFile of resource is /C:/jboss/server/default/deploy/VO-ejbEAR.ear/VO-ejb.jar/com/. This format isn&apos;t expected on doFindPathMatchingJarResources implementation.&lt;br/&gt;
What rapens is that the jarFileUrl is incorrectly resolved as &quot;C:\jboss\server\default\deploy\VO-ejbEAR.ear\VO-ejb.jar\com&quot; (with the package &apos;com&apos; path) and de jar can&apos;t be located on system.&lt;/p&gt;

&lt;p&gt;I search this protocol on internet and find no documentation for it... this kind of improvment can to be made?&lt;/p&gt;</comment>
                            <comment id="39362" author="juergen.hoeller" created="Mon, 1 Sep 2008 18:50:03 +0000"  >&lt;p&gt;I&apos;m not aware of any such protocol documentation either...&lt;/p&gt;

&lt;p&gt;You could try to debug the doFindPathMatchingJarResources method and see what it encounters there: in particular, what kind of URLConnection it gets that isn&apos;t a JarURLConnection. Unfortunately, if we are not getting a URLConnection that allows us to introspect the contents of the affected archive, then all we can do is to try to locate the archive file in the file system (the code path where the exception above comes from) . The latter doesn&apos;t work properly if the jar is nested in another archive, such as in an EAR file.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="40585" author="juergen.hoeller" created="Wed, 22 Oct 2008 21:12:14 +0000"  >&lt;p&gt;I&apos;m afraid we can&apos;t do anything about this for the moment. To be reopened once there is way to perform such scanning on JBoss - if there is enough demand for Spring component scanning in a JBoss EJB jar to begin with.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="41847" author="gredler" created="Tue, 30 Dec 2008 08:19:12 +0000"  >&lt;p&gt;It&apos;s unfortunate that ResourceUtils.isJarURL(URL) was modified to account for JBoss 5&apos;s new VFS URLs, but PathMatchingResourcePatternResolver.doFindPathMatchingJarResources(Resource, String) was not updated to account for these URLs.&lt;/p&gt;

&lt;p&gt;As per the code comments in doFindPathMatchingJarResources, this method assumes a JAR URL format of &quot;jar:path!/entry&quot;; however, VFS apparently doesn&apos;t include the exclamation character(ie, &quot;jar:path/entry&quot; instead of &quot;jar:path!/entry&quot;). It should be sufficient to look for &quot;.jar/&quot; (or any of the other JAR variants: EAR, WAR, etc) instead of &quot;!/&quot;, with appropriate modifications to the path split indices.&lt;/p&gt;

&lt;p&gt;The resolution to this bug is &quot;deferred&quot;; are you planning on fixing this for 3.0.0? Do you plan on releasing a 2.5.7? Thanks for any info!&lt;/p&gt;</comment>
                            <comment id="41887" author="al.robertson" created="Mon, 5 Jan 2009 03:15:38 +0000"  >&lt;p&gt;I&apos;m getting the same problem. And just to clarify, it&apos;s not just EJB jars. It&apos;s any jar at the EAR level, referenced from the WAR manifest classpath.&lt;br/&gt;
We have our spring config contained in such a jar so it&apos;s a bit of a JBoss5 blocker at the moment.&lt;br/&gt;
I&apos;ll try and dig up some more info about vfszip.&lt;br/&gt;
Al&lt;/p&gt;</comment>
                            <comment id="41972" author="alesj" created="Sat, 10 Jan 2009 19:34:52 +0000"  >&lt;p&gt;You can use my VFS based impl of ResourcePatternResolver.&lt;br/&gt;
Read more about it here:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;http://blogs.jboss.com/blog/alesj/2008/07/05/JBoss5_CR1_SpringDeployer_and_VFS.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://blogs.jboss.com/blog/alesj/2008/07/05/JBoss5_CR1_SpringDeployer_and_VFS.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Juergen, what would be the best place for this code?&lt;br/&gt;
Some our place? - Then I need to find a better more common/general place for it than AS sub-project.&lt;br/&gt;
Or should we host it under Spring code?&lt;/p&gt;

&lt;p&gt;Perhaps you can also update the VFS usage in JBoss5&lt;br/&gt;
as we&apos;ve encountered some serious performance problems:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;http://in.relation.to/Bloggers/MCsDIIoCArticleJBVEAndJBoss5VFSCacheUsageUpdate&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://in.relation.to/Bloggers/MCsDIIoCArticleJBVEAndJBoss5VFSCacheUsageUpdate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="42135" author="alesj" created="Tue, 20 Jan 2009 21:25:01 +0000"  >&lt;p&gt;Attaching a jboss-as-spring-int.jar which includes this VFS bridge.&lt;/p&gt;</comment>
                            <comment id="42347" author="pkoster" created="Thu, 29 Jan 2009 21:06:22 +0000"  >&lt;p&gt;This really is a very big problem, it occurs indeed in any jar or war inside an ear.&lt;/p&gt;


&lt;p&gt;Justin, I&apos;m sorry if this is a stupid question, but I don&apos;t understand how I have to use your provided jar file. Where do I place it, and how do I make spring use it ? &lt;/p&gt;</comment>
                            <comment id="42349" author="alesj" created="Thu, 29 Jan 2009 21:52:11 +0000"  >&lt;p&gt;&lt;a href=&quot;http://www.jboss.com/index.html?module=bb&amp;amp;op=viewtopic&amp;amp;t=148989&amp;amp;postdays=0&amp;amp;postorder=asc&amp;amp;start=10&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jboss.com/index.html?module=bb&amp;amp;op=viewtopic&amp;amp;t=148989&amp;amp;postdays=0&amp;amp;postorder=asc&amp;amp;start=10&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="42350" author="alesj" created="Thu, 29 Jan 2009 21:53:37 +0000"  >&lt;p&gt;And you need to place the jar somewhere in app&apos;s classpath.&lt;br/&gt;
Either directly in the app or in more global JBoss server/common/lib.&lt;/p&gt;</comment>
                            <comment id="42352" author="pkoster" created="Thu, 29 Jan 2009 22:24:46 +0000"  >&lt;p&gt;thx&lt;/p&gt;</comment>
                            <comment id="42931" author="mbogoevici" created="Mon, 9 Mar 2009 04:44:03 +0000"  >&lt;p&gt;Juergen,&lt;/p&gt;

&lt;p&gt;I re-opened the issue, since there currently is an implementation that is capable to treat the VFS URLs correctly. As Ales has mentioned before, the Spring Deployer in JBoss already uses a ResourcePatternResolver that solves this problem.&lt;/p&gt;

&lt;p&gt;The implementation is here:&lt;br/&gt;
&lt;a href=&quot;http://anonsvn.jboss.org/repos/jbossas/trunk/spring-int/src/main/org/jboss/spring/io/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://anonsvn.jboss.org/repos/jbossas/trunk/spring-int/src/main/org/jboss/spring/io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, what lacks at this point, is a proper way to easily integrate this with the mainstream Spring code. The only way for an ApplicationContext to customize its ResourcePatternResolver is by overriding getResourcePatternResolver(). In practice, this means that for being able to use Spring in JBoss AS5, one needs to create its own ApplicationContext subtypes for being able to deal with such scenarios as classpath scanning for bean definitions, or using pattern-based context configuration locations. Otherwise, regular applications (including simple wars) won&apos;t work out of the box, when it comes to dealing with pattern-based resource paths. Typical failure scenarios and user-provided solutions are listed here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jboss.org/index.html?module=bb&amp;amp;op=viewtopic&amp;amp;p=4213444&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.jboss.org/index.html?module=bb&amp;amp;op=viewtopic&amp;amp;p=4213444&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(The main cause being that the bootstrapped XmlWebApplicationContext uses a ServletContextResourcePatternResolver, which in turn delegates to its base PathMatchingResourcePatternResolver, which cannot treat the resource path correctly, nor be easily replaced with the extended VFSResourcePatternResolver, unless the user modifies the code or extends the base class).&lt;/p&gt;

&lt;p&gt;So, what seems to be needed here is a pluggable mechanism, so that a specific protocol, such as vfszip, could be resolved (resource loaded, path scanned, etc) through a specific strategy (like, for example, VFSResourcePatternResolver), that could be picked up from the classpath (and provided as part of the JBoss support libraries). &lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Marius&lt;/p&gt;</comment>
                            <comment id="43126" author="alesj" created="Tue, 17 Mar 2009 01:52:47 +0000"  >&lt;p&gt;I refactored our Spring integration into separate project:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This VFS support is now a module in this new integration project&lt;br/&gt;
and I also renamed the last &quot;io&quot; package to &quot;vfs&quot;:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk/vfs/src/main/java/org/jboss/spring/vfs/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk/vfs/src/main/java/org/jboss/spring/vfs/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="43863" author="dward_alfresco" created="Tue, 28 Apr 2009 04:53:25 +0000"  >&lt;p&gt;At Alfresco we also struggled getting our Spring-based framework working on JBoss 5. We have lots of bean definition files using classpath-based pattern matching. E.g.: &lt;/p&gt;

&lt;p&gt;Code: &lt;br/&gt;
&amp;lt;import resource=&quot;classpath*:alfresco/patch/*-context.xml&quot;/&amp;gt;	 &lt;/p&gt;


&lt;p&gt;FYI I eventually created a subclass of XmlWebApplicationContext that used a generalized version of Ales&apos;s VFSResourcePatternResolver that subclassed ServletContextResourcePatternResolver. I had to fix the logic to deal with relative path matching and matching of directories. I also made the resolver behave as normal on other app servers when not dealing with vfs URLs. &lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://svn.alfresco.com/repos/alfresco-open-mirror/alfresco/HEAD/root/projects/core/source/java/org/alfresco/config/JBossEnabledWebApplicationContext.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.alfresco.com/repos/alfresco-open-mirror/alfresco/HEAD/root/projects/core/source/java/org/alfresco/config/JBossEnabledWebApplicationContext.java&lt;/a&gt; and associated classes. &lt;/p&gt;</comment>
                            <comment id="43936" author="meetoblivion" created="Sun, 3 May 2009 13:52:10 +0000"  >&lt;p&gt;So I just want to make sure I get this correct, before I decide how to approach it..&lt;/p&gt;

&lt;p&gt;The Alfresco guys and the JBoss guys both seem to have (very similar) resolutions to this issue, which seem to indicate fixing it by handling VFS a bit nicer.&lt;/p&gt;

&lt;p&gt;so if I check out and compile the source here: &lt;a href=&quot;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk/vfs/src/main/java/org/jboss/spring/vfs/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk/vfs/src/main/java/org/jboss/spring/vfs/&lt;/a&gt; then build my app against that, everything should be fine then, right? i&apos;d have to replace my classpathxml with these new jboss friendly ones?&lt;/p&gt;</comment>
                            <comment id="43937" author="alesj" created="Sun, 3 May 2009 17:06:13 +0000"  >&lt;p&gt;Afaik, Marius just finished porting/matching Alfresco&apos;s fixes to our codebase.&lt;br/&gt;
This is the xml app context class that knows how to handle vfs: &lt;a href=&quot;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk/deployers/src/main/java/org/jboss/spring/factory/VFSXmlWebApplicationContext.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk/deployers/src/main/java/org/jboss/spring/factory/VFSXmlWebApplicationContext.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The whole project is mavenized, hence it&apos;s trivial to build the artifacts.&lt;/p&gt;</comment>
                            <comment id="43949" author="meetoblivion" created="Sun, 3 May 2009 22:26:26 +0000"  >&lt;p&gt;Sorry, but which &quot;project&quot; is that? I don&apos;t see spring-int anywhere on the jboss site.  Is this something that&apos;s going to come w/ 5.1?&lt;/p&gt;</comment>
                            <comment id="43951" author="alesj" created="Sun, 3 May 2009 22:32:17 +0000"  >&lt;p&gt;It&apos;s not meant to be a &quot;real&quot; project atm (at least not yet).&lt;br/&gt;
Currently it&apos;s only meant to provide missing glue code for various pieces.&lt;br/&gt;
I do think we&apos;ll eventually setup a proper project page, w/ downloads and all.&lt;br/&gt;
But atm you need to build it on your own from here: &lt;a href=&quot;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/trunk/&lt;/a&gt;&lt;br/&gt;
(ps: I&apos;ll create a proper 1.0.0.Alpha1 release soon; once we resolve some of the ongoing issues)&lt;/p&gt;</comment>
                            <comment id="43961" author="meetoblivion" created="Mon, 4 May 2009 01:51:50 +0000"  >&lt;p&gt;Ok, so making this change did in fact fix my issue.  However, there seems to be some compatibility issues w/ loading Hibernate resources.  Currently, we&apos;re calling getResources(&quot;classpath*:*&lt;b&gt;/&lt;/b&gt;.hbm.xml&quot;) against the app context.  Any ideas for a work around?  If it helps I&apos;m currently running this against JB-AS 5.1&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                            <comment id="43962" author="mbogoevici" created="Mon, 4 May 2009 01:55:48 +0000"  >&lt;p&gt;John, &lt;/p&gt;

&lt;p&gt;Can you provide some details on the issues you&apos;re encountering? Error messages, etc?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Marius&lt;/p&gt;</comment>
                            <comment id="43963" author="meetoblivion" created="Mon, 4 May 2009 02:15:27 +0000"  >&lt;p&gt;We have a chunk of code &lt;/p&gt;

&lt;p&gt;	public static Resource[] getResources(String path) {&lt;br/&gt;
		Resource[] res;&lt;br/&gt;
		try &lt;/p&gt;
{
			res = ac.getResources(path);
		}
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
			throw new InitException(&quot;i/o error while asking for resources, path:&quot; + path,e);
		}
&lt;p&gt;		return res;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;Which is invoked in the following manner: CoreInit.getResources(&quot;classpath*:*&lt;b&gt;/&lt;/b&gt;.hbm.xml&quot;)&lt;/p&gt;

&lt;p&gt;And ac is now a VFSXmlWebApplicationContext.&lt;/p&gt;

&lt;p&gt;The exception gets thrown.  This works fine on a tomcat install w/o the VFSXmlWebApplicationContext, so I assume something similar has to get fixed to make this work.&lt;/p&gt;

&lt;p&gt;The relevant part of the exception:&lt;/p&gt;

&lt;p&gt;Caused by: java.io.IOException: Child not found opt/jboss/jboss-5.1.0.CR1/server/default/deployers/jbossweb.deployer/ for MemoryContextHandler@1682498437&lt;span class=&quot;error&quot;&gt;&amp;#91;path= context=vfsmemory://4sg3s5y-u98501-fuba1p5t-1-fuba29fj-28 real=vfsmemory://4sg3s5y-u98501-fuba1p5t-1-fuba29fj-28&amp;#93;&lt;/span&gt;, available children: []&lt;br/&gt;
        at org.jboss.virtual.plugins.registry.DefaultVFSRegistry.findHandler(DefaultVFSRegistry.java:108)&lt;br/&gt;
        at org.jboss.virtual.plugins.registry.DefaultVFSRegistry.getFile(DefaultVFSRegistry.java:87)&lt;br/&gt;
        at org.jboss.virtual.plugins.registry.DefaultVFSRegistry.getFile(DefaultVFSRegistry.java:120)&lt;br/&gt;
        at org.jboss.virtual.VFS.getRoot(VFS.java:264)&lt;br/&gt;
        at org.jboss.spring.vfs.VFSResourcePatternResolvingHelper.getVFSResources(VFSResourcePatternResolvingHelper.java:77)&lt;br/&gt;
        at org.jboss.spring.vfs.VFSResourcePatternResolvingHelper.locateResources(VFSResourcePatternResolvingHelper.java:61)&lt;br/&gt;
        at org.jboss.spring.vfs.VFSServletContextResourcePatternResolver.findPathMatchingResources(VFSServletContextResourcePatternResolver.java:51)&lt;br/&gt;
        at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:244)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.getResources(AbstractApplicationContext.java:1019)&lt;br/&gt;
        ... 78 more&lt;/p&gt;


&lt;p&gt;Not sure why it&apos;s trying to go all the way down there.  I embedded the JAR files in the war file (which is in an ear file).&lt;/p&gt;</comment>
                            <comment id="43964" author="mbogoevici" created="Mon, 4 May 2009 02:25:57 +0000"  >&lt;p&gt;OK, thanks, I&apos;ll look into it.&lt;/p&gt;</comment>
                            <comment id="44027" author="mbogoevici" created="Thu, 7 May 2009 05:45:55 +0000"  >&lt;p&gt;John,&lt;/p&gt;

&lt;p&gt;The issue you were encountering was due to &lt;a href=&quot;https://jira.jboss.org/jira/browse/JBVFS-109&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jira.jboss.org/jira/browse/JBVFS-109&lt;/a&gt;, which will be fixed in JBoss 5.1.0GA. See the issue for more details.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Marius&lt;/p&gt;</comment>
                            <comment id="44028" author="juergen.hoeller" created="Thu, 7 May 2009 06:19:30 +0000"  >&lt;p&gt;Marius, Ales,&lt;/p&gt;

&lt;p&gt;It would be great if we could extract the minimum that&apos;s needed to make classpath scanning work on JBoss 5, and include it in Spring 3.0 proper. However, I&apos;m a bit unclear on what it actually takes there. &lt;/p&gt;

&lt;p&gt;Does the situation change on JBoss 5.1? Do we really need full-fledged VFS API usage in order to sort this out? We could bake reflective checks into PathMatchingResourcePatternResolver itself, I suppose... Concrete patches against PathMatchingResourcePatternResolver would be very welcome - possibly using VFS API internally only, guarded by some VFS API presence checks.&lt;/p&gt;

&lt;p&gt;Compiling PathMatchingResourcePatternResolver against a VFS API jar wouldn&apos;t be a problem, as long as that optional API usage does not impose runtime requirements on non-JBoss users. Compare PathMatchingResourcePatternResolver&apos;s existing optional use of Equinox OSGi API, if present.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="44030" author="mbogoevici" created="Thu, 7 May 2009 06:54:01 +0000"  >&lt;p&gt;Juergen,&lt;/p&gt;

&lt;p&gt;Thanks for the reply. Good to see this being sorted out before the release of 3.0 &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;ll upload a patch shortly, tomorrow at latest. Is there any way to backport this to 2.5.x? Case in which I could provide a similar patch for that, too.&lt;/p&gt;

&lt;p&gt;Noted your comments - it&apos;s pretty much what I had in mind for this, too. The VFS API we are working against does not change in 5.1, but there is a strict VFS issue (JBVFS-109) mentioned above, which affects JBoss AS 5.0 (now fixed), and which makes using &quot;classpath*:**/&amp;lt;something&amp;gt;&quot; resources problematic.&lt;/p&gt;

&lt;p&gt;Marius&lt;/p&gt;</comment>
                            <comment id="44112" author="mbogoevici" created="Tue, 12 May 2009 09:01:14 +0000"  >&lt;p&gt;Juergen,&lt;/p&gt;

&lt;p&gt;I added a patch for this issue, which overrides the default behaviour of PathMatchingResourcePatternResolver in the case of JBoss 5.x.&lt;/p&gt;

&lt;p&gt;This compiles against JBoss-vfs 2.1.0.GA which can be acquired from here (and it can run against newer versions, like 2.1.2 GA and higher).&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Marius&lt;/p&gt;</comment>
                            <comment id="44124" author="cannyduck" created="Tue, 12 May 2009 23:23:58 +0000"  >&lt;p&gt;Please provide a 2.5.X backport. This is a heay weight problem at the moment.&lt;/p&gt;</comment>
                            <comment id="44125" author="dward_alfresco" created="Tue, 12 May 2009 23:40:47 +0000"  >&lt;p&gt;Thanks for the acknowledgement on the source. Note that I also had to change RECURSE_LEAVES_ONLY to RECURSE to get equivalent behaviour to base Spring (which would return directories as well as files matching a pattern). I also think it would be worthwhile if VFSResource extended AbstractResource (as in the Alfresco implementation) so that hashCode, equals, etc. are implemented. Without this, I&apos;m surprised you can add a VFSResource to a HashSet!&lt;/p&gt;

&lt;p&gt;Also, do we still need VFS support in ResourceLoader (as in the Alfresco implementation)? Would getResource(&quot;mypath/myresource&quot;).getFile() throw an exception where otherwise it wouldn&apos;t have on JBoss 4 or Tomcat?&lt;/p&gt;</comment>
                            <comment id="44132" author="mbogoevici" created="Wed, 13 May 2009 03:01:10 +0000"  >&lt;p&gt;David,&lt;/p&gt;

&lt;p&gt;Thanks for pointing these things out  - you can add a VFSResource to a HashSet - but, yes - the main problem is that if you have overlapping patterns your Resources will be added twice, not quite something you want to see.&lt;/p&gt;

&lt;p&gt;Actually, there is an issue with treating &quot;classpath:&amp;lt;resource-path&amp;gt;&quot;  correctly and I will upload another patch shortly.&lt;/p&gt;

&lt;p&gt;Marius&lt;/p&gt;</comment>
                            <comment id="44134" author="mbogoevici" created="Wed, 13 May 2009 06:48:23 +0000"  >&lt;p&gt;So, here&apos;s the new patch: vfs-fixes-2.patch.&lt;/p&gt;

&lt;p&gt;It incorporates the additions to VfsResource indicated by David, as well as some further changes.&lt;/p&gt;

&lt;p&gt;Juergen, I think that isolating delegation in ResourceUtil was the right decision in this case, even if making ResourceUtil know about the delegates expands its scope for a bit.&lt;/p&gt;

&lt;p&gt;Having to choose between addressing the issue by modifying the ResourceLoader (as we have done in jboss-spring-int) to return a different Resource implementation and trying to make the existing Resource implementations work correctly, I went for the latter.  So this makes sure that on a JBoss Application Server, URLs and URIs starting with &quot;vfszip:&quot; are processed correctly by ResourceUtils.getFile(), as well as making sure that resources having URLs starting with vfs* are navigated correctly.&lt;/p&gt;

&lt;p&gt;Cheers, and thanks the feedback,&lt;br/&gt;
Marius&lt;/p&gt;

</comment>
                            <comment id="44136" author="mbogoevici" created="Wed, 13 May 2009 10:24:17 +0000"  >&lt;p&gt;vfs-fixes-3.patch: &lt;/p&gt;

&lt;p&gt;A small fix adding equals() and hashCode() implementations to VFSResource (the default is based on getDescription() which delegates to VirtualFileHandler).&lt;/p&gt;</comment>
                            <comment id="44444" author="astubbs" created="Wed, 27 May 2009 13:52:24 +0000"  >&lt;p&gt;Related to &lt;a href=&quot;http://jira.springsource.org/browse/SPR-5784&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.springsource.org/browse/SPR-5784&lt;/a&gt; - probably actually duplicated by. But demonstrates the issue none-the-less.&lt;/p&gt;</comment>
                            <comment id="44445" author="astubbs" created="Wed, 27 May 2009 13:53:24 +0000"  >&lt;p&gt;P.s. &lt;a href=&quot;http://jira.springsource.org/browse/SPR-5784&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.springsource.org/browse/SPR-5784&lt;/a&gt; also demonstrates a quick work-around for my situation.&lt;/p&gt;</comment>
                            <comment id="44774" author="pdzilens" created="Thu, 11 Jun 2009 00:21:42 +0000"  >&lt;p&gt;Are the changes in the &quot;vfs-fixes-3.patch&quot; patch going to be incorporated into Spring 3.0 RC1?&lt;/p&gt;</comment>
                            <comment id="45499" author="sschmidt" created="Tue, 14 Jul 2009 16:57:43 +0000"  >&lt;p&gt;In our Roo 1.0.0.RC1 testing of the petclinic.roo script against JBoss 5.10.GA we encounter an exception which appears to be related to this issue:&lt;/p&gt;

&lt;p&gt;Context initialization failed&lt;br/&gt;
org.springframework.beans.factory.BeanDefinitionStoreException: Could not resolve bean definition resource pattern &lt;span class=&quot;error&quot;&gt;&amp;#91;classpath*:applicationContext*.xml&amp;#93;&lt;/span&gt;; nested exception is java.io.FileNotFoundException: File not found&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:190)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)&lt;br/&gt;
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)&lt;br/&gt;
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:93)&lt;/p&gt;

&lt;p&gt;Juergen, I&apos;d be happy to test any new Spring Framework snapshot you produce against Roo and JBoss 5 and see if it is resolves the above. Please just let me know.&lt;/p&gt;

&lt;p&gt;-Stefan&lt;/p&gt;</comment>
                            <comment id="46087" author="andre.rodrigues" created="Thu, 13 Aug 2009 23:02:57 +0000"  >&lt;p&gt;The component scanning is not working even for .class files inside WEB-INF/classes, not just jar files. For that JBoss uses the vfsfile protocol, which is also not supported by Spring. This is a big blocker for us since we&apos;re trying to migrate our applications from JBoss 4.2.3 to JBoss 5.1.&lt;/p&gt;</comment>
                            <comment id="46092" author="mbogoevici" created="Fri, 14 Aug 2009 00:32:41 +0000"  >&lt;p&gt;Attached &quot;jboss-spring-int-vfs.jar&quot; that contains utilities for handling classpath scanning in JBoss AS5.&lt;/p&gt;

&lt;p&gt;For web applications, use org.jboss.spring.vfs.context.VFSXmlWebApplicationContext throught the &apos;contextClass&apos; parameter in either ContextLoaderListener, or DispatcherServlet.&lt;/p&gt;</comment>
                            <comment id="46093" author="mbogoevici" created="Fri, 14 Aug 2009 00:38:16 +0000"  >&lt;p&gt;Andre,&lt;/p&gt;

&lt;p&gt;See my comment above. You can also take a look at the whole &lt;a href=&quot;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/branches/1_0/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://anonsvn.jboss.org/repos/jbossas/projects/spring-int/branches/1_0/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hope that helps,&lt;br/&gt;
Marius&lt;/p&gt;</comment>
                            <comment id="46649" author="thomas.risberg" created="Fri, 11 Sep 2009 02:21:44 +0000"  >&lt;p&gt;I have committed a revised patch for this issue. Moved methods from ResourceUtils to a separate ResourceHandlingUtils in the core.io.support package to avoid dependency cycles between packages.&lt;/p&gt;

&lt;p&gt;-Thomas&lt;/p&gt;</comment>
                            <comment id="46757" author="dward_alfresco" created="Wed, 16 Sep 2009 02:32:46 +0000"  >&lt;p&gt;At Alfresco we found that the VFSResource implementation still didn&apos;t work with some of our webapps that would work in Tomcat.&lt;/p&gt;

&lt;p&gt;For example this context file that uses &quot;..&quot; in a relative URL&lt;/p&gt;

&lt;p&gt;&amp;lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&amp;gt;&lt;br/&gt;
&amp;lt;!DOCTYPE beans PUBLIC &apos;-//SPRING//DTD BEAN//EN&apos; &apos;http://www.springframework.org/dtd/spring-beans.dtd&apos;&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;beans&amp;gt;&lt;br/&gt;
   &amp;lt;!--&lt;br/&gt;
      The bean definitions for this subsystem are shared by the ldap and ldap-ad subsystems with different property&lt;br/&gt;
      defaults&lt;br/&gt;
   --&amp;gt;&lt;br/&gt;
   &amp;lt;import resource=&quot;../common-ldap-context.xml&quot; /&amp;gt;&lt;br/&gt;
&amp;lt;/beans&amp;gt;&lt;/p&gt;

&lt;p&gt;We fixed our own VFSResource implementation as follows&lt;/p&gt;

&lt;p&gt;        public Resource createRelative(String relativePath) throws IOException&lt;/p&gt;
        {
            return new VFSResource(VFS.getRoot(new URL(getURL(), relativePath)));
        }

&lt;p&gt;Please consider reopening this issue and fixing as above.&lt;/p&gt;</comment>
                            <comment id="46779" author="mbogoevici" created="Thu, 17 Sep 2009 02:14:05 +0000"  >&lt;p&gt;Thomas,&lt;/p&gt;

&lt;p&gt;FIrst, thanks for comitting the patch. Also, David is right - and I made the changes in our code as per &lt;a href=&quot;https://jira.jboss.org/jira/browse/JBSPRING-4&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jira.jboss.org/jira/browse/JBSPRING-4&lt;/a&gt;, so it would be a good idea if same would be done for Spring 3.0.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Marius&lt;/p&gt;
</comment>
                            <comment id="46780" author="thomas.risberg" created="Thu, 17 Sep 2009 02:58:53 +0000"  >&lt;p&gt;modified createRelative according to David Ward&apos;s suggestion for JBSPRING-4&lt;/p&gt;</comment>
                            <comment id="46956" author="fatboysuns" created="Thu, 24 Sep 2009 05:33:10 +0000"  >&lt;p&gt;Hi All&lt;br/&gt;
Thanks for making the component scan work. Even though this Jira talks of EJB with Jboss 5, I was wondering if component-scanning in general would work with Jboss 5.&lt;/p&gt;

&lt;p&gt;I had posted something on the forum a while back (&lt;a href=&quot;http://forum.springsource.org/showthread.php?t=71541&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springsource.org/showthread.php?t=71541&lt;/a&gt;) and had not  created a jira for my problem as I felt it was related to the one mentioned here. Am putting in this component to make sure if I was right or not.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Sundar&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                                                <inwardlinks description="is depended on by">
                                        <issuelink>
            <issuekey id="28031">SPR-6146</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="28794">SPR-6385</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="24976">SPR-5340</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="26691">SPR-5784</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="15061" name="jboss-as-sprint-int-5.0.0.GA.jar" size="36616" author="alesj" created="Tue, 20 Jan 2009 21:25:01 +0000"/>
                            <attachment id="15612" name="jboss-spring-int-vfs.jar" size="14864" author="mbogoevici" created="Fri, 14 Aug 2009 00:32:41 +0000"/>
                            <attachment id="15386" name="vfs-fixes-2.patch" size="15753" author="mbogoevici" created="Wed, 13 May 2009 06:48:23 +0000"/>
                            <attachment id="15387" name="vfs-fixes-3.patch" size="16033" author="mbogoevici" created="Wed, 13 May 2009 10:24:17 +0000"/>
                            <attachment id="15382" name="vfs.patch" size="12428" author="mbogoevici" created="Tue, 12 May 2009 09:01:14 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        7 years, 14 weeks ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 27 Aug 2008 20:05:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>true</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0127j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6235</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>