<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:35:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-4774/SPR-4774.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-4774] @Validator, @Validate</title>
                <link>https://jira.spring.io/browse/SPR-4774</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;More brainstorming from training session in LA, 5/1/08 with Chris Beams, Tchavdar Ivanov (FIM) and myself. &lt;/p&gt;

&lt;p&gt;@Validator could be a class level annotation eligible for component scans, the methods of which could be annotated with @Validate (or similar) which would enable method/request param specific validation within the request handling workflow&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Like the @HandlerInterceptor design (&lt;a href=&quot;https://jira.spring.io/browse/SPR-4770&quot; title=&quot;@HandlerInterceptor&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-4770&quot;&gt;&lt;del&gt;SPR-4770&lt;/del&gt;&lt;/a&gt;) @Validator could take a list of @Controller classes for a more fine grained approach or @Controller could take a list of @Validator which would match the current register model (I think I like the later)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@Validate would define a method used to validate an @RequestParam, it&apos;d might be neat if it handled superset of @RequestParam and @RequestMapping arguments for a very fine grained approach, i.e. @Validate(&quot;reward&quot;, method=RequestMethod.POST).&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Another option would be to register the Validator with the @RequestParam&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Hope you dig the ideas&lt;/p&gt;</description>
            <key id="21983">SPR-4774</key>
            <summary>@Validator, @Validate</summary>
                <type id="2" iconUrl="https://jira.spring.io/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="cbeams">Chris Beams</assignee>
                                    <reporter username="dpedowitz">David Pedowitz</reporter>
                        <labels>
                            <label>pull-request-submitted</label>
                    </labels>
                <created>Fri, 2 May 2008 15:31:26 +0000</created>
                <updated>Fri, 25 May 2012 11:10:32 +0000</updated>
                            <resolved>Fri, 25 May 2012 11:10:32 +0000</resolved>
                                                                    <component>Web</component>
                        <due></due>
                            <votes>9</votes>
                                    <watches>10</watches>
                                                                <comments>
                            <comment id="38185" author="kdonald" created="Wed, 6 Aug 2008 04:51:35 +0000"  >&lt;p&gt;The most basic feature we can provide is the ability to detect that a form object like an AccountForm should be validated.  A simple way to detect would be the AccountForm has a validate method on it, or the AccountForm has constraints specified as annotations e.g. @Required or @Length.  Alternatively, a validation system could contain some mapping between an AccountForm and a set of declarative validation constraints.&lt;/p&gt;</comment>
                            <comment id="41384" author="krzychu" created="Wed, 26 Nov 2008 23:56:03 +0000"  >&lt;p&gt;I think I would be very useful to define such annotations since the annotated controllers approach lacks of Validation Processing Flow. &lt;/p&gt;</comment>
                            <comment id="41913" author="hamsterready" created="Tue, 6 Jan 2009 21:58:25 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;ve been reviewing validation options and I found springmodules annotation-based validation.&lt;br/&gt;
&lt;a href=&quot;https://springmodules.dev.java.net/docs/reference/0.9/html/validation.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://springmodules.dev.java.net/docs/reference/0.9/html/validation.html&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://wheelersoftware.com/articles/spring-bean-validation-framework.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://wheelersoftware.com/articles/spring-bean-validation-framework.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you going to reuse those concepts and add to spring validation processing flow?&lt;/p&gt;

&lt;p&gt;I&apos;ve been watching spring 3.0 presentation and there was something about declarative validation - in javadocs for 3.x I did not found anything for that.&lt;br/&gt;
&lt;a href=&quot;http://www.slideshare.net/mraible/whats-coming-in-spring-30?type=powerpoint&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.slideshare.net/mraible/whats-coming-in-spring-30?type=powerpoint&lt;/a&gt; (slide 23)&lt;/p&gt;

&lt;p&gt;Cheers,&lt;/p&gt;</comment>
                            <comment id="68241" author="scottyfred" created="Fri, 8 Jul 2011 09:24:21 +0000"  >&lt;p&gt;With the advancement of annotation-based configuration in Spring 3.0 and 3.1, it seems like one big facet of validation has been left behind. JSR-303 java bean validation support in Spring is great, but there are still times when it is better to write a custom validation class instead of using annotations on the model (even with custom annotations). I think this Jira issue has the answer to the last missing piece of the validation puzzle.&lt;/p&gt;

&lt;p&gt;Since Spring 3.0, most of the questions about how this could be implemented have been answered. All that is needed is the @Validator stereotype annotation and the code to detect and invoke any detected validators. Such a validator would look something like this (example from the Spring MVC Petclinic sample app):&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; &lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;import org.springframework.stereotype.Validator;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;import org.springframework.validation.annotation.Validate;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;@Validator(validates=Pet.class)&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;public class PetValidator {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    @Validate&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    public void checkDuplicates(Pet pet, Errors errors) {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;        if (pet.isNew() &amp;amp;&amp;amp; ownerHasExistingPetWithName(pet.getOwner(), pet.getName())) {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;            errors.rejectValue(&quot;name&quot;, &quot;duplicate&quot;, &quot;already exists&quot;);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;        }&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    }&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&amp;nbsp;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    private boolean ownerHasExistingPetWithName(Owner owner, String name) {&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;        return owner.getPet(name, true) != null;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;    }&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt; 

&lt;p&gt;As an alternative, the type to be validated could be on the @Validate annotation instead of the @Validator stereotype annotation. I&apos;ve tried it both ways, I think I like the example above better but I&apos;m interested in other opinions.&lt;/p&gt;

&lt;p&gt;When @Valid is encountered on a controller handler method parameter, any @Validator-annotated class methods that match the type of the @Valid argument would be invoked. &lt;/p&gt;

&lt;p&gt;This solves two big problems with existing class-based validation: it simplifies registration of validators (which is currently pretty painful) using component scanning, and it allows much more flexibility in how validator classes are written (multiple @Validate methods with meaningful names, @Validate method signatures take the appropriate type). &lt;/p&gt;

&lt;p&gt;I have this working and can submit a patch to the current 3.1 trunk, barring any comment on the design of the @Validator and @Validate annotations.&lt;/p&gt;</comment>
                            <comment id="75561" author="cbeams" created="Tue, 7 Feb 2012 23:12:32 +0000"  >&lt;p&gt;Pull request at &lt;a href=&quot;https://github.com/SpringSource/spring-framework/pull/30&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-framework/pull/30&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="78968" author="cbeams" created="Fri, 18 May 2012 00:53:39 +0000"  >&lt;p&gt;See comments in linked pull request where I&apos;ve asked Scott for additional details making the case for this feature in modern-day Spring, in light of JSR-303 support, etc.&lt;/p&gt;</comment>
                            <comment id="79279" author="scottyfred" created="Thu, 24 May 2012 11:35:38 +0000"  >&lt;p&gt;At Rossen&apos;s request, created two new issues to better capture the suggested improvements: &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jira.springsource.org/browse/SPR-9436&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jira.springsource.org/browse/SPR-9436&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://jira.springsource.org/browse/SPR-9437&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jira.springsource.org/browse/SPR-9437&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="79313" author="rstoya05-aop" created="Fri, 25 May 2012 11:09:49 +0000"  >&lt;p&gt;I am marking this ticket as being superseded by &lt;a href=&quot;https://jira.spring.io/browse/SPR-9436&quot; title=&quot;Improve support for registering Validator implementations in Spring MVC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9436&quot;&gt;&lt;del&gt;SPR-9436&lt;/del&gt;&lt;/a&gt; and resolving it as duplicate. Everyone interested in the topic is encouraged to comment and place a watch on &lt;a href=&quot;https://jira.spring.io/browse/SPR-9436&quot; title=&quot;Improve support for registering Validator implementations in Spring MVC&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-9436&quot;&gt;&lt;del&gt;SPR-9436&lt;/del&gt;&lt;/a&gt; instead.&lt;/p&gt;

&lt;p&gt;This issue was opened before Bean Validation was supported or even available and any current discussion should start with that in mind.&lt;/p&gt;
</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                            <outwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="10177">SPR-69</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                            <issuelinktype id="10130">
                    <name>Supersede</name>
                                                                <inwardlinks description="is superseded by">
                                        <issuelink>
            <issuekey id="43550">SPR-9436</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        4 years, 30 weeks, 6 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 6 Aug 2008 04:51:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01333:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6377</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>