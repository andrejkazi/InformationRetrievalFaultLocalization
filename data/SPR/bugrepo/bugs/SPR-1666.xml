<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 18:54:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1666/SPR-1666.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1666] Cannot wire up constructors(maybe setters?) that use typed Collection</title>
                <link>https://jira.spring.io/browse/SPR-1666</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;More details at: &lt;a href=&quot;http://forum.springframework.org/showthread.php?p=49536#post49536&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?p=49536#post49536&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Essentially I have a constructor:&lt;/p&gt;

&lt;p&gt;    public ClassFilteringLoadEventListener(final Map&amp;lt;String, Collection&amp;lt;? extends Object&amp;gt;&amp;gt; theListeners) {&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;wiring up with:&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean class=&quot;uk.ac.warwick.sbr.hibernate.ClassFilteringLoadEventListener&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;constructor-arg index=&quot;0&quot;&amp;gt;&lt;br/&gt;
      &amp;lt;map&amp;gt;&lt;br/&gt;
        &amp;lt;entry key=&quot;anything&quot;&amp;gt;&lt;br/&gt;
          &amp;lt;list&amp;gt;&lt;br/&gt;
            &amp;lt;bean class=&quot;uk.ac.warwick.sbr.hibernate.AutoWiringLoadedObjectListener&quot;/&amp;gt;&lt;br/&gt;
          &amp;lt;/list&amp;gt;&lt;br/&gt;
        &amp;lt;/entry&amp;gt;&lt;br/&gt;
      &amp;lt;/map&amp;gt;&lt;br/&gt;
    &amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;throws:&lt;/p&gt;

&lt;p&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;uk.ac.warwick.sbr.hibernate.ClassFilteringLoadEventListener&apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;uk/ac/warwick/sbr/broken-context.xml&amp;#93;&lt;/span&gt;: Instantiation of bean failed; nested exception is java.lang.IllegalStateException: BeanWrapper does not hold a bean instance&lt;br/&gt;
java.lang.IllegalStateException: BeanWrapper does not hold a bean instance&lt;br/&gt;
	at org.springframework.util.Assert.state(Assert.java:341)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.getPropertyDescriptorInternal(BeanWrapperImpl.java:274)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.getPropertyType(BeanWrapperImpl.java:323)&lt;br/&gt;
	at org.springframework.beans.PropertyEditorRegistrySupport.findCustomEditor(PropertyEditorRegistrySupport.java:233)&lt;br/&gt;
	at org.springframework.beans.PropertyTypeConverter.doTypeConversionIfNecessary(PropertyTypeConverter.java:100)&lt;br/&gt;
	at org.springframework.beans.PropertyTypeConverter.doTypeConversionIfNecessary(PropertyTypeConverter.java:73)&lt;br/&gt;
	at org.springframework.beans.PropertyTypeConverter.convertToTypedMap(PropertyTypeConverter.java:277)&lt;br/&gt;
	at org.springframework.beans.PropertyTypeConverter.doTypeConversionIfNecessary(PropertyTypeConverter.java:131)&lt;br/&gt;
	at org.springframework.beans.BeanWrapperImpl.doTypeConversionIfNecessary(BeanWrapperImpl.java:853)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doTypeConversionIfNecessary(AbstractBeanFactory.java:672)&lt;br/&gt;
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:370)&lt;br/&gt;
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:126)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:542)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:368)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:238)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:148)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:253)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:331)&lt;br/&gt;
	at uk.ac.warwick.sbr.TheTest.testItFails(TheTest.java:14)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Unknown Source)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;/p&gt;


</description>
            <key id="13270">SPR-1666</key>
            <summary>Cannot wire up constructors(maybe setters?) that use typed Collection</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="yatesco">Colin Yates</reporter>
                        <labels>
                    </labels>
                <created>Fri, 3 Feb 2006 03:22:42 +0000</created>
                <updated>Tue, 19 Jun 2012 03:53:58 +0000</updated>
                            <resolved>Sun, 12 Feb 2006 06:23:38 +0000</resolved>
                                    <version>2.0 M2</version>
                                    <fixVersion>2.0 M3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="16309" author="yatesco" created="Fri, 3 Feb 2006 03:23:45 +0000"  >&lt;p&gt;Forgot to say; changing the constructor to:&lt;/p&gt;

&lt;p&gt;    public ClassFilteringLoadEventListenerThatWorks(final Map theListeners) {&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;(NOTE: no generics) &lt;/p&gt;

&lt;p&gt;works.&lt;/p&gt;</comment>
                            <comment id="16321" author="mkelc" created="Sun, 5 Feb 2006 23:29:07 +0000"  >&lt;p&gt;Hi! We have a very similar error with Map&amp;lt;String,?&amp;gt; as constructor argument. &lt;/p&gt;

&lt;p&gt;Further investigation of this error leads to the following explanation:&lt;/p&gt;

&lt;p&gt;Assume a map with bound key und unbound Value (Map&amp;lt;String,?&amp;gt;) as constructor argument,&lt;br/&gt;
constructed with map-Tag. The map has a key &quot;xyz&quot;.&lt;/p&gt;

&lt;p&gt;The observed error results from:&lt;/p&gt;

&lt;p&gt;src\org\springframework\beans\PropertyTypeConverter.java&lt;br/&gt;
   Method convertToTypedMap (Line 277)&lt;/p&gt;

&lt;p&gt;calls doTypeConversionIfNecessary of the same class. This calls&lt;br/&gt;
PropertyEditorRegistrySupport.findCustomEditor with arguments null and &lt;br/&gt;
String the string &quot;null&lt;span class=&quot;error&quot;&gt;&amp;#91;xyz&amp;#93;&lt;/span&gt;&quot;.&lt;/p&gt;

&lt;p&gt;This calls getPropertyType(String) on org\springframework\beans\BeanWrapperImpl.java&lt;br/&gt;
which in turn expects the object field to be not null at this stage.&lt;/p&gt;

&lt;p&gt;The &quot;object&quot; field is null on BeanWrapperImpl (as PropertyEditorRegistrySupport)&lt;br/&gt;
at this time.&lt;/p&gt;

&lt;p&gt;Suggestion: Change getPropertyType with prepending this lines:&lt;/p&gt;

&lt;p&gt;if (object==null) &lt;/p&gt;
{
   return null;
}

We solved it with the following patch:
=======cut here=======
--- org/springframework/beans/BeanWrapperImpl.java	(revision 2)
+++ org/springframework/beans/BeanWrapperImpl.java	(working copy)
@@ -319,7 +319,12 @@
 	}

&lt;p&gt; 	public Class getPropertyType(String propertyName) throws BeansException {&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;try {&lt;br/&gt;
+&lt;br/&gt;
+        if (object==null) 
{
+            return null;
+        }
&lt;p&gt;+        &lt;br/&gt;
+        try {&lt;br/&gt;
 			PropertyDescriptor pd = getPropertyDescriptorInternal(propertyName);&lt;br/&gt;
 			if (pd != null) {&lt;br/&gt;
 				return pd.getPropertyType();&lt;br/&gt;
=======cut here=======&lt;br/&gt;
Dont know if this solution is the best - but it works for now.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                            <comment id="16322" author="yatesco" created="Sun, 5 Feb 2006 23:32:44 +0000"  >&lt;p&gt;Forgot to attach unit test, apologies.&lt;/p&gt;</comment>
                            <comment id="16407" author="juergen.hoeller" created="Sun, 12 Feb 2006 06:23:38 +0000"  >&lt;p&gt;Thanks for the report!&lt;/p&gt;

&lt;p&gt;The actual problem is in &quot;convertToTypedMap&quot; and its siblings: An indexed/keyed property path gets built there, which leads to a meaningless &quot;null&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&quot; path in case of a constructor argument. This in turn fools the PropertyEditor lookup to believe that it should check for a bean property.&lt;/p&gt;

&lt;p&gt;Anyway, this is fixed for 2.0 M3, and should be available in tomorrow&apos;s nightly snapshot.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="11450" name="sbrm2.zip" size="3538520" author="yatesco" created="Sun, 5 Feb 2006 23:32:44 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 46 weeks, 4 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 5 Feb 2006 23:29:07 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04vqf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28515</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>