<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:10:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-2947/SPR-2947.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-2947] Spring AOP Won&apos;t Load @AspectJ Aspects with Load-Time Weaving</title>
                <link>https://jira.spring.io/browse/SPR-2947</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;If you turn on AspectJ load-time weaving then Spring AOP no longer will accept @AspectJ aspects. The issue is that in AbstractAspectJAdvisorFactory it looks for methods starting with AJC_MAGIC (ajc$) but the AspectJ LTW system creates a method like this ajc$postClinit even if the aspect isn&apos;t registered for AspectJ load-time weaving (it completes annotation-defined aspects even if they aren&apos;t registered for weaving).&lt;/p&gt;

&lt;p&gt;Work-around - exclude the Spring AOP aspect from AspectJ load-time weaving, e.g.,&lt;br/&gt;
        &amp;lt;exclude within=&quot;org.springframework.samples.jpetstore.aspects.SqlMapMonitor&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;Note that the AspectJ load-time weaving system just tests for the presence of the org.aspectj.lang.annotation.Aspect annotation on the type. Why can&apos;t the advisor factory just do that? Indeed, why not just allow registration of code-style aspects that were compiled with -target 1.5 or later so that they can also be used with Spring AOP? If you don&apos;t want to apply all aspects, then don&apos;t auto-proxy? It&apos;s also interesting to consider the bigger issue of how Spring AOP should integrate with load-time weaving.&lt;/p&gt;</description>
            <key id="15694">SPR-2947</key>
            <summary>Spring AOP Won&apos;t Load @AspectJ Aspects with Load-Time Weaving</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="juergen.hoeller">Juergen Hoeller</assignee>
                                    <reporter username="rbodkin">Ron Bodkin</reporter>
                        <labels>
                    </labels>
                <created>Wed, 13 Dec 2006 06:05:27 +0000</created>
                <updated>Tue, 19 Jun 2012 03:51:08 +0000</updated>
                            <resolved>Wed, 31 Jan 2007 10:38:49 +0000</resolved>
                                    <version>2.0.1</version>
                                    <fixVersion>2.0.3</fixVersion>
                                    <component>Core:AOP</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="21979" author="juergen.hoeller" created="Wed, 31 Jan 2007 10:38:49 +0000"  >&lt;p&gt;I&apos;ve fixed this through a @Aspect presence check, as you suggested. This seems to work fine in all cases.&lt;/p&gt;

&lt;p&gt;As for general AspectJ LTW support: This is planned for Spring 2.1, including the option to activate AspectJ LTW from within Spring configuration (leveraging Spring&apos;s LoadTimeWeaver abstraction).&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        9 years, 48 weeks, 1 day ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 31 Jan 2007 10:38:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00v1r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5075</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>