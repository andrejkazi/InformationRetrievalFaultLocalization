<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 20:16:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SPR-1709/SPR-1709.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SPR-1709] ManagedProperties deserialization problem on WebLogic 8.1</title>
                <link>https://jira.spring.io/browse/SPR-1709</link>
                <project id="10000" key="SPR">Spring Framework</project>
                    <description>&lt;p&gt;&lt;a href=&quot;http://static.springframework.org/spring/docs/2.0-m2/api/org/springframework/beans/factory/support/ManagedProperties.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/spring/docs/2.0-m2/api/org/springframework/beans/factory/support/ManagedProperties.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Indicates that ManagedProperties class is inherited from jdk 1.5 class hierarchy.&lt;/p&gt;

&lt;p&gt;It is used in DefaultXmlBeanDefinitionParser.&lt;/p&gt;

&lt;p&gt;This is preventing my upgrade to m2. m1 works fine and does not have offending class.&lt;/p&gt;

&lt;p&gt;At runtime n JDK 1.4  I get following error:&lt;/p&gt;

&lt;p&gt;Caused by: java.lang.ClassNotFoundException: org.springframework.beans.factory.s&lt;br/&gt;
upport.ManagedProperties:  This error could indicate that a component was deploy&lt;br/&gt;
ed on a  cluster member but not other members of that cluster. Make sure that an&lt;br/&gt;
y component deployed on a server that is part of a cluster is also deployed on a&lt;br/&gt;
ll other members of that cluster&lt;br/&gt;
        at weblogic.j2ee.ApplicationManager.loadClass(ApplicationManager.java:34&lt;br/&gt;
4)&lt;br/&gt;
        at weblogic.j2ee.ApplicationManager.loadClass(ApplicationManager.java:25&lt;br/&gt;
8)&lt;br/&gt;
        at weblogic.j2ee.ApplicationManager.loadClass(ApplicationManager.java:25&lt;br/&gt;
3)&lt;br/&gt;
        at weblogic.rjvm.MsgAbbrevInputStream.resolveClass(MsgAbbrevInputStream.&lt;br/&gt;
java:324)&lt;br/&gt;
        at weblogic.common.internal.ChunkedObjectInputStream$NestedObjectInputSt&lt;br/&gt;
ream.resolveClass(ChunkedObjectInputStream.java:316)&lt;br/&gt;
        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:151&lt;br/&gt;
3)&lt;br/&gt;
        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1435)&lt;br/&gt;
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1&lt;br/&gt;
626)&lt;/p&gt;
</description>
            <key id="13365">SPR-1709</key>
            <summary>ManagedProperties deserialization problem on WebLogic 8.1</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="robh">Rob Harrop</assignee>
                                    <reporter username="garpinc">Keith Garry Boyce</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Feb 2006 11:02:54 +0000</created>
                <updated>Tue, 19 Jun 2012 03:54:05 +0000</updated>
                            <resolved>Fri, 10 Mar 2006 20:47:12 +0000</resolved>
                                    <version>2.0 M2</version>
                                    <fixVersion>2.0 M4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="16472" author="juergen.hoeller" created="Thu, 16 Feb 2006 18:52:42 +0000"  >&lt;p&gt;Can you please double-check that this isn&apos;t a class loader problem on your side? Are &lt;em&gt;all&lt;/em&gt; your Spring jars up to date?&lt;br/&gt;
What you seem to get there is a plain ClassNotFoundException, indicating that the entire ManagedProperties.class file is not available.&lt;/p&gt;

&lt;p&gt;It doesn&apos;t really matter that the javadoc shows generics there. This just means that the javadoc has been created on JDK 1.5&lt;br/&gt;
We do run our test suite on JDK 1.4 and 1.3 as well, so we would have caught a compatibility problem with a 99% chance...&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16509" author="garpinc" created="Mon, 20 Feb 2006 03:38:55 +0000"  >
&lt;p&gt;The class is there in the jar. I&apos;m suspecting that the parent class is not there because it&apos;s expected to be the generic class in jdk 1.5.&lt;/p&gt;

&lt;p&gt;I don&apos;t know what to tell you... I swap out m1 and it works. Swap in m2 and it doesn&apos;t work. What would I be looking for on my side? I&apos;ve migrated this app all the way from 1.2.4 to all the versions to m2 and this is a first. &lt;/p&gt;</comment>
                            <comment id="16512" author="juergen.hoeller" created="Mon, 20 Feb 2006 05:59:26 +0000"  >&lt;p&gt;I can guarantee you that the class does work on JDK 1.4 and 1.3, since we explicitly run the test suite on those JDKs - also covering the ManagedProperties class.&lt;br/&gt;
All we do is derive from java.util.Properties; it does not matter that we compile this on JDK 1.5. What you saw there is simply the javadoc generated on JDK 1.5.&lt;/p&gt;

&lt;p&gt;Actually, the above looks like a deserialization problem. Are you &lt;em&gt;absolutely&lt;/em&gt; sure that the ManagedProperties class is available at the deserializer&apos;s end?&lt;br/&gt;
Swapping to M1 will simply work because there was no ManagedProperties class in M1, so the serializer is not gonna send any such object when running on M1.&lt;/p&gt;

&lt;p&gt;Hence, I still think that you have a 2.0 M1 jar around in your system - on the deserialization end, according to the stacktrace.&lt;br/&gt;
Please double- and triple-check that there is no M1 spring.jar around in all parts of your system that are involved here.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16526" author="garpinc" created="Tue, 21 Feb 2006 08:16:50 +0000"  >&lt;p&gt;I have doubled checked and triple checked, removed all the weblogic cache, did a find for spring jars and except for springmodules-validator-0.2.jar there are no other spring jars.&lt;/p&gt;

&lt;p&gt;I don&apos;t know what to do next. As I said simply reverting to m1 works.&lt;/p&gt;

&lt;p&gt;Full Exception goes like:&lt;br/&gt;
2006-02-21 16:48:46,239 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt;  org.springframework.web.servlet.Dispatcher&lt;br/&gt;
Servlet - Context initialization failed&lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean wit&lt;br/&gt;
h name &apos;registrationController&apos; defined in class path resource [spring/dispatche&lt;br/&gt;
rServletContext.xml]: Cannot resolve reference to bean &apos;registrationService&apos; whi&lt;br/&gt;
le setting bean property &apos;registrationService&apos;; nested exception is org.springfr&lt;br/&gt;
amework.beans.factory.BeanCreationException: Error creating bean with name &apos;regi&lt;br/&gt;
strationService&apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;spring/applicationContext.xml&amp;#93;&lt;/span&gt;:&lt;br/&gt;
 Invocation of init method failed; nested exception is javax.naming.Communicatio&lt;br/&gt;
nException: null&lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean wit&lt;br/&gt;
h name &apos;registrationService&apos; defined in class path resource [spring/applicationC&lt;br/&gt;
ontext.xml]: Invocation of init method failed; nested exception is javax.naming.&lt;br/&gt;
CommunicationException: null&lt;br/&gt;
javax.naming.CommunicationException [Root exception is java.rmi.UnmarshalExcepti&lt;br/&gt;
on: error unmarshalling arguments; nested exception is:&lt;br/&gt;
        java.lang.ClassNotFoundException: org.springframework.beans.factory.supp&lt;br/&gt;
ort.ManagedProperties:  This error could indicate that a component was deployed&lt;br/&gt;
on a  cluster member but not other members of that cluster. Make sure that any c&lt;br/&gt;
omponent deployed on a server that is part of a cluster is also deployed on all&lt;br/&gt;
other members of that cluster]&lt;br/&gt;
        at weblogic.jndi.internal.ExceptionTranslator.toNamingException(Exceptio&lt;br/&gt;
nTranslator.java:83)&lt;br/&gt;
        at weblogic.jndi.internal.WLContextImpl.translateException(WLContextImpl&lt;br/&gt;
.java:416)&lt;br/&gt;
        at weblogic.jndi.internal.WLContextImpl.lookup(WLContextImpl.java:372)&lt;br/&gt;
        at weblogic.jndi.internal.WLContextImpl.lookup(WLContextImpl.java:357)&lt;br/&gt;
        at javax.naming.InitialContext.lookup(InitialContext.java:347)&lt;br/&gt;
        at org.springframework.jndi.JndiTemplate$1.doInContext(JndiTemplate.java&lt;br/&gt;
:123)&lt;br/&gt;
        at org.springframework.jndi.JndiTemplate.execute(JndiTemplate.java:85)&lt;br/&gt;
        at org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:121)&lt;br/&gt;
        at org.springframework.jndi.JndiTemplate.lookup(JndiTemplate.java:146)&lt;br/&gt;
        at org.springframework.jndi.JndiLocatorSupport.lookup(JndiLocatorSupport&lt;br/&gt;
.java:86)&lt;br/&gt;
        at org.springframework.jndi.JndiObjectLocator.lookup(JndiObjectLocator.j&lt;br/&gt;
ava:104)&lt;br/&gt;
        at org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor.l&lt;br/&gt;
ookup(AbstractRemoteSlsbInvokerInterceptor.java:93)&lt;br/&gt;
        at org.springframework.ejb.access.AbstractSlsbInvokerInterceptor.refresh&lt;br/&gt;
Home(AbstractSlsbInvokerInterceptor.java:102)&lt;br/&gt;
        at org.springframework.ejb.access.AbstractSlsbInvokerInterceptor.afterPr&lt;br/&gt;
opertiesSet(AbstractSlsbInvokerInterceptor.java:90)&lt;br/&gt;
        at org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFacto&lt;br/&gt;
ryBean.afterPropertiesSet(SimpleRemoteStatelessSessionProxyFactoryBean.java:95)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean&lt;br/&gt;
Factory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:860)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean&lt;br/&gt;
Factory.initializeBean(AbstractAutowireCapableBeanFactory.java:829)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean&lt;br/&gt;
Factory.createBean(AbstractAutowireCapableBeanFactory.java:409)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean&lt;br/&gt;
(AbstractBeanFactory.java:238)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean&lt;br/&gt;
(AbstractBeanFactory.java:212)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean&lt;br/&gt;
(AbstractBeanFactory.java:148)&lt;br/&gt;
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver&lt;br/&gt;
.resolveReference(BeanDefinitionValueResolver.java:186)&lt;br/&gt;
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver&lt;br/&gt;
.resolveValueIfNecessary(BeanDefinitionValueResolver.java:106)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean&lt;br/&gt;
Factory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:764)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean&lt;br/&gt;
Factory.populateBean(AbstractAutowireCapableBeanFactory.java:575)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractAutowireCapableBean&lt;br/&gt;
Factory.createBean(AbstractAutowireCapableBeanFactory.java:405)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean&lt;br/&gt;
(AbstractBeanFactory.java:238)&lt;br/&gt;
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean&lt;br/&gt;
(AbstractBeanFactory.java:148)&lt;br/&gt;
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.&lt;br/&gt;
preInstantiateSingletons(DefaultListableBeanFactory.java:253)&lt;br/&gt;
        at org.springframework.context.support.AbstractApplicationContext.refres&lt;br/&gt;
h(AbstractApplicationContext.java:331)&lt;br/&gt;
        at org.springframework.web.context.support.AbstractRefreshableWebApplica&lt;br/&gt;
tionContext.refresh(AbstractRefreshableWebApplicationContext.java:155)&lt;br/&gt;
        at org.springframework.web.servlet.FrameworkServlet.createWebApplication&lt;br/&gt;
Context(FrameworkServlet.java:308)&lt;br/&gt;
        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationCo&lt;br/&gt;
ntext(FrameworkServlet.java:252)&lt;br/&gt;
        at org.springframework.web.servlet.FrameworkServlet.initServletBean(Fram&lt;br/&gt;
eworkServlet.java:221)&lt;br/&gt;
        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.&lt;br/&gt;
java:112)&lt;br/&gt;
        at javax.servlet.GenericServlet.init(GenericServlet.java:258)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl$ServletInitAction.run(Servl&lt;br/&gt;
etStubImpl.java:1018)&lt;br/&gt;
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(Authenticate&lt;br/&gt;
dSubject.java:321)&lt;br/&gt;
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:&lt;br/&gt;
118)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl.createServlet(ServletStubIm&lt;br/&gt;
pl.java:894)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl.createInstances(ServletStub&lt;br/&gt;
Impl.java:873)&lt;br/&gt;
        at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubI&lt;br/&gt;
mpl.java:812)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadServlet(WebAppS&lt;br/&gt;
ervletContext.java:3281)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadServlets(WebApp&lt;br/&gt;
ServletContext.java:3226)&lt;br/&gt;
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAp&lt;br/&gt;
pServletContext.java:3207)&lt;br/&gt;
        at weblogic.servlet.internal.HttpServer.preloadResources(HttpServer.java&lt;br/&gt;
:694)&lt;br/&gt;
        at weblogic.servlet.internal.WebService.preloadResources(WebService.java&lt;br/&gt;
:483)&lt;br/&gt;
        at weblogic.servlet.internal.ServletInitService.resume(ServletInitServic&lt;br/&gt;
e.java:30)&lt;br/&gt;
        at weblogic.t3.srvr.SubsystemManager.resume(SubsystemManager.java:131)&lt;br/&gt;
        at weblogic.t3.srvr.T3Srvr.resume(T3Srvr.java:966)&lt;br/&gt;
        at weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:361)&lt;br/&gt;
        at weblogic.Server.main(Server.java:32)&lt;/p&gt;

&lt;p&gt;Caused by: java.rmi.UnmarshalException: error unmarshalling arguments; nested ex&lt;br/&gt;
ception is:&lt;br/&gt;
        java.lang.ClassNotFoundException: org.springframework.beans.factory.supp&lt;br/&gt;
ort.ManagedProperties:  This error could indicate that a component was deployed&lt;br/&gt;
on a  cluster member but not other members of that cluster. Make sure that any c&lt;br/&gt;
omponent deployed on a server that is part of a cluster is also deployed on all&lt;br/&gt;
other members of that cluster&lt;br/&gt;
        at weblogic.rjvm.BasicOutboundRequest.sendReceive(BasicOutboundRequest.j&lt;br/&gt;
ava:108)&lt;br/&gt;
        at weblogic.rmi.cluster.ReplicaAwareRemoteRef.invoke(ReplicaAwareRemoteR&lt;br/&gt;
ef.java:284)&lt;br/&gt;
        at weblogic.rmi.cluster.ReplicaAwareRemoteRef.invoke(ReplicaAwareRemoteR&lt;br/&gt;
ef.java:244)&lt;br/&gt;
        at weblogic.jndi.internal.ServerNamingNode_813_WLStub.lookup(Unknown Sou&lt;br/&gt;
rce)&lt;br/&gt;
        at weblogic.jndi.internal.WLContextImpl.lookup(WLContextImpl.java:369)&lt;br/&gt;
        ... 49 more&lt;br/&gt;
Caused by: java.lang.ClassNotFoundException: org.springframework.beans.factory.s&lt;br/&gt;
upport.ManagedProperties:  This error could indicate that a component was deploy&lt;br/&gt;
ed on a  cluster member but not other members of that cluster. Make sure that an&lt;br/&gt;
y component deployed on a server that is part of a cluster is also deployed on a&lt;br/&gt;
ll other members of that cluster&lt;br/&gt;
        at weblogic.j2ee.ApplicationManager.loadClass(ApplicationManager.java:34&lt;br/&gt;
4)&lt;br/&gt;
        at weblogic.j2ee.ApplicationManager.loadClass(ApplicationManager.java:25&lt;br/&gt;
8)&lt;br/&gt;
        at weblogic.j2ee.ApplicationManager.loadClass(ApplicationManager.java:25&lt;br/&gt;
3)&lt;br/&gt;
        at weblogic.rjvm.MsgAbbrevInputStream.resolveClass(MsgAbbrevInputStream.&lt;br/&gt;
java:324)&lt;br/&gt;
        at weblogic.common.internal.ChunkedObjectInputStream$NestedObjectInputSt&lt;br/&gt;
ream.resolveClass(ChunkedObjectInputStream.java:316)&lt;br/&gt;
        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:151&lt;br/&gt;
3)&lt;br/&gt;
        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1435)&lt;br/&gt;
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1&lt;br/&gt;
626)&lt;br/&gt;
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1274)&lt;br/&gt;
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:324)&lt;br/&gt;
        at weblogic.common.internal.ChunkedObjectInputStream.readObject(ChunkedO&lt;br/&gt;
bjectInputStream.java:120)&lt;br/&gt;
        at weblogic.rjvm.MsgAbbrevInputStream.readObject(MsgAbbrevInputStream.ja&lt;br/&gt;
va:117)&lt;br/&gt;
        at weblogic.jndi.internal.RootNamingNode_WLSkel.invoke(Unknown Source)&lt;br/&gt;
        at weblogic.rmi.internal.BasicServerRef.invoke(BasicServerRef.java:477)&lt;br/&gt;
        at weblogic.rmi.cluster.ReplicaAwareServerRef.invoke(ReplicaAwareServerR&lt;br/&gt;
ef.java:108)&lt;br/&gt;
        at weblogic.rmi.internal.BasicServerRef$1.run(BasicServerRef.java:420)&lt;br/&gt;
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(Authenticate&lt;br/&gt;
dSubject.java:363)&lt;br/&gt;
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:&lt;br/&gt;
144)&lt;br/&gt;
        at weblogic.rmi.internal.BasicServerRef.handleRequest(BasicServerRef.jav&lt;br/&gt;
a:415)&lt;br/&gt;
        at weblogic.rmi.internal.BasicExecuteRequest.execute(BasicExecuteRequest&lt;br/&gt;
.java:30)&lt;br/&gt;
        at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:219)&lt;br/&gt;
        at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:178)&lt;/p&gt;</comment>
                            <comment id="16528" author="garpinc" created="Tue, 21 Feb 2006 10:17:06 +0000"  >&lt;p&gt;Maybe it&apos;s not related to ManagedProperties. The bean that fails to load is a remote EJB. Maybe something in SimpleRemoteStatelessSessionProxyFactoryBean broke in m2.&lt;/p&gt;

&lt;p&gt;Bean def is below....&lt;/p&gt;


&lt;p&gt;&amp;lt;bean id=&quot;registrationService&quot; &lt;br/&gt;
    class=&quot;org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean&quot; lazy-init=&quot;true&quot;&amp;gt; &lt;br/&gt;
  &amp;lt;property name=&quot;jndiEnvironment&quot;&amp;gt; &lt;br/&gt;
    &amp;lt;props&amp;gt; &lt;br/&gt;
      &amp;lt;prop key=&quot;java.naming.factory.initial&quot;&amp;gt; &lt;br/&gt;
        weblogic.jndi.WLInitialContextFactory &lt;br/&gt;
      &amp;lt;/prop&amp;gt; &lt;br/&gt;
      &amp;lt;prop key=&quot;java.naming.provider.url&quot;&amp;gt;$&lt;/p&gt;
{regEJBURL}
&lt;p&gt;&amp;lt;/prop&amp;gt; &lt;br/&gt;
    &amp;lt;/props&amp;gt;    &lt;br/&gt;
  &amp;lt;/property&amp;gt; &lt;br/&gt;
  &amp;lt;property name=&quot;jndiName&quot;&amp;gt; &lt;br/&gt;
    &amp;lt;value&amp;gt;ejb.PortalInterface&amp;lt;/value&amp;gt; &lt;br/&gt;
  &amp;lt;/property&amp;gt; &lt;br/&gt;
  &amp;lt;property name=&quot;businessInterface&quot;&amp;gt; &lt;br/&gt;
    &amp;lt;value&amp;gt;ejb.portalinterface.ProviderPortalInterface&amp;lt;/value&amp;gt; &lt;br/&gt;
  &amp;lt;/property&amp;gt; &lt;br/&gt;
&amp;lt;/bean&amp;gt; &lt;/p&gt;

</comment>
                            <comment id="16531" author="juergen.hoeller" created="Tue, 21 Feb 2006 19:10:40 +0000"  >&lt;p&gt;Actually, since you&apos;re using placeholders there for your JNDI environment, this might be related to the other report about placeholders not getting resolved on M2.&lt;/p&gt;

&lt;p&gt;Rob, can you please have a look at both issues?&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16563" author="juergen.hoeller" created="Wed, 22 Feb 2006 20:35:29 +0000"  >&lt;p&gt;It doesn&apos;t look like this is related to the placeholder issue, since there is no parent/child bean definition merging going on here. So there has to be some other root cause here.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16641" author="juergen.hoeller" created="Fri, 3 Mar 2006 07:28:04 +0000"  >&lt;p&gt;Actually, I still believe that this is caused by old Spring jars somewhere in the classpath. I can&apos;t imagine any other root cause. You should try to reproduce this on a clean WLS install and see whether the problem still arises there.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                            <comment id="16718" author="garpinc" created="Wed, 8 Mar 2006 04:49:16 +0000"  >&lt;p&gt;This also is happening for m3. Just to confirm. It&apos;s happening when the actual EJB call is made not at app startup time. We are lazy loading EJB so it could be on initialization.&lt;/p&gt;</comment>
                            <comment id="16719" author="garpinc" created="Wed, 8 Mar 2006 06:22:11 +0000"  >&lt;p&gt;FYI.... In JndiTemplate line 124 I look in ctx which is initial context. In there I see a myProps set to ManagedProperties. I think there is an issue here with the Weblogic Initial Context implementation WLContextImpl runs in different classloader than application with spring jar. So I think before populating myProps in initialcontext it should be a normal Properties class not a ManagedProperties class. What do you think?&lt;/p&gt;

&lt;p&gt;ctx= InitialContext  (id=9004)&lt;br/&gt;
	defaultInitCtx= WLContextImpl  (id=9031)&lt;br/&gt;
	gotDefault= true&lt;br/&gt;
	myProps= ManagedProperties  (id=9032)&lt;/p&gt;</comment>
                            <comment id="16723" author="garpinc" created="Thu, 9 Mar 2006 02:23:26 +0000"  >&lt;p&gt;I have confirmed...&lt;/p&gt;

&lt;p&gt;Using the below code to replace ManagedProperties with plain Properties allows me to upgrade to M3. This bring to light all kinds of questions about problems caused by this all over the framework. Basically with new ManagedProperties and ManagedMaps etc any of the objects instantiated have spring classes within them where before they used to be pure. Why was this introduced. Doesn&apos;t seem right that we can no longer create a pure object.&lt;/p&gt;

&lt;p&gt;--------------------------------------------------------------------------------------------&lt;/p&gt;

&lt;p&gt;package org.springframework.ejb.access;&lt;/p&gt;

&lt;p&gt;import java.util.Iterator;&lt;br/&gt;
import java.util.Map;&lt;br/&gt;
import java.util.Properties;&lt;/p&gt;

&lt;p&gt;import javax.naming.NamingException;&lt;/p&gt;

&lt;p&gt;public class SimpleRemoteStatelessSessionProxyFactoryBean2 extends&lt;br/&gt;
		SimpleRemoteStatelessSessionProxyFactoryBean {&lt;/p&gt;

&lt;p&gt;	public void afterPropertiesSet() throws NamingException {&lt;br/&gt;
		Properties properties = new Properties();&lt;/p&gt;

&lt;p&gt;		for (Iterator iter = getJndiEnvironment().entrySet().iterator(); iter.hasNext()&lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;
{
		  Map.Entry property = (Map.Entry) iter.next();

		  properties.setProperty((String) property.getKey(),(String) property.getValue());
		}
&lt;p&gt;		setJndiEnvironment(properties);&lt;br/&gt;
		super.afterPropertiesSet();&lt;/p&gt;

&lt;p&gt;	}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;</comment>
                            <comment id="16751" author="robh" created="Fri, 10 Mar 2006 03:45:34 +0000"  >&lt;p&gt;Keith,&lt;/p&gt;

&lt;p&gt;This should now be fixed. ManagedMap, List and Set have been around for sometime, but ManagedProperties is quite new and was missing the required conversion during construction. The Managed* classes are never meant to exist outside the internal metadata set.&lt;/p&gt;

&lt;p&gt;Rob&lt;/p&gt;</comment>
                            <comment id="16764" author="juergen.hoeller" created="Fri, 10 Mar 2006 20:47:12 +0000"  >&lt;p&gt;Considered as fixed for the time being. To be reopened if the fix is verified to be incomplete.&lt;/p&gt;

&lt;p&gt;Juergen&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_10180" key="com.atlassian.jira.toolkit:dayslastcommented">
                        <customfieldname>Days since last comment</customfieldname>
                        <customfieldvalues>
                                        10 years, 42 weeks, 5 days ago
    
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 16 Feb 2006 18:52:42 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10181" key="com.atlassian.jira.toolkit:lastusercommented">
                        <customfieldname>Last commented by a User</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>false</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04vk7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28487</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>