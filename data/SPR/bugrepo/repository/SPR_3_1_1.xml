<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="SPR">
	<bug id="9206" opendate="2012-03-06 06:33:12" fixdate="2012-03-08 09:11:31" resolution="Duplicate">
		<buginformation>
			<summary>Add ClasspathScanningJaxb2Marshaller for spring OXM</summary>
			<description>Having to define every annotated class with 
&amp;lt;oxm:class-to-be-bound 
is tedious.  Would it be possible to add something like the following as part of the framework?
http://springinpractice.com/2011/12/29/its-back-the-classpathscanningjaxb2marshaller/
http://www.walgemoed.org/2010/12/jaxb2-spring-ws/</description>
			<version>3.1.1</version>
			<fixedVersion></fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.http.client.HttpComponentsClientHttpResponse.java</file>
			<file type="M">org.springframework.http.client.SimpleClientHttpResponse.java</file>
			<file type="M">org.springframework.http.client.BufferingClientHttpResponseWrapper.java</file>
			<file type="M">org.springframework.http.client.InterceptingClientHttpRequestFactoryTests.java</file>
			<file type="M">org.springframework.http.client.ClientHttpResponse.java</file>
			<file type="M">org.springframework.http.client.CommonsClientHttpResponse.java</file>
			<file type="M">org.springframework.http.HttpStatusTests.java</file>
			<file type="M">org.springframework.http.HttpStatus.java</file>
			<file type="M">org.springframework.oxm.jaxb.Jaxb2MarshallerTests.java</file>
			<file type="M">org.springframework.oxm.jaxb.Jaxb2Marshaller.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">8986</link>
		</links>
	</bug>
	<bug id="9479" opendate="2012-06-06 21:14:01" fixdate="2012-06-09 18:12:34" resolution="Duplicate">
		<buginformation>
			<summary>Missing @Configuration annotation will cause transaction not working</summary>
			<description>The Spring reference didn&amp;amp;apos;t mention that I MUST use @Configuration for the configuration class being imported. And I found that the bean could be created normally most of the time.
The case I found that if @Configuration is missing, transaction is not behave normally in some cases.
I have setup a simple program to illustrate this. Please refer to "readme.txt" for the running procedures. From the log, I have checked that the transaction commit command has been issued, but the end result is the value is not committed.
In the example, I have already used SingleConnectionDataSource, to avoid multiple database connection issue.
I have also tried to move the @EnableTransactionManagement and transactionManager() to other Spring Java Config class (no matter with/without @Configuration), but the problem still occurs.</description>
			<version>3.1.1</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.test.context.junit4.profile.importresource.DefaultProfileAnnotationConfigTests.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">9051</link>
		</links>
	</bug>
</bugrepository>