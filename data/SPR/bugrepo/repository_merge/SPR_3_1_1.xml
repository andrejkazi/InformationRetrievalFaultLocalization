<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="SPR">
	<bug id="2" master="8986" duplicate="9206" opendate="2012-01-03 14:53:36" fixdate="2012-03-08 09:11:31" resolution="Fixed">
		<buginformation>
			<summary>Add the ability to Scan Packages for JAXB Marshalling (java example provided) Add ClasspathScanningJaxb2Marshaller for spring OXM</summary>
			<description>Hi,
In our application we have a rapidly growing number of JAXB2 annotated classes. It is a right pain to add these classes manually to the "classesToBeBound" property in the Jaxb2Marshaller. Given that other components (I&amp;amp;apos;m looking at you Hibernate : AnnotationSessionFactoryBean) have the ability to automatically add classes from packages that match annotations, why not then for the Jaxb2Marshaller (having to key in the classes manually is so old skool).
I&amp;amp;apos;ve extended Jaxb2Marshaller (file attached) that scans on the classpath for appropriately annotated classes. Please do review and I hope that this can be incorporated into the next release. I&amp;amp;apos;m happy to make changes to the codebase if required to bring it up to Spring coding standards.
It&amp;amp;apos;s a pity that afterPropertiesSet is marked as Final in Jaxb2Marshaller since I can&amp;amp;apos;t override that method to set up the setClassesToBeBound before then calling the super afterPropertiesSet. Currently as the code stands, I have to provide a dummy setClassesToBeBound and setLazyInit to be true. This dummy is then replaced by overriding the getJaxbContext. I think this needs rewriting.
An example of use:






&amp;lt;bean id="marshaller" class="foo.bar.AnnotationJaxb2Marshaller"&amp;gt;




    &amp;lt;property name="lazyInit" value="true" /&amp;gt;




    &amp;lt;property name="classesToBeBound"&amp;gt;




       &amp;lt;list&amp;gt;




           &amp;lt;value&amp;gt;foo.bar.Class&amp;lt;/value&amp;gt;




       &amp;lt;/list&amp;gt;




    &amp;lt;/property&amp;gt;




    &amp;lt;property name="packagesToScan"&amp;gt;




        &amp;lt;list&amp;gt;




            &amp;lt;value&amp;gt;foo.bar.jaxb.model&amp;lt;/value&amp;gt;




        &amp;lt;/list&amp;gt;




    &amp;lt;/property&amp;gt;




&amp;lt;/bean&amp;gt;






=david= Having to define every annotated class with 
&amp;lt;oxm:class-to-be-bound 
is tedious.  Would it be possible to add something like the following as part of the framework?
http://springinpractice.com/2011/12/29/its-back-the-classpathscanningjaxb2marshaller/
http://www.walgemoed.org/2010/12/jaxb2-spring-ws/</description>
			<version>3.1.1</version>
			<fixedVersion>3.1.1</fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.http.client.HttpComponentsClientHttpResponse.java</file>
			<file type="M">org.springframework.http.client.SimpleClientHttpResponse.java</file>
			<file type="M">org.springframework.http.client.BufferingClientHttpResponseWrapper.java</file>
			<file type="M">org.springframework.http.client.InterceptingClientHttpRequestFactoryTests.java</file>
			<file type="M">org.springframework.http.client.ClientHttpResponse.java</file>
			<file type="M">org.springframework.http.client.CommonsClientHttpResponse.java</file>
			<file type="M">org.springframework.http.HttpStatusTests.java</file>
			<file type="M">org.springframework.http.HttpStatus.java</file>
			<file type="M">org.springframework.oxm.jaxb.Jaxb2MarshallerTests.java</file>
			<file type="M">org.springframework.oxm.jaxb.Jaxb2Marshaller.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">9197</link>
			<link type="Duplicate" description="is duplicated by">9206</link>
			<link type="Duplicate" description="duplicates">8986</link>
		</links>
	</bug>
	<bug id="39" master="9051" duplicate="9479" opendate="2012-01-24 06:35:33" fixdate="2012-06-09 18:12:34" resolution="Cannot Reproduce">
		<buginformation>
			<summary>spring-test allows you to reference configuration classes that aren&amp;apos;t annotated with @Configuration Missing @Configuration annotation will cause transaction not working</summary>
			<description>When a @ContextConfiguration test class references a config class missing a @Configuration annotation, @Bean dependencies are wired successfully but the bean lifecycle is not applied (no init methods are invoked, for example). Adding the missing @Configuration annotation solves the problem, however the problem and solution isn&amp;amp;apos;t obvious since wiring/injection appeared to work.
It would be better if an integration test failed-fast if you reference a config class with no @Configuration annotation. The Spring reference didn&amp;amp;apos;t mention that I MUST use @Configuration for the configuration class being imported. And I found that the bean could be created normally most of the time.
The case I found that if @Configuration is missing, transaction is not behave normally in some cases.
I have setup a simple program to illustrate this. Please refer to "readme.txt" for the running procedures. From the log, I have checked that the transaction commit command has been issued, but the end result is the value is not committed.
In the example, I have already used SingleConnectionDataSource, to avoid multiple database connection issue.
I have also tried to move the @EnableTransactionManagement and transactionManager() to other Spring Java Config class (no matter with/without @Configuration), but the problem still occurs.</description>
			<version>3.1.1</version>
			<fixedVersion></fixedVersion>
			<type>Improvement</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.test.context.junit4.profile.importresource.DefaultProfileAnnotationConfigTests.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">9479</link>
			<link type="Relate" description="is related to">9425</link>
			<link type="Relate" description="is related to">10369</link>
			<link type="Relate" description="is related to">10971</link>
			<link type="Supersede" description="is superseded by">9401</link>
			<link type="Duplicate" description="duplicates">9051</link>
		</links>
	</bug>
</bugrepository>