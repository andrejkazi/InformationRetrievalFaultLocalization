<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 01:46:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/LDAP-112/LDAP-112.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[LDAP-112] org.springframework.ldap.core.DistinguishedName should respect RFC 4514</title>
                <link>https://jira.spring.io/browse/LDAP-112</link>
                <project id="10071" key="LDAP">Spring LDAP</project>
                    <description>&lt;p&gt;Issue &lt;a href=&quot;https://jira.spring.io/browse/LDAP-91&quot; title=&quot;Spaces after commas in distinguished names&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LDAP-91&quot;&gt;&lt;del&gt;LDAP-91&lt;/del&gt;&lt;/a&gt; was opened to address spaces in a DN&lt;/p&gt;

&lt;p&gt;The solution provided does not match up with RFC 4514, according to section 2.1:&lt;/p&gt;

&lt;p&gt;&quot;The encodings of adjoining RelativeDistinguishedNames are separated by a comma (&apos;,&apos; U+002C) character.&quot;&lt;/p&gt;

&lt;p&gt;And then section 3:&lt;/p&gt;

&lt;p&gt;&quot;Implementations MAY recognize other DN string representations. However, as there is no requirement that alternative DN string representations be recognized (and, if so, how), implementations SHOULD only generate DN strings in accordance with Section 2 of this document.&quot;&lt;/p&gt;

&lt;p&gt;Also see all the examples in section 4.&lt;/p&gt;

&lt;p&gt;Based on the RFC, spring-ldap should be able to parse DN string representations delimited by both command and space (or other whitespace characters, etc) but should only generate DN strings separated by commas.&lt;/p&gt;

&lt;p&gt;While I agree that the version with spaces is more readable, the fact is that all LDAP servers &lt;b&gt;are not&lt;/b&gt; required to recognize that as a DN string. Since spring-ldap writes the DN to the directory with spaces (e.g. uniquemember attributes using DNs) this needs to be changed.&lt;/p&gt;

&lt;p&gt;I like the format method that was added for 1.2.2 which allows both COMPACT and NON_COMPACT representations, however, the default should be COMPACT.&lt;/p&gt;
</description>
                <environment></environment>
        <key id="22354">LDAP-112</key>
            <summary>org.springframework.ldap.core.DistinguishedName should respect RFC 4514</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="bcurnow">Brian Curnow</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 May 2008 23:18:25 +0000</created>
                <updated>Fri, 5 Feb 2016 21:17:41 +0000</updated>
                            <resolved>Tue, 24 Jun 2008 06:51:56 +0000</resolved>
                                    <version>1.2.1</version>
                                    <fixVersion>1.3.0-RC1</fixVersion>
                                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="36176" author="marthursson" created="Tue, 27 May 2008 23:48:52 +0000"  >&lt;p&gt;I must admit that I haven&apos;t read RFC 4514. Our DistinguishedName implementation is based on RFC 2253. Without having gone too deeply into the details, I agree with the interpretation you&apos;re making of RFC 4514 and the consequences thereof. The default for Spring LDAP should be to generate strings without the additional spaces, and if we were doing it from scratch now this would probably be the case.&lt;/p&gt;

&lt;p&gt;However, I have yet to encounter an LDAP server that does not recognize DNs containing the &quot;decorative&quot; spaces that Spring LDAP generates, and changing the default risks breaking applications relying on the current formatting. Thus I&apos;m very hesitant to change the default at this stage.&lt;/p&gt;</comment>
                            <comment id="36181" author="bcurnow" created="Wed, 28 May 2008 00:39:36 +0000"  >&lt;p&gt;RFC 2253 is an older RFC (December 1997), RFC 4514 (June 2006) obsoletes 2253.&lt;/p&gt;

&lt;p&gt;Even based on RFC 2253 the current implementation is incorrect since RFC 2253 states in section 4:&lt;/p&gt;

&lt;p&gt;&quot;The syntax given in this document is more restrictive than the syntax in RFC 1779.  Implementations parsing a string generated by an LDAPv2 client MUST accept the syntax of RFC 1779.  Implementations MUST NOT, however, generate any of the RFC 1779 encodings which are not described above in section 2.&quot;&lt;/p&gt;

&lt;p&gt;Section 2 states:&lt;/p&gt;

&lt;p&gt;&quot;The encodings of adjoining RelativeDistinguishedNames are separated by a comma character (&apos;,&apos; ASCII 44).&quot;&lt;/p&gt;

&lt;p&gt;So either way, you&apos;re not complying with the relevant RFCs.&lt;/p&gt;

&lt;p&gt;Can we add a property or some other configuration parameter that would instruct spring-ldap to be RFC compliant? This is currently causing us problems since we have a client which expects DNs to conform to the RFC and they are being written to our directory with the added space.&lt;/p&gt;



</comment>
                            <comment id="36199" author="marthursson" created="Wed, 28 May 2008 05:49:12 +0000"  >&lt;p&gt;Right, thanks for the clarification. According to RFC 4514 then (the superseding one) we are actually in compliance, since it is stating that we SHOULD not generate any other format (rather than the more restrictive wording in 2253)  &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/tongue.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;Nevertheless, I don&apos;t think we should get lost in semantics here: I do agree that the RFCs (except for the original, 1779) seem to recommend using the compact representation. How to go about it is another question. I guess we could add a check for a system property setting to change the default. Feels like kind of a hack though, so I&apos;m not too happy about it. Could you please clarify: what&apos;s stopping you from using the new COMPACT representation explicitly?&lt;/p&gt;</comment>
                            <comment id="36202" author="ulsa" created="Wed, 28 May 2008 06:45:43 +0000"  >&lt;p&gt;I wish that the situation was the reverse: that the default already was COMPACT and that it was possible to get a nicer format. By the way, NON_COMPACT is not a great name. I named it, but it should probably be called READABLE or VERBOSE or something.&lt;/p&gt;

&lt;p&gt;Anyway, the big question is how big impact it would be to change the default. We really should be compact, no doubt, but can we suffer the pain of a somewhat weird way of reaching that? What if we just switched the default, leaning on the RFC wording, documented it clearly as a breaking change, released, and waited for the explosions?&lt;/p&gt;</comment>
                            <comment id="36203" author="bcurnow" created="Wed, 28 May 2008 06:47:35 +0000"  >&lt;p&gt;Other than the fact that 1.2.2 hasn&apos;t been released yet? I guess there is nothing keeping us from changing to that method.&lt;/p&gt;

&lt;p&gt;Just to be clear, the word SHOULD in an RFC context has a very specific meaning (defined in RFC 2119) so this is a very semantic conversation.&lt;/p&gt;

&lt;p&gt;However, if you&apos;re unwilling to make the change I guess I can live with that.&lt;/p&gt;

&lt;p&gt;If you were to add some sort of system property or other configuration, I&apos;d prefer to see it default to the standard representation. With 1.2.2 there&apos;s an alternative to toString that doesn&apos;t perform URL encoding so we&apos;ll download a nightly and give that a try.&lt;/p&gt;</comment>
                            <comment id="36237" author="ulsa" created="Wed, 28 May 2008 22:41:20 +0000"  >&lt;p&gt;It might also be argued that the purpose of &lt;tt&gt;toString&lt;/tt&gt; is to provide &quot;a concise but informative representation that is easy for a person to read.&quot; So, there is no requirement that the string produced by &lt;tt&gt;toString&lt;/tt&gt; is RFC-compliant as such. However, in addition to a &lt;tt&gt;toString&lt;/tt&gt;, there should be a method that always provides a consistent normalized format. The name &lt;tt&gt;normalize&lt;/tt&gt; springs to mind.&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;dn.toString() -&amp;gt; cn=John Doe, ou=Accounting, ou=West, dc=example, dc=com&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;dn.normalize() -&amp;gt; cn=John Doe,ou=Accounting,ou=West,dc=example,dc=com&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;</comment>
                            <comment id="36238" author="bcurnow" created="Wed, 28 May 2008 22:52:26 +0000"  >&lt;p&gt;I agree with Ulrik. There&apos;s no reason why the toString method should be RFC compliant, however, in version 1.2.1 that was the only method that would generate a string representation without URL encoding, hence this issue.&lt;/p&gt;

&lt;p&gt;If a method is added like normalize (or perhaps toCompactString ;-&amp;gt;) that should take care of my problem.&lt;/p&gt;

&lt;p&gt;Any idea when 1.2.2 will be released?&lt;/p&gt;</comment>
                            <comment id="37038" author="marthursson" created="Tue, 24 Jun 2008 06:51:56 +0000"  >&lt;p&gt;&lt;tt&gt;toCompactString&lt;/tt&gt; is now present in &lt;tt&gt;DistinguishedName&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="123549" author="rwinch" created="Fri, 5 Feb 2016 21:17:41 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-ldap/issues/151&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-ldap/issues/151&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 27 May 2008 23:48:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24950</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i058tr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30636</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27663</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>