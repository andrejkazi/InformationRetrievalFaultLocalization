<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 01:40:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/LDAP-136/LDAP-136.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[LDAP-136] Setting Context.REFERRAL to &apos;follow&apos; results in DN parse exception</title>
                <link>https://jira.spring.io/browse/LDAP-136</link>
                <project id="10071" key="LDAP">Spring LDAP</project>
                    <description>&lt;p&gt;In order to follow referrals, I&apos;m using LdapContextSource with&lt;br/&gt;
     env.put(Context.REFERRAL, &quot;follow&quot;);&lt;br/&gt;
     ctx.setBaseEnvironmentProperties(env);&lt;/p&gt;

&lt;p&gt;when a search includes results from following a referral, I get a exception&lt;/p&gt;

&lt;p&gt;Caused by: org.springframework.ldap.BadLdapGrammarException: Failed to parse DN; nested exception is org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 5.  Encountered: &quot;:&quot; (58), after : &quot;&quot;&lt;br/&gt;
        at org.springframework.ldap.core.DistinguishedName.parse(DistinguishedName.java:145)&lt;br/&gt;
        at org.springframework.ldap.core.DistinguishedName.&amp;lt;init&amp;gt;(DistinguishedName.java:100)&lt;br/&gt;
        at org.springframework.ldap.core.DirContextAdapter.&amp;lt;init&amp;gt;(DirContextAdapter.java:139)&lt;br/&gt;
        at org.springframework.ldap.core.support.DefaultDirObjectFactory.getObjectInstance(DefaultDirObjectFactory.java:61)&lt;br/&gt;
        at javax.naming.spi.DirectoryManager.createObjectFromFactories(Unknown Source)&lt;br/&gt;
        at javax.naming.spi.DirectoryManager.getObjectInstance(Unknown Source)&lt;/p&gt;

&lt;p&gt;Setting a breakpoint at DirContextAdapter shows that the DN in question is prefixed with the LDAP URL for the referred-to LDAP server. Apparently that&apos;s how JNDI prefixes results returned from followed referrals, see &lt;br/&gt;
&lt;a href=&quot;http://java.sun.com/products/jndi/tutorial/ldap/referral/follow.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/products/jndi/tutorial/ldap/referral/follow.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At Mattias&apos; suggestion, I subclassed DefaultDirObjectFactory and was able to work around the situation by stripping of the LDAP URL prefix. This could conceivably lead to namespace collision if a referred-to server has the same DIT structure as the original server (e.g., they both have a cn=nate,ou=users,dc=example,dc=com entry), but a situation the directory administrator should resolve.&lt;/p&gt;

&lt;p&gt;I&apos;ve tested this with searches Active Directory 2003, SunONE, and OpenLDAP servers with a single-hop referral to another server.&lt;/p&gt;
</description>
                <environment>I&amp;#39;m using spring-ldap-1.2.1, issue should be OS and platform independent</environment>
        <key id="24352">LDAP-136</key>
            <summary>Setting Context.REFERRAL to &apos;follow&apos; results in DN parse exception</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="nate_moser">Nate Moser</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Oct 2008 09:14:59 +0000</created>
                <updated>Fri, 5 Feb 2016 21:17:57 +0000</updated>
                            <resolved>Tue, 21 Oct 2008 19:14:23 +0000</resolved>
                                    <version>1.2.1</version>
                                    <fixVersion>1.3.0-RC1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="40418" author="nate_moser" created="Fri, 17 Oct 2008 09:18:59 +0000"  >&lt;p&gt;The subclass of org.springframework.ldap.core.support.DefaultDirObjectFactory that strips LDAP URLs from DNs returned when JNDI follows referrals.&lt;/p&gt;</comment>
                            <comment id="40486" author="marthursson" created="Tue, 21 Oct 2008 00:04:22 +0000"  >&lt;p&gt;Trying to create a test case for this I&apos;m running into some ambiguities: it seems that creating a &lt;tt&gt;CompositeName&lt;/tt&gt; using the string &lt;tt&gt;ldap://localhost:389/ou=People,o=JNDITutorial&lt;/tt&gt; (i.e. &lt;tt&gt;new CompositeName(&quot;ldap://localhost:389/ou=People,o=JNDITutorial&quot;&lt;/tt&gt;)results in a an instance with not one, but four parts. Could you just verify for me that you are indeed receiving a &lt;tt&gt;CompositeName&lt;/tt&gt; with one part only (i.e. that &lt;tt&gt;name.get(0)&lt;/tt&gt; on the instance handed from JNDI gives you the full string representing the referral)?&lt;/p&gt;</comment>
                            <comment id="40492" author="nate_moser" created="Tue, 21 Oct 2008 03:51:12 +0000"  >&lt;p&gt;That&apos;s worrying for my implementation... with OpenLDAP I&apos;m indeed getting the whole &lt;/p&gt;

&lt;p&gt;name = &lt;/p&gt;
{javax.naming.CompositeName@1297}
&lt;p&gt;&quot;cn=jamesB,ou=QA,dc=example,dc=com&quot;&lt;br/&gt;
impl = &lt;/p&gt;
{javax.naming.NameImpl@1560}
&lt;p&gt;&quot;cn=jamesB,ou=QA,dc=example,dc=com&quot;&lt;br/&gt;
components = &lt;/p&gt;
{java.util.Vector@1564}
&lt;p&gt; size = 1&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = &lt;/p&gt;
{java.lang.String@1298}
&lt;p&gt;&quot;cn=jamesB,ou=QA,dc=example,dc=com&quot;&lt;/p&gt;

&lt;p&gt;for an entry from the original directory, and &lt;/p&gt;

&lt;p&gt;name = &lt;/p&gt;
{javax.naming.CompositeName@1308}
&lt;p&gt;&quot;\&quot;ldap://server2.example.com:389/cn=user1,ou=ou1,dc=example,dc=com\&quot;&quot;&lt;br/&gt;
impl = &lt;/p&gt;
{javax.naming.NameImpl@1552}
&lt;p&gt;&quot;\&quot;ldap://server2.example.com:389/cn=user1,ou=ou1,dc=example,dc=com\&quot;&quot;&lt;br/&gt;
components = &lt;/p&gt;
{java.util.Vector@1556}
&lt;p&gt; size = 1&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = &lt;/p&gt;
{java.lang.String@1309}
&lt;p&gt;&quot;ldap://server2.example.com:389/cn=user1,ou=ou1,dc=example,dc=com&quot;&lt;/p&gt;

&lt;p&gt;for an entry coming from a referral, so name.get(0) gets the whole String in either case.&lt;/p&gt;

&lt;p&gt;I&apos;m seeing the same results for SunONE and AD referrals. I haven&apos;t set up OpenLDAP using the LDIF from the JNDI tutorial, though, so I&apos;ll give that a try.&lt;/p&gt;

&lt;p&gt;Also, I&apos;m using &lt;/p&gt;

&lt;p&gt;org.springframework.ldap.core.LdapTemplate#search(String base, String filter, SearchControls controls,&lt;br/&gt;
            ContextMapper mapper)&lt;/p&gt;

&lt;p&gt;so perhaps the use of ContextMapper is a factor? I&apos;d certainly prefer it to work with all LdapTemplate methods.&lt;/p&gt;
</comment>
                            <comment id="40493" author="marthursson" created="Tue, 21 Oct 2008 03:59:57 +0000"  >&lt;p&gt;I&apos;m doing a pure unit test against &lt;tt&gt;DefaultDirObjectFactory&lt;/tt&gt; here, so I think it&apos;s the construction of the &lt;tt&gt;CompositeName&lt;/tt&gt; that is the problem (I&apos;m constructing it manually in my test case).&lt;/p&gt;

&lt;p&gt;Actually I think your results are quite reassuring. In my test case I was creating the &lt;tt&gt;CompositeName&lt;/tt&gt; instance passing the string directly to the constructor. I&apos;m sure the JNDI code is doing it differently; at least your tests indicate that&apos;s the case.&lt;/p&gt;

&lt;p&gt;I&apos;ll try to get this in place for you to test the real thing tomorrow.&lt;/p&gt;</comment>
                            <comment id="40502" author="marthursson" created="Tue, 21 Oct 2008 19:14:23 +0000"  >&lt;p&gt;This is now fixed in the trunk. I decided against using regular expressions as we&apos;ve previously had severe performance hits caused by using these.&lt;/p&gt;

&lt;p&gt;Also, it didn&apos;t feel right to just discard the referral information, so I decided to add that information to &lt;tt&gt;DirContextAdapter&lt;/tt&gt;. If an instance of &lt;tt&gt;DirContextAdapter&lt;/tt&gt; is created with referral information (which will now be the case if it is created by &lt;tt&gt;DefaultDirObjectFactory&lt;/tt&gt; and the &lt;tt&gt;Name&lt;/tt&gt; contains referral information) the referral server url will be accessible using &lt;tt&gt;DirContextAdapter#getReferralUrl&lt;/tt&gt; and &lt;tt&gt;DirContextAdapter.isReferral&lt;/tt&gt; methods.&lt;/p&gt;</comment>
                            <comment id="62050" author="rodrigo.dinis" created="Thu, 6 Jan 2011 10:45:44 +0000"  >&lt;p&gt;Yes, it sounds like the issue I am having. But I don&apos;t know how to implement the change. Could someone clarify how to build the solution?&lt;/p&gt;</comment>
                            <comment id="123575" author="rwinch" created="Fri, 5 Feb 2016 21:17:57 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-ldap/issues/174&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-ldap/issues/174&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                                                <inwardlinks description="is depended on by">
                                        <issuelink>
            <issuekey id="15163">LDAP-9</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="14775" name="ReferralChasingDirObjectFactory.txt" size="2644" author="nate_moser" created="Fri, 17 Oct 2008 09:18:59 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 21 Oct 2008 00:04:22 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24928</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i050tj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29339</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24530</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>