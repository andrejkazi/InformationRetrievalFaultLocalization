<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 01:44:00 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/LDAP-46/LDAP-46.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[LDAP-46] DirContextAdapter.getModificatioItems() doesnt ignore case when collecting values to be removed and added.</title>
                <link>https://jira.spring.io/browse/LDAP-46</link>
                <project id="10071" key="LDAP">Spring LDAP</project>
                    <description>&lt;p&gt;DirContextAdapter.getModicationItems() calls collectModifications() to collect the modification items.  The section handling multi-valued attributes uses CollectionUtils to return a new list that will contain a substraction of the old values from the new values, but the substraction doesnt handle case insensitivity thus resulting in a list of items that require to be added which already exist in the Directory Server with a different case and resulting in an ATTRIBUTE_ALREADY_EXISIT error.  See below:&lt;br/&gt;
else {&lt;br/&gt;
            // Collect all modifications to attribute individually (this also&lt;br/&gt;
            // covers additions to a previously non-existant attribute).&lt;br/&gt;
            Collection oldValues = new LinkedList();&lt;br/&gt;
            Collection newValues = new LinkedList();&lt;/p&gt;

&lt;p&gt;            collectAttributeValues(oldValues, currentAttribute);&lt;br/&gt;
            collectAttributeValues(newValues, changedAttr);&lt;br/&gt;
            Collection myModifications = new LinkedList();&lt;/p&gt;

&lt;p&gt;            Collection addedValues = CollectionUtils.subtract(newValues,&lt;br/&gt;
                    oldValues);  // WILL ALSO RETURN VALUES TO BE ADDED THAT ARE ALREADY IN LDAP IF CASE IS DIFFERENT.&lt;br/&gt;
            Collection removedValues = CollectionUtils.subtract(oldValues,&lt;br/&gt;
                    newValues);  // WILL ALSO RETURN VALUES TO BE ADDED THAT ARE ALREADY IN LDAP IF CASE IS DIFFERENT.&lt;/p&gt;

&lt;p&gt;            collectModifications(DirContext.ADD_ATTRIBUTE, changedAttr,&lt;br/&gt;
                    addedValues, myModifications);&lt;br/&gt;
            collectModifications(DirContext.REMOVE_ATTRIBUTE, changedAttr,&lt;br/&gt;
                    removedValues, myModifications);&lt;/p&gt;

&lt;p&gt;            if (myModifications.isEmpty()) &lt;/p&gt;
{
                // This means that the attributes are not equal, but the
                // actual values are the same - thus the order must have
                // changed. This should result in a REPLACE_ATTRIBUTE operation.
                myModifications.add(new ModificationItem(
                        DirContext.REPLACE_ATTRIBUTE, changedAttr));
            }</description>
                <environment>Windows XP, IBM Tivoli</environment>
        <key id="16371">LDAP-46</key>
            <summary>DirContextAdapter.getModificatioItems() doesnt ignore case when collecting values to be removed and added.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="marthursson">Mattias Hellborg Arthursson</assignee>
                                    <reporter username="venesty">Vikash Trivedi</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 Mar 2007 04:07:32 +0000</created>
                <updated>Fri, 5 Feb 2016 21:20:16 +0000</updated>
                            <resolved>Fri, 20 Apr 2007 04:52:07 +0000</resolved>
                                    <version>1.1</version>
                    <version>1.1.1</version>
                    <version>1.1.2</version>
                                    <fixVersion>1.2-RC1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="23006" author="marthursson" created="Sun, 1 Apr 2007 03:38:10 +0000"  >&lt;p&gt;This issue should be addressed, but I wouldn&apos;t want to do a hack just to make string comparisons be case-insensitive. First of all, while it is the most common case, not all Attributes are case-insensitive. Secondly, the same problem (or at least a similar one) applies to other Attributes as well. E.g. &apos;uniqueMember&apos; represents a DN, but the same DN can be represented by different strings (i.e. with spaces etc.), so the same problem would apply there as well (if the Directory Server is grumpy).&lt;/p&gt;

&lt;p&gt;We should address these types of problems in a generic and configurable way. Configuration won&apos;t be too easy, the main problem being that DirContextAdapter instances are created all over the place (from DefaultDirObjectFactory as well as by users in their Dao methods). Bottom line, we&apos;ll need to think more about this to get it done properly.&lt;/p&gt;</comment>
                            <comment id="23212" author="marthursson" created="Thu, 12 Apr 2007 17:55:47 +0000"  >&lt;p&gt;Maybe we don&apos;t need a complicated generic solution to this after all. An idea came up on the forum (&lt;a href=&quot;http://forum.springframework.org/showthread.php?p=113359#post113359&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springframework.org/showthread.php?p=113359#post113359&lt;/a&gt;), which proposes to just make sure that the REMOVE_ATTRIBUTE items come first. While this will change Attribute value that really didn&apos;t syntactically change, that&apos;s actually not such a bad thing - after all what will be stored is the value in the case or format that the user actually specified.&lt;/p&gt;</comment>
                            <comment id="23267" author="marthursson" created="Tue, 17 Apr 2007 06:06:20 +0000"  >&lt;p&gt;Did a fix for this - it is available in the nightly snapshots (as of tomorrow). Haven&apos;t been able to verify it though, as the problem doesn&apos;t present itself on ApacheDS (where we run our integration tests. I would appreciate it if you could verify it on your platform.&lt;/p&gt;</comment>
                            <comment id="23268" author="marthursson" created="Tue, 17 Apr 2007 06:07:33 +0000"  >&lt;p&gt;Btw, the nightly snapshots are here:&lt;br/&gt;
&lt;a href=&quot;http://static.springframework.org/downloads/nightly/spring-ldap.php&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/downloads/nightly/spring-ldap.php&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="23330" author="marthursson" created="Fri, 20 Apr 2007 04:52:07 +0000"  >&lt;p&gt;Reworked getModificationItems() to use Attribute.contains() to determine attribute value equality. Also, removed values are now always returned first in the ModificationItem array, avoiding the ATT_ALREAY_EXIST problems even if the Attribute implementation should be unable to determine syntactically correct Attribute equality.&lt;/p&gt;

&lt;p&gt;In the future we might look further into this and use getAttrubuteSyntaxDefinition/getAttributeDefinition, but for the time being this will have to do.&lt;/p&gt;</comment>
                            <comment id="123817" author="rwinch" created="Fri, 5 Feb 2016 21:20:16 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-ldap/issues/89&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-ldap/issues/89&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 1 Apr 2007 03:38:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>25013</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05cl3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>31245</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28685</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>