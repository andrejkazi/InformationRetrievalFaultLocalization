<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 01:38:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/LDAP-96/LDAP-96.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[LDAP-96] The order of a multi-valued attribute is not preserved by modifyAttributes(DirContextOperations)</title>
                <link>https://jira.spring.io/browse/LDAP-96</link>
                <project id="10071" key="LDAP">Spring LDAP</project>
                    <description>&lt;p&gt;As an example, consider two values of attribute &quot;title&quot;: &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;Juergen&amp;quot;, &amp;quot;George&amp;quot;&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;In my mapToContext method I do something like: &lt;/p&gt;

&lt;p&gt;context.setAttributeValues(&quot;title&quot;, values, true), // order matters&lt;/p&gt;

&lt;p&gt;where values now contains &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;quot;George&amp;quot;, &amp;quot;Juergen&amp;quot;&amp;#93;&lt;/span&gt;, i.e., the values have been permuted.&lt;br/&gt;
Then the DAO update method does something like this:&lt;/p&gt;

&lt;p&gt;        final DistinguishedName dn = buildDn(principal.getUserId());&lt;br/&gt;
        DirContextOperations context = getLdapOperations().lookupContext(&lt;br/&gt;
            dn.encode());&lt;br/&gt;
        mapToContext(context, principal, password);&lt;br/&gt;
        getLdapOperations().modifyAttributes(context);&lt;/p&gt;

&lt;p&gt;After the update, fetching the new values using adapter.getStringAttributes() shows that the values are in the wrong, original order.&lt;br/&gt;
Stepping through modifyAttributes(), it appears that DirContextAdapter.collectModifications(Attribute, Attribute, List) &lt;br/&gt;
does not implement anything special to consider preserving the order of values of a multi-valued attribute.&lt;/p&gt;</description>
                <environment></environment>
        <key id="19026">LDAP-96</key>
            <summary>The order of a multi-valued attribute is not preserved by modifyAttributes(DirContextOperations)</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="marthursson">Mattias Hellborg Arthursson</assignee>
                                    <reporter username="jfai">J&#252;rgen Failenschmid</reporter>
                        <labels>
                    </labels>
                <created>Fri, 4 Jan 2008 04:36:40 +0000</created>
                <updated>Fri, 5 Feb 2016 21:20:47 +0000</updated>
                            <resolved>Wed, 18 Jun 2008 00:32:10 +0000</resolved>
                                    <version>1.2.1</version>
                                    <fixVersion>1.3.0-RC1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                    <timeoriginalestimate seconds="14400">0.5d</timeoriginalestimate>
                            <timeestimate seconds="14400">0.5d</timeestimate>
                                        <comments>
                            <comment id="34006" author="marthursson" created="Thu, 27 Mar 2008 06:32:09 +0000"  >&lt;p&gt;Estimate may be too high. Quite possible this is easier to fix than that.&lt;/p&gt;</comment>
                            <comment id="36786" author="marthursson" created="Wed, 18 Jun 2008 00:32:10 +0000"  >&lt;p&gt;Quite right, ordering was not taken into consideration when calculating the &lt;tt&gt;ModificationItem}}s. Added this as a special case in {{DirContextAdapter#collectModifications(Attribute changedAttr, List modificationList)&lt;/tt&gt;; changed multivalue attributes that are ordered will be replaced in their entirety.&lt;/p&gt;</comment>
                            <comment id="40401" author="relphie" created="Thu, 16 Oct 2008 08:32:30 +0000"  >&lt;p&gt;Unfortunately, I don&apos;t think that LDAP can be used to store ordered attributes, if I understand the specification [ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2251.txt&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.ietf.org/rfc/rfc2251.txt&lt;/a&gt; ] correctly:&lt;/p&gt;

&lt;p&gt;4.1.8. Attribute&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;   Each attribute value is distinct in the set (no duplicates).  The&lt;br/&gt;
   order of attribute values within the vals set is undefined and&lt;br/&gt;
   implementation-dependent, and MUST NOT be relied upon.&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;</comment>
                            <comment id="40402" author="jfai" created="Thu, 16 Oct 2008 09:30:00 +0000"  >&lt;p&gt;Other functions of Spring LDAP rely on ordering of attributes, otherwise the order-related features wouldn&apos;t be there at all.&lt;/p&gt;

&lt;p&gt;The blurb of RFC2251 about &quot;must not rely&quot; upon the ordering of attribute values needs to be read in the context of &quot;is undefined and implementation-dependent&quot;. The RFC does not mean that an LDAP implementation could not provide deterministic ordering of attributes.&lt;br/&gt;
Relying on ordering could be problematic if the underlying LDAP implementation is changed - which is done infrequently, and problematic for other reasons anyway (e.g. extended operations, controls)&lt;/p&gt;</comment>
                            <comment id="123871" author="rwinch" created="Fri, 5 Feb 2016 21:20:47 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-ldap/issues/136&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-ldap/issues/136&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 27 Mar 2008 06:32:09 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24964</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i055s7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30143</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27114</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>