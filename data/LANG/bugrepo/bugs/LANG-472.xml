<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 23:30:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-472/LANG-472.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-472] RandomUtils.nextLong() get all even number</title>
                <link>https://issues.apache.org/jira/browse/LANG-472</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;when we use the following code , we can see that the method produce only even number.&lt;/p&gt;

&lt;p&gt;         while (true) {&lt;br/&gt;
//        for (int i = 0; i &amp;lt; 100; i++) {&lt;br/&gt;
            if (RandomUtils.nextLong() % 2 == 1) &lt;/p&gt;
{
                System.out.println(&quot;ok&quot;);
            }
&lt;p&gt;        }&lt;/p&gt;</description>
                <environment>&lt;p&gt;all system&lt;/p&gt;</environment>
        <key id="12409241">LANG-472</key>
            <summary>RandomUtils.nextLong() get all even number</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="kaqi072821">zhangruimin</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Nov 2008 03:30:48 +0000</created>
                <updated>Wed, 3 Mar 2010 09:34:30 +0000</updated>
                            <resolved>Sat, 6 Feb 2010 02:42:17 +0000</resolved>
                                                    <fixVersion>2.5</fixVersion>
                                    <component>lang.math.*</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12650856" author="jwcarman" created="Wed, 26 Nov 2008 03:49:27 +0000"  >&lt;p&gt;So, you&apos;re saying you never see an &quot;ok&quot;?&lt;/p&gt;</comment>
                            <comment id="12651396" author="psteitz" created="Thu, 27 Nov 2008 17:25:42 +0000"  >&lt;p&gt;Looks like this is due to loss of significance in the multiply (per the comment &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Attached patch replaces the impl with the JDK-supplied method, maintaining the (undocumented) non-negative behavior.  Added test confirms that returned values are evenly distributed mod 2. &lt;/p&gt;

&lt;p&gt;This problem also affects nextLong&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; where n is sufficiently large.  We should either replace the implementation with something else that works for large values of n or determine and document the upper bound.&lt;/p&gt;</comment>
                            <comment id="12651431" author="psteitz" created="Thu, 27 Nov 2008 23:12:42 +0000"  >&lt;p&gt;Just realized that the patch violates / changes the contract of JVMRandom (as I understand it).  If we want to maintain the static, single-underlying-Random behavior, we would need to create a static random instance and use that instance&apos;s nextLong() method in place of super.nextLong() in the patch.&lt;/p&gt;</comment>
                            <comment id="12677876" author="bayard" created="Mon, 2 Mar 2009 02:43:22 +0000"  >&lt;p&gt;I&apos;m not tied to JVMRandom. I needed it for a particular set of code, but haven&apos;t used it since.&lt;/p&gt;</comment>
                            <comment id="12704486" author="bayard" created="Thu, 30 Apr 2009 05:49:26 +0000"  >&lt;p&gt;JVMRandom is removed for 3.0, along with RandomUtils, so making this a 2.x issue.&lt;/p&gt;</comment>
                            <comment id="12829378" author="sebb@apache.org" created="Thu, 4 Feb 2010 01:39:24 +0000"  >&lt;p&gt;Applied Phil&apos;s patch, but adjusted so that the class now uses a static Random() instance for all random number generation.&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=906318&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=906318&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-472&quot; title=&quot;RandomUtils.nextLong() get all even number&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-472&quot;&gt;&lt;del&gt;LANG-472&lt;/del&gt;&lt;/a&gt; - RandomUtils.nextLong() get all even number&lt;/p&gt;

&lt;p&gt;Modified:&lt;br/&gt;
   commons/proper/lang/branches/LANG_2_X/src/main/java/org/apache/commons/lang/math/JVMRandom.java&lt;br/&gt;
   commons/proper/lang/branches/LANG_2_X/src/test/java/org/apache/commons/lang/math/RandomUtilsTest.java&lt;/p&gt;

&lt;p&gt;I suspect nextLong(long) probably does not generate very evenly distributed numbers.&lt;/p&gt;

&lt;p&gt;Also documented non-negative behaviour:&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=906319&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=906319&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-472&quot; title=&quot;RandomUtils.nextLong() get all even number&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-472&quot;&gt;&lt;del&gt;LANG-472&lt;/del&gt;&lt;/a&gt; - Document &amp;gt;=0 behaviour&lt;/p&gt;

&lt;p&gt;Modified:&lt;br/&gt;
   commons/proper/lang/branches/LANG_2_X/src/main/java/org/apache/commons/lang/math/JVMRandom.java&lt;/p&gt;
</comment>
                            <comment id="12829407" author="niallp" created="Thu, 4 Feb 2010 02:47:16 +0000"  >&lt;p&gt;Alternative patch which just fixes the issue when n is Long.MAX_VALUE&lt;/p&gt;</comment>
                            <comment id="12829408" author="niallp" created="Thu, 4 Feb 2010 02:49:50 +0000"  >&lt;p&gt;Doh! Sorry didn&apos;t see Sebb had already fixed this - ignore me&lt;/p&gt;</comment>
                            <comment id="12829424" author="niallp" created="Thu, 4 Feb 2010 03:49:08 +0000"  >&lt;p&gt;Just reviewed Sebb&apos;s change - RandomUtils.nextLong() is now fixed because it no longer calls JVMRandom nextLong(Long.MAX_VALUE) - but instead delagates to SHARED_RANDOM.nextLong(). AFAICS calling JVMRandom nextLong(Long.MAX_VALUE)  will still see the same problem.&lt;/p&gt;

&lt;p&gt;Do we want to do anything about this (my nasty hack?)&lt;/p&gt;</comment>
                            <comment id="12829431" author="sebb@apache.org" created="Thu, 4 Feb 2010 04:24:24 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Actually it was Phil&amp;#39;s patch, amended to use the shared static Random instance.&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;One could also use Phil&apos;s solution and put:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (n == &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.MAX_VALUE) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.abs(SHARED_RANDOM.nextLong());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, that only fixes the one value - as far as I can tell, nextLong(long) starts failing tests at around Long.MAX_VALUE/920 (not that there are any tests in SVN yet!)&lt;/p&gt;

&lt;p&gt;BTW, I think your hack would be more efficient as&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (n == &lt;span class=&quot;code-object&quot;&gt;Long&lt;/span&gt;.MAX_VALUE) {
    &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; random = -1;
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (random &amp;lt; 0) {
        random = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.random();
    }
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(random).movePointRight(19).longValue();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12829592" author="sebb@apache.org" created="Thu, 4 Feb 2010 12:05:21 +0000"  >&lt;p&gt;It&apos;s just occurred to me that using Math.abs() to ensure non-negative numbers means that the value 0 will appear with half the expected freqency.&lt;/p&gt;

&lt;p&gt;So maybe looping whilst looking for a non-negative number would be a better solution (let&apos;s hope any run of negative numbers is not too long!)&lt;/p&gt;</comment>
                            <comment id="12829634" author="sebb@apache.org" created="Thu, 4 Feb 2010 16:14:10 +0000"  >&lt;p&gt;Just realised that nextInt() will never return Integer.MAX_VALUE. &lt;br/&gt;
Should it?&lt;/p&gt;

&lt;p&gt;If so, then maybe the way to do this is:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; random=SHARED_RANDOM.nextInt();
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (random == &lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MIN_VALUE) {
    random = 0; &lt;span class=&quot;code-comment&quot;&gt;// should solve problem of reduced frequency of 0
&lt;/span&gt;} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    random = - random;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Could use the same approach for nextLong()&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12829827" author="sebb@apache.org" created="Thu, 4 Feb 2010 22:39:41 +0000"  >&lt;p&gt;Math.abs() can return a negative number if parameter is MIN_VALUE.&lt;br/&gt;
Replacing this with 0 makes it non-negative and solves problem of reduced frequency of zero.&lt;/p&gt;

&lt;p&gt;Applied to nextInt() and nextLong():&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=906693&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=906693&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
Math.abs(long) can return a negative number&lt;br/&gt;
Fix nextInt() and nextLong() so all values 0 -&amp;gt; MAX_VALUE are equally likely&lt;/p&gt;

&lt;p&gt;I think the only remaining problem is the method nextLong(long) does not generate properly distributed numbers above about Long.MAX_VALUE/1000, possibly lower.&lt;/p&gt;</comment>
                            <comment id="12830434" author="sebb@apache.org" created="Sat, 6 Feb 2010 02:42:17 +0000"  >&lt;p&gt;The behaviour of nextLong(long) has been fixed by adapting the nextInt(int) code from Harmony&apos;s Random class:&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=907160&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=907160&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
Revert nextInt() and nextLong() to 2.4 behaviour, i.e MAX_VALUE is not included&lt;br/&gt;
Rewrite nextLong(long) based on Harmony&apos;s implementation of nextInt(int)&lt;/p&gt;

&lt;p&gt;Modified:&lt;br/&gt;
   commons/proper/lang/branches/LANG_2_X/src/main/java/org/apache/commons/lang/math/JVMRandom.java&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12434774" name="LANG-472-alt.patch" size="2313" author="niallp" created="Thu, 4 Feb 2010 02:47:16 +0000"/>
                            <attachment id="12394857" name="lang-472.patch" size="1936" author="psteitz" created="Thu, 27 Nov 2008 17:25:42 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 26 Nov 2008 03:49:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>147340</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 43 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d5xj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74737</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>