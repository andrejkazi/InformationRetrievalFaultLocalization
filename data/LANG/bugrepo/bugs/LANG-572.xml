<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 17:47:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-572/LANG-572.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-572] [XSS] StringEscapeUtils.escapeHtml() must escape &apos; chars to &amp;#39; </title>
                <link>https://issues.apache.org/jira/browse/LANG-572</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;If developers putting untrusted data into attribute values using the single quote character &apos; and StringEscapeUtils.escapeHtml() like:&lt;/p&gt;

&lt;p&gt;&amp;lt;input type=&apos;text&apos; name=&apos;input&apos; value=&lt;b&gt;&apos;&amp;lt;%=StringEscapeUtils.escapeHtml(request.getParameter(&quot;input&quot;))%&amp;gt;&apos;&lt;/b&gt;&amp;gt;&lt;/p&gt;


&lt;p&gt;Then, the attacker is able to break out of the HTML attribute context like:&lt;/p&gt;

&lt;p&gt;hxxp://example.org/?input=&lt;b&gt;&apos; onfocus=&apos;alert(document.cookie);&apos; id=&apos;&lt;/b&gt;&lt;br/&gt;
&amp;lt;input type=&apos;text&apos; name=&apos;input&apos; value=&apos;&lt;b&gt;&apos;onfocus=&apos;alert(document.cookie);&apos;id=&apos;&lt;/b&gt;&apos;&amp;gt;&lt;/p&gt;


&lt;p&gt;I think &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-122&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;LANG&amp;#45;122&lt;/a&gt; is not truly fixed from this aspect (XSS).&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: All&lt;br/&gt;
Platform: All &lt;/p&gt;</environment>
        <key id="12443837">LANG-572</key>
            <summary>[XSS] StringEscapeUtils.escapeHtml() must escape &apos; chars to &amp;#39; </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="4" iconUrl="https://issues.apache.org/jira/images/icons/statuses/reopened.png" description="This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.">Reopened</status>
                    <statusCategory id="2" key="new" colorName="blue-gray"/>
                                    <resolution id="-1">Unresolved</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="k.kato">Keisuke Kato</reporter>
                        <labels>
                    </labels>
                <created>Sat, 19 Dec 2009 15:00:31 +0000</created>
                <updated>Sun, 6 Nov 2016 15:48:09 +0000</updated>
                                            <version>2.4</version>
                                    <fixVersion>Discussion</fixVersion>
                                    <component>lang.*</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="12792906" author="bayard" created="Sat, 19 Dec 2009 21:20:35 +0000"  >&lt;p&gt;I don&apos;t think this is something the escapeHtml method should be trying to fix. It has a clear responsibility, and XSS is not within it (unless HTML 5 changes this). &lt;/p&gt;

&lt;p&gt;It&apos;s easy in 3.0 for the developer to escape &apos; symbols by adding another translator. Possibly we could add an escapeHtmlAndApos method. &lt;/p&gt;

&lt;p&gt;Or maybe chaining escapeEcmaScript to escapeHTML would work. Both options are within the realm of responsibility of the developer.&lt;/p&gt;</comment>
                            <comment id="12792907" author="bayard" created="Sat, 19 Dec 2009 21:21:40 +0000"  >&lt;p&gt;Even in 2.4 this could easily be:&lt;/p&gt;

&lt;p&gt;&amp;lt;input type=&apos;text&apos; name=&apos;input&apos; value=&apos;&amp;lt;%=StringEscapeUtils.escapeHtml(request.getParameter(&quot;input&quot;)).replaceAll(&quot;&apos;&quot;, &quot;&lt;br class=&quot;atl-forced-newline&quot; /&gt;&apos;&quot;)%&amp;gt;&apos;&amp;gt;&lt;/p&gt;</comment>
                            <comment id="12793026" author="sebb@apache.org" created="Sun, 20 Dec 2009 19:50:27 +0000"  >&lt;p&gt;Agree that it is out of scope for escapeHtml.&lt;/p&gt;

&lt;p&gt;What&apos;s being requested here is a means of sanitising input data, which is not at all the same. &lt;br/&gt;
For example, there is no need to change &quot;&amp;amp;&quot; or &quot;&amp;gt;&quot; in order to make the input safe.&lt;br/&gt;
Indeed, that may have unwanted side effects.&lt;/p&gt;</comment>
                            <comment id="12793072" author="k.kato" created="Mon, 21 Dec 2009 03:52:00 +0000"  >&lt;p&gt;I see. No surprise there. Thank you for the advice. For your reference, I attached OWASP &lt;a href=&quot;http://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;ESAPI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;m still not quite convinced about c &amp;gt; 0x7F (&lt;a href=&quot;http://ja.wikipedia.org/wiki/Unicode%E4%B8%80%E8%A6%A7_0000-0FFF&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;UTF-8&lt;/a&gt;).&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;Apache Commons Lang (2.4) Entities.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void escape(Writer writer, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; str)
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (entityName == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (c &amp;gt; 0x7F) {
        writer.write(&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;amp;#&quot;&lt;/span&gt;);
        writer.write(&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.toString(c, 10));
        writer.write(&apos;;&apos;);
    } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        writer.write(c);
    }
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    writer.write(&apos;&amp;amp;&apos;);
    writer.write(entityName);
    writer.write(&apos;;&apos;);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;ESAPI (1.4) DefaultEncoder.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;//&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; encodeForHTML(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; input)
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ( c == &apos;\t&apos; || c == &apos;\n&apos; || c == &apos;\r&apos; ) {
    sb.append( c );
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; ( c &amp;lt;= 0x1f || ( c &amp;gt;= 0x7f &amp;amp;&amp;amp; c &amp;lt;= 0x9f ) ) {
    logger.warning( Logger.SECURITY, &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;Attempt to HTML entity encode illegal character: &quot;&lt;/span&gt; + (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;)c + &lt;span class=&quot;code-quote&quot;&gt;&quot; (skipping)&quot;&lt;/span&gt; );
    sb.append( &apos; &apos; );
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
    sb.append( encode( c, htmlCodec, CHAR_ALPHANUMERICS, IMMUNE_HTML ) );
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12793079" author="bayard" created="Mon, 21 Dec 2009 04:21:43 +0000"  >&lt;p&gt;Sebb - agreed on there possibly being a feature here. &lt;/p&gt;

&lt;p&gt;Note - Lang 3.0 does not escape above 0x7f for HTML. The developer has to add that if they want that feature.&lt;/p&gt;</comment>
                            <comment id="13639199" author="jukefox" created="Tue, 23 Apr 2013 16:24:28 +0000"  >&lt;p&gt;Could you please describe why you conclude that the request is out of scope for &lt;tt&gt;escapeHtml&lt;/tt&gt;?&lt;br/&gt;
I cannot find any explanation in this ticket.&lt;br/&gt;
From my point of view it is essential to escape single quote characters not only because of possible XSS as described above but also to prevent syntactically illegal code when putting variable data as part of a value to an attribute when relying on &lt;tt&gt;escapeHtml&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;PS: There are examples out there that do escape the character as expected. You can have a look at &lt;a href=&quot;http://www.opinionatedgeek.com/dotnet/tools/htmlencode/encode.aspx&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.opinionatedgeek.com/dotnet/tools/htmlencode/encode.aspx&lt;/a&gt; and give it a try.&lt;/p&gt;</comment>
                            <comment id="13639334" author="sebb@apache.org" created="Tue, 23 Apr 2013 18:11:45 +0000"  >&lt;p&gt;AIUI the lang3 method only encodes characters for which there is a corresponding entity in that version of HTML (3 or 4 currently supported). There is no such HTML entitiy for single quote. Note that &amp;apos; is an XML entity, not HTML.&lt;/p&gt;

&lt;p&gt;It is not the function of this method to sanitise input.&lt;br/&gt;
In general, different contexts need different solutions.&lt;/p&gt;</comment>
                            <comment id="13640304" author="jukefox" created="Wed, 24 Apr 2013 09:58:37 +0000"  >&lt;p&gt;OK. Heretical question: Could you tell me what is the method useful for when it is not safe to be used for escaping signs within arbitrary HTML content?&lt;br/&gt;
I know of the way of doing it on my own but maybe there are further characters as well that need to be escaped when being used e.g. within a value of an attribute.&lt;/p&gt;

&lt;p&gt;By the way: ESAPI (&lt;tt&gt;org.owasp.esapi.reference.DefaultEncoder.encodeForHTML(String)&lt;/tt&gt;), Spring (&lt;tt&gt;org.apache.commons.lang3.StringEscapeUtils.escapeHtml4(String)&lt;/tt&gt;) and GWT (&lt;tt&gt;com.google.gwt.safehtml.shared.SafeHtmlUtils.htmlEscape(String)&lt;/tt&gt;) all escape that character. Only Commons Lang does not! After testing against all those Frameworks I am convinced that Apache Commons Lang should behave the same way. Please reconsider your decision not to encode that and maybe other missing characters.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                            <comment id="13642643" author="bayard" created="Fri, 26 Apr 2013 07:11:25 +0000"  >&lt;p&gt;Good question, definitely no heresy &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I know my original intent 10+ years ago in my codebase was to use it to escape trusted arbitrary content. A known database being outputted as HTML (or XML or the other formats it&apos;s grown to cover). I don&apos;t recall if the Lang one descends from my original code or if it came from some of the code that was in Commons Util back then. &lt;/p&gt;

&lt;p&gt;I&apos;m pretty sure my early code escaped the entities to numerics rather than the ISO terms, then the big lookup table was added to make the output more pleasing.&lt;/p&gt;

&lt;p&gt;So today what it&apos;s useful for is being an entity converter, with the addition that it also escapes the basic four characters of XML. Perhaps the API should change to not be escapeHtml but instead drop the XML characters and be convertToISOEntities. Or perhaps it should focus on the Security aspects (reuse parts of OSAPI?). The former might not be very useful codewise, while the latter takes Lang further from general utilities and into kitchen sink. I&apos;d rather the OSAPI folk were declaring the line on security around HTML &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Reopening this to ensure discussion continues.&lt;/p&gt;</comment>
                            <comment id="13644449" author="jukefox" created="Mon, 29 Apr 2013 12:29:00 +0000"  >&lt;p&gt;Thanks for reopening the ticket and your answer. I totally agree with that. But what do you mean with OSAPI? Is that something different from ESAPI?&lt;br/&gt;
Furthermore I would like to ask whether all the other conversion functions like &lt;tt&gt;escapeXml&lt;/tt&gt; should also only be used to convert to ISO entities and not to securly place arbitrary content in a particular file.&lt;/p&gt;</comment>
                            <comment id="13645331" author="bayard" created="Tue, 30 Apr 2013 06:58:11 +0000"  >&lt;p&gt;OSAPI-&amp;gt;ESAPI &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Brain typo on my part.&lt;/p&gt;

&lt;p&gt;Other conversion functions - I wouldn&apos;t say ISO entities specifically as it depends on the format as to the notion of entity, but I&apos;d say that&apos;s generally true. For an extreme example the escapeCsv wasn&apos;t intended to protect against security or weird issues in MS Excel. &lt;/p&gt;</comment>
                            <comment id="13645417" author="jukefox" created="Tue, 30 Apr 2013 09:30:05 +0000"  >&lt;p&gt;OK. Then if you plan to modify / add the requested escape functionality for HTML it should be done for the other formats in an analogous manner so that it is possible to embed arbitrary textual content within certain formatted data (HTML, JavaScript, CSV etc.) without interpretation.&lt;br/&gt;
I don&apos;t think that there are many people out there that are aware of the current behaviour of these methods and don&apos;t expect the same as I do.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12746574">LANG-1042</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 19 Dec 2009 21:20:35 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>147415</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 31 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0snin:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>165287</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>