<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 22:45:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-1018/LANG-1018.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-1018] NumberUtils.createNumber(final String str)  Precision will be lost</title>
                <link>https://issues.apache.org/jira/browse/LANG-1018</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;With commons-lang 3.2.2:&lt;br/&gt;
NumberUtils.createNumber(&quot;-160952.54&quot;);&lt;br/&gt;
The result is &quot;-160952.55&quot;.&lt;/p&gt;

&lt;p&gt;Should not be based on the length of the decimal point number to judge whether the floating point number.&lt;br/&gt;
Using the method (createFloat(str)) of dealing with the valid number greater than seven Numbers will cause accuracy loss.&lt;br/&gt;
The source code is as follows:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(numDecimals &amp;lt;= 7){&lt;span class=&quot;code-comment&quot;&gt;// If number has 7 or fewer digits past the decimal point then make it a &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt;
&lt;/span&gt;                &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Float&lt;/span&gt; f = createFloat(str);
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(f.isInfinite() || (f.floatValue() == 0.0F &amp;amp;&amp;amp; !allZeros))) {
                    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; f;
                }
            }
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; NumberFormatException nfe) { &lt;span class=&quot;code-comment&quot;&gt;// NOPMD
&lt;/span&gt;            &lt;span class=&quot;code-comment&quot;&gt;// ignore the bad number
&lt;/span&gt;        }
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(numDecimals &amp;lt;= 16){&lt;span class=&quot;code-comment&quot;&gt;// If number has between 8 and 16 digits past the decimal point then make it a &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt;
&lt;/span&gt;                &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Double&lt;/span&gt; d = createDouble(str);
                &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!(d.isInfinite() || (d.doubleValue() == 0.0D &amp;amp;&amp;amp; !allZeros))) {
                    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; d;
                }
            }
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; NumberFormatException nfe) { &lt;span class=&quot;code-comment&quot;&gt;// NOPMD
&lt;/span&gt;            &lt;span class=&quot;code-comment&quot;&gt;// ignore the bad number
&lt;/span&gt;        }

        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; createBigDecimal(str);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>&lt;p&gt;windows 7&lt;/p&gt;</environment>
        <key id="12716767">LANG-1018</key>
            <summary>NumberUtils.createNumber(final String str)  Precision will be lost</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="pascalschumacher">Pascal Schumacher</assignee>
                                    <reporter username="sydng">sydng</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 May 2014 10:24:53 +0000</created>
                <updated>Wed, 19 Oct 2016 07:01:25 +0000</updated>
                            <resolved>Sun, 12 Jun 2016 11:29:48 +0000</resolved>
                                    <version>3.3.2</version>
                                    <fixVersion>3.5</fixVersion>
                                    <component>lang.math.*</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>5</watches>
                                                                <comments>
                            <comment id="14131461" author="dmjones500" created="Fri, 12 Sep 2014 12:07:01 +0000"  >&lt;p&gt;Sorry, ignore the previous comments (now deleted). I misinterpreted your issue entirely.&lt;/p&gt;

&lt;p&gt;I see your point now - if &lt;tt&gt;createDouble(str)&lt;/tt&gt; had been used on your example string, the results would be more accurate. Clearly our logic for determining when to use the different data types may need improving.&lt;/p&gt;

&lt;p&gt;If you have suggestions for a patch, please post one. Otherwise I&apos;ll do some research to see if things can be improved.&lt;/p&gt;

&lt;p&gt;I&apos;ve changed to &quot;Patch Needed&quot; since there is no patch here to review.&lt;/p&gt;</comment>
                            <comment id="14131473" author="dmjones500" created="Fri, 12 Sep 2014 12:24:54 +0000"  >&lt;p&gt;Closely related discussion found at &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-693&quot; title=&quot;Method createNumber from NumberUtils doesn&amp;#39;t work for floating point numbers other than Float&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-693&quot;&gt;&lt;del&gt;LANG-693&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The problem is that &lt;a href=&quot;http://stackoverflow.com/a/13543600/474189&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Java allocates 23-bits&lt;/a&gt; for the &lt;a href=&quot;http://en.wikipedia.org/wiki/Significand&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;significand&lt;/a&gt; in a float. This guarantees &lt;b&gt;6&lt;/b&gt; decimal figures in the significand, not 7. The fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-693&quot; title=&quot;Method createNumber from NumberUtils doesn&amp;#39;t work for floating point numbers other than Float&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-693&quot;&gt;&lt;del&gt;LANG-693&lt;/del&gt;&lt;/a&gt; checks for the wrong values.&lt;/p&gt;

&lt;p&gt;I need to do some more investigation, but I see two solutions:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Leave the simple test in place, but change to &lt;tt&gt;&amp;lt; 7&lt;/tt&gt; and &lt;tt&gt;&amp;lt; 16&lt;/tt&gt; for floats and doubles respectively. And change it to count the size of the significand, not just the decimal places.&lt;/li&gt;
	&lt;li&gt;Change the approach and calculate the bit-length of the significand and switch types based on that.&lt;/li&gt;
&lt;/ol&gt;

</comment>
                            <comment id="14133671" author="dmjones500" created="Mon, 15 Sep 2014 07:56:34 +0000"  >&lt;p&gt;After further research (and a &lt;a href=&quot;http://stackoverflow.com/q/25831817/474189&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Stack Overflow question on the subject&lt;/a&gt;), I&apos;ve concluded that making decisions based on significand length is nigh-on impossible, not least because the significand length must be calculated when in binary form (not decimal).&lt;/p&gt;

&lt;p&gt;The correct approach depends upon what we intend to achieve with this method. The Javadocs are not specific on this topic, but I presume we want to guarantee (where possible) the following test result:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
assertEquals(inputString, NumberUtils.createNumber(inputString).toString());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If so, a simple approach is to convert to &lt;tt&gt;float&lt;/tt&gt; and test the &lt;tt&gt;toString()&lt;/tt&gt; representation. If this doesn&apos;t match, use &lt;tt&gt;double&lt;/tt&gt;. Finally we use &lt;tt&gt;BigDecimal&lt;/tt&gt; if neither matches. Does anyone have any thoughts on that approach?&lt;/p&gt;</comment>
                            <comment id="14246198" author="lihy70" created="Mon, 15 Dec 2014 00:13:43 +0000"  >&lt;p&gt;Personally, I prefer to use double for decimals by default, instead of float.&lt;/p&gt;</comment>
                            <comment id="15297957" author="githubbot" created="Tue, 24 May 2016 09:29:10 +0000"  >&lt;p&gt;GitHub user NickManley opened a pull request:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/commons-lang/pull/156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/commons-lang/pull/156&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-1018&quot; title=&quot;NumberUtils.createNumber(final String str)  Precision will be lost&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-1018&quot;&gt;&lt;del&gt;LANG-1018&lt;/del&gt;&lt;/a&gt;: Fix precision loss on NumberUtils.createNumber(String)&lt;/p&gt;

&lt;p&gt;    *&lt;b&gt;Warning: This patch will break backwards compatibility.&lt;/b&gt;*&lt;/p&gt;

&lt;p&gt;    This patch is designed to fix the loss of precision when using NumberUtils.createNumber(String). However, the fix is not 100% backwards compatible with the currently released commons-lang 3.4. To fix the loss of precision, values that were previously returning Floats are now returning Doubles. Some explicit casts may break as a result.&lt;/p&gt;

&lt;p&gt;    ```java&lt;br/&gt;
    // Works in 3.4, but causes ClassCastException in patch.&lt;br/&gt;
    Float f = (Float) NumberUtils.createNumber(&quot;-160952.54&quot;);&lt;br/&gt;
    System.out.println(f); // prints &quot;-160952.55&quot;&lt;/p&gt;

&lt;p&gt;    // Works with patch.&lt;br/&gt;
    Double d = (Double) NumberUtils.createNumber(&quot;-160952.54&quot;);&lt;br/&gt;
    System.out.println(d); // prints &quot;-160952.54&quot;&lt;br/&gt;
    ```&lt;/p&gt;

&lt;p&gt;You can merge this pull request into a Git repository by running:&lt;/p&gt;

&lt;p&gt;    $ git pull &lt;a href=&quot;https://github.com/NickManley/commons-lang&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/NickManley/commons-lang&lt;/a&gt; &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-1018&quot; title=&quot;NumberUtils.createNumber(final String str)  Precision will be lost&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-1018&quot;&gt;&lt;del&gt;LANG-1018&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can review and apply these changes as the patch at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/commons-lang/pull/156.patch&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/commons-lang/pull/156.patch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To close this pull request, make a commit to your master/trunk branch&lt;br/&gt;
with (at least) the following in the commit message:&lt;/p&gt;

&lt;p&gt;    This closes #156&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;commit b77db22614da6f0c674b57cd0086048b58b30135&lt;br/&gt;
Author: Nick Manley &amp;lt;nickmanley89@outlook.com&amp;gt;&lt;br/&gt;
Date:   2016-05-24T09:10:29Z&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-1018&quot; title=&quot;NumberUtils.createNumber(final String str)  Precision will be lost&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-1018&quot;&gt;&lt;del&gt;LANG-1018&lt;/del&gt;&lt;/a&gt;: Fix precision loss on NumberUtils.createNumber(String)&lt;/p&gt;

&lt;hr /&gt;</comment>
                            <comment id="15316718" author="pascalschumacher" created="Mon, 6 Jun 2016 16:25:42 +0000"  >&lt;p&gt;@everybody: Any opinions on the pull request?&lt;/p&gt;</comment>
                            <comment id="15316755" author="sebb@apache.org" created="Mon, 6 Jun 2016 16:54:44 +0000"  >&lt;p&gt;The calls to createDouble and createBigDecimal could be pushed down into the conditionals so they are only done if necessary.&lt;br/&gt;
Otherwise looks OK.&lt;/p&gt;

&lt;p&gt;Also, I wonder about the allZeros checks - could the condition allZeros == true be dealt with earlier?&lt;br/&gt;
(not directly related to the patch)&lt;/p&gt;</comment>
                            <comment id="15316821" author="githubbot" created="Mon, 6 Jun 2016 17:32:05 +0000"  >&lt;p&gt;Github user PascalSchumacher commented on the issue:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/commons-lang/pull/156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/commons-lang/pull/156&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    @NickManley Not sure if you checking jira, so I thought I let you know there is some feedback on your pull request there: &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-1018?focusedCommentId=15316755&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15316755&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/LANG-1018?focusedCommentId=15316755&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15316755&lt;/a&gt;&lt;/p&gt;
</comment>
                            <comment id="15323824" author="nmanley" created="Fri, 10 Jun 2016 04:10:02 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sebb%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;sebb@apache.org&quot;&gt;Sebb&lt;/a&gt; - I updated the commit. I was not able to move the call to createDouble into the conditional because it is used in both conditional checks. I was however able to move the createBigDecimal call down.&lt;/p&gt;</comment>
                            <comment id="15323833" author="githubbot" created="Fri, 10 Jun 2016 04:18:38 +0000"  >&lt;p&gt;Github user coveralls commented on the issue:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/commons-lang/pull/156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/commons-lang/pull/156&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;    [!&lt;span class=&quot;error&quot;&gt;&amp;#91;Coverage Status&amp;#93;&lt;/span&gt;(&lt;a href=&quot;https://coveralls.io/builds/6540761/badge)](https://coveralls.io/builds/6540761&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://coveralls.io/builds/6540761/badge)](https://coveralls.io/builds/6540761&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;    Coverage increased (+0.02%) to 93.466% when pulling *&lt;b&gt;07354e2df2189ba5a99a17c0a1583fd96723f685 on NickManley:&lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-1018&quot; title=&quot;NumberUtils.createNumber(final String str)  Precision will be lost&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-1018&quot;&gt;&lt;del&gt;LANG-1018&lt;/del&gt;&lt;/a&gt;&lt;/b&gt;* into *&lt;b&gt;f08c4f6ae9f8190bcaf0a8bbb82530233bf51bf9 on apache:master&lt;/b&gt;*.&lt;/p&gt;
</comment>
                            <comment id="15326378" author="githubbot" created="Sun, 12 Jun 2016 11:27:58 +0000"  >&lt;p&gt;Github user asfgit closed the pull request at:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/commons-lang/pull/156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/commons-lang/pull/156&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="15326380" author="githubbot" created="Sun, 12 Jun 2016 11:28:03 +0000"  >&lt;p&gt;Github user PascalSchumacher commented on the issue:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://github.com/apache/commons-lang/pull/156&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/apache/commons-lang/pull/156&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;    Thanks! :+1: &lt;/p&gt;</comment>
                            <comment id="15326384" author="pascalschumacher" created="Sun, 12 Jun 2016 11:29:48 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=nmanley&quot; class=&quot;user-hover&quot; rel=&quot;nmanley&quot;&gt;Nick Manley&lt;/a&gt; Thanks for the pull request!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sebb%40apache.org&quot; class=&quot;user-hover&quot; rel=&quot;sebb@apache.org&quot;&gt;Sebb&lt;/a&gt; Thanks for the review!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12915772">LANG-1187</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12954902">LANG-1215</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 12 Sep 2014 12:07:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>394975</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            24 weeks, 3 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1w073:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>395110</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>