<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 23:12:48 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-146/LANG-146.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-146] Enum does not support inner sub-classes</title>
                <link>https://issues.apache.org/jira/browse/LANG-146</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;The org.apache.commons.lang.enum.Enum class does not support the following&lt;br/&gt;
construct of static inner anonymous sub-classed constants:&lt;/p&gt;

&lt;p&gt;public abstract class MyEnum extends Enum {&lt;br/&gt;
	public static final MyEnum ENUM1 = new MyEnum(&quot;enum1&quot;) {&lt;br/&gt;
		public String getValue() &lt;/p&gt;
{
			return &quot;X&quot;;
		}
&lt;p&gt;	};&lt;/p&gt;

&lt;p&gt;	public static final MyEnum ENUM2 = new MyEnum(&quot;enum2&quot;) {&lt;br/&gt;
		public String getValue() &lt;/p&gt;
{
			return &quot;Y&quot;;
		}
&lt;p&gt;	};&lt;/p&gt;

&lt;p&gt;	/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Constructor.&lt;br/&gt;
	 */&lt;br/&gt;
	protected MyEnum(String name) 
{
		super(name);
	}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;	/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Returns a value.&lt;/li&gt;
	&lt;li&gt;Creation date: (16/12/2002 13:25:35)&lt;br/&gt;
	 */&lt;br/&gt;
	public abstract String getValue();&lt;br/&gt;
}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;ENUM1 and ENUM2 are assigned anonymous inner class names &apos;MyEnum$0&apos; and&lt;br/&gt;
&apos;MyEnum$1&apos; respectively instead of the super class &apos;MyEnum&apos; when added to the&lt;br/&gt;
list of enumerations kept in the Enum super class via the Enum constructor.&lt;/p&gt;

&lt;p&gt;A simple work around is to strip the inner class descriminator off the class&lt;br/&gt;
name  in the Enum constructor, i.e.&lt;/p&gt;

&lt;p&gt;    protected Enum(String name) {&lt;br/&gt;
        super();&lt;br/&gt;
        if (name == null || name.length() == 0) &lt;/p&gt;
{
            throw new IllegalArgumentException(&quot;The Enum name must not be empty&quot;);
        }
&lt;p&gt;        iName = name;&lt;/p&gt;

&lt;p&gt;        // Retrieve class name.&lt;br/&gt;
        String className = getClass().getName();&lt;/p&gt;

&lt;p&gt;        // Search for inner class.&lt;br/&gt;
        int index = className.lastIndexOf(&apos;$&apos;);&lt;br/&gt;
        if (index &amp;gt; -1) &lt;/p&gt;
{
                // Strip off inner class reference.
                className = className.substring(0, index);
        }

&lt;p&gt;        Entry entry = (Entry) cEnumClasses.get(className);&lt;/p&gt;

&lt;p&gt;        if (entry == null) &lt;/p&gt;
{
            entry = new Entry();
            cEnumClasses.put(className, entry);
        }
&lt;p&gt;        if (entry.map.containsKey(name)) &lt;/p&gt;
{
            throw new IllegalArgumentException(&quot;The Enum name must be unique, &apos;&quot;
+ name + &quot;&apos; has already been added&quot;);
        }
&lt;p&gt;        entry.map.put(name, this);&lt;br/&gt;
        entry.list.add(this);&lt;br/&gt;
    }&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: other&lt;br/&gt;
Platform: PC&lt;/p&gt;</environment>
        <key id="12340462">LANG-146</key>
            <summary>Enum does not support inner sub-classes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="chris.webb@voxsurf.com">Chris Webb</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Dec 2002 20:38:22 +0000</created>
                <updated>Tue, 16 May 2006 12:44:37 +0000</updated>
                            <resolved>Tue, 16 May 2006 12:44:37 +0000</resolved>
                                    <version>2.0</version>
                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12403366" author="scolebourne@joda.org" created="Thu, 19 Dec 2002 07:21:47 +0000"  >&lt;p&gt;In the example given, it would seem appropriate to add an extra parameter to &lt;br/&gt;
the constructor:&lt;/p&gt;

&lt;p&gt;public static final MyEnum ENUM1 = new MyEnum(&quot;enum1&quot;, &quot;X&quot;);&lt;/p&gt;

&lt;p&gt;Does this solve the problem?&lt;/p&gt;</comment>
                            <comment id="12403367" author="chris.webb@voxsurf.com" created="Thu, 19 Dec 2002 22:07:33 +0000"  >&lt;p&gt;Yes I agree if the inner sub-class method was just returning a value then&lt;br/&gt;
modifying the constructor to take in the value would work because no&lt;br/&gt;
sub-classing would be required. My example was probably not the best because I&lt;br/&gt;
was thinking more along the lines where the static enum definition contained a&lt;br/&gt;
method that encapsulated logic other than merely returning a value which would&lt;br/&gt;
require sub-classing.&lt;/p&gt;</comment>
                            <comment id="12403368" author="scolebourne@joda.org" created="Wed, 1 Jan 2003 06:46:36 +0000"  >&lt;p&gt;Change made to support functional enums along the lines proposed here. Check &lt;br/&gt;
the CVS.&lt;/p&gt;</comment>
                            <comment id="12403369" author="chris.webb@voxsurf.com" created="Thu, 30 Jan 2003 00:10:06 +0000"  >&lt;p&gt;Created an attachment (id=4621)&lt;br/&gt;
Patch Enum class&lt;/p&gt;</comment>
                            <comment id="12403370" author="chris.webb@voxsurf.com" created="Thu, 30 Jan 2003 00:11:19 +0000"  >&lt;p&gt;Created an attachment (id=4622)&lt;br/&gt;
Enum test class&lt;/p&gt;</comment>
                            <comment id="12403371" author="chris.webb@voxsurf.com" created="Thu, 30 Jan 2003 00:12:28 +0000"  >&lt;p&gt;I found a bug with my original very simplisting solution. The follwing is the&lt;br/&gt;
correct algorythm to determine the actual enumeration class for a given&lt;br/&gt;
enumeration object which may be defined by an inner class. I&apos;ve attached the&lt;br/&gt;
patched class and a test class.&lt;/p&gt;

&lt;p&gt;// Search for actual enumerated type. This is necessary as enumerated types might&lt;br/&gt;
// be defined by inner classes. The actual enumerated type is defined as the top&lt;br/&gt;
container or&lt;br/&gt;
// declaring class that can be assigned to the actual class of enumeration being&lt;br/&gt;
added.&lt;br/&gt;
Class clazz = this.getClass();&lt;br/&gt;
while (clazz.getDeclaringClass() != null &amp;amp;&amp;amp;     &lt;br/&gt;
clazz.getDeclaringClass().isAssignableFrom(this.getClass())) &lt;/p&gt;
{
	clazz = clazz.getSuperclass();
}</comment>
                            <comment id="12403372" author="scolebourne@joda.org" created="Wed, 5 Feb 2003 02:33:28 +0000"  >&lt;p&gt;Regrettably, getDeclaringClass() doesn&apos;t function correctly on my JDK141. I &lt;br/&gt;
have got a version and test code on the CVS for your problem, and also to &lt;br/&gt;
support hierarchical Enums now. Perhaps you could test that?&lt;br/&gt;
Stephen&lt;/p&gt;</comment>
                            <comment id="12403373" author="scolebourne@joda.org" created="Mon, 24 Mar 2003 00:26:51 +0000"  >&lt;p&gt;Closing as I believe fixed in CVS&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12332093" name="ASF.LICENSE.NOT.GRANTED--Enum.java" size="14401" author="chris.webb@voxsurf.com" created="Thu, 30 Jan 2003 00:10:06 +0000"/>
                            <attachment id="12332094" name="ASF.LICENSE.NOT.GRANTED--VxsTestEnum.java" size="2453" author="chris.webb@voxsurf.com" created="Thu, 30 Jan 2003 00:11:19 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15439</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Dec 2002 07:21:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34070</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            13 years, 38 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d6hz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74829</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>