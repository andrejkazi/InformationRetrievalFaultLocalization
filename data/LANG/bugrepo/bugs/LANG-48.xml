<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 23:43:17 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-48/LANG-48.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-48] static option for reversing the stacktrace</title>
                <link>https://issues.apache.org/jira/browse/LANG-48</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;The nestableDelegate dumps the stacktrace bottomup instead of topdown as is the custom in the JDK &lt;br/&gt;
(especially in JDK 1.4&apos;s own chained exceptions).&lt;/p&gt;

&lt;p&gt;Thus when using NestableException you &lt;br/&gt;
will always see the first low-level exception (e.g. an Null Exception) and you&apos;ll have to go all the &lt;br/&gt;
way to the bottom to see the highlevel exception (e.g. an HibernateQueryException: Error while &lt;br/&gt;
parsing query at &apos;s.count()&apos;)&lt;/p&gt;

&lt;p&gt;This is not very friendly to users because hopefully the &lt;br/&gt;
highlevel exception will be the best explanation in 9 out of 10 causes, it is only when debugging or &lt;br/&gt;
in misbehaved exception handling one like to see the root causes - and THEN one can go down and read &lt;br/&gt;
the bottom of the stack trace.&lt;/p&gt;

&lt;p&gt;Thus, I would suggest that you make it possible to have &lt;br/&gt;
NestableDelegate print the stacktrace in reverce so the highlevel exception get printed first &lt;br/&gt;
and THEN the lower-levels.&lt;/p&gt;

&lt;p&gt;And optimal one could set an &lt;br/&gt;
NestableDelegate.printStackTraceTopDown=true as an system property so one could choose &lt;br/&gt;
which strategy should be activated in the system. &lt;/p&gt;

&lt;p&gt;Am I making any sense ? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: other&lt;br/&gt;
Platform: Other&lt;/p&gt;</environment>
        <key id="12340404">LANG-48</key>
            <summary>static option for reversing the stacktrace</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="max@eos.dk">Max Rydahl Andersen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Nov 2002 23:41:04 +0000</created>
                <updated>Tue, 16 May 2006 12:45:38 +0000</updated>
                            <resolved>Tue, 16 May 2006 12:45:38 +0000</resolved>
                                    <version>2.0</version>
                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12403185" author="alex@apache.org" created="Mon, 31 Mar 2003 00:26:21 +0000"  >&lt;p&gt;&quot;This is not very friendly to users because hopefully the &lt;br/&gt;
highlevel exception will be the best explanation in 9 out of 10 causes,&quot;&lt;/p&gt;

&lt;p&gt;This is contrary to my experience.  I find that the higher level exceptions &lt;br/&gt;
usually cloud the issue, obscuring a low-level explanation (e.g. Disk Full) &lt;br/&gt;
with an package-level explanation (e.g. StorageLayerException) that was layered &lt;br/&gt;
on in order to satisfy Java&apos;s neurotic exception checking.  In addition, this &lt;br/&gt;
high-level exception has the &lt;b&gt;wrong&lt;/b&gt; stack trace, since it was thrown from a &lt;br/&gt;
different line of code than the one that caused the error; so you &lt;b&gt;have&lt;/b&gt; to &lt;br/&gt;
scroll down and then seek back up again to find the start of the real stack &lt;br/&gt;
trace.&lt;/p&gt;

&lt;p&gt;&quot;it is only when debugging or in misbehaved exception handling one like to see &lt;br/&gt;
the root causes - and THEN one can go down and read the bottom of the stack &lt;br/&gt;
trace.&quot;&lt;/p&gt;

&lt;p&gt;I disagree with this statement too.  While I do believe that users should be &lt;br/&gt;
given information when something goes wrong, naive users should never be forced &lt;br/&gt;
to read a stack trace or an exception message.  For them, &lt;b&gt;any&lt;/b&gt; exception at &lt;br/&gt;
all translates as &quot;Something bad happened (plus technical gobbledegook).&quot;&lt;/p&gt;

&lt;p&gt;That means that the &lt;b&gt;only&lt;/b&gt; users interested in the content would presumably &lt;br/&gt;
only be interested because they are debugging.&lt;/p&gt;

&lt;p&gt;It sounds like the bug reporter needs to install a higher-level error handling &lt;br/&gt;
routine in his application.  While throwables can be a nice way to signal &lt;br/&gt;
application errors, there needs to be a different way for your application to &lt;br/&gt;
figure out what message to present to the user.  This can be as simple as &quot;An &lt;br/&gt;
error occured while X&quot; where X is &quot;Loading foo.xml&quot; or &quot;Communicating with the &lt;br/&gt;
server&quot;, and you can even generate these by looking at the high-level exception &lt;br/&gt;
and having a mapping table of your own (StorageLayerException -&amp;gt; &quot;Accessing the &lt;br/&gt;
local disk&quot;) but displaying &quot;com.myapp.storage.StorageLayerException: ...&quot; to &lt;br/&gt;
the user is already assuming she&apos;s technical enough to even bother reading it &lt;br/&gt;
past the &quot;com.myapp.&quot;, let alone comprehend it.&lt;/p&gt;

&lt;p&gt;After all that, however, I&apos;m not sure what the correct default behavior is for &lt;br/&gt;
lang.exception.  There is a very strong argument that it should behave just &lt;br/&gt;
like JDK; if so, there&apos;s another argument that there should be an option to &lt;br/&gt;
reverse it for people like me who prefer it upside-down.&lt;/p&gt;

&lt;p&gt;All IMHO, of course... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12403186" author="max@eos.dk" created="Mon, 31 Mar 2003 00:51:13 +0000"  >

&lt;p&gt;&quot;It sounds like the bug reporter needs to install a higher-level error handling &lt;/p&gt;


&lt;p&gt;routine in his application.&quot; &lt;/p&gt;




&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;




&lt;p&gt;I got a higher-level error handling routine which &quot;converts&quot; the correct message &lt;br/&gt;
to end-users.&lt;/p&gt;




&lt;p&gt;In my bug-report the word users was ment as &quot;developers&quot; which is the users of &lt;br/&gt;
the NestedException.&lt;/p&gt;




&lt;p&gt;And yes, I understand your viewpoint of the Disk full is better than &lt;br/&gt;
StorageException.....but as I wrote, if the top-level exception isn&apos;t good &lt;br/&gt;
enough then it is because of a &quot;mis-behaving&quot; application/exception hierachy.&lt;/p&gt;


&lt;p&gt;Thus if you got a good exception hierachy you write the correct message in the &lt;br/&gt;
top-level exception (e.g. DerefrenceException(&quot;Could not derefence property &lt;br/&gt;
&apos;kitten&apos; on Person&quot;)) and embed the Nullpointer exception that indicated it &lt;br/&gt;
inside the top-level exception.&lt;/p&gt;




&lt;p&gt;In this case it is much more meaningfull to see the DereferenceException than &lt;br/&gt;
the nullpointer exception. If the nullpointer exception is at the top, one &lt;br/&gt;
thinks it is a nasty bug...if DereferenceExcpeiton is at the top you know what &lt;br/&gt;
has happend and it is a valid exception (if you have tried to dereference &lt;br/&gt;
&apos;kitten&apos; on Person at least &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;




&lt;p&gt;But I would also prefer to have it as an option &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;









</comment>
                            <comment id="12403187" author="mohankishore@yahoo.com" created="Fri, 11 Apr 2003 09:30:29 +0000"  >&lt;p&gt;Created an attachment (id=5784)&lt;br/&gt;
Allows jdk1.4 like trace&lt;/p&gt;</comment>
                            <comment id="12403188" author="mohankishore@yahoo.com" created="Fri, 11 Apr 2003 09:36:38 +0000"  >&lt;p&gt;Have attached a patch which allows one to simulate the stack trace in jdk1.4.&lt;/p&gt;

&lt;p&gt;Added a couple of boolean attributes:&lt;br/&gt;
1) topDown - &lt;span class=&quot;error&quot;&gt;&amp;#91;true&amp;#93;&lt;/span&gt; prints the stack top down&lt;br/&gt;
2) trimStackFrames - &lt;span class=&quot;error&quot;&gt;&amp;#91;true&amp;#93;&lt;/span&gt; removes the repeated frames in nested exceptions&lt;/p&gt;

&lt;p&gt;Also added a method to ExceptionUtils to detect if Throwable class has a &lt;br/&gt;
getCause method. If so, the printStackTrace just uses that. &lt;/p&gt;

&lt;p&gt;The way it is implemented right now, the output looks very garbled in jdk1.4...&lt;/p&gt;</comment>
                            <comment id="12403189" author="mohankishore@yahoo.com" created="Wed, 30 Apr 2003 04:01:59 +0000"  >&lt;p&gt;The patch will cause the tests to fail. Please let me know if the basic idea is &lt;br/&gt;
acceptable - can then go ahead with the test cases (will require a complete &lt;br/&gt;
overhaul of the test cases). The test cases would have to run in both jre1.3 &lt;br/&gt;
and jre1.4...&lt;/p&gt;</comment>
                            <comment id="12403190" author="mohankishore@yahoo.com" created="Tue, 6 May 2003 02:00:52 +0000"  >&lt;p&gt;Created an attachment (id=6223)&lt;br/&gt;
Source and Test pacthes&lt;/p&gt;</comment>
                            <comment id="12403191" author="bayard" created="Wed, 14 May 2003 10:01:40 +0000"  >&lt;p&gt;Mohan&apos;s patch applied. Tests succeed.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12332069" name="ASF.LICENSE.NOT.GRANTED--Patch.txt" size="28567" author="mohankishore@yahoo.com" created="Tue, 6 May 2003 02:00:52 +0000"/>
                            <attachment id="12332068" name="ASF.LICENSE.NOT.GRANTED--Patch.txt" size="7763" author="mohankishore@yahoo.com" created="Fri, 11 Apr 2003 09:30:29 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14357</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 Mar 2003 00:26:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>147014</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            13 years, 31 weeks ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d73j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74926</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>