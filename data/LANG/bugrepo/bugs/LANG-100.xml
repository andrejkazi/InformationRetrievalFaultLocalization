<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 23:23:28 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-100/LANG-100.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-100] [lang] RandomStringUtils.random() family of methods create invalid unicode sequences</title>
                <link>https://issues.apache.org/jira/browse/LANG-100</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;Problem are surrogate pairs: &lt;br/&gt;
E.g. RandomStringUtils.random(int) may create strings with a high surrogate not&lt;br/&gt;
followed by a low surrogate character.&lt;/p&gt;

&lt;p&gt;When processing them, we get errors in string-conversion-functions later on.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: All&lt;br/&gt;
Platform: All&lt;/p&gt;</environment>
        <key id="12342756">LANG-100</key>
            <summary>[lang] RandomStringUtils.random() family of methods create invalid unicode sequences</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stefanhoehne@fastmail.fm">Stefan H&#246;hne</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Nov 2005 21:57:38 +0000</created>
                <updated>Tue, 6 Feb 2007 23:47:14 +0000</updated>
                            <resolved>Tue, 27 Jun 2006 07:28:09 +0000</resolved>
                                    <version>2.1</version>
                                    <fixVersion>2.2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12410969" author="ggregory@seagullsw.com" created="Thu, 1 Dec 2005 13:19:10 +0000"  >&lt;p&gt;Can you please provide a unit test case patch to demonstrate the issue? Thanks,&lt;br/&gt;
Gary.&lt;/p&gt;</comment>
                            <comment id="12410970" author="stefanhoehne@fastmail.fm" created="Tue, 6 Dec 2005 05:35:21 +0000"  >&lt;p&gt;Sorry, have never added a unit test patch. &lt;/p&gt;

&lt;p&gt;Here is a junit test case showing the problem. &lt;/p&gt;

&lt;p&gt;	/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Creates a human readable representation of any unicode character.&lt;/li&gt;
	&lt;li&gt;@param c - a unicode character&lt;/li&gt;
	&lt;li&gt;@return human readable representation for c&lt;br/&gt;
	 */&lt;br/&gt;
	static public String makeStringFromChar(char c)
	{
		// dirty for getting the char code from a character
		return Integer.toHexString((new Character(c)).hashCode());
	}&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;	/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Checks if the string got by 
{@link RandomStringUtils#random(int)}&lt;/li&gt;
	&lt;li&gt;can be converted to UTF-8 and back without loss.&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@author stefanhoehne@fastmail.fm&lt;/li&gt;
	&lt;li&gt;@throws Exception&lt;br/&gt;
	 */&lt;br/&gt;
	public void testRandom() throws Exception&lt;br/&gt;
	{&lt;br/&gt;
		final int size = 5000;&lt;br/&gt;
		final String encoding = &quot;UTF-8&quot;;&lt;br/&gt;
		final String orig = RandomStringUtils.random(size);&lt;br/&gt;
		final byte[] bytes = orig.getBytes(encoding);&lt;br/&gt;
		final String copy = new String(bytes, encoding);&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;		// for a verbose compare:&lt;br/&gt;
		for (int i=0; i&amp;lt;orig.length() &amp;amp;&amp;amp; i&amp;lt;copy.length(); ++i)&lt;/p&gt;
		{
			char o = orig.charAt(i);
			char c = copy.charAt(i);
			assertEquals(&quot;differs at &quot; + i + &quot;(&quot; + makeStringFromChar(o) + &quot;,&quot; +
makeStringFromChar(c) + &quot;)&quot;, o, c);
		}
&lt;p&gt;		// compare length also&lt;br/&gt;
		assertEquals(orig.length(), copy.length());&lt;br/&gt;
		// just to be complete&lt;br/&gt;
		assertEquals(orig, copy);&lt;br/&gt;
	}&lt;/p&gt;</comment>
                            <comment id="12410971" author="bayard" created="Mon, 24 Apr 2006 13:45:22 +0000"  >&lt;p&gt;Test indeed fails. &lt;/p&gt;

&lt;p&gt;Codewise, the a start of 0 and an end of Integer.MAX_VALUE are used. Each time&lt;br/&gt;
around the loop a random number is created and the following test is applied:&lt;/p&gt;

&lt;p&gt;            if ((letters &amp;amp;&amp;amp; Character.isLetter(ch))&lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; (numbers &amp;amp;&amp;amp; Character.isDigit(ch))&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; (!letters &amp;amp;&amp;amp; !numbers)) {&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;In this case, letters and numbers are false, so it passes quite happily (as it&apos;s&lt;br/&gt;
not a random restricted to letters or digits). &lt;/p&gt;

&lt;p&gt;So we need to be adding another test here, whether the character is correct&lt;br/&gt;
unicode for the high/low surrogate bit. Googling, it looks like high surrogates&lt;br/&gt;
are on the range 55296 (D800) to 56191 (DB7F); and there are &apos;private use high&lt;br/&gt;
surrogates&apos; from 56192 (DB80) to 56319 (DBFF). So if a random character exists&lt;br/&gt;
within that range, the following character must be a low surrogate. &lt;/p&gt;

&lt;p&gt;Low surrogates are 56320 (DC00) to 57343 (DFFF). &lt;/p&gt;

&lt;p&gt;So, dumb pseudo-code:&lt;/p&gt;

&lt;p&gt;if(char &amp;gt; 55296 &amp;amp;&amp;amp; char &amp;lt; 56191)&lt;br/&gt;
    count--&lt;br/&gt;
    char&lt;span class=&quot;error&quot;&gt;&amp;#91;count&amp;#93;&lt;/span&gt; = 56320 + random(128)&lt;/p&gt;

&lt;p&gt;But I don&apos;t get what the private high surrogates are, I can&apos;t find the &apos;low&apos;&lt;br/&gt;
alternative (not that I understand much of this). Was looking at this site: &lt;br/&gt;
&lt;a href=&quot;http://www.alanwood.net/unicode/private_use_high_surrogates.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.alanwood.net/unicode/private_use_high_surrogates.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Any thoughts?&lt;/p&gt;</comment>
                            <comment id="12417930" author="bayard" created="Tue, 27 Jun 2006 07:28:09 +0000"  >&lt;p&gt;Fixed for high/low I believe, but private high get skipped currently.&lt;/p&gt;

&lt;p&gt;svn ci -m &quot;Adding a test and a fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-100&quot; title=&quot;[lang] RandomStringUtils.random() family of methods create invalid unicode sequences&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-100&quot;&gt;&lt;del&gt;LANG-100&lt;/del&gt;&lt;/a&gt;. This is a bug in which the randomly created String can some&lt;br/&gt;
times be illegal unicode; because the code does not consider when relationships exist between characters. High and low surrogates are now dealt with, but I&apos;m skipping private high surrogates because I can&apos;t find out what to do. Need to go plod very slowly through the spec. This site was very useful: &lt;a href=&quot;http://www.alanwood.net/unicode/private_use_high_surrogates.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.alanwood.net/unicode/private_use_high_surrogates.html&lt;/a&gt;&quot; src/&lt;b&gt;/org/apache/commons/lang/Random&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Sending        src/java/org/apache/commons/lang/RandomStringUtils.java&lt;br/&gt;
Sending        src/test/org/apache/commons/lang/RandomStringUtilsTest.java&lt;br/&gt;
Transmitting file data ..&lt;br/&gt;
Committed revision 417319.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37690</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 1 Dec 2005 13:19:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34056</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            10 years, 24 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d6s7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74875</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>