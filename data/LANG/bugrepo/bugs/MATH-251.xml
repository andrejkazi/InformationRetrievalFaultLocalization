<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Dec 03 17:47:38 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/MATH-251/MATH-251.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[MATH-251] Improve the Fraction class to avoid overflow problems and increase features</title>
                <link>https://issues.apache.org/jira/browse/MATH-251</link>
                <project id="12310485" key="MATH">Commons Math</project>
                    <description>&lt;p&gt;Hello everybody,&lt;/p&gt;

&lt;p&gt;I&apos;ve improved and extended the &lt;em&gt;&lt;b&gt;Fraction&lt;/b&gt;&lt;/em&gt; class for my personal needs, but it could be nice to incorporate it within the &lt;em&gt;commons-math&lt;/em&gt; library., either by modifying the current &lt;em&gt;&lt;b&gt;Fraction&lt;/b&gt;&lt;/em&gt; class, or by creating a new class which could be called &lt;em&gt;&lt;b&gt;AdvancedFraction&lt;/b&gt;&lt;/em&gt; or something like that. I&apos;ve tried to keep all features from the original &lt;em&gt;&lt;b&gt;Fraction&lt;/b&gt;&lt;/em&gt; class.&lt;/p&gt;

&lt;p&gt;&lt;font color=&quot;green&quot;&gt;New features :&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I needed to avoid overflow problem. As a result, I&apos;ve changed numerator and denominator to &lt;em&gt;&lt;b&gt;BigInteger&lt;/b&gt;&lt;/em&gt; and all associated methods / constructors.&lt;/li&gt;
	&lt;li&gt;I&apos;ve also added other methods and static fields such as :
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; toString()
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Fraction add(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Fraction subtract(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Fraction multiply(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Fraction divide(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Fraction pow(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; exponent)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; pow(Fraction exponent)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; BigDecimal bigDecimalValue()
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Fraction clone()
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; percentageValue()
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Fraction ONE_HALF = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Fraction(1, 2)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Fraction ONE_QUARTER = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Fraction(1, 4)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
	&lt;li&gt;I&apos;ve made sure that the original Junit test within the &lt;em&gt;&lt;b&gt;FractionTest&lt;/b&gt;&lt;/em&gt; class are all right (I&apos;ve just commented the overflow tests)&lt;/li&gt;
	&lt;li&gt;I&apos;ve made sure that checkstyle is all right without any tabs&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;font color=&quot;red&quot;&gt;Obviously, some things need to be reworked or improved :&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Some methods are still naively implemented, such as
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Fraction add(Fraction fraction)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Fraction subtract(Fraction fraction)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; because I don&apos;t have converted the original &lt;em&gt;&lt;b&gt;private Fraction addSub(Fraction fraction, boolean isAdd)&lt;/b&gt;&lt;/em&gt; method.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;The original &lt;em&gt;&lt;b&gt;private Fraction(double value, double epsilon, int maxDenominator, int maxIterations)&lt;/b&gt;&lt;/em&gt; constructor may use &lt;em&gt;&lt;b&gt;BigDecimal&lt;/b&gt;&lt;/em&gt; instead of &lt;em&gt;&lt;b&gt;double&lt;/b&gt;&lt;/em&gt;. I&apos;m not sure it is relevant.&lt;/li&gt;
	&lt;li&gt;Junit tests have to be written with news methods (such as &lt;em&gt;&lt;b&gt;pow&lt;/b&gt;&lt;/em&gt;)&lt;/li&gt;
	&lt;li&gt;Some minor adaptations have to be done in the &lt;em&gt;&lt;b&gt;FractionFormat&lt;/b&gt;&lt;/em&gt; class (change &lt;em&gt;&lt;b&gt;getDenominator()&lt;/b&gt;&lt;/em&gt; by &lt;em&gt;&lt;b&gt;getDenominatorAsInt()&lt;/b&gt;&lt;/em&gt; for instance)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You&apos;ll find my work in the attached zip file :&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The &lt;em&gt;&lt;b&gt;Fraction&lt;/b&gt;&lt;/em&gt; and &lt;em&gt;&lt;b&gt;FractionTest&lt;/b&gt;&lt;/em&gt; classes&lt;/li&gt;
	&lt;li&gt;The javadoc generated with public and private fields and methods (to show you a complete overview)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thank you.&lt;/p&gt;</description>
                <environment>&lt;p&gt;java version &quot;1.6.0_12&quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_12-b04)&lt;br/&gt;
Java HotSpot(TM) Client VM (build 11.2-b01, mixed mode, sharing)&lt;/p&gt;

&lt;p&gt;Windows XP&lt;/p&gt;

&lt;p&gt;Eclipse Ganymede 3.4.1&lt;/p&gt;</environment>
        <key id="12421471">MATH-251</key>
            <summary>Improve the Fraction class to avoid overflow problems and increase features</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luc">Luc Maisonobe</assignee>
                                    <reporter username="bct">Benjamin Croizet</reporter>
                        <labels>
                    </labels>
                <created>Sat, 28 Mar 2009 08:58:43 +0000</created>
                <updated>Sat, 1 Jan 2011 07:13:10 +0000</updated>
                            <resolved>Mon, 30 Mar 2009 15:54:21 +0000</resolved>
                                    <version>1.2</version>
                                    <fixVersion>2.0</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12693413" author="bct" created="Sat, 28 Mar 2009 09:00:27 +0000"  >&lt;p&gt;New &lt;em&gt;&lt;b&gt;Fraction&lt;/b&gt;&lt;/em&gt; class and its javadoc documentation.&lt;/p&gt;</comment>
                            <comment id="12693475" author="luc" created="Sat, 28 Mar 2009 18:34:16 +0000"  >&lt;p&gt;The patch has been checked in the subversion repository as of r759543.&lt;/p&gt;

&lt;p&gt;Some changes have been made.&lt;br/&gt;
The class has been renamed BigFraction.&lt;br/&gt;
Some exception handling have been simplified (no special triggering of NullPointerException when the following code would trigger one automatically)&lt;br/&gt;
Some parts have been simplified.&lt;br/&gt;
The constructor from a double without any convergence parameters have been completely change, including its semantic! Since the numerator and denominator are unlimited, it seemed better to do an exact conversion for any regular double (i.e. all numbers except Double.NaN, Double.NEGATIVE_INFINITY and Double.POSITIVE_INFINITY).&lt;br/&gt;
An error in the comparator has been fixed: it considered BigFraction instanes to be equal when they were close enough, i.e. when they differ after the 16th digit approximately. This is even wrong when numerator and denominators are integers, for example 1068966896 / 340262731 and 411557987 / 131002976 evaluate to the same double (roughly PI) but are different fractions.&lt;br/&gt;
The denominator and numerator are now final, ensuring the instances are immutable. Some defensive copying have therefore being removed.&lt;br/&gt;
The test coverage have been improved.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure if the clone method is really needed. The class is immutable, couldn&apos;t we simply remove this method to avoid people copy everything when they can just share an instance ?&lt;/p&gt;

&lt;p&gt;I will wait for the answer to this question before closing the issue.&lt;/p&gt;

&lt;p&gt;Thanks for the patch.&lt;/p&gt;</comment>
                            <comment id="12693542" author="bct" created="Sun, 29 Mar 2009 10:58:48 +0000"  >&lt;p&gt;Ok I completely agree with you :&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the &lt;em&gt;&lt;b&gt;clone()&lt;/b&gt;&lt;/em&gt; method can be removed, since the class is immutable, it isn&apos;t necessary to keep it.&lt;/li&gt;
	&lt;li&gt;your improvement about the double constructor makes sens&lt;/li&gt;
	&lt;li&gt;indeed, I don&apos;t have used the &lt;em&gt;&lt;b&gt;MathRuntimeException.createNullPointerException&lt;/b&gt;&lt;/em&gt; method, better to use it as the &lt;em&gt;&lt;b&gt;Fraction&lt;/b&gt;&lt;/em&gt; class.&lt;/li&gt;
	&lt;li&gt;the &lt;em&gt;&lt;b&gt;compareTo&lt;/b&gt;&lt;/em&gt; method was effectively wrong, I just copied the one from the &lt;em&gt;&lt;b&gt;Fraction&lt;/b&gt;&lt;/em&gt; class without thinking &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ve just noticed a small improvement which could be done about the &lt;em&gt;&lt;b&gt;getReducedFraction()&lt;/b&gt;&lt;/em&gt; method :&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;we can remove the &lt;em&gt;&lt;b&gt;.reduce()&lt;/b&gt;&lt;/em&gt; code since the &lt;em&gt;&lt;b&gt;BigFraction(int, int)&lt;/b&gt;&lt;/em&gt; do it&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I see only few things to do now : &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add some tests for new methods in the &lt;em&gt;&lt;b&gt;BigFractionTest&lt;/b&gt;&lt;/em&gt; class (such as &lt;em&gt;&lt;b&gt;pow&lt;/b&gt;&lt;/em&gt;)&lt;/li&gt;
	&lt;li&gt;add two methods in the &lt;em&gt;&lt;b&gt;FractionFormat&lt;/b&gt;&lt;/em&gt; class :
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; formatFraction(BigFraction f)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;StringBuffer&lt;/span&gt; format(BigFraction fraction, &lt;span class=&quot;code-object&quot;&gt;StringBuffer&lt;/span&gt; toAppendTo, FieldPosition pos)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;It is ok for me, you can close this ER when you&apos;ll feel it :o)&lt;/p&gt;

&lt;p&gt;Nice work Luc.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                            <comment id="12693813" author="luc" created="Mon, 30 Mar 2009 15:54:21 +0000"  >&lt;p&gt;the modifications discussed previously have been included.&lt;br/&gt;
Instead of adding methods to the existing FractionFormat class, a dedicated BigFractionFormat class has been added, since we need different classes to parse a string and create either a Fraction or a BigFraction depending on the parser used.&lt;/p&gt;

&lt;p&gt;The pow methods have been completely rewritten for efficiency (using an algorithm in O(ln&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;) instead of O&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; where n is the exponent value). The underlying integral pow methods have been added to MathUtils as they may be useful elsewhere.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12492558">LANG-663</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12404047" name="NewFraction.zip" size="97150" author="bct" created="Sat, 28 Mar 2009 09:00:27 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 28 Mar 2009 18:34:16 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>150455</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 36 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0rvlr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>160764</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>