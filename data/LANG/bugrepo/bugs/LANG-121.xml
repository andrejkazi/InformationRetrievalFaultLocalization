<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 23:18:52 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-121/LANG-121.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-121] split using null and max less than actual token count adds &quot;null&quot;</title>
                <link>https://issues.apache.org/jira/browse/LANG-121</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;/*&lt;/p&gt;

&lt;p&gt;This bug is using Commons Lang 1.0 with JDK 1.4.0_01.&lt;br/&gt;
The problem only occurs when using null as the separator and using a&lt;br/&gt;
max value which is less than the number of actual tokens and making &lt;br/&gt;
use of the last token which consists of what is left of the string&lt;br/&gt;
being tokenized. Because null is passed, the existing code loops through&lt;br/&gt;
the rest of the tokens, appending null to each of them, expecting that&lt;br/&gt;
the result will be the remaining string, except the string &quot;null&quot; is &lt;br/&gt;
appended rather than a real token...&lt;/p&gt;

&lt;p&gt;*/&lt;/p&gt;

&lt;p&gt;import org.apache.commons.lang.StringUtils;&lt;br/&gt;
import java.util.StringTokenizer;&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If you replace the&lt;/li&gt;
	&lt;li&gt;String[] split(String str, String separator, int max) code with the&lt;/li&gt;
	&lt;li&gt;fixedSplit code below, it will fix the problem.  The code below&lt;br/&gt;
demonstrates the problem&lt;/li&gt;
	&lt;li&gt;and the solution.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;NOTE: I have not run any JUnit tests for this - don&apos;t know how.  But - this&lt;br/&gt;
demonstrates the&lt;/li&gt;
	&lt;li&gt;but and supplies the solution.&lt;br/&gt;
 *&lt;br/&gt;
 */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;public class DemoSplitBug {&lt;br/&gt;
    public static final String strToSplit = &quot;This is a test of the emergency &lt;br/&gt;
broadcast system.&quot;;&lt;/p&gt;

&lt;p&gt;    public static void main(String[] args) &lt;/p&gt;
{
        DemoSplitBug.demoSplitBug(strToSplit);
        DemoSplitBug.demoSplitBugFix(strToSplit);
    }

&lt;p&gt;    public static void demoSplitBug(String theString) {&lt;br/&gt;
        String[] theSplits = StringUtils.split(theString, null, 4);&lt;br/&gt;
        for (int i = 0; i &amp;lt; theSplits.length; i++) &lt;/p&gt;
{
            String theSplit = theSplits[i];
            System.out.println(&quot;theSplit:&quot; + theSplit);
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    public static void demoSplitBugFix(String theString) {&lt;br/&gt;
        String[] theSplits = fixedSplit(theString, null, 4);&lt;br/&gt;
        for (int i = 0; i &amp;lt; theSplits.length; i++) &lt;/p&gt;
{
            String theSplit = theSplits[i];
            System.out.println(&quot;theSplit:&quot; + theSplit);
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;    public static String[] fixedSplit(String str, String separator, int max) {&lt;br/&gt;
        StringTokenizer tok = null;&lt;br/&gt;
        if (separator == null) &lt;/p&gt;
{
            // Null separator means we&apos;re using StringTokenizer&apos;s default
            // delimiter, which comprises all whitespace characters.
            tok = new StringTokenizer(str);
        }
&lt;p&gt; else &lt;/p&gt;
{
            tok = new StringTokenizer(str, separator);
        }

&lt;p&gt;        int listSize = tok.countTokens();&lt;br/&gt;
        if (max &amp;gt; 0 &amp;amp;&amp;amp; listSize &amp;gt; max) &lt;/p&gt;
{
            listSize = max;
        }

&lt;p&gt;        String[] list = new String&lt;span class=&quot;error&quot;&gt;&amp;#91;listSize&amp;#93;&lt;/span&gt;;&lt;br/&gt;
        int i = 0;&lt;br/&gt;
        int lastTokenBegin = 0;&lt;br/&gt;
        int lastTokenEnd = 0;&lt;br/&gt;
        while (tok.hasMoreTokens()) {&lt;br/&gt;
            if (max &amp;gt; 0 &amp;amp;&amp;amp; i == listSize - 1) &lt;/p&gt;
{
                // In the situation where we hit the max yet have
                // tokens left over in our input, the last list
                // element gets all remaining text.
                String endToken = tok.nextToken();
                lastTokenBegin = str.indexOf(endToken, lastTokenEnd);
                list[i] = str.substring(lastTokenBegin);
                break;
            }
&lt;p&gt; else &lt;/p&gt;
{
                list[i] = tok.nextToken();
                lastTokenBegin = str.indexOf(list[i], lastTokenBegin);
                lastTokenEnd = lastTokenBegin + list[i].length();
            }
&lt;p&gt;            i++;&lt;br/&gt;
        }&lt;br/&gt;
        return list;&lt;br/&gt;
    }&lt;br/&gt;
}&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: All&lt;br/&gt;
Platform: All&lt;/p&gt;</environment>
        <key id="12340390">LANG-121</key>
            <summary>split using null and max less than actual token count adds &quot;null&quot;</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mcdoma@ncs.com">Mark McDowell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Oct 2002 03:43:08 +0000</created>
                <updated>Tue, 16 May 2006 12:45:54 +0000</updated>
                            <resolved>Tue, 16 May 2006 12:45:54 +0000</resolved>
                                    <version>1.0</version>
                                    <fixVersion>1.0.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12403116" author="mcdoma@ncs.com" created="Wed, 30 Oct 2002 04:24:53 +0000"  >&lt;p&gt;Slightly embarassing, but what follows is code that works better than the &lt;br/&gt;
originally submitted code...&lt;/p&gt;

&lt;p&gt;    public static String[] split(String str, String separator, int max) {&lt;br/&gt;
        StringTokenizer tok = null;&lt;br/&gt;
        if (separator == null) &lt;/p&gt;
{
            // Null separator means we&apos;re using StringTokenizer&apos;s default
            // delimiter, which comprises all whitespace characters.
            tok = new StringTokenizer(str);
        }
&lt;p&gt; else &lt;/p&gt;
{
            tok = new StringTokenizer(str, separator);
        }

&lt;p&gt;        int listSize = tok.countTokens();&lt;br/&gt;
        if (max &amp;gt; 0 &amp;amp;&amp;amp; listSize &amp;gt; max) &lt;/p&gt;
{
            listSize = max;
        }

&lt;p&gt;        String[] list = new String&lt;span class=&quot;error&quot;&gt;&amp;#91;listSize&amp;#93;&lt;/span&gt;;&lt;br/&gt;
        int i = 0;&lt;br/&gt;
        int lastTokenBegin = 0;&lt;br/&gt;
        int lastTokenEnd = 0;&lt;br/&gt;
        while (tok.hasMoreTokens()) {&lt;br/&gt;
            if (max &amp;gt; 0 &amp;amp;&amp;amp; i == listSize - 1) &lt;/p&gt;
{
                // In the situation where we hit the max yet have
                // tokens left over in our input, the last list
                // element gets all remaining text.
                String endToken = tok.nextToken();
                lastTokenBegin = str.indexOf(endToken, lastTokenEnd);
                list[i] = str.substring(lastTokenBegin);
                break;
            }
&lt;p&gt; else &lt;/p&gt;
{
                list[i] = tok.nextToken();
                lastTokenBegin = str.indexOf(list[i], lastTokenEnd);
                lastTokenEnd = lastTokenBegin + list[i].length();
            }
&lt;p&gt;            i++;&lt;br/&gt;
        }&lt;br/&gt;
        return list;&lt;br/&gt;
    }&lt;/p&gt;</comment>
                            <comment id="12403117" author="bayard" created="Sat, 23 Nov 2002 09:08:12 +0000"  >&lt;p&gt;2nd code change committed as is to 1.0.1 and 1.1.&lt;/p&gt;</comment>
                            <comment id="12403118" author="bayard" created="Sat, 12 Jul 2003 10:12:56 +0000"  >&lt;p&gt;Fixed in 1.0.1&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>14062</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 23 Nov 2002 09:08:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34121</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            13 years, 22 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d6nj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74854</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>