<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 22:55:53 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-360/LANG-360.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-360] Why does appendIdentityToString return null?</title>
                <link>https://issues.apache.org/jira/browse/LANG-360</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;ObjectUtils is designed to handle null imputs gracefully. But ObjectUtils.appendIdentityToString does not. It returns null unnessecary if you pass null als second parameter (the object to get the identity from). For example appendIdentityToString(new StringBuffer(), null) will return null! Which is an uncommen behaviour. Think about code like this:&lt;/p&gt;

&lt;p&gt;ObjectUtils.appendIdentityToString(buffer, param1)&lt;br/&gt;
                    .appendIdentityToString(buffer, param2)&lt;br/&gt;
                    .appendIdentityToString(buffer, param3);&lt;/p&gt;

&lt;p&gt;This will cause an NPE if param1 or param2 ist null. There may be other code where a NPE will not happen, but the code is used for debugging and there will be an unexpected or wrong output.&lt;/p&gt;

&lt;p&gt;So you shoul return the StringBuffer which is passed in or a new one if null. The harder question is what to do with the object. I think we should append &quot;null&quot; to the StringBuffer, because this is what I would expect and what the passed reference is.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12380853">LANG-360</key>
            <summary>Why does appendIdentityToString return null?</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="jogi">J&#246;rg Gottschling</reporter>
                        <labels>
                    </labels>
                <created>Sun, 21 Oct 2007 12:22:49 +0000</created>
                <updated>Mon, 12 Nov 2007 22:54:23 +0000</updated>
                            <resolved>Mon, 12 Nov 2007 22:54:23 +0000</resolved>
                                                    <fixVersion>2.4</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12538659" author="bayard" created="Tue, 30 Oct 2007 04:25:31 +0000"  >&lt;p&gt;Definitely agreed that I wouldn&apos;t expect the chained style to fail just because null was passed into it.&lt;/p&gt;

&lt;p&gt;A StringBuffer with &quot;null&quot; in seems to make more sense than an empty StringBuffer. &lt;/p&gt;

&lt;p&gt;So +1 to both suggestions, and we just need to decide if we&apos;re happy making this change in 2.4.&lt;/p&gt;</comment>
                            <comment id="12538664" author="pbenedict" created="Tue, 30 Oct 2007 05:06:21 +0000"  >&lt;p&gt;What&apos;s ironic is that the current behavior is in perfect line with the javadoc:&lt;/p&gt;

&lt;p&gt;&quot;Appends the toString that would be produced by Object  if a class did not override toString itself. null  will return null. ObjectUtils.appendIdentityToString(*, null) = null&quot;&lt;/p&gt;

&lt;p&gt;Based on that, it&apos;s difficult to argue that the current behavior is incorrect. Almost all of Commons Lang behavior returns null where possible for a null source parameter.&lt;/p&gt;

&lt;p&gt;I recommend keeping the current behavior, but adding a second method that combines appendIdentityToString and defaultIfNull: &lt;/p&gt;

&lt;p&gt;appendIdentityToString(StringBuffer buffer, Object object, Object defaultValue)&lt;/p&gt;</comment>
                            <comment id="12538682" author="jogi" created="Tue, 30 Oct 2007 06:53:24 +0000"  >&lt;p&gt;Yes, this behavior is in sync with the javadoc. That&apos;s where I found it first. But that did not mean that it is a good behavior.&lt;/p&gt;

&lt;p&gt;I like to vote against a second method with a default value. Who needs a default value, when debugging an object? (If this bean is null, log another one?) A method appendIdentityToStringNullSave would be better, but a little ugly.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt; Almost all of Commons Lang behavior returns null where possible for a null source parameter.  &amp;lt;&amp;lt;&lt;/p&gt;

&lt;p&gt;Hm, I don&apos;t think so. And evan if it would be: Returning null, if the StringBuffer is null could be argued, but returning null if the second value is null is definitly a bad behavior. Remember this:&lt;br/&gt;
   appendIdentityToString(new StringBuffer(), null)  &lt;br/&gt;
Would you expect this to return null? But this does not return null:&lt;br/&gt;
   appendIdentityToString(null, new Object())&lt;br/&gt;
Really confusing.&lt;/p&gt;</comment>
                            <comment id="12538690" author="bens" created="Tue, 30 Oct 2007 07:35:49 +0000"  >&lt;p&gt;It&apos;s unfortunate that the API here forces the user to null-protect his parameters to it. I think it&apos;s clear that the better choice would have been to simply append &quot;null&quot;, since that is the toString() value of the null reference according to the JLS. That said, it is documented to work the way it does, and that makes it not wrong but simply annoying.&lt;/p&gt;

&lt;p&gt;+1 to Paul&apos;s idea and having a similarly named method with another parameter with a default value. Maybe we should also deprecate the current one for 2.4 with a warning explaining this problem.&lt;/p&gt;</comment>
                            <comment id="12538790" author="pbenedict" created="Tue, 30 Oct 2007 14:44:01 +0000"  >&lt;p&gt;After some further ruminations, I favor deprecating the current method (Ben&apos;s comment) but also coming up with a new name that corrects the behavior. Throwing in a third parameter is quite ugly and not necessary. Perhaps we can call it simply &quot;appendIdentity&quot; ? Funny that the current method is &quot;ToString&quot; when it really appends to a StringBuffer, not a String &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12538796" author="bayard" created="Tue, 30 Oct 2007 15:11:33 +0000"  >&lt;p&gt;+1 on &apos;appendIdentity&apos;.&lt;/p&gt;

&lt;p&gt;I also don&apos;t like the first parameter being nullable. There should be a version without that. &lt;/p&gt;

&lt;p&gt;appendIdentity(Object obj);StringBuffer&lt;br/&gt;
appendIdentity(Object obj, StringBuffer buffer);StringBuffer&lt;/p&gt;

&lt;p&gt;The downside is that that means making it the second parameter. It&apos;s a clash between the API rules that &apos;the target should come first&apos; and &apos;optional parameters should be on the end&apos;. An optional target is just odd &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Maybe:&lt;/p&gt;

&lt;p&gt;appendIdentityToNewBuffer(Object obj);StringBuffer&lt;br/&gt;
appendIdentity(StringBuffer buffer, Object obj);StringBuffer&lt;/p&gt;
</comment>
                            <comment id="12538844" author="jogi" created="Tue, 30 Oct 2007 16:42:11 +0000"  >&lt;p&gt;&amp;gt;&amp;gt; Perhaps we can call it simply &quot;appendIdentity&quot; ? Funny that the current method is &quot;ToString&quot; when it really appends to a StringBuffer, not a String &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;lt;&amp;lt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;   +1 on that!&lt;/p&gt;</comment>
                            <comment id="12538854" author="bens" created="Tue, 30 Oct 2007 16:53:49 +0000"  >&lt;p&gt;I like Henri&apos;s second suggestion better. Between that and deprecating the old method, I think everybody&apos;s happy &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                            <comment id="12539894" author="bayard" created="Sat, 3 Nov 2007 07:21:16 +0000"  >&lt;p&gt;Prodding it more - it&apos;s &quot;identityToString&quot;, meaning the identity toString() method; not the appending of the identity to java.lang.String. So the name makes syntactic sense - it&apos;s just confusing. &lt;/p&gt;</comment>
                            <comment id="12539896" author="bayard" created="Sat, 3 Nov 2007 07:50:35 +0000"  >&lt;p&gt;Brain kicks in.... Also, I wouldn&apos;t expect:&lt;/p&gt;

&lt;p&gt;ObjectUtils.appendIdentityToString(buffer, param1)&lt;br/&gt;
                    .appendIdentityToString(buffer, param2)&lt;br/&gt;
                    .appendIdentityToString(buffer, param3); &lt;/p&gt;

&lt;p&gt;to even compile. A StringBuffer is returned, not an ObjectUtils. &lt;/p&gt;

&lt;p&gt;Chaining isn&apos;t allowed here, the actual code would have been the very ugly and nested:&lt;/p&gt;

&lt;p&gt;            ObjectUtils.appendIdentityToString(&lt;br/&gt;
                ObjectUtils.appendIdentityToString(&lt;br/&gt;
                    ObjectUtils.appendIdentityToString(buffer, param1)&lt;br/&gt;
                    , param2)&lt;br/&gt;
                , param3);&lt;/p&gt;

&lt;p&gt;However that doesn&apos;t end up with a NullPointerException. Instead you get a very nasty bug whereby if param2 is null, then you&apos;ll end up with a  StringBuffer just containing the text of param1 - no param3. If you had &apos;buffer =&apos; on the front, then you just get param3 and no param1. &lt;/p&gt;

&lt;p&gt;Ideally the code should be:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;public static String identityToString(Object)&lt;/li&gt;
	&lt;li&gt;public static void appendIdentityToString(StringBuffer, Object)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Sod the StringBuffer creation - bet that was only there so the first method could reuse the second. The problem with that is that we don&apos;t have overloaded return types. So an alternative would be to deprecate both methods and have:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;public static String identity(Object)&lt;/li&gt;
	&lt;li&gt;public static void appendIdentity(StringBuffer, Object)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That would allow us to decide if we think a null Object passed in should return the String &quot;null&quot; or null in the first case; and result in &quot;null&quot; or &quot;&quot; in the second. &lt;/p&gt;

&lt;p&gt;Alternatively, we could go with an overload of the original name:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;public static String identityToString(Object)&lt;/li&gt;
	&lt;li&gt;public static void identityToString(StringBuffer, Object)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;but that would make the &quot;null&quot; bit bad if we do it.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                            <comment id="12539897" author="bayard" created="Sat, 3 Nov 2007 08:01:02 +0000"  >&lt;p&gt;Attaching a patch with the solution originally suggested. It should be pretty close to some of the other options. &lt;/p&gt;

&lt;p&gt;A bit more testing should be done on the new methods.&lt;/p&gt;</comment>
                            <comment id="12539914" author="scolebourne" created="Sat, 3 Nov 2007 10:48:09 +0000"  >&lt;p&gt;Are we not over-thinking this? The method does what it says it does, and is perfectly usable as such.&lt;/p&gt;

&lt;p&gt;This method is meant to simulate the identity toString, which can naturally only be called on a non-null object. If anything, it probably should have thrown an exception for a non-null second argument.&lt;/p&gt;

&lt;p&gt;If you do decide to add a new method, could I suggest considering creating a StringBufferUtils class, with methods similar to StringUtils. appendIdentityToString(StringBuffer, Object) would naturally fit there, and could be defined to append &quot;null&quot; if the object is null.&lt;/p&gt;
</comment>
                            <comment id="12540209" author="bayard" created="Mon, 5 Nov 2007 15:56:57 +0000"  >&lt;p&gt;The problem with the method lies with the automagical creation. Passing in null should not lead to a StringBuffer being created and then returned - the user should be responsible for their parameters. StringBuffer methods should have void return types. &lt;/p&gt;

&lt;p&gt;The best way to solve that is to deprecate the old StringBuffer method and add a new method of:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;public static void identityToString(StringBuffer, Object)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;One that throws an NPE if the first param is null.&lt;/p&gt;

&lt;p&gt;The second question is what to do in the case of Object being null. Currently the String variant returns null. The new StringBuffer variant could either append &quot;null&quot;, &quot;&quot;, or throw an NPE. The old library was effectively appending &quot;&quot;, so that&apos;s the current behaviour. I can see value in all three options, so suggest we stick with the empty String option - ie) nothing happens to the buffer. &lt;/p&gt;</comment>
                            <comment id="12540224" author="pbenedict" created="Mon, 5 Nov 2007 17:30:29 +0000"  >&lt;p&gt;Stephen says: &quot;This method is meant to simulate the identity toString&quot;. Based on his words, I concur that passing a null object should throw an exception. &lt;/p&gt;

&lt;p&gt;Thus I recommend:&lt;br/&gt;
(1) return void to get rid of method chaining &lt;br/&gt;
(2) throw an exception is StringBuffer is null&lt;br/&gt;
(3) throw an exception if Object is null&lt;/p&gt;

&lt;p&gt;#3 makes most sense. There is no identity to a null object.&lt;/p&gt;</comment>
                            <comment id="12541935" author="bayard" created="Mon, 12 Nov 2007 20:23:15 +0000"  >&lt;p&gt;Attaching another attempt at this - matches consensus atm.&lt;/p&gt;

&lt;p&gt;New method.&lt;br/&gt;
Old method deprecated.&lt;br/&gt;
Throws NPEs for null input.&lt;/p&gt;</comment>
                            <comment id="12541940" author="bens" created="Mon, 12 Nov 2007 20:31:52 +0000"  >&lt;p&gt;Looks good. +1.&lt;/p&gt;</comment>
                            <comment id="12541973" author="bayard" created="Mon, 12 Nov 2007 22:54:23 +0000"  >&lt;p&gt;svn ci -m &quot;Applying my second patch from &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-360&quot; title=&quot;Why does appendIdentityToString return null?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-360&quot;&gt;&lt;del&gt;LANG-360&lt;/del&gt;&lt;/a&gt; - it seems to do what Stephane/Paul and I are consensing on&quot; src&lt;/p&gt;

&lt;p&gt;Sending        src/java/org/apache/commons/lang/ObjectUtils.java&lt;br/&gt;
Sending        src/test/org/apache/commons/lang/ObjectUtilsTest.java&lt;br/&gt;
Transmitting file data ..&lt;br/&gt;
Committed revision 594336.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12369392" name="LANG-360.patch" size="3635" author="bayard" created="Mon, 12 Nov 2007 20:23:14 +0000"/>
                            <attachment id="12368920" name="LANG-360.patch" size="4778" author="bayard" created="Sat, 3 Nov 2007 08:01:00 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Oct 2007 04:25:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34122</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            9 years, 4 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d66v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74779</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>