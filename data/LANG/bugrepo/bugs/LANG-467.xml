<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Wed Nov 30 23:08:06 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LANG-467/LANG-467.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[LANG-467] EqualsBuilder and HashCodeBuilder treat java.math.BigDecimal inconsistantly and break general contract of hashCode</title>
                <link>https://issues.apache.org/jira/browse/LANG-467</link>
                <project id="12310481" key="LANG">Commons Lang</project>
                    <description>&lt;p&gt;A POJO with a BigDecimal field and equals() and hashCode() methods implemented using EqualsBuilder and HashCodeBuilder breaks the general contract of Object.hashCode();&lt;/p&gt;

&lt;p&gt;EqualsBuilder treats BigDecimal specially by comparing it using BigDecimal.compareTo() == 0 rather than BigDecimal.equals()&lt;br/&gt;
Using BigDecimal.compareTo() ignores the scale of the BigDecimal()&lt;/p&gt;

&lt;p&gt;However the append(Object o) method of HashCodeBuilder uses BigDecimal.hashCode() in the case that o is a BigDecimal, which takes the scale into account when generating the hashCode.&lt;/p&gt;

&lt;p&gt;The following test case shows the problem!&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-style: solid;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;border-bottom-style: solid;&quot;&gt;&lt;b&gt;TestApacheCommonsLangHashCodeBuilder.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; declaration and imports not shown
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestApacheCommonsLangHashCodeBuilder &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TestCase {
    
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testHashCode() {
        MyPojo myPojo1 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MyPojo(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;10.2&quot;&lt;/span&gt;));
        MyPojo myPojo2 = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MyPojo(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(&lt;span class=&quot;code-quote&quot;&gt;&quot;foo&quot;&lt;/span&gt;), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;10.20&quot;&lt;/span&gt;));
        
        &lt;span class=&quot;code-comment&quot;&gt;// equals method ignores the scale of the big decimal
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// so &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; test passes
&lt;/span&gt;        assertTrue(myPojo1.equals(myPojo2));
        
        &lt;span class=&quot;code-comment&quot;&gt;// however in the &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; the equals returns &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt; the
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// hashCode must be the same according to the contract
&lt;/span&gt;        &lt;span class=&quot;code-comment&quot;&gt;// TEST FAILS AT THIS LINE
&lt;/span&gt;        assertEquals(myPojo1.hashCode(), myPojo2.hashCode());
    }
    
    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; class MyPojo {
        &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name;
        &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; BigDecimal value;
        
        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; MyPojo(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name, BigDecimal value) {
            &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.name = name;
            &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.value = value;
        }
        
        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; getName() {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; name;
        }
        &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; BigDecimal getValue() {
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; value;
        }
        /**
         * equals method implemented using EqualsBuilder 
         * as documented by apache commons
         */
        @Override &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; equals(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; obj) {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; == obj) {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
            }
            
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(!(obj &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; MyPojo)) {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
            }
            
            MyPojo other = (MyPojo) obj;
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; EqualsBuilder()
                .append(name, other.getName())
                .append(value, other.getValue())
                .isEquals();
        }
        
        /**
         * hashCode method implemented using HashCodeBuilder
         * as documented by apache commons
         */
        @Override &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; hashCode() {
            HashCodeBuilder hcb = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashCodeBuilder(17, 31);
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; hcb
                .append(name)
                .append(value)
                .toHashCode();
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that the only reason I haven&apos;t provided a patch is because I could not think of one which I thought was reasonable.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Option 1&lt;/b&gt;&lt;br/&gt;
Always set the scale to some value and then get the hashCode()&lt;br/&gt;
Example change in HashCodeBuilder.append(Object) add the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (object &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; BigDecimal) {
	append(((BigDecimal) object).setScale(DEFAULT_BIGDECIMAL_SCALE, RoundingMode.DOWN).hashCode());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;However what is a reasonable scale for calculating this hashCode? I cannot see a reasonanble scale to choose, that depends on the circumstance&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Option 2&lt;/b&gt;&lt;br/&gt;
stripTrailingZeros() before calculating the hashCode()&lt;br/&gt;
Example change in HashCodeBuilder.append(Object) add the following:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (object &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; BigDecimal) {
	append(((BigDecimal) object).stripTrailingZeros().hashCode());
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The performance of this method under different circumstances is not documented.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Option 3&lt;/b&gt;&lt;br/&gt;
Document the problem and propose that the client solves the problem.&lt;br/&gt;
For example change HashCodeBuilder documentation as follows&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/*
 * ...
 * &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Person {
 *   &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name;
 *   &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; age;
 *   &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; smoker;
 *   BigDecimal netWorth;
 *   ...
 *
 *   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; hashCode() {
 *     &lt;span class=&quot;code-comment&quot;&gt;// you pick a hard-coded, randomly chosen, non-zero, odd number
&lt;/span&gt; *     &lt;span class=&quot;code-comment&quot;&gt;// ideally different &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; each class
&lt;/span&gt; *     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashCodeBuilder(17, 37).
 *       append(name).
 *       append(age).
 *       append(smoker).
 *       &lt;span class=&quot;code-comment&quot;&gt;// take special care when using BigDecimal as scale takes 
&lt;/span&gt; *       &lt;span class=&quot;code-comment&quot;&gt;// is included in the hashCode calculation breaking hashCode contract
&lt;/span&gt; *       &lt;span class=&quot;code-comment&quot;&gt;// choose a scale which is reasonable &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; hashCode calculation
&lt;/span&gt; *       append(netWorth == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; : netWorth.setScale(2)).
 *       toHashCode();
 *   }
 * }
 * ...
 */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12407261">LANG-467</key>
            <summary>EqualsBuilder and HashCodeBuilder treat java.math.BigDecimal inconsistantly and break general contract of hashCode</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="davey.jones">David Jones</reporter>
                        <labels>
                    </labels>
                <created>Mon, 27 Oct 2008 09:53:57 +0000</created>
                <updated>Mon, 27 Apr 2015 20:23:13 +0000</updated>
                            <resolved>Sat, 14 Nov 2009 10:10:43 +0000</resolved>
                                    <version>2.4</version>
                                    <fixVersion>2.5</fixVersion>
                                    <component>lang.builder.*</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="12642888" author="davey.jones" created="Mon, 27 Oct 2008 10:19:55 +0000"  >&lt;p&gt;typo fix and clarity improved&lt;/p&gt;</comment>
                            <comment id="12642946" author="joehni" created="Mon, 27 Oct 2008 15:54:30 +0000"  >&lt;p&gt;According javadoc of BigDecimal.equals() the method should fail for values with different scale. So the use of compareTo in the EqualsBuilder is wrong in this case.&lt;/p&gt;</comment>
                            <comment id="12642949" author="joehni" created="Mon, 27 Oct 2008 15:57:43 +0000"  >&lt;p&gt;Has already been reported in &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-393&quot; title=&quot;EqualsBuilder don&amp;#39;t compare BigDecimals correctly &quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-393&quot;&gt;&lt;del&gt;LANG-393&lt;/del&gt;&lt;/a&gt;. See discussion there.&lt;/p&gt;</comment>
                            <comment id="12642958" author="davey.jones" created="Mon, 27 Oct 2008 16:45:44 +0000"  >&lt;p&gt;The use of compareTo() in EqualsBuilder() is arguably wrong, however compareTo is referenced from the BigDecimal javadoc as the alternative to equals for cases where the scale is not relevant&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-393&quot; title=&quot;EqualsBuilder don&amp;#39;t compare BigDecimals correctly &quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-393&quot;&gt;&lt;del&gt;LANG-393&lt;/del&gt;&lt;/a&gt; it was decided that EqualsBuidler should use the compareTo() method to compare BigDecimals(), which is a nice convenience for those of use using BigDecimals in conjunction with EqualsBuilder and who want 0 and 0.0 to be considered equal.&lt;/p&gt;

&lt;p&gt;However &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-393&quot; title=&quot;EqualsBuilder don&amp;#39;t compare BigDecimals correctly &quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-393&quot;&gt;&lt;del&gt;LANG-393&lt;/del&gt;&lt;/a&gt; did not put the equivalent fix into the HashCodeBuilder so this has made HashCodeBuilder and EqualsBuilder non-symmetric. It was actually &lt;a href=&quot;https://issues.apache.org/jira/browse/LANG-393&quot; title=&quot;EqualsBuilder don&amp;#39;t compare BigDecimals correctly &quot; class=&quot;issue-link&quot; data-issue-key=&quot;LANG-393&quot;&gt;&lt;del&gt;LANG-393&lt;/del&gt;&lt;/a&gt; which added a feature to EqualsBuilder and at the same time created this bug in HashCodeBuilder.&lt;/p&gt;

&lt;p&gt;So as far as the EqualsBuilder is concerned 10.2 and 10.20 are equal, i.e. the following evaluates to true.&lt;/p&gt;
 &lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; EqualsBuilder().append(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;10.2&quot;&lt;/span&gt;), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;10.20&quot;&lt;/span&gt;)).isEquals();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However when using these two values with HashCodeBuilder they actually give different hashCodes(), the following evaluates to false.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashCodeBuilder(17, 37).append(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;10.2&quot;&lt;/span&gt;)).toHashCode() == &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashCodeBuilder(17, 37).append(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BigDecimal(&lt;span class=&quot;code-quote&quot;&gt;&quot;10.20&quot;&lt;/span&gt;)).toHashCode()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However the contract of hashCode() method for Object says that if two objects are considered equal using their equals method then they must also generate the same hashCode().&lt;/p&gt;

&lt;p&gt;Of course this is true for BigDecimal class itself, even though it is somewhat inconvenient. &lt;/p&gt;

&lt;p&gt;MyPojo class as given in the test case above &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;implements the equals() method as documented by EqualsBuilder&lt;/li&gt;
	&lt;li&gt;implements the hashCode() method as documented by HashCodeBuilder&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Despite following the documented approach for implementing equals and hashCode the test case &lt;b&gt;proves&lt;/b&gt; that MyPojo breaks the contract of hashCode(), the following evaluates to true&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
myPojo1.equals(myPojo2)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;However myPojo1 and myPojo2 generate different hashCodes(), the following evaluates to false&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
myPojo1.hashCode() == myPojo2.hashCode()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="12769654" author="scolebourne" created="Sat, 24 Oct 2009 13:02:35 +0000"  >&lt;p&gt;We can&apos;t have EqualsBuilder and HashCodeBuilder out of line.&lt;/p&gt;

&lt;p&gt;My preferred fix would be to revert the invalid change to EqualsBuilder.&lt;/p&gt;</comment>
                            <comment id="12777866" author="bayard" created="Sat, 14 Nov 2009 10:10:43 +0000"  >&lt;p&gt;Agreed, in that I don&apos;t see a solution for HashCodeBuilder and the two need to be the same.&lt;/p&gt;

&lt;p&gt;I&apos;ve reverted the change as r836149.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12820159">LANG-1113</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 27 Oct 2008 15:54:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34126</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 3 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0d5xz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>74739</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>