<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="IO">
	<bug id="112" opendate="2007-02-04 22:12:41" fixdate="2007-02-04 22:17:16" resolution="Fixed">
		<buginformation>
			<summary>NPE in FileUtils.openOutputStream(File) when file has no parent in path.</summary>
			<description>----Original Message----
From: deng xinzi xinzi6388@gmail.com 
Sent: Sunday, February 04, 2007 6:19 AM
To: commons-dev@jakarta.apache.org
Subject: [bug]commons-io 1.3 FileUtils.openOutputStream(File file) NullPointException
FileUtils.openOutputStream(File file)
When the file = new File( "abc.txt" );
There will be a NullPointerException throw.
Cause
file = new File("abc.txt")
file.getParentFile() returns null.
So I suggest adding the null check code like this.
            File parent = file.getParentFile();
            if( parent Unable to render embedded object: File (= null ) {   // ADD THIS) not found.!!
              if (parent.exists() == false) {
                if (parent.mkdirs() == false) 
{
                    throw new IOException("File &amp;amp;apos;" + file + "&amp;amp;apos; could not be
created");
                }
              }
            }
                                       Xinzi ...</description>
			<version>1.3</version>
			<fixedVersion>1.3.1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.apache.commons.io.FileUtils.java</file>
			<file type="M">org.apache.commons.io.FileUtilsTestCase.java</file>
			<file type="M">org.apache.commons.io.testtools.FileBasedTestCase.java</file>
		</fixedFiles>
	</bug>
	<bug id="113" opendate="2007-02-07 19:05:03" fixdate="2007-02-09 00:27:03" resolution="Fixed">
		<buginformation>
			<summary>FileUtils.readFileToString is not static</summary>
			<description>FileUtils.readFileToString isn&amp;amp;apos;t static.  It should be; since the constructor for FileUtils says "Instances should NOT be constructed in standard programming", this makes readFileToString unusable.  Right now I&amp;amp;apos;m using FileUtils.readBytesToByteArray(file).toString().</description>
			<version>1.3</version>
			<fixedVersion>1.3.1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.apache.commons.io.FileUtils.java</file>
		</fixedFiles>
	</bug>
	<bug id="223" opendate="2009-11-17 09:32:27" fixdate="2010-01-07 02:37:22" resolution="Fixed">
		<buginformation>
			<summary>IOUtils.copy Javadoc inconsistency (return -1 vs. throw ArithmeticException)</summary>
			<description>The javadoc for IOUtils.copy says:
"Large streams (over 2GB) will return a bytes copied value of -1 after the copy has completed since the correct number of bytes cannot be returned as an int."
but then it says:
"Throws:
ArithmeticException - if the byte count is too large"
This is an inconsistency since -1 is always returned if the byte count is too large. ArithmeticException is never actually thrown.
See IO-84 for discussion on solving the "too large byte count" problem.</description>
			<version>1.3</version>
			<fixedVersion>2.0</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.apache.commons.io.IOUtils.java</file>
		</fixedFiles>
	</bug>
</bugrepository>