<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 17:02:24 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/IO-181/IO-181.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[IO-181] LineIterator should implement Iterable </title>
                <link>https://issues.apache.org/jira/browse/IO-181</link>
                <project id="12310477" key="IO">Commons IO</project>
                    <description>&lt;p&gt;org.apache.commons.io.LineIterator does not implement Iterable.  This makes&lt;br/&gt;
it impossible to use in certain stylized ways, such as in a new-style for&lt;br/&gt;
statement.  Such use is not always desirable (it might temporarily leak a&lt;br/&gt;
file descriptor, until the finalizer is called), but should be possible in&lt;br/&gt;
situations where it is known to be acceptable.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12403921">IO-181</key>
            <summary>LineIterator should implement Iterable </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mdernst">Michael Ernst</reporter>
                        <labels>
                    </labels>
                <created>Mon, 8 Sep 2008 18:04:35 +0000</created>
                <updated>Thu, 10 Nov 2011 18:09:32 +0000</updated>
                            <resolved>Wed, 4 Aug 2010 23:04:55 +0000</resolved>
                                    <version>1.4</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                    <timeoriginalestimate seconds="3600">1h</timeoriginalestimate>
                            <timeestimate seconds="3600">1h</timeestimate>
                                        <comments>
                            <comment id="12630149" author="bayard" created="Thu, 11 Sep 2008 10:01:48 +0000"  >&lt;p&gt;I thought things that produced Iterators implemented Iterables; not Iterators?&lt;/p&gt;</comment>
                            <comment id="12653084" author="niallp" created="Thu, 4 Dec 2008 00:29:22 +0000"  >&lt;p&gt;I agree wikth Henri and it would break the Iterable contract IMO since if it was used more than once it could cause problems trying to re-process a Reader again. Closing as WONTFIX&lt;/p&gt;</comment>
                            <comment id="12744890" author="robertc" created="Wed, 19 Aug 2009 05:29:20 +0000"  >&lt;p&gt;Henri only noted that there is a Iterable-&amp;gt;Iterator relationship. It&apos;s a fairly common idiom in python to have single-pass Iterables (like files) allow iteration on this.&lt;/p&gt;

&lt;p&gt;You can even separate out the Iterator code from the Iterable in those situations if needed. &lt;/p&gt;

&lt;p&gt;I think it would be lovely if this was reopened (I&apos;d be happy to write the patch) - contrast:&lt;br/&gt;
LineIterator it = FileUtils.lineIterator(file, &quot;UTF-8&quot;);&lt;br/&gt;
 try {&lt;br/&gt;
    for (String line : it) &lt;/p&gt;
{
     /// do something with line
   }&lt;br/&gt;
 } finally {
   LineIterator.closeQuietly(iterator);
 }&lt;br/&gt;
&lt;br/&gt;
for the sample use of LineIterator.&lt;br/&gt;
&lt;br/&gt;
Its only less safe if someone abuses the contract - and they can do that without the convenience method:&lt;br/&gt;
&lt;br/&gt;
for (String line : (Iterable&amp;lt;String&amp;gt;)FileUtils.lineIterator(file, &quot;UTF-8&quot;).iterator()) {
     /// do something with line
   }
</comment>
                            <comment id="12778738" author="nlevitt" created="Tue, 17 Nov 2009 06:00:18 +0000"  >&lt;p&gt;I strongly agree with the bug reporter, LineIterator should implement Iterable. Then you can write nice code like this:&lt;/p&gt;

&lt;p&gt;for (String line: new LineIterator(reader)) &lt;/p&gt;
{
    // ...
}

&lt;p&gt;Maybe I&apos;m missing something, but if this is the implementation of iterator(), how can it be abused?&lt;/p&gt;

&lt;p&gt;    public Iterator&amp;lt;String&amp;gt; iterator() &lt;/p&gt;
{
        return this;
    }</comment>
                            <comment id="12778751" author="bayard" created="Tue, 17 Nov 2009 07:33:07 +0000"  >&lt;p&gt;Reopening as there are post-close comments.&lt;/p&gt;</comment>
                            <comment id="12779533" author="mdernst" created="Wed, 18 Nov 2009 17:18:12 +0000"  >&lt;p&gt;The potential problem with this design is that it assumes that there is exactly one iterator for the object at a time.  Clients may expect that it is possible to have multiple iterators over a given Iterable, and thus may expect that each call to Iterable.iterator returns a fresh iterator that shares no state with other iterators.  (Clients shouldn&apos;t expect this in the absence of documentation, but they might.)&lt;/p&gt;

&lt;p&gt;I think it&apos;s worth it for the convenience, so long as this behavior is documented.&lt;/p&gt;</comment>
                            <comment id="12779592" author="nlevitt" created="Wed, 18 Nov 2009 18:50:28 +0000"  >&lt;p&gt;&amp;gt; may expect that each call to Iterable.iterator returns a fresh iterator that shares no state with other iterators&lt;/p&gt;

&lt;p&gt;Oh, right, that makes sense. Still, if something is both an Iterable and an Iterator, I think it&apos;s intuitive (and as you point out, definitely acceptable if documented) that iterator() would return itself.&lt;/p&gt;</comment>
                            <comment id="12842027" author="sebb@apache.org" created="Fri, 5 Mar 2010 21:33:19 +0000"  >&lt;p&gt;Applied the suggested change, with a warning in then Javadoc that the Reader is shared:&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=919627&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=919627&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/IO-181&quot; title=&quot;LineIterator should implement Iterable &quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-181&quot;&gt;&lt;del&gt;IO-181&lt;/del&gt;&lt;/a&gt; LineIterator should implement Iterable&lt;/p&gt;

&lt;p&gt;Modified:&lt;br/&gt;
   commons/proper/io/trunk/src/java/org/apache/commons/io/LineIterator.java&lt;/p&gt;

&lt;p&gt;Note - replaced LineIterator.closeQuietly(it) calls in Javadoc with it.close(), as the it field must be non-null in the finally clause.&lt;/p&gt;</comment>
                            <comment id="12842413" author="niallp" created="Sun, 7 Mar 2010 11:52:28 +0000"  >&lt;p&gt;I&apos;m still against this - Iterable != Iterator and breaks the Iterable contract. Just because its convenient doesn&apos;t mean its a good idea. I think this will cause confusion and people to mis-use it, whatever the javadocs say.&lt;/p&gt;</comment>
                            <comment id="12844320" author="sebb@apache.org" created="Fri, 12 Mar 2010 01:23:21 +0000"  >&lt;p&gt;Reverted r919627 (apart from fix to Javadoc):&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/viewvc?rev=922103&amp;amp;view=rev&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/viewvc?rev=922103&amp;amp;view=rev&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
Revert r919627&lt;/p&gt;

&lt;p&gt;Modified:&lt;br/&gt;
   commons/proper/io/trunk/src/java/org/apache/commons/io/LineIterator.java&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="12310000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="12506908">IO-272</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 11 Sep 2008 10:01:48 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>139612</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            6 years, 37 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0sm2f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>165052</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>