<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 17:29:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/IO-368/IO-368.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[IO-368] ClassLoaderObjectInputStream does not handle primitive typed members</title>
                <link>https://issues.apache.org/jira/browse/IO-368</link>
                <project id="12310477" key="IO">Commons IO</project>
                    <description>&lt;p&gt;Any class with a simple primitive (such as long, or int) cannot be deserialized.  For example, the following code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    ObjectInputStream ois = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      ois = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ClassLoaderObjectInputStream(getClass().getClassLoader(), &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(bytes));
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (T) ois.readObject();
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException e) {
      LOGGER.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Deserialization failed &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; {}&quot;&lt;/span&gt;, objectClass, e);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {
      LOGGER.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Deserialization failed &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; {}&quot;&lt;/span&gt;, objectClass, e);
    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (ois != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
        &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
          ois.close();
        } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ignored) {
        }
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Will fail if bytes represents a byte[] of the serialized version of the following class:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Foo {

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; serialVersionUID = 1L;

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; thisFieldWillCauseCLOISToFail;

  &lt;span class=&quot;code-comment&quot;&gt;// class logic, ctors, etc...
&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the following stacktrace:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Caused by: java.lang.ClassNotFoundException: long
        at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:247)
        at org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(ClassLoaderObjectInputStream.java:68)
        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1574)
        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1495)
        at java.io.ObjectInputStream.readClass(ObjectInputStream.java:1461)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1311)
        at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946)
        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)
        at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946)
        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)
        at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946)
        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)
        at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946)
        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350)
        at java.util.ArrayList.readObject(ArrayList.java:593)
        at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
        at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1848)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)
        at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946)
...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of some relevance may be:&lt;br/&gt;
&lt;a href=&quot;http://issues.liferay.com/browse/LPS-30742&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://issues.liferay.com/browse/LPS-30742&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;https://groups.google.com/forum/?hl=en&amp;amp;fromgroups=#!topic/akka-user/3PC4L48qyqs&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://groups.google.com/forum/?hl=en&amp;amp;fromgroups=#!topic/akka-user/3PC4L48qyqs&lt;/a&gt;&lt;/p&gt;</description>
                <environment>&lt;p&gt;Single node computer, running standard JVM (Oracle 1.6.0)&lt;/p&gt;</environment>
        <key id="12633786">IO-368</key>
            <summary>ClassLoaderObjectInputStream does not handle primitive typed members</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="thaddeus.diamond">Thaddeus Diamond</reporter>
                        <labels>
                    </labels>
                <created>Sun, 24 Feb 2013 07:13:40 +0000</created>
                <updated>Tue, 8 Nov 2016 17:58:50 +0000</updated>
                            <resolved>Wed, 17 Apr 2013 14:17:13 +0000</resolved>
                                    <version>2.0.1</version>
                                    <fixVersion>2.5</fixVersion>
                                    <component>Streams/Writers</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="13585372" author="tn" created="Sun, 24 Feb 2013 13:59:17 +0000"  >&lt;p&gt;I could not reproduce the problem with the following jdks:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Sun JDK 1.5 update 22&lt;/li&gt;
	&lt;li&gt;Oracle JDK 1.6 update 41&lt;/li&gt;
	&lt;li&gt;OpenJDK 1.6 b27&lt;/li&gt;
	&lt;li&gt;OpenJDK 1.6 u13&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;But I think the code could be improved to the following:&lt;/p&gt;

&lt;p&gt;if a ClassNotFoundException is thrown, delegate to the superclass.&lt;/p&gt;

&lt;p&gt;The default ObjectInputStream does something similar:&lt;/p&gt;

&lt;p&gt;if the class could not be found, check in a HashMap if it is one of the primitive types.&lt;/p&gt;

&lt;p&gt;The null check is spurious imho, does Class.forName ever return null?&lt;/p&gt;</comment>
                            <comment id="13633428" author="sebb@apache.org" created="Tue, 16 Apr 2013 21:51:08 +0000"  >&lt;p&gt;Also cannot reproduce the problem.&lt;/p&gt;

&lt;p&gt;@Thaddeus Diamond: how did you create the byte[] serialised version? Please can you provide sample code?&lt;/p&gt;

&lt;p&gt;I agree that Class.forName() cannot return null, so the code should probably be:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.forName(objectStreamClass.getName(), &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;, classLoader);
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException cnfe) {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;.resolveClass(objectStreamClass);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="13633455" author="thaddeus.diamond" created="Tue, 16 Apr 2013 22:02:16 +0000"  >&lt;p&gt;The bytes were composed as follows:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    ByteBuffer serializedObject = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      serializedObject = ByteBuffer.wrap(SerializationUtils.serialize(object));
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IllegalArgumentException e) {
      LOGGER.error(&lt;span class=&quot;code-quote&quot;&gt;&quot;Serialization failed&quot;&lt;/span&gt;, e);
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SerializationException(e);
    }

    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; serializedObject;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;SerializationUtils is org.apache.commons.lang.SerializationUtils.&lt;/p&gt;</comment>
                            <comment id="13633564" author="sebb@apache.org" created="Tue, 16 Apr 2013 23:43:38 +0000"  >&lt;p&gt;Still cannot get the code to fail with the implementation currently in trunk.&lt;br/&gt;
Please can you provide a full example that shows the problem?&lt;/p&gt;</comment>
                            <comment id="13633684" author="thaddeus.diamond" created="Wed, 17 Apr 2013 02:18:53 +0000"  >&lt;p&gt;That&apos;s all I have.  Making those two methods and using the sample class is how I made it fail.  It may have been application-specific, though the fix you suggested would take care of it.&lt;/p&gt;</comment>
                            <comment id="13633691" author="sebb@apache.org" created="Wed, 17 Apr 2013 02:33:38 +0000"  >&lt;p&gt;The sample class is not complete: at the very least it needs to implement Serializable. &lt;br/&gt;
But when I try that it does not fail. Does it still fail for you?&lt;/p&gt;

&lt;p&gt;Without a test case that reproduces the issue, we have no way of knowing for sure that the proposed fix is sufficient (though I think we know that it&apos;s necessary).&lt;/p&gt;</comment>
                            <comment id="13633695" author="thaddeus.diamond" created="Wed, 17 Apr 2013 02:44:12 +0000"  >&lt;p&gt;Did you try:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class Foo &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Serializable {

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; serialVersionUID = 1L;

  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; thisFieldWillCauseCLOISToFail = 100L;

  &lt;span class=&quot;code-comment&quot;&gt;// class logic, ctors, etc...
&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Beyond this I do not have another example.&lt;/p&gt;</comment>
                            <comment id="13633719" author="sebb@apache.org" created="Wed, 17 Apr 2013 03:30:29 +0000"  >&lt;p&gt;Yes, I did try that. Does it fail for you? Which version of IO are you using?&lt;/p&gt;</comment>
                            <comment id="13633721" author="thaddeus.diamond" created="Wed, 17 Apr 2013 03:40:38 +0000"  >&lt;p&gt;It did, I haven&apos;t had the time to reproduce.  I am on 2.0.1&lt;/p&gt;</comment>
                            <comment id="13633983" author="sebb@apache.org" created="Wed, 17 Apr 2013 12:30:36 +0000"  >&lt;p&gt;2.0.1 is quite old, but it looks like the class has not changed since then.&lt;/p&gt;

&lt;p&gt;I think there is a problem with always delegating to the super implementation for ClassNotFound.&lt;br/&gt;
Its class loader may include classes that are not in the specified class loader, so may resolve classes that should fail.&lt;/p&gt;

&lt;p&gt;It looks like the name for primitive types is the same as the keyword - i.e. &quot;int&quot;, &quot;long&quot;, &quot;void&quot; etc.&lt;br/&gt;
Could compare against a list of valid names before delegating.&lt;/p&gt;</comment>
                            <comment id="13634067" author="sebb@apache.org" created="Wed, 17 Apr 2013 14:13:25 +0000"  >&lt;p&gt;Created &lt;a href=&quot;https://issues.apache.org/jira/browse/IO-378&quot; title=&quot;ClassLoaderInputStream - should this delegate to the parent class loader?&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-378&quot;&gt;IO-378&lt;/a&gt; to deal with whether to always delegate or not (also affects resolveProxyClass method).&lt;/p&gt;</comment>
                            <comment id="13634069" author="sebb@apache.org" created="Wed, 17 Apr 2013 14:17:13 +0000"  >&lt;p&gt;Fixed delegation:&lt;/p&gt;

&lt;p&gt;URL: &lt;a href=&quot;http://svn.apache.org/r1468926&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://svn.apache.org/r1468926&lt;/a&gt;&lt;br/&gt;
Log:&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/IO-368&quot; title=&quot;ClassLoaderObjectInputStream does not handle primitive typed members&quot; class=&quot;issue-link&quot; data-issue-key=&quot;IO-368&quot;&gt;&lt;del&gt;IO-368&lt;/del&gt;&lt;/a&gt; ClassLoaderObjectInputStream does not handle primitive typed members&lt;/p&gt;

&lt;p&gt;Modified:&lt;br/&gt;
    commons/proper/io/trunk/src/changes/changes.xml&lt;br/&gt;
    commons/proper/io/trunk/src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="12642933">IO-378</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="12570659" name="IO-368.patch" size="1386" author="tn" created="Sun, 24 Feb 2013 13:59:17 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 24 Feb 2013 13:59:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>314281</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 31 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i1i8fr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>314626</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>