<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 15:57:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/IO-22/IO-22.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[IO-22] [io] FileUtils.cleanDirectory throws NullPointerException when File.list() fails</title>
                <link>https://issues.apache.org/jira/browse/IO-22</link>
                <project id="12310477" key="IO">Commons IO</project>
                    <description>&lt;p&gt;java.io.File.list() returns null if an I/O error occurs.  In practice this can&lt;br/&gt;
be triggered by trying to list the contents of a directory to which the user&lt;br/&gt;
does not have sufficient permissions (e.g. a directory with mode 0 on a&lt;br/&gt;
unix-like filesystem).&lt;/p&gt;

&lt;p&gt;In this case, FileUtils.cleanDirectory currently throws NPE because it assumes&lt;br/&gt;
that File.list() will always return successfully.  The correct behavior should&lt;br/&gt;
be to throw IOException instead.&lt;/p&gt;

&lt;p&gt;Following inline is a patch against trunk which resolves the issue.&lt;/p&gt;

&lt;p&gt;Index: src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java (revision 0)&lt;br/&gt;
+++ src/test/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java (revision 0)&lt;br/&gt;
@@ -0,0 +1,143 @@&lt;br/&gt;
+/*&lt;br/&gt;
+ * Copyright 2003,2004 The Apache Software Foundation.&lt;br/&gt;
+ *&lt;br/&gt;
+ * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);&lt;br/&gt;
+ * you may not use this file except in compliance with the License.&lt;br/&gt;
+ * You may obtain a copy of the License at&lt;br/&gt;
+ *&lt;br/&gt;
+ *      &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;br/&gt;
+ *&lt;br/&gt;
+ * Unless required by applicable law or agreed to in writing, software&lt;br/&gt;
+ * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&lt;br/&gt;
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br/&gt;
+ * See the License for the specific language governing permissions and&lt;br/&gt;
+ * limitations under the License.&lt;br/&gt;
+ */&lt;br/&gt;
+package org.apache.commons.io;&lt;br/&gt;
+&lt;br/&gt;
+import java.util.ArrayList;&lt;br/&gt;
+import java.util.List;&lt;br/&gt;
+&lt;br/&gt;
+import java.io.File;&lt;br/&gt;
+import java.io.IOException;&lt;br/&gt;
+&lt;br/&gt;
+import org.apache.commons.io.testtools.FileBasedTestCase;&lt;br/&gt;
+&lt;br/&gt;
+/**&lt;br/&gt;
+ * Test cases for FileUtils.cleanDirectory() method.&lt;br/&gt;
+ */&lt;br/&gt;
+public class FileUtilsCleanDirectoryTestCase extends FileBasedTestCase {&lt;br/&gt;
+    final File top = getLocalTestDirectory();&lt;br/&gt;
+&lt;br/&gt;
+    public FileUtilsCleanDirectoryTestCase(String name) &lt;/p&gt;
{
+        super(name);
+    }
&lt;p&gt;+&lt;br/&gt;
+    private File getLocalTestDirectory() &lt;/p&gt;
{
+        return new File(getTestDirectory(), &quot;list-files&quot;);
+    }
&lt;p&gt;+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * @see junit.framework.TestCase#setUp()&lt;br/&gt;
+     */&lt;br/&gt;
+    protected void setUp() throws Exception &lt;/p&gt;
{
+        top.mkdirs();
+    }
&lt;p&gt;+&lt;br/&gt;
+    /**&lt;br/&gt;
+     * @see junit.framework.TestCase#tearDown()&lt;br/&gt;
+     */&lt;br/&gt;
+    protected void tearDown() throws Exception &lt;/p&gt;
{
+        chmod(top, 775, true);
+        FileUtils.deleteDirectory(top);
+    }
&lt;p&gt;+&lt;br/&gt;
+    public void testCleanEmpty() throws Exception &lt;/p&gt;
{
+        assertEquals(0, top.list().length);
+
+        FileUtils.cleanDirectory(top);
+
+        assertEquals(0, top.list().length);
+    }
&lt;p&gt;+&lt;br/&gt;
+    public void testDeletesRegular() throws Exception &lt;/p&gt;
{
+        FileUtils.touch(new File(top, &quot;regular&quot;));
+        FileUtils.touch(new File(top, &quot;.hidden&quot;));
+
+        assertEquals(2, top.list().length);
+
+        FileUtils.cleanDirectory(top);
+
+        assertEquals(0, top.list().length);
+    }
&lt;p&gt;+&lt;br/&gt;
+    public void testDeletesNested() throws Exception &lt;/p&gt;
{
+        final File nested = new File(top, &quot;nested&quot;);
+
+        assertTrue(nested.mkdirs());
+
+        FileUtils.touch(new File(nested, &quot;file&quot;));
+
+        assertEquals(1, top.list().length);
+
+        FileUtils.cleanDirectory(top);
+
+        assertEquals(0, top.list().length);
+    }
&lt;p&gt;+&lt;br/&gt;
+    public void testThrowsOnNullList() throws Exception {&lt;br/&gt;
+        if (!chmod(top, 0, false)) &lt;/p&gt;
{
+            // test wont work if we can&apos;t restrict permissions on the
directory; skip it.
+            return;
+        }&lt;br/&gt;
+&lt;br/&gt;
+        try {
+            FileUtils.cleanDirectory(top);
+            fail(&quot;expected IOException&quot;);
+        } catch (IOException e) {
+            assertEquals(&quot;Failed to list contents of &quot; + top.getAbsolutePath(),
e.getMessage());
+        }&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+    public void testThrowsOnCannotDeleteFile() throws Exception {&lt;br/&gt;
+        final File file = new File(top, &quot;restricted&quot;);&lt;br/&gt;
+        FileUtils.touch(file);&lt;br/&gt;
+&lt;br/&gt;
+        if (!chmod(top, 500, false)) {+            // test wont work if we can&apos;t restrict permissions on thedirectory; skip it.+            return;+        }
&lt;p&gt;+&lt;br/&gt;
+        try &lt;/p&gt;
{
+            FileUtils.cleanDirectory(top);
+            fail(&quot;expected IOException&quot;);
+        }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
+            assertEquals(&quot;Unable to delete file: &quot; + file.getAbsolutePath(),
e.getMessage());
+        }
&lt;p&gt;+    }&lt;br/&gt;
+&lt;br/&gt;
+    private boolean chmod(File file, int mode, boolean recurse) throws&lt;br/&gt;
IOException, InterruptedException {&lt;br/&gt;
+        List args = new ArrayList();&lt;br/&gt;
+        args.add(&quot;chmod&quot;);&lt;br/&gt;
+&lt;br/&gt;
+        if (recurse) &lt;/p&gt;
{
+            args.add(&quot;-R&quot;);
+        }
&lt;p&gt;+&lt;br/&gt;
+        args.add(Integer.toString(mode));&lt;br/&gt;
+        args.add(file.getAbsolutePath());&lt;br/&gt;
+&lt;br/&gt;
+        Process proc;&lt;br/&gt;
+&lt;br/&gt;
+        try &lt;/p&gt;
{
+            proc = Runtime.getRuntime().exec((String[]) args.toArray(new
String[args.size()]));
+        }
&lt;p&gt; catch (IOException e) &lt;/p&gt;
{
+            return false;
+        }
&lt;p&gt;+&lt;br/&gt;
+        int result = proc.waitFor();&lt;br/&gt;
+&lt;br/&gt;
+        assertEquals(0, result);&lt;br/&gt;
+        return true;&lt;br/&gt;
+    }&lt;br/&gt;
+}&lt;br/&gt;
Index: src/java/org/apache/commons/io/FileUtils.java&lt;br/&gt;
===================================================================&lt;br/&gt;
&amp;#8212; src/java/org/apache/commons/io/FileUtils.java       (revision 291328)&lt;br/&gt;
+++ src/java/org/apache/commons/io/FileUtils.java       (working copy)&lt;br/&gt;
@@ -701,6 +701,11 @@&lt;br/&gt;
         IOException exception = null;&lt;/p&gt;

&lt;p&gt;         File[] files = directory.listFiles();&lt;br/&gt;
+&lt;br/&gt;
+        if (files == null) &lt;/p&gt;
{
+            throw new IOException(&quot;Failed to list contents of &quot; + directory);
+        }
&lt;p&gt;+&lt;br/&gt;
         for (int i = 0; i &amp;lt; files.length; i++) {&lt;br/&gt;
             File file = files&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;;&lt;br/&gt;
             try {&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: All&lt;br/&gt;
Platform: All&lt;/p&gt;</environment>
        <key id="12342574">IO-22</key>
            <summary>[io] FileUtils.cleanDirectory throws NullPointerException when File.list() fails</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="chriseldredge@comcast.net">Chris Eldredge</reporter>
                        <labels>
                    </labels>
                <created>Sun, 25 Sep 2005 03:54:12 +0000</created>
                <updated>Fri, 9 Mar 2007 20:38:17 +0000</updated>
                            <resolved>Fri, 9 Mar 2007 20:38:17 +0000</resolved>
                                    <version>1.0</version>
                                    <fixVersion>1.1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12410452" author="scolebourne@joda.org" created="Tue, 27 Sep 2005 07:10:52 +0000"  >&lt;p&gt;Fixed, thanks&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36801</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 27 Sep 2005 07:10:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>139485</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            11 years, 9 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0smxr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>165193</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>