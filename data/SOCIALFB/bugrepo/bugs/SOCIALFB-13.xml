<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 05:33:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SOCIALFB-13/SOCIALFB-13.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SOCIALFB-13] Connection test method throws ResourceAccessException for connection retrieved from repository which has been logged out</title>
                <link>https://jira.spring.io/browse/SOCIALFB-13</link>
                <project id="10607" key="SOCIALFB">Spring Social Facebook</project>
                    <description>&lt;p&gt;Here is steps required to reproduce the issue&lt;/p&gt;

&lt;p&gt;1. Login with facebook account manually from browser.&lt;br/&gt;
2. Access facebook application from facebook account.&lt;br/&gt;
3. Create connection using data retrieved from signed_request parameter using&lt;br/&gt;
 spring-social-facebook.&lt;br/&gt;
4. Store connection in repository.&lt;br/&gt;
5. Logout from facebook manually from browser.&lt;br/&gt;
6. Login again with same user.&lt;br/&gt;
7. Open facebook application again from browser.&lt;br/&gt;
8. This time application tries to use connection retrieved from repository &lt;br/&gt;
which has already logged out and tries to check connection state with Connection.test&lt;br/&gt;
method and get following exception which I think is not correct handling for this case:&lt;/p&gt;

&lt;p&gt;org.springframework.web.client.ResourceAccessException: I/O error: Server returned HTTP response code: 401 for URL: &lt;a href=&quot;https://graph.facebook.com/me&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://graph.facebook.com/me&lt;/a&gt;; nested exception is java.io.IOException: Server returned HTTP response code: 401 for URL: &lt;a href=&quot;https://graph.facebook.com/me&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://graph.facebook.com/me&lt;/a&gt;&lt;br/&gt;
 at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:453)&lt;br/&gt;
 at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:415)&lt;br/&gt;
 at org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:213)&lt;br/&gt;
 at org.springframework.social.facebook.api.impl.FacebookTemplate.fetchObject(FacebookTemplate.java:173)&lt;br/&gt;
 at org.springframework.social.facebook.api.impl.UserTemplate.getUserProfile(UserTemplate.java:43)&lt;br/&gt;
 at org.springframework.social.facebook.api.impl.UserTemplate.getUserProfile(UserTemplate.java:39)&lt;br/&gt;
 at org.springframework.social.facebook.connect.FacebookAdapter.test(FacebookAdapter.java:34)&lt;br/&gt;
 at org.springframework.social.facebook.connect.FacebookAdapter.test(FacebookAdapter.java:30)&lt;br/&gt;
 at org.springframework.social.connect.support.AbstractConnection.test(AbstractConnection.java:97)&lt;br/&gt;
 at com.social.controller.FacebookConnectController.getPost(FacebookConnectController.java:105)&lt;br/&gt;
 at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)&lt;br/&gt;
 at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
 at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
 at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)&lt;br/&gt;
 at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:426)&lt;br/&gt;
 at org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:414)&lt;br/&gt;
 at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)&lt;br/&gt;
 at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)&lt;br/&gt;
 at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)&lt;br/&gt;
 at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)&lt;br/&gt;
 at javax.servlet.http.HttpServlet.service(HttpServlet.java:641)&lt;br/&gt;
 at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)&lt;br/&gt;
 at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:304)&lt;br/&gt;
 at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)&lt;br/&gt;
 at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:240)&lt;br/&gt;
 at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:164)&lt;br/&gt;
 at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:462)&lt;br/&gt;
 at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)&lt;br/&gt;
 at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)&lt;br/&gt;
 at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:563)&lt;br/&gt;
 at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)&lt;br/&gt;
 at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:399)&lt;br/&gt;
 at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:317)&lt;br/&gt;
 at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:204)&lt;br/&gt;
 at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:311)&lt;br/&gt;
 at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)&lt;br/&gt;
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)&lt;br/&gt;
 at java.lang.Thread.run(Thread.java:619)&lt;/p&gt;

</description>
                <environment></environment>
        <key id="38607">SOCIALFB-13</key>
            <summary>Connection test method throws ResourceAccessException for connection retrieved from repository which has been logged out</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="habuma">Craig Walls</assignee>
                                    <reporter username="alexander__5">Alexander Nalbandyan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Jul 2011 09:14:07 +0000</created>
                <updated>Mon, 30 Jan 2012 06:47:21 +0000</updated>
                            <resolved>Fri, 1 Jul 2011 14:06:12 +0000</resolved>
                                    <version>1.0.0.RC1</version>
                                    <fixVersion>1.0.0.RC2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="67961" author="habuma" created="Fri, 1 Jul 2011 14:06:12 +0000"  >&lt;p&gt;A bit of background info: There are cases where Facebook returns error messages with an HTTP status of 200. Therefore, relying on the status code alone to determine if there&apos;s an error is not enough. So, FacebookErrorHandler.hasError() method considers both the status code and the body of the request when determining if there is an error.&lt;/p&gt;

&lt;p&gt;However, FacebookErrorHandler.hasError() was eagerly reading the body before considering the status code. Aside from being unnecessary if the status code indicates an error, this is also a problem when using SimpleClientHttpRequestFactory. When the RestTemplate is using SimpleClientHttpRequestFactory, calling getBody() on the response will thrown an IOException unless you have first called getStatusCode() (this seems to be odd behavior of the underlying HttpURLConnection). &lt;/p&gt;

&lt;p&gt;I changed hasError() to do default error handling first (which is based on the status code) and only read the body if it gets past the default error handling. This avoids unnecessary response body processing and avoids any IOExceptions when using SimpleClientHttpRequestFactory.&lt;/p&gt;

&lt;p&gt;Furthermore, while working this issue, I discovered that there are cases where the various invalid access token errors can come back with either HTTP 400 or HTTP 401, so I adjusted the handleError() to look for those errors in both 400 and 401 status code responses.&lt;/p&gt;

&lt;p&gt;As a result of these changes, the proper error handling should be done in the scenario reported, resulting in a RevokedAuthorizationException, which is an ApiException, which will be handled by the FacebookAdapter.test() method to return false rather than leaking the exception as was reported.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 1 Jul 2011 14:06:12 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7404</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i010tr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6011</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7167</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>