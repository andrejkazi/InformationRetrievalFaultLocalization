<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:17:29 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-679/DATAMONGO-679.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-679] MongoTemplate.doSave(&#8230;) passed a JSON String doesn&apos;t save it.</title>
                <link>https://jira.spring.io/browse/DATAMONGO-679</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;I have Spring 3.1.2 setup to TEXT messages off a queue(that contain JSON), then insert them into a mongo database.&lt;/p&gt;

&lt;p&gt;The MongoTemplate.doSave(..) method is passed in &lt;/p&gt;

&lt;p&gt;collectionName = &quot;audit_log&quot;&lt;br/&gt;
objectToSave = &quot;{&quot;nanosecond&quot;:528023582734299,&quot;clientID&quot;:&quot;300&quot;,&quot;action&quot;:&quot;ENTRY&quot;&quot;;&lt;br/&gt;
writer = MappingMongoConvertor()&lt;/p&gt;

&lt;p&gt;These are all correct.&lt;/p&gt;

&lt;p&gt;The code though has this...&lt;/p&gt;

&lt;p&gt;if (!(objectToSave instanceof String)) {&lt;br/&gt;
	writer.write(objectToSave, dbDoc);&lt;br/&gt;
} else {&lt;br/&gt;
	try &lt;/p&gt;
{
		objectToSave = (T) JSON.parse((String) objectToSave);
	}
&lt;p&gt; catch (JSONParseException e) &lt;/p&gt;
{
		throw new MappingException(&quot;Could not parse given String to save into a JSON document!&quot;, e);
	}
&lt;p&gt;}&lt;br/&gt;
maybeEmitEvent(new BeforeSaveEvent&amp;lt;T&amp;gt;(objectToSave, dbDoc));&lt;br/&gt;
Object id = saveDBObject(collectionName, dbDoc, objectToSave.getClass());&lt;/p&gt;

&lt;p&gt;So the objectToSave is a String, so the first IF statement fails, and it goes into the ELSE section.&lt;/p&gt;

&lt;p&gt;The &apos;objectToSave&apos; is then correctly pasrsed into a BasicDBObject with the correct values.&lt;/p&gt;

&lt;p&gt;The saveDBObject() method though is not passed in the objectToSave.&lt;br/&gt;
Its passed in the collectionName (which is correct). &lt;br/&gt;
The dbDoc which is empty since we&apos;ve put nothing into it.&lt;br/&gt;
and the objectToSave.getClass()&lt;/p&gt;

&lt;p&gt;So how will it ever save the objectToSave if its not passed into the save method ??&lt;/p&gt;

&lt;p&gt;I suspect it should have something like...&lt;br/&gt;
objectToSave = (T) JSON.parse((String) objectToSave);&lt;br/&gt;
followed by&lt;br/&gt;
dbDoc = (com.mongodb.BasicDBObject)objectToSave&lt;/p&gt;



&lt;p&gt;Note my spring config is using a int-jms:channel to wire in the queue to Mongo.&lt;/p&gt;


&lt;p&gt;&amp;lt;int-jms:channel id=&quot;saveToDBChannel&quot;  &lt;br/&gt;
    	queue-name=&quot;ESI_AUDIT&quot; &lt;br/&gt;
    	auto-startup=&quot;true&quot; concurrency=&quot;50&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;/int-jms:channel&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;int-mongodb:outbound-channel-adapter id=&quot;outBoundMongoAdapter&quot;&lt;br/&gt;
        collection-name=&quot;audit_log&quot;  &lt;br/&gt;
        mongodb-factory=&quot;mongoDbFactory&quot; channel=&quot;saveToDBChannel&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;If you require a WAR that is a test of this, please let me know.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Jeff&lt;/p&gt;

&lt;p&gt;Note: this affect version 1.1.2(at least) to 1.2.1&lt;/p&gt;
</description>
                <environment>Windows. </environment>
        <key id="48671">DATAMONGO-679</key>
            <summary>MongoTemplate.doSave(&#8230;) passed a JSON String doesn&apos;t save it.</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="jeff_porter">jeff porter</reporter>
                        <labels>
                            <label>mongodb</label>
                            <label>spring</label>
                    </labels>
                <created>Wed, 22 May 2013 08:18:46 +0000</created>
                <updated>Mon, 22 Jul 2013 01:49:22 +0000</updated>
                            <resolved>Thu, 23 May 2013 12:33:31 +0000</resolved>
                                    <version>1.2.1</version>
                                    <fixVersion>1.3 M1</fixVersion>
                    <fixVersion>1.2.2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                    <timeoriginalestimate seconds="3600">1h</timeoriginalestimate>
                            <timeestimate seconds="3600">1h</timeestimate>
                                        <comments>
                            <comment id="90256" author="wamccollam" created="Wed, 22 May 2013 12:04:31 +0000"  >&lt;p&gt;I have noticed this exact behavior, although the dbdoc in my instance ends up with an _id, and results in Mongo storing an empty object instead of the json object.&lt;/p&gt;

&lt;p&gt;If there&apos;s some workaround to saving json objects directly to mongo off of the outbound-channel-adapter without the accompanying message info(i.e., as a DBobject rather than a payload within a DBobject) then I would love to know about it!&lt;/p&gt;</comment>
                            <comment id="90274" author="jeff_porter" created="Thu, 23 May 2013 01:06:27 +0000"  >&lt;p&gt;Hi Andrew,&lt;/p&gt;

&lt;p&gt;I get the same the object inserted in to Mongo has the _id set and is an empty object.&lt;/p&gt;

&lt;p&gt;Thanks for confirming that I&apos;m no going mad.&lt;/p&gt;

&lt;p&gt;The work around I&apos;ve got is to...&lt;/p&gt;

&lt;p&gt;Convert the Text Message into an Object (via JAXB) by plugging, via setting a &apos; message-converter=&quot;contributionsJSONConverter&quot; &apos;&lt;/p&gt;

&lt;p&gt;    &amp;lt;int-jms:channel id=&quot;saveToDBChannel&quot; connection-factory=&quot;connectionFactory&quot;&lt;br/&gt;
    	queue-name=&quot;ESI_AUDIT&quot; message-converter=&quot;contributionsJSONConverter&quot;&lt;br/&gt;
    	auto-startup=&quot;true&quot; concurrency=&quot;50&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;/int-jms:channel&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- JMS to Object for Audit Events read from the queue. --&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;contributionsJSONConverter&quot; class=&quot;com.pcmsgroup.v21.esi.audit.war.JMSAuditEventExtractor&quot;&amp;gt;&lt;br/&gt;
	    &amp;lt;property name=&quot;jaxbContext&quot; ref=&quot;jaxbContext&quot; /&amp;gt;&lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;


&lt;p&gt;This converts the JMS message into an object..&lt;/p&gt;

&lt;p&gt;public class JMSAuditEventExtractor implements MessageConverter {&lt;/p&gt;

&lt;p&gt;  public Object fromMessage(Message message) throws JMSException, MessageConversionException &lt;/p&gt;
{
    return new AuditEvent(); // I&apos;ve replaced the JAXB code with this for brevity 
  }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Then I&apos;ve plugged in a mongo-convertor...&lt;/p&gt;

&lt;p&gt;&amp;lt;int-mongodb:outbound-channel-adapter id=&quot;outBoundMongoAdapter&quot;&lt;br/&gt;
        collection-name=&quot;audit_log&quot;  mongo-converter=&quot;mongoConverter&quot;&lt;br/&gt;
        mongodb-factory=&quot;mongoDbFactory&quot; channel=&quot;saveToDBChannel&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;    &amp;lt;!-- Converter from JMS into a specific Mongo DB format --&amp;gt;&lt;br/&gt;
    &amp;lt;bean id=&quot;mongoConverter&quot; class=&quot;com.pcmsgroup.v21.esi.audit.war.AuditEventToJSONConverter&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg ref=&quot;mongoDbFactory&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;constructor-arg&amp;gt;&lt;br/&gt;
            &amp;lt;bean class=&quot;org.springframework.data.mongodb.core.mapping.MongoMappingContext&quot; /&amp;gt;&lt;br/&gt;
        &amp;lt;/constructor-arg&amp;gt;    &lt;br/&gt;
    &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;To convert that Object (AuditEvent) into a Mongo Object to be inserted...&lt;/p&gt;

&lt;p&gt;public class AuditEventToJSONConverter extends MappingMongoConverter {&lt;br/&gt;
    public AuditEventToJSONConverter(&lt;br/&gt;
            MongoDbFactory mongoDbFactory,&lt;br/&gt;
            MappingContext&amp;lt;? extends MongoPersistentEntity&amp;lt;?&amp;gt;, MongoPersistentProperty&amp;gt; mappingContext) &lt;/p&gt;
{
        super(mongoDbFactory, mappingContext);
    }

&lt;p&gt;    public void write(Object source, DBObject target) &lt;/p&gt;
{
        AuditEvent auditEvent = (AuditEvent) source;
        DBObject innerObject = new BasicDBObject();
        innerObject.put(&quot;Action&quot;, auditEvent.getAction());

        target.put(&quot;event&quot;, innerObject);
    }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;This creates a Mongo record like this...&lt;/p&gt;

&lt;p&gt;{ &quot;_id&quot; : &lt;/p&gt;
{ &quot;$oid&quot; : &quot;519ce56cdb96984cb2dd1a53&quot;}
&lt;p&gt; , &quot;event&quot; : { &quot;Action&quot; : &quot;ENTRY&quot; }}&lt;/p&gt;

</comment>
                            <comment id="90294" author="jeff_porter" created="Thu, 23 May 2013 12:10:29 +0000"  >&lt;p&gt;Thanks Oliver!! You&apos;re a star!&lt;/p&gt;

&lt;p&gt;Do you know when the next release is planned for?&lt;/p&gt;

&lt;p&gt;Jeff&lt;/p&gt;</comment>
                            <comment id="90295" author="olivergierke" created="Thu, 23 May 2013 12:25:12 +0000"  >&lt;p&gt;No problem, Jeff. Thanks for spotting this &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. We&apos;ll have the milestone out by end of next week. Not sure about the bugfix release. We&apos;ll definitely have another one alongside the GA release of the upcoming Babbage release train.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 22 May 2013 12:04:31 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35187</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06bnj:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36926</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>34889</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>