<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:42:49 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-1116/DATAMONGO-1116.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-1116] Conversion to DBObject is terribly slow</title>
                <link>https://jira.spring.io/browse/DATAMONGO-1116</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;Performance of java bean conversion to DBObject is terribly slow even for simple objects. For instance, in my test, conversion of very simple object of class:&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;class Foo { long id; String payload; ... } &lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;to DBObject takes about 8us.&lt;/p&gt;

&lt;p&gt;I&apos;ve written a self-contained perftest, have a look:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/stepancheg/0ef5ba9f347ffda1e88f&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/stepancheg/0ef5ba9f347ffda1e88f&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Results on my machine are:&lt;/p&gt;

&lt;p&gt;auto: 8000ns&lt;br/&gt;
hand: 110ns&lt;/p&gt;

&lt;p&gt;Conversion back is also too slow (but not terribly).&lt;/p&gt;

&lt;p&gt;Peformance of conversion becomes a bottleneck in our application, and we even had to write conversions manually in several places.&lt;/p&gt;

&lt;p&gt;We are using:&lt;/p&gt;

&lt;p&gt;spring-data-mongodb-1.5.0&lt;br/&gt;
spring-data-commons-1.8.0&lt;br/&gt;
spring-core-4.0.7&lt;/p&gt;</description>
                <environment></environment>
        <key id="61167">DATAMONGO-1116</key>
            <summary>Conversion to DBObject is terribly slow</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="yozh">Stepan Koltsov</reporter>
                        <labels>
                    </labels>
                <created>Wed, 10 Dec 2014 16:40:11 +0000</created>
                <updated>Sun, 25 Jan 2015 11:07:16 +0000</updated>
                            <resolved>Sun, 25 Jan 2015 11:06:03 +0000</resolved>
                                    <version>1.5 GA (Dijkstra)</version>
                                                    <component>Mapping</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="111947" author="olivergierke" created="Sun, 25 Jan 2015 11:05:50 +0000"  >&lt;p&gt;I spent the weekend solving &lt;a href=&quot;https://jira.spring.io/browse/DATAMONGO-712&quot; title=&quot;Another round of potential performance improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAMONGO-712&quot;&gt;&lt;del&gt;DATAMONGO-712&lt;/del&gt;&lt;/a&gt; be removing the core hotspots I could identify using JMH and YourKit. I was able to increase the ops per second ration by 75%. I also see significant improvements when running your example. Generally speaking, I think your example is flawed for quite a couple of reasons:&lt;/p&gt;

&lt;p&gt;1. micro-benchmarks usually do not reflect real application behavior. Of course, a generic, configurable mapping system will be much slower than just instantiating objects directly. In that regard your overly simplistic example plays into your hands: for a tiny object consisting of an identifier and a single property all of the features we actually provide are quite useless. Reading identifiers is quite a bit more expensive than reading normal properties. So if you add a few more properties to the type and populate them the big impact of the identifier mapping will decrease. Also, our mapping system has to deal with quite a few advanced use-cases: the usage of generics, inheritance, all stuff that users expect to just work out of the box need additional metadata, inspection of such etc. Still, I totally see that there is overhead, and that it&apos;s considerable. But even comparing absolute numbers is hardly valuable because of&#8230;&lt;br/&gt;
2. The amount of time spent in the mapping subsystem is usually not as high as the absolute numbers indicate compared to actual database interaction and other logic. Let&apos;s assume a pretty bad case: reading 100 documents into an object takes 200ns compared to 2ns for a direct conversion from the raw &lt;tt&gt;DBObject&lt;/tt&gt; (thus, a factor of 100). Now assume you spend 30ms reading that data and another 40ms rendering a view on top of that. In total that makes 70.2ms VS. 70.002ms. So you factor of 100 all of a sudden collapsed to under 0,3%. Of course this is totally made up numbers. All I am trying to say is that without embedding the benchmark numbers into some context, it&apos;s really hard to claim, somethings &quot;terribly slow&quot;.&lt;/p&gt;

&lt;p&gt;I am closing this one as a duplicate of &lt;a href=&quot;https://jira.spring.io/browse/DATAMONGO-712&quot; title=&quot;Another round of potential performance improvements&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAMONGO-712&quot;&gt;&lt;del&gt;DATAMONGO-712&lt;/del&gt;&lt;/a&gt;. Happy to address further bottlenecks that can be pointed out by detailed profiler analysis (ops/s numbers before/after a patch).&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="49477">DATAMONGO-712</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 25 Jan 2015 11:05:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>47240</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i081rr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>46991</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>46942</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>