<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:40:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-315/DATAMONGO-315.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-315] MongoTemplate.findOne(query) methods ignore SortOrder on query</title>
                <link>https://jira.spring.io/browse/DATAMONGO-315</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;Query query = query(where(&quot;type&quot;).is(&quot;ad&quot;));&lt;br/&gt;
query.sort().on(&quot;rawBidPrice&quot;, Order.DESCENDING);&lt;br/&gt;
Ad ad = mongoTemplate.findOne(query, Ad.class);&lt;/p&gt;

&lt;p&gt;This does not sort the results before returning the first item.&lt;br/&gt;
Looking at the code, it doesn&apos;t even call query.getSortOrder().&lt;br/&gt;
--------------&lt;br/&gt;
Workaround&lt;/p&gt;

&lt;p&gt;Query query = query(where(&quot;type&quot;).is(&quot;ad&quot;));&lt;br/&gt;
query.sort().on(&quot;rawBidPrice&quot;, Order.DESCENDING);&lt;br/&gt;
query.limit(1);&lt;br/&gt;
List&amp;lt;Ad&amp;gt; ads = mongoTemplate.find(query, Ad.class);&lt;br/&gt;
Ad ad = ads.isEmpty() ? null : ads.get(0);&lt;/p&gt;


</description>
                <environment></environment>
        <key id="40837">DATAMONGO-315</key>
            <summary>MongoTemplate.findOne(query) methods ignore SortOrder on query</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="mark.pollack">Mark Pollack</assignee>
                                    <reporter username="johannz">Adam Rinehart</reporter>
                        <labels>
                            <label>mongodb</label>
                    </labels>
                <created>Wed, 9 Nov 2011 10:21:33 +0000</created>
                <updated>Mon, 25 Mar 2013 09:31:13 +0000</updated>
                            <resolved>Mon, 14 Nov 2011 20:30:06 +0000</resolved>
                                    <version>1.0 M5</version>
                                    <fixVersion>1.0 RC1</fixVersion>
                                    <component>Core</component>
                    <component>Repository</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="72667" author="mark.pollack" created="Mon, 14 Nov 2011 20:25:17 +0000"  >&lt;p&gt;The driver itself doesn&apos;t seem to permit calling collection.findOne and taking into account sorting.  I&apos;ve baked in this workaround into findOne in MongoTemplate.  However, a find with a limit vs findOne may have significantly different performance characteristics, at least in PHP - see here - &lt;a href=&quot;http://dba.stackexchange.com/questions/7573/difference-between-mongodbs-find-and-findone-calls/7587#7587&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://dba.stackexchange.com/questions/7573/difference-between-mongodbs-find-and-findone-calls/7587#7587&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Nov 2011 20:25:17 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>28133</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0121z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6210</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>7320</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>