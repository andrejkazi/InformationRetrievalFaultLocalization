<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:48:41 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-402/DATAMONGO-402.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-402] Inner class not supported</title>
                <link>https://jira.spring.io/browse/DATAMONGO-402</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;Inner class not supported in 1.0.1.GA. It works fine in 1.0.0.GA&lt;br/&gt;
java.lang.IllegalArgumentException: No property null found for type class org.test.EnclosingClass$InsideClass&lt;br/&gt;
	at org.springframework.data.mapping.PropertyPath.&amp;lt;init&amp;gt;(PropertyPath.java:73)&lt;br/&gt;
	at org.springframework.data.mapping.PropertyPath.&amp;lt;init&amp;gt;(PropertyPath.java:92)&lt;br/&gt;
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:312)&lt;br/&gt;
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:294)&lt;br/&gt;
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:258)&lt;br/&gt;
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:239)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappedConstructor$MappedParameter.&amp;lt;init&amp;gt;(MappedConstructor.java:125)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappedConstructor.&amp;lt;init&amp;gt;(MappedConstructor.java:57)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:212)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:200)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getValueInternal(MappingMongoConverter.java:713)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$1.doWithPersistentProperty(MappingMongoConverter.java:230)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$1.doWithPersistentProperty(MappingMongoConverter.java:220)&lt;br/&gt;
	at org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:173)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:220)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:200)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:164)&lt;br/&gt;
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:73)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1693)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindOneInternal(MongoTemplate.java:1405)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.doFindOne(MongoTemplate.java:1224)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.findOne(MongoTemplate.java:455)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.findOne(MongoTemplate.java:450)&lt;br/&gt;
	at org.test.InnerClassTest.testInnerClass(InnerClassTest.java:43)&lt;/p&gt;</description>
                <environment></environment>
        <key id="42251">DATAMONGO-402</key>
            <summary>Inner class not supported</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="trgoofi">trgoofi</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Feb 2012 00:31:18 +0000</created>
                <updated>Mon, 25 Mar 2013 09:30:59 +0000</updated>
                            <resolved>Fri, 9 Mar 2012 06:31:10 +0000</resolved>
                                    <version>1.0.1</version>
                                    <fixVersion>1.1 M1</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                            <timeestimate seconds="0">0d</timeestimate>
                            <timespent seconds="3600">1h</timespent>
                                <comments>
                            <comment id="76686" author="olivergierke" created="Fri, 9 Mar 2012 06:16:47 +0000"  >&lt;p&gt;The problem with the scenario is that using a non-static inner class causes the instantiation to fail. This is due to the fact that those classes get a constructor added by the compiler thet takes an outer class instance as argument which we don&apos;t handle. You sould be able to work around this by making the inner class a static one.&lt;/p&gt;

&lt;p&gt;I&apos;ve just added general support for this scenario to Spring Data Commons and will commit the relevant changes to the 1.1.x branch in a few seconds.&lt;/p&gt;</comment>
                            <comment id="76687" author="olivergierke" created="Fri, 9 Mar 2012 06:31:10 +0000"  >&lt;p&gt;Deployed to 1.1.x snapshots.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10150">
                    <name>Depend</name>
                                            <outwardlinks description="depends on">
                                        <issuelink>
            <issuekey id="42531">DATACMNS-134</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="19490" name="mylyn-context.zip" size="1893" author="olivergierke" created="Fri, 9 Mar 2012 06:31:12 +0000"/>
                            <attachment id="19420" name="test-inner-class.zip" size="13113" author="trgoofi" created="Fri, 17 Feb 2012 00:31:18 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 9 Mar 2012 06:16:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29526</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i047an:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24556</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21300</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>