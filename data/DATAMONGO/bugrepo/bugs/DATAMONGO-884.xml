<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:29:16 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-884/DATAMONGO-884.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-884] Potential NullPointerException for lazy DBRefs</title>
                <link>https://jira.spring.io/browse/DATAMONGO-884</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;Revised upon request by Thomas Darimont:&lt;/p&gt;

&lt;p&gt;NullPointerException occurs when calling overriden Object method of the field with &quot;@DBRef(lazy=true)&quot;&lt;/p&gt;

&lt;p&gt;Assume class B has override toString method as below:&lt;/p&gt;

&lt;p&gt;public class B&lt;br/&gt;
{&lt;br/&gt;
   @Id&lt;br/&gt;
   private String id;&lt;br/&gt;
   private String value;&lt;/p&gt;

&lt;p&gt;   @Override&lt;br/&gt;
   public String toString()&lt;/p&gt;
{
      return String.format(&quot;B[id=&apos;%s&apos;, value=&apos;%s&apos;]&quot;,id,value);
   }&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Assume class A contains class B as a field with annotation &quot;DBRef(lazy=true)&quot; as below:&lt;br/&gt;
&lt;br/&gt;
public class A&lt;br/&gt;
{&lt;br/&gt;
   @Id&lt;br/&gt;
   private String id;&lt;br/&gt;
&lt;br/&gt;
   @DBRef(lazy=true)&lt;br/&gt;
   public B b;&lt;br/&gt;
&lt;br/&gt;
   @Override&lt;br/&gt;
   public String toString()&lt;br/&gt;
   {
      return String.format(&quot;A[b=&apos;%s&apos;]&quot;,b);
   }&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
When a class A object has queried from MongoTemplate and calls to println as below:&lt;br/&gt;
A obj = mongoTemplate().findOne(new Query(...), A.class);&lt;br/&gt;
System.out.println(obj);&lt;br/&gt;
&lt;br/&gt;
The above code raised exception in &quot;LazyLoadingInterceptor&quot; class within &quot;DefaultDbRefResolver&quot; class:&lt;br/&gt;
@Override&lt;br/&gt;
public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable {&lt;br/&gt;
   return ReflectionUtils.isObjectMethod(method) ? method.invoke(obj, args) : method.invoke(ensureResolved(), args);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
It seems that ReflectionUtils.isObjectMethod(method) returns &quot;true&quot; for even the method is an overriden method, so results to call&lt;br/&gt;
method.invoke(obj, args); // which result NullPointerException since obj is null.&lt;br/&gt;
where it should actually call &lt;br/&gt;
method.invoke(ensureResolved(), args);&lt;br/&gt;
&lt;br/&gt;
p.s. It seems obj is always &quot;null&quot; within the function &quot;DefaultDbRefResolver::LazyLoadingInterceptor::intercept().&quot; I was wondering if there is any reason for checking if the method is an Object method  by &quot;ReflectionUtils.isObjectMethod(method),&quot; since whether it is object method or not, method.invoke(obj,args) will always result NullPointerException due to obj is &quot;null.&quot;&lt;br/&gt;
&lt;br/&gt;
------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
Original Message:&lt;br/&gt;
&lt;br/&gt;
DefaultDbRefResolver.intercept function only check if the method is originally from Object class, but does not check if the method is an override method of Object. when the method is an override method of Object then it should call ensureResolved() instead of just calling method.invoke(obj,args).&lt;br/&gt;
&lt;br/&gt;
For example.&lt;br/&gt;
&lt;br/&gt;
When @DBRef(lazy=true) is used and toString method is override, it result NullPointerException.&lt;br/&gt;
&lt;br/&gt;
public class B&lt;br/&gt;
{&lt;br/&gt;
   @Id&lt;br/&gt;
   private String id;&lt;br/&gt;
   private String value;&lt;br/&gt;
&lt;br/&gt;
   @Override&lt;br/&gt;
   public String toString(){      return String.format(&quot;B[id=&apos;%s&apos;, value=&apos;%s&apos;]&quot;,id,value);   }
&lt;p&gt;}&lt;br/&gt;
public class A&lt;br/&gt;
{&lt;br/&gt;
   @DBRef(lazy=true)&lt;br/&gt;
   public B b;&lt;/p&gt;

&lt;p&gt;   @Override&lt;br/&gt;
   public String toString()&lt;/p&gt;
   {
      return String.format(&quot;A[b=&apos;%s&apos;]&quot;,b);
   }
&lt;p&gt;}&lt;/p&gt;


&lt;p&gt;So in DefaultDbRefResolver.intercept method should change as below&lt;/p&gt;

&lt;p&gt;@Override&lt;br/&gt;
public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable &lt;/p&gt;
{
   return ReflectionUtils.isObjectMethod(method) &amp;amp;&amp;amp; method.getDeclaringClass()==Object.class ? method.invoke(obj, args) : method.invoke(ensureResolved(), args);
		}
</description>
                <environment></environment>
        <key id="56467">DATAMONGO-884</key>
            <summary>Potential NullPointerException for lazy DBRefs</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thomasd">Thomas Darimont</assignee>
                                    <reporter username="juhgiyo">Woong Gyu La</reporter>
                        <labels>
                            <label>Dijkstra</label>
                    </labels>
                <created>Wed, 19 Mar 2014 00:24:34 +0000</created>
                <updated>Tue, 1 Apr 2014 01:48:23 +0000</updated>
                            <resolved>Mon, 31 Mar 2014 06:22:23 +0000</resolved>
                                    <version>1.4.1 (Codd SR1)</version>
                                    <fixVersion>1.5 M1 (Dijkstra)</fixVersion>
                    <fixVersion>1.4.2 (Codd SR2)</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="100604" author="thomasd" created="Wed, 19 Mar 2014 02:15:06 +0000"  >&lt;p&gt;Please revise.&lt;/p&gt;</comment>
                            <comment id="100650" author="thomasd" created="Wed, 19 Mar 2014 16:22:50 +0000"  >&lt;p&gt;Hello Wong,&lt;/p&gt;

&lt;p&gt;would you mind having a look at: &lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/pull/153&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-mongodb/pull/153&lt;/a&gt;&lt;br/&gt;
I applied your change an added some test cases - does this fix the problem for you?&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Thomas&lt;/p&gt;</comment>
                            <comment id="100657" author="juhgiyo" created="Wed, 19 Mar 2014 22:12:58 +0000"  >&lt;p&gt;Hello Thomas,&lt;/p&gt;

&lt;p&gt;I just checked with your branch and tested with my code, and it works like a charm.&lt;br/&gt;
Thanks for the fast response.&lt;/p&gt;

&lt;p&gt;However, it seems parameter obj within DefaultDbRefResolver::LazyLoadingInterceptor::intercept function is always &quot;null.&quot;&lt;br/&gt;
I was wondering if there is any reason for checking if the method is an Object method by &quot;ReflectionUtils.isObjectMethod(method),&quot; since whether it is object method or not, method.invoke(obj,args) will always result NullPointerException due to parameter &quot;obj&quot; is &quot;null.&quot;&lt;/p&gt;

&lt;p&gt;Example (Used almost same example from main description):&lt;br/&gt;
public class B&lt;/p&gt;
{
@Id
private String id;
private String value;
/*
// comment out overriden toString function
@Override
public String toString()
{ return String.format(&quot;B[id=&apos;%s&apos;, value=&apos;%s&apos;]&quot;,id,value); }
&lt;p&gt;}&lt;br/&gt;
*/&lt;/p&gt;

&lt;p&gt;Assume class A contains class B as a field with annotation &quot;DBRef(lazy=true)&quot; as below:&lt;/p&gt;

&lt;p&gt;// Same as above&lt;br/&gt;
public class A&lt;/p&gt;
{
@Id
private String id;

@DBRef(lazy=true)
public B b;

@Override
public String toString()
{ return String.format(&quot;A[b=&apos;%s&apos;]&quot;,b); }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;When a class A object has queried from MongoTemplate and calls to println as below:&lt;br/&gt;
A obj = mongoTemplate().findOne(new Query(...), A.class);&lt;br/&gt;
System.out.println(obj);&lt;/p&gt;

&lt;p&gt;The above code will raise exception in &quot;LazyLoadingInterceptor&quot; class within &quot;DefaultDbRefResolver&quot; class due to parameter obj is &quot;null&quot;:&lt;br/&gt;
@Override&lt;br/&gt;
public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy) throws Throwable &lt;/p&gt;
{ return ReflectionUtils.isObjectMethod(method) ? method.invoke(obj, args) : method.invoke(ensureResolved(), args); }</comment>
                            <comment id="101077" author="w_c_smith" created="Fri, 28 Mar 2014 03:33:42 +0000"  >&lt;p&gt;I&apos;ve run into what appears to be the same bug in a slightly different guise. I have this Repository method:&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;List&amp;lt;Asset&amp;gt; findAllByOwner(Person owner);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;When the &lt;tt&gt;Person owner&lt;/tt&gt; field on &lt;tt&gt;Asset&lt;/tt&gt; is annotated &lt;tt&gt;@DBRef(lazy=true)&lt;/tt&gt;, this method returns an &lt;tt&gt;ArrayList&lt;/tt&gt; of the proper size (and containing the correct &lt;tt&gt;Asset&lt;/tt&gt; records, visible by drilling down in the debug inspector), but any attempts to do anything with it (such as view the list itself in the inspector, just via &lt;tt&gt;toString&lt;/tt&gt; or serialize it via Jackson) cause a meltdown in the subsystem trying to traverse the list; the Eclipse debug inspector displays&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;com.sun.jdi.InvocationException occurred invoking method.&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;Strangely, telling Jackson to serialize the field by ID instead of embedding it (&lt;tt&gt;@JsonIdentityReference(alwaysAsId = true)&lt;/tt&gt;) produces correct serialization output, though prior to the serialization the inspector still errors out.&lt;/p&gt;</comment>
                            <comment id="101100" author="thomasd" created="Fri, 28 Mar 2014 07:37:48 +0000"  >&lt;p&gt;Somehow a commit was lost during the merge into master and 1.4.x branch.&lt;/p&gt;

&lt;p&gt;I reopened the branch issue/&lt;a href=&quot;https://jira.spring.io/browse/DATAMONGO-884&quot; title=&quot;Potential NullPointerException for lazy DBRefs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAMONGO-884&quot;&gt;&lt;del&gt;DATAMONGO-884&lt;/del&gt;&lt;/a&gt; with fixes to the NPE problems mentioned in in the comments.&lt;br/&gt;
I changed the original PR of the issue&lt;br/&gt;
From: &lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/pull/153&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-mongodb/pull/153&lt;/a&gt;&lt;br/&gt;
To: &lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/pull/158&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-mongodb/pull/158&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This commit contains the mentioned fixes:&lt;br/&gt;
&lt;a href=&quot;https://github.com/spring-projects/spring-data-mongodb/commit/6d9c743fe2671156c0060e3b56877d4b9992b2d8&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-mongodb/commit/6d9c743fe2671156c0060e3b56877d4b9992b2d8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Could you give it another spin?&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 19 Mar 2014 02:15:06 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>42809</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>thomasd</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10684" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Pull Request URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/spring-projects/spring-data-mongodb/pull/158]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i07e7z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>43176</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>42511</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="40">45 - Dijkstra M1</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>