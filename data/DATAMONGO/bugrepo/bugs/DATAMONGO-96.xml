<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:27:58 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-96/DATAMONGO-96.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-96] Query#or(Query) does not work</title>
                <link>https://jira.spring.io/browse/DATAMONGO-96</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;Creating a query and adding another Query as &quot;or&quot; does not work.&lt;br/&gt;
Neither the object of the first, nor the objects of the second query that are supposed to get found are returned.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ethone.de/spring/mongodb-samples.zip&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://ethone.de/spring/mongodb-samples.zip&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
        <key id="40412">DATAMONGO-96</key>
            <summary>Query#or(Query) does not work</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="jbrisbin">Jon Brisbin</assignee>
                                    <reporter username="mas">Matthias Scudlik</reporter>
                        <labels>
                    </labels>
                <created>Mon, 11 Apr 2011 03:01:46 +0000</created>
                <updated>Mon, 25 Mar 2013 09:31:04 +0000</updated>
                            <resolved>Wed, 18 May 2011 08:56:38 +0000</resolved>
                                    <version>1.0 M2</version>
                                    <fixVersion>1.0 M3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="71629" author="thomas.risberg" created="Thu, 28 Apr 2011 13:20:24 +0000"  >&lt;p&gt;You&apos;re actually constructing the query wrong, but I know it is not obvious how to use the &quot;or&quot; method. We need better documentation. The or is modeled after how you would construct a MongoDB query using the $or operator which looks like this:&lt;/p&gt;

&lt;p&gt; { &quot;$or&quot; : [ { &quot;age&quot; : { &quot;$in&quot; : [ 11 , 21]}} , &lt;/p&gt;
{ &quot;age&quot; : 31}
&lt;p&gt;]}&lt;/p&gt;

&lt;p&gt;You have the $or operator and a list of queries where the results will be combined.&lt;/p&gt;

&lt;p&gt;So the way to do it with the Query builder is the following way:&lt;/p&gt;

&lt;p&gt;    Query q1 = new Query(Criteria.where(&quot;age&quot;).in(11, 21));&lt;br/&gt;
    Query q2 = new Query(Criteria.where(&quot;age&quot;).is(31));&lt;br/&gt;
    Query orQuery = new Query().or(q1, q2);&lt;/p&gt;

&lt;p&gt;Looking at your example you are doing something along these lines - &lt;/p&gt;

&lt;p&gt;by tacking on an or clause to an existing query: &lt;/p&gt;

&lt;p&gt;  q2.or(q1)&lt;/p&gt;

&lt;p&gt;your query would generate something like this:&lt;/p&gt;

&lt;p&gt; { &quot;age&quot; : 31 , &quot;$or&quot; : [ { &quot;age&quot; : { &quot;$in&quot; : [ 11 , 21]}}]}&lt;/p&gt;

&lt;p&gt;and this is not going to return what you expected.&lt;/p&gt;

&lt;p&gt;So give this a try, and I&apos;ll try to update the docs with some good examples.&lt;/p&gt;

&lt;p&gt;-Thomas&lt;/p&gt;
</comment>
                            <comment id="71630" author="mas" created="Thu, 28 Apr 2011 23:51:54 +0000"  >&lt;p&gt;Douesn&apos;t work for me either. This is what i tried:&lt;/p&gt;

&lt;p&gt;		Query q1 = new Query();&lt;/p&gt;

&lt;p&gt;		q1.addCriteria(Criteria.where(&quot;id&quot;).is(foo1.getId()));&lt;/p&gt;

&lt;p&gt;		Query q2 = new Query();&lt;br/&gt;
		q2.addCriteria(Criteria.where(&quot;id&quot;).is(foo2.getId()));&lt;/p&gt;

&lt;p&gt;		Query orQuery = new Query().or(q1, q2);&lt;/p&gt;

&lt;p&gt;		List&amp;lt;Foo&amp;gt; found = template.find(&quot;foo&quot;, orQuery, Foo.class);&lt;br/&gt;
		assertNotNull(found);&lt;br/&gt;
		assertEquals(2, found.size());&lt;br/&gt;
		assertTrue(found.contains(foo1));&lt;br/&gt;
		assertTrue(found.contains(foo2));&lt;/p&gt;

&lt;p&gt;I switched back to M2 because the current snapshot seems broken:&lt;/p&gt;

&lt;p&gt;Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;barRepository&apos;: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: &lt;span class=&quot;error&quot;&gt;&amp;#91;Assertion failed&amp;#93;&lt;/span&gt; - this argument is required; it must not be null&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1420)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:580)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)&lt;br/&gt;
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:84)&lt;br/&gt;
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)&lt;br/&gt;
	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:280)&lt;br/&gt;
	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:304)&lt;br/&gt;
	... 24 more&lt;br/&gt;
Caused by: java.lang.IllegalArgumentException: &lt;span class=&quot;error&quot;&gt;&amp;#91;Assertion failed&amp;#93;&lt;/span&gt; - this argument is required; it must not be null&lt;br/&gt;
	at org.springframework.util.Assert.notNull(Assert.java:112)&lt;br/&gt;
	at org.springframework.util.Assert.notNull(Assert.java:123)&lt;br/&gt;
	at org.springframework.data.document.mongodb.repository.MongoRepositoryFactoryBean$MongoRepositoryFactory.&amp;lt;init&amp;gt;(MongoRepositoryFactoryBean.java:124)&lt;br/&gt;
	at org.springframework.data.document.mongodb.repository.MongoRepositoryFactoryBean.createRepositoryFactory(MongoRepositoryFactoryBean.java:85)&lt;br/&gt;
	at org.springframework.data.repository.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:143)&lt;br/&gt;
	at org.springframework.data.document.mongodb.repository.MongoRepositoryFactoryBean.afterPropertiesSet(MongoRepositoryFactoryBean.java:100)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1417)&lt;br/&gt;
	... 37 more&lt;/p&gt;



&lt;p&gt;@Document(collection = &quot;bar&quot;)&lt;br/&gt;
public class Bar implements Serializable {&lt;/p&gt;

&lt;p&gt;	private static final long serialVersionUID = 1L;&lt;/p&gt;

&lt;p&gt;	@Id&lt;br/&gt;
	private BigInteger id;&lt;/p&gt;

&lt;p&gt;	public void setId(BigInteger id) &lt;/p&gt;
{
		this.id = id;
	}

&lt;p&gt;	public BigInteger getId() &lt;/p&gt;
{
		return id;
	}

&lt;p&gt;}&lt;/p&gt;


&lt;p&gt;@Repository&lt;br/&gt;
public interface BarRepository extends MongoRepository&amp;lt;Bar, BigInteger&amp;gt; {&lt;/p&gt;

&lt;p&gt;	public Bar findById(BigInteger id);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</comment>
                            <comment id="71654" author="mas" created="Mon, 9 May 2011 23:42:42 +0000"  >&lt;p&gt;Douesn&apos;t work for me either. This is what i tried:&lt;/p&gt;

&lt;p&gt;Query q1 = new Query();&lt;/p&gt;

&lt;p&gt;q1.addCriteria(Criteria.where(&quot;id&quot;).is(foo1.getId()));&lt;/p&gt;

&lt;p&gt;Query q2 = new Query();&lt;br/&gt;
q2.addCriteria(Criteria.where(&quot;id&quot;).is(foo2.getId()));&lt;/p&gt;

&lt;p&gt;Query orQuery = new Query().or(q1, q2);&lt;/p&gt;

&lt;p&gt;List&amp;lt;Foo&amp;gt; found = template.find(&quot;foo&quot;, orQuery, Foo.class);&lt;br/&gt;
assertNotNull(found);&lt;br/&gt;
assertEquals(2, found.size());&lt;br/&gt;
assertTrue(found.contains(foo1));&lt;br/&gt;
assertTrue(found.contains(foo2));&lt;/p&gt;

&lt;p&gt;I switched back to M2 because the current snapshot seems broken:&lt;/p&gt;

&lt;p&gt;Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;barRepository&apos;: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: &lt;span class=&quot;error&quot;&gt;&amp;#91;Assertion failed&amp;#93;&lt;/span&gt; - this argument is required; it must not be null&lt;br/&gt;
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1420)&lt;br/&gt;
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)&lt;br/&gt;
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)&lt;br/&gt;
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)&lt;br/&gt;
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)&lt;br/&gt;
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)&lt;br/&gt;
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)&lt;br/&gt;
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:580)&lt;br/&gt;
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)&lt;br/&gt;
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)&lt;br/&gt;
at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:84)&lt;br/&gt;
at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)&lt;br/&gt;
at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:280)&lt;br/&gt;
at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:304)&lt;br/&gt;
... 24 more&lt;br/&gt;
Caused by: java.lang.IllegalArgumentException: &lt;span class=&quot;error&quot;&gt;&amp;#91;Assertion failed&amp;#93;&lt;/span&gt; - this argument is required; it must not be null&lt;br/&gt;
at org.springframework.util.Assert.notNull(Assert.java:112)&lt;br/&gt;
at org.springframework.util.Assert.notNull(Assert.java:123)&lt;br/&gt;
at org.springframework.data.document.mongodb.repository.MongoRepositoryFactoryBean$MongoRepositoryFactory.&amp;lt;init&amp;gt;(MongoRepositoryFactoryBean.java:124)&lt;br/&gt;
at org.springframework.data.document.mongodb.repository.MongoRepositoryFactoryBean.createRepositoryFactory(MongoRepositoryFactoryBean.java:85)&lt;br/&gt;
at org.springframework.data.repository.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:143)&lt;br/&gt;
at org.springframework.data.document.mongodb.repository.MongoRepositoryFactoryBean.afterPropertiesSet(MongoRepositoryFactoryBean.java:100)&lt;br/&gt;
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)&lt;br/&gt;
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1417)&lt;br/&gt;
... 37 more&lt;/p&gt;

&lt;p&gt;@Document(collection = &quot;bar&quot;)&lt;br/&gt;
public class Bar implements Serializable {&lt;/p&gt;

&lt;p&gt;private static final long serialVersionUID = 1L;&lt;/p&gt;

&lt;p&gt;@Id&lt;br/&gt;
private BigInteger id;&lt;/p&gt;

&lt;p&gt;public void setId(BigInteger id) &lt;/p&gt;
{ this.id = id; }

&lt;p&gt;public BigInteger getId() &lt;/p&gt;
{ return id; }

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;@Repository&lt;br/&gt;
public interface BarRepository extends MongoRepository&amp;lt;Bar, BigInteger&amp;gt; &lt;/p&gt;
{ public Bar findById(BigInteger id); }</comment>
                            <comment id="71661" author="thomas.risberg" created="Thu, 12 May 2011 08:30:33 +0000"  >&lt;p&gt;This is due to the mapping of the id field name to _id is not going deep enough into the query.&lt;/p&gt;

&lt;p&gt;We end up with a query like this:&lt;br/&gt;
{ &quot;$or&quot; : [ &lt;/p&gt;
{ &quot;id&quot; : &quot;4dcbfb66a2bc287f8b8bd503&quot;}
&lt;p&gt; , &lt;/p&gt;
{ &quot;id&quot; : &quot;4dcbfb66a2bc287f8c8bd503&quot;}
&lt;p&gt;]}&lt;/p&gt;

&lt;p&gt;when it should have been:&lt;br/&gt;
{ &quot;$or&quot; : [ { &quot;_id&quot; : { &quot;$oid&quot; : &quot;4dcbfb66a2bc287f8b8bd503&quot;}} , { &quot;_id&quot; : &lt;/p&gt;
{ &quot;$oid&quot; : &quot;4dcbfb66a2bc287f8c8bd503&quot;}
&lt;p&gt;]}&lt;/p&gt;
</comment>
                            <comment id="71653" author="jbrisbin" created="Thu, 12 May 2011 14:55:07 +0000"  >&lt;p&gt;Just pushed some changes into master that search for id properties throughout the query object to accomodate $or/$nor and $in/$nin queries.&lt;/p&gt;</comment>
                            <comment id="71674" author="thomas.risberg" created="Wed, 18 May 2011 08:56:38 +0000"  >&lt;p&gt;Jon&apos;s latest changes seems to have fixed this.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="40410">DATAMONGO-102</issuekey>
        </issuelink>
                            </outwardlinks>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="40425">DATAMONGO-97</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 28 Apr 2011 13:20:24 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29808</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0509j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>29249</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>24232</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>