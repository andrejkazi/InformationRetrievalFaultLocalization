<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:53:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-298/DATAMONGO-298.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-298] Spring custom converters do not work for subclasses of java.lang.Number</title>
                <link>https://jira.spring.io/browse/DATAMONGO-298</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;The detail description can be found in here&lt;br/&gt;
&lt;a href=&quot;http://forum.springsource.org/showthread.php?115419-Custom-convertor-from-a-non-primitive-class-to-Integer&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springsource.org/showthread.php?115419-Custom-convertor-from-a-non-primitive-class-to-Integer&lt;/a&gt;&lt;/p&gt;</description>
                <environment>Spring Data Mongo DB 1.0.0 M4</environment>
        <key id="40310">DATAMONGO-298</key>
            <summary>Spring custom converters do not work for subclasses of java.lang.Number</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="bkalali">Bahman Kalali</reporter>
                        <labels>
                            <label>conversion</label>
                    </labels>
                <created>Fri, 14 Oct 2011 16:45:47 +0000</created>
                <updated>Mon, 25 Mar 2013 09:30:58 +0000</updated>
                            <resolved>Mon, 12 Dec 2011 06:17:38 +0000</resolved>
                                    <version>1.0 M4</version>
                                    <fixVersion>1.0 RC1</fixVersion>
                                    <component>Mapping</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                            <timeestimate seconds="0">0d</timeestimate>
                            <timespent seconds="3600">1h</timespent>
                                <comments>
                            <comment id="71990" author="bkalali" created="Fri, 21 Oct 2011 15:06:02 +0000"  >&lt;p&gt;It seemed that this is not a bug. However, for our use cases where we needed to convert three different types to Integer as follows, we need to change our converters using Number instead of Integer&lt;br/&gt;
Boolean&amp;lt;--&amp;gt;Integer&lt;br/&gt;
UnixTime&amp;lt;--&amp;gt;Integer&lt;br/&gt;
Enums&amp;lt;--&amp;gt;Integer&lt;/p&gt;

&lt;p&gt;The Number in the MONGO_TYPES seemed that covers all underlying sub types for our use cases.&lt;br/&gt;
Changing Integer to Number in all converters has resolved our issues.&lt;/p&gt;

&lt;p&gt;It would be nice this issue to be mentioned in the Reference Documentation. Also, I think it will be helpful if the list all of the wrapper classes (e.g. Integer etc..) that are of subclass of Number to be added to the MONGO_TYPES list of CustomConversions instead of Number. In this case, if someone wrote converters based on Integer, then they would not have had any issues.&lt;/p&gt;</comment>
                            <comment id="72589" author="mark.pollack" created="Fri, 11 Nov 2011 11:28:36 +0000"  >&lt;p&gt;Thanks for creating this ticket.  It seems we need to explicitly list the subclasses of number or do some more sophisticated checking of subclasses for the classes listed in MONGO_TYPES in CustomConversions&apos;s method isMongoBasicType&lt;/p&gt;</comment>
                            <comment id="72805" author="bkalali" created="Thu, 17 Nov 2011 19:55:32 +0000"  >&lt;p&gt;As I am fan of simple solution, I think if the the subclasses of Number along with Number itself are listed in MONGO_TYPES, then the issue will be resolved. I think it will be safe to keep the Number in the list to avoid breaking codes with converters that are already written using Number.&lt;/p&gt;</comment>
                            <comment id="73060" author="olivergierke" created="Thu, 24 Nov 2011 06:28:44 +0000"  >&lt;p&gt;I&apos;ve polished the implementation inside &lt;tt&gt;CustomConversions&lt;/tt&gt; to rather use MongoSimpleTypes.Holder.isSimpleType(&#8230;) instead of checking against yet another type list. This &lt;tt&gt;SimpleTypeHolder&lt;/tt&gt; instance represents the core types, MongoDB can handle and thus we have a valid check for target or source types. I&apos;ve added &lt;tt&gt;DBObject&lt;/tt&gt; as Mongo-primitive type as well. Also see &lt;a href=&quot;https://jira.spring.io/browse/DATACMNS-100&quot; title=&quot;SimpleTypHolder should not consider Number as simple type in general&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATACMNS-100&quot;&gt;&lt;del&gt;DATACMNS-100&lt;/del&gt;&lt;/a&gt; for a small fix I had to make to get this working.&lt;/p&gt;</comment>
                            <comment id="73590" author="bkalali" created="Thu, 8 Dec 2011 14:34:05 +0000"  >&lt;p&gt;I tried this fix and and auto scanning of converters using @Component. I ran into some issues. We have so many legacy enums that we need to be bale to convert them to integers. Almost all of these types of conversions are failed which used to work fine in M5 with Number usage.&lt;/p&gt;

&lt;p&gt;Here is a sample stack trace which happens during write. It seems that the issue is rooted from Mongo driver 2.7.1.     &lt;/p&gt;

&lt;p&gt;java.lang.IllegalArgumentException: can&apos;t serialize class com.common.domain.enums.StorageType&lt;br/&gt;
	at org.bson.BasicBSONEncoder._putObjectField(BasicBSONEncoder.java:234)&lt;br/&gt;
	at org.bson.BasicBSONEncoder.putObject(BasicBSONEncoder.java:140)&lt;br/&gt;
	at org.bson.BasicBSONEncoder.putObject(BasicBSONEncoder.java:86)&lt;br/&gt;
	at com.mongodb.DefaultDBEncoder.writeObject(DefaultDBEncoder.java:27)&lt;br/&gt;
	at com.mongodb.OutMessage.putObject(OutMessage.java:142)&lt;br/&gt;
	at com.mongodb.DBApiLayer$MyCollection.insert(DBApiLayer.java:252)h&lt;br/&gt;
	at com.mongodb.DBApiLayer$MyCollection.insert(DBApiLayer.java:211)&lt;br/&gt;
	at com.mongodb.DBCollection.insert(DBCollection.java:57)&lt;br/&gt;
	at com.mongodb.DBCollection.insert(DBCollection.java:87)&lt;br/&gt;
	at com.mongodb.DBCollection.save(DBCollection.java:716)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate$11.doInCollection(MongoTemplate.java:774)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:368)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.saveDBObject(MongoTemplate.java:766)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.doSave(MongoTemplate.java:702)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.save(MongoTemplate.java:692)&lt;br/&gt;
	at org.springframework.data.mongodb.core.MongoTemplate.save(MongoTemplate.java:688)&lt;br/&gt;
	at com.firescope.edge.repository.service.CredentialRepositoryService.save(CredentialRepositoryService.java:37)&lt;br/&gt;
	at com.firescope.edge.repository.service.CredentialRepositoryServiceTests.testFindAllSnmpCredentials(CredentialRepositoryServiceTests.java:120)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)&lt;br/&gt;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&lt;br/&gt;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)&lt;br/&gt;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)&lt;br/&gt;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&lt;br/&gt;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)&lt;br/&gt;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)&lt;br/&gt;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)&lt;br/&gt;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)&lt;br/&gt;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&lt;br/&gt;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;/p&gt;
</comment>
                            <comment id="73615" author="bkalali" created="Fri, 9 Dec 2011 07:30:36 +0000"  >&lt;p&gt;It seems that converters are still broken, please see my last comment &lt;/p&gt;</comment>
                            <comment id="73672" author="olivergierke" created="Mon, 12 Dec 2011 06:17:38 +0000"  >&lt;p&gt;Would you mind creating a new ticket containing a sample Converter signature as well as a test case on the &lt;tt&gt;MappingMongoConverter&lt;/tt&gt; showing what exactly doesn&apos;t convert as expected? This ticket here is already contained as fixed in released changelogs, so I&apos;d like to consider remaining bugs as regression (if existing). Feel free to link this one as related. Thanks!&lt;/p&gt;</comment>
                            <comment id="73982" author="bkalali" created="Sat, 17 Dec 2011 10:31:28 +0000"  >&lt;p&gt;This &lt;a href=&quot;https://jira.springsource.org/browse/DATACMNS-113&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://jira.springsource.org/browse/DATACMNS-113&lt;/a&gt; has resolved this issue as well.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="19141" name="mylyn-context.zip" size="3595" author="olivergierke" created="Thu, 24 Nov 2011 06:28:47 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 11 Nov 2011 11:28:36 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01mkf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9533</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9570</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>