<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 15:06:54 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATAMONGO-445/DATAMONGO-445.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATAMONGO-445] GeoNear Query Doesn&apos;t Work with Pageable</title>
                <link>https://jira.spring.io/browse/DATAMONGO-445</link>
                <project id="10701" key="DATAMONGO">Spring Data MongoDB</project>
                    <description>&lt;p&gt;I am trying to perform a geoNear query in conjunction with a point and a pageable parameter and it seems that the paging functionality doesn&apos;t work. Regardless of what I set the page and size parameters of the pageable to the query always returns 100 results. I have created a test case that demonstrates the issue. Please note that there are three test cases with comments. The findAll() test case demonstrates paging functionality working as expected and the other two test cases demonstrate paging functionality not working. &lt;/p&gt;

&lt;p&gt;One possible clue as to what is going might be the fact that findAll() utilizes QueryUtils.applyPagination() in the SimpleMongoRepository class to specify the query skip and limit values but the same isn&apos;t done for the geoNear queries and so it defaults to page 0 and size 100.&lt;/p&gt;</description>
                <environment>- Linux Mint 12 &lt;br/&gt;
- 32bit&lt;br/&gt;
- kernal 3.0.0-16-generic-pae&lt;br/&gt;
- java 1.6.0_25</environment>
        <key id="43236">DATAMONGO-445</key>
            <summary>GeoNear Query Doesn&apos;t Work with Pageable</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="thomasd">Thomas Darimont</assignee>
                                    <reporter username="saden1">Mark Aden</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 May 2012 23:15:38 +0000</created>
                <updated>Tue, 20 Oct 2015 19:22:10 +0000</updated>
                            <resolved>Thu, 22 Aug 2013 09:19:54 +0000</resolved>
                                    <version>1.0.1</version>
                                    <fixVersion>1.3 GA</fixVersion>
                    <fixVersion>1.2.4</fixVersion>
                                    <component>Repository</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>4</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="79232" author="olivergierke" created="Wed, 23 May 2012 11:39:38 +0000"  >&lt;p&gt;It seems you&apos;re sumbling over &lt;a href=&quot;https://jira.spring.io/browse/DATAMONGO-446&quot; title=&quot;Pageable query methods returning List are broken&quot; class=&quot;issue-link&quot; data-issue-key=&quot;DATAMONGO-446&quot;&gt;&lt;del&gt;DATAMONGO-446&lt;/del&gt;&lt;/a&gt;, which I recently fixed by applying the pull request provided by the reporter of the referred ticket. It essentially boiled down to the &lt;tt&gt;Pageable&lt;/tt&gt; parameter not applied if the return type of the method is &lt;tt&gt;List&lt;/tt&gt; which is actually your scenario as well. The second test case method works for me if I run it against the current snapshot of 1.1.x and 1.0.x. For the method returning a &lt;tt&gt;GeoPage&lt;/tt&gt; it&apos;s a bit more tricky as we have to trigger a &lt;tt&gt;near&lt;/tt&gt; command to be able to use the more advanced features for geo spatial queries (spherical ones, applying metrics etc.). Unfortunately the command doesn&apos;t provide a &lt;tt&gt;skip&lt;/tt&gt; parameter so we could effectively do two things:&lt;/p&gt;

&lt;p&gt;1. For a page request of &lt;tt&gt;2, 10&lt;/tt&gt; read all results and throw away the first two pages which reads unnecessary data but would return correct result at least&lt;br/&gt;
2. Reject page requests with anything else than a page number of 0.&lt;/p&gt;</comment>
                            <comment id="81405" author="saden1" created="Thu, 5 Jul 2012 17:18:04 +0000"  >&lt;p&gt;The second test case, testFindByLocationNear, doesn&apos;t work in version 1.0.1.RELEASE but it does work if you switch to newer versions of spring-data-mongo. As for the third test case, testGetByLocationNear, it does in fact seem that MonogoDB doesn&apos;t support skip functionality with the geoNear command. &lt;/p&gt;


&lt;p&gt;For anyone interested, after a few days of investigating how to work around the geoNear/skip limitation I have come to believe the best solution is:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Don&apos;t use geoNear command but instead use the $near operator&lt;/li&gt;
	&lt;li&gt;The skip/limit functionality can be utilized with the $near operator&lt;/li&gt;
	&lt;li&gt;The $near operator does not return distance information to you but it does return results sorted by distance&lt;/li&gt;
	&lt;li&gt;Since the $near operator doesn&apos;t return distance information you&apos;ll have to calculate it yourself and you have lots of information to help you calculate it:
	&lt;ol&gt;
		&lt;li&gt;You have the location used with the $near operator&lt;/li&gt;
		&lt;li&gt;You know the result are sorted by distance&lt;/li&gt;
		&lt;li&gt;You have results which also contain location information&lt;/li&gt;
		&lt;li&gt;You have the smarts to calculate distance on the server or the client side using Spherical Law of Cosines formula or Pythagoras&#8217; theorem if performance trumps accuracy (see &lt;a href=&quot;http://www.movable-type.co.uk/scripts/latlong.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.movable-type.co.uk/scripts/latlong.html&lt;/a&gt;)&lt;/li&gt;
	&lt;/ol&gt;
	&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This is a decent work around but for a large system with lots of data utilizing the skip/limit functionality in conjunction with $near is a very bad idea. If performance is very important to you then it is recommended that you dump skip/limit and instead utilize a range based paging utilizing a counter/sequence or date field in your document.&lt;/p&gt;


&lt;p&gt;Hope this is helpful.&lt;/p&gt;


&lt;p&gt;Cheers&lt;br/&gt;
-Aden&lt;/p&gt;</comment>
                            <comment id="81406" author="saden1" created="Thu, 5 Jul 2012 17:19:46 +0000"  >&lt;p&gt;Hi Oliver &lt;/p&gt;

&lt;p&gt;Thanks for your help.&lt;/p&gt;</comment>
                            <comment id="92759" author="thomasd" created="Wed, 14 Aug 2013 06:04:42 +0000"  >&lt;p&gt;Added pull request: &lt;a href=&quot;https://github.com/SpringSource/spring-data-mongodb/pull/64&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-data-mongodb/pull/64&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="92998" author="olivergierke" created="Thu, 22 Aug 2013 09:19:54 +0000"  >&lt;p&gt;Fixed by &lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=thomasd&quot; class=&quot;user-hover&quot; rel=&quot;thomasd&quot;&gt;Thomas Darimont&lt;/a&gt; by reading all elements up to the given page and only mapping the ones inside the requested page.&lt;/p&gt;</comment>
                            <comment id="120792" author="neha.sharma" created="Tue, 20 Oct 2015 19:22:10 +0000"  >&lt;p&gt;I still see issue in my case. I used $nearSphere with few Criteria&apos;s now when I am looking for document from mongo, it&apos;s fetching the correct document from mongodb, but I see some problem in next and prev links&lt;br/&gt;
If 5 documents being fetch for below query and then for page=3, I see prev link still shows page=1 and size=10, if I am on page=4, then still prev link shows page=1 and size=10  (where size=10 is default in my case)&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;Pageable pageable = &lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; PageRequest(&lt;/span&gt;&lt;span style=&quot;color: #009900; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: #009900; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;Query query = &lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; Query().with(pageable);&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;query.addCriteria(Criteria.where(&lt;/span&gt;&lt;span style=&quot;color: blue; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;&quot;geoPosition&quot;&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;).nearSphere(&lt;/span&gt;&lt;span style=&quot;color: #006699; font-weight: bold; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt; Point(lon, lat)).maxDistance(getInKilometer(distance)));&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;

&lt;p&gt;Please refer below: Issue still reported there:&lt;br/&gt;
Please refer: &lt;a href=&quot;http://stackoverflow.com/questions/24004015/spring-data-mongodb-nearsphere-not-working-with-query-withpageable&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://stackoverflow.com/questions/24004015/spring-data-mongodb-nearsphere-not-working-with-query-withpageable&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="19638" name="GeoNearPagableTestCase.tar.gz" size="3605" author="saden1" created="Mon, 7 May 2012 23:15:38 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 May 2012 11:39:38 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30655</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>neha.sharma</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i008vz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1462</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>30355</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="17">The Road To SpringOne</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>