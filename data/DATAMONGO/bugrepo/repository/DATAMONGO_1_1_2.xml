<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="DATAMONGO">
	<bug id="622" opendate="2013-02-26 01:40:45" fixdate="2013-03-05 00:52:23" resolution="Fixed">
		<buginformation>
			<summary>An unversioned object should be created using insert() instead of save.</summary>
			<description>MongoTemplate.doSaveVersioned() uses doSave() to store an unversioned object. It should rather use doInsert() to avoid race conditions on concurrent inserts.</description>
			<version>1.2 GA</version>
			<fixedVersion>1.2.1, 1.3 M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplateTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplate.java</file>
		</fixedFiles>
	</bug>
	<bug id="621" opendate="2013-02-26 01:34:44" fixdate="2013-03-05 00:56:11" resolution="Fixed">
		<buginformation>
			<summary>MongoTemplate.initializeVersionProperty() does not use ConversionService</summary>
			<description>The BeanWrapper used in MongoTemplate.initializeVersionProperty() is not using the ConversionService held in the MongoConverter. This can cause type assignment conflicts in case the version property is not an integer.</description>
			<version>1.2 GA</version>
			<fixedVersion>1.2.1, 1.3 M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplateTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplate.java</file>
		</fixedFiles>
	</bug>
	<bug id="620" opendate="2013-02-26 01:32:23" fixdate="2013-03-05 00:57:53" resolution="Fixed">
		<buginformation>
			<summary>MongoTemplate.doSaveVersioned() does not consider collection handed into the method</summary>
			<description>doSaveVersioned() calls updateFirst(query, update, objectToSave.getClass()) in an update case which essentially neglects the collectionName originally handed into the method.</description>
			<version>1.2 GA</version>
			<fixedVersion>1.2.1, 1.3 M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplateTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplate.java</file>
			<file type="M">org.springframework.data.mongodb.core.PersonWithVersionPropertyOfTypeInteger.java</file>
		</fixedFiles>
	</bug>
	<bug id="617" opendate="2013-02-20 02:13:42" fixdate="2013-03-25 10:47:17" resolution="Fixed">
		<buginformation>
			<summary>NullPointerException in MongoTemplate.initializeVersionProperty()</summary>
			<description>If mongoPersistentEntity is null, NullPointerException is thrown (line 671).
Write this (ligne 669) : 






if (mongoPersistentEntity != null &amp;amp;&amp;amp; mongoPersistentEntity.hasVersionProperty()) 






Instead of : 






if (mongoPersistentEntity == null || mongoPersistentEntity.hasVersionProperty())





</description>
			<version>1.1.2</version>
			<fixedVersion>1.2.1, 1.3 M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplateTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplate.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">646</link>
		</links>
	</bug>
	<bug id="646" opendate="2013-04-08 03:56:44" fixdate="2013-04-08 11:15:14" resolution="Duplicate">
		<buginformation>
			<summary>Can&amp;apos;t insert DBObjects through MongoTemplate</summary>
			<description>It appears that inserting DBObject instances directly through MongoTemplate is no longer possible in 1.2.0. Is this supposed to be the case?
When I try to insert a raw DBObject (to test conversion logic from old schema to new upon read), the following exception is thrown:






java.lang.NullPointerException




	at org.springframework.data.mongodb.core.MongoTemplate.initializeVersionProperty(MongoTemplate.java:671)




	at org.springframework.data.mongodb.core.MongoTemplate.doInsert(MongoTemplate.java:651)




	at org.springframework.data.mongodb.core.MongoTemplate.insert(MongoTemplate.java:613)




	at com.portalify.a.project.AnITCase.testThatRequiresInsertionOfRawObjects(AnITCase.java:123)






The direct problem is that initializeVersionProperty() doesn&amp;amp;apos;t do proper null checking before calling mongoPersistentEntity.getVersionProperty(). In fact, it specifically allows proceeding to the problematic branch when mongoPersistentEntity is null.</description>
			<version>1.2 GA</version>
			<fixedVersion>1.2.1, 1.3 M1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplateTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplate.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">617</link>
		</links>
	</bug>
</bugrepository>