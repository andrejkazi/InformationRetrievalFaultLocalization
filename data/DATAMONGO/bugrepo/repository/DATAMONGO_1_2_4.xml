<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="DATAMONGO">
	<bug id="741" opendate="2013-08-06 12:03:08" fixdate="2013-08-07 01:27:12" resolution="Fixed">
		<buginformation>
			<summary>Trying to &amp;apos;group&amp;apos; on a field of a sub-object causes an error in Spring Data MongoDB 1.3.0.RC1</summary>
			<description>Using the new Aggregation support fails when I try to &amp;amp;apos;group&amp;amp;apos; on a property of a sub-object.  The referenced Gist should give enough context.  Following things in the debugger lead me to believe that the code is trying to resolve the &amp;amp;apos;code&amp;amp;apos; property on the parent object instead of the contained sub-object.  Using a top-level property works great.  I&amp;amp;apos;ve run the equivalent aggregation in the MongoDB shell and it allows me to &amp;amp;apos;group&amp;amp;apos; on the sub-object&amp;amp;apos;s property so it doesn&amp;amp;apos;t appear to be illegal in MongoDB.</description>
			<version>1.3 RC1</version>
			<fixedVersion>1.3 GA</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.aggregation.ExposedFieldsAggregationOperationContext.java</file>
			<file type="M">org.springframework.data.mongodb.core.aggregation.GroupOperationUnitTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.aggregation.ExposedFields.java</file>
			<file type="M">org.springframework.data.mongodb.core.aggregation.Fields.java</file>
			<file type="M">org.springframework.data.mongodb.core.aggregation.AggregationUnitTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.aggregation.TypeBasedAggregationOperationContext.java</file>
		</fixedFiles>
	</bug>
	<bug id="829" opendate="2014-01-21 05:52:16" fixdate="2014-03-03 06:41:48" resolution="Fixed">
		<buginformation>
			<summary>NearQuery, when used in conjunction with a Query, it sets num=0, unless Query specifies otherwise</summary>
			<description>Hello,
i have built the following query:






public GeoResults&amp;lt;MyObject&amp;gt; findByTypeAndLocationNear(MyObjectType type, Point p, Distance distance) {




   final Query query = Query.query(Criteria.where("type").is(type.name()));




   final NearQuery nearQuery = NearQuery.near(p).maxDistance(distance).query(query);




   log.info("{}",nearQuery.toDBObject());




   return mongoTemplate.geoNear(nearQuery, MyObject.class);




}






And it logs to this:






{ "query" : { "type" : "small"} , "maxDistance" : 1.567855942887398E-4 , "distanceMultiplier" : 6378.137 , "num" : 0 , "near" : [ x , y] , "spherical" : true}






Where is this "num=0" coming from? I did not set any limits.
In the 1.2.1 release, "num" is an Integer and is only used in the DBObject, when it is != null. When i set a Query, "num" is left untouched and therefore it does not appear in the DBObject. See [1]
Starting from 1.2.4 release, "num" is still an Integer, but when i set a Query, this time "num" gets the "limit" value of the Query, which by default is always 0. See [2]
I dont see this subtle change mentioned in the latest change file.
My opinion is, to use the limit value from Query is very convenient and makes sense, but it should only be used, if someone has explicitly set a limit for the Query object (probably its enough to check, if the limit is &amp;gt; 0)
The same applies on "skip", but it is not used in NearQuery anyways.
What do you guys think?
[1] http://grepcode.com/file/repo1.maven.org/maven2/org.springframework.data/spring-data-mongodb/1.2.1.RELEASE/org/springframework/data/mongodb/core/query/NearQuery.java#NearQuery.query%28org.springframework.data.mongodb.core.query.Query%29
[2] http://grepcode.com/file/repo1.maven.org/maven2/org.springframework.data/spring-data-mongodb/1.2.4.RELEASE/org/springframework/data/mongodb/core/query/NearQuery.java#NearQuery.query%28org.springframework.data.mongodb.core.query.Query%29
[3] http://docs.mongodb.org/manual/reference/command/geoNear/
[4] http://docs.spring.io/spring-data/mongodb/docs/1.3.3.RELEASE/changelog.txt</description>
			<version>1.2.4</version>
			<fixedVersion>1.3.5 (Babbage SR4), 1.4.1 (Codd SR1), 1.5 M1 (Dijkstra)</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.query.NearQuery.java</file>
			<file type="M">org.springframework.data.mongodb.core.query.NearQueryUnitTests.java</file>
		</fixedFiles>
	</bug>
</bugrepository>