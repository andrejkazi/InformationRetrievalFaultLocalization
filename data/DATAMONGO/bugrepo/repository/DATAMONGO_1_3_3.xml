<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="DATAMONGO">
	<bug id="816" opendate="2013-12-18 00:36:29" fixdate="2014-01-14 06:02:15" resolution="Fixed">
		<buginformation>
			<summary>Unable to execute query with DocumentCallbackHandler when query contains Criteria with enums.</summary>
			<description>spring-data-mongodb - 1.3.3.RELEASE
mongo-java-driver - 2.11.3
Unable to execute query using void org.springframework.data.mongodb.core.MongoTemplate.executeQuery(Query query, String collectionName, DocumentCallbackHandler dch)
with queries which contain Criteries with Enums.






Stack trace






:




java.lang.IllegalArgumentException: can&amp;amp;apos;t serialize class Day




	at org.bson.BasicBSONEncoder._putObjectField(BasicBSONEncoder.java:273)




	at org.bson.BasicBSONEncoder.putIterable(BasicBSONEncoder.java:298)




	at org.bson.BasicBSONEncoder._putObjectField(BasicBSONEncoder.java:237)




	at org.bson.BasicBSONEncoder.putObject(BasicBSONEncoder.java:174)




	at org.bson.BasicBSONEncoder._putObjectField(BasicBSONEncoder.java:229)




	at org.bson.BasicBSONEncoder.putObject(BasicBSONEncoder.java:174)




	at org.bson.BasicBSONEncoder.putObject(BasicBSONEncoder.java:120)




	at com.mongodb.DefaultDBEncoder.writeObject(DefaultDBEncoder.java:27)




	at com.mongodb.OutMessage.putObject(OutMessage.java:289)




	at com.mongodb.OutMessage.writeQuery(OutMessage.java:211)




	at com.mongodb.OutMessage.query(OutMessage.java:84)




	at com.mongodb.DBApiLayer$MyCollection.__find(DBApiLayer.java:285)




	at com.mongodb.DBApiLayer$MyCollection.__find(DBApiLayer.java:273)




	at com.mongodb.DBCursor._check(DBCursor.java:368)




	at com.mongodb.DBCursor._hasNext(DBCursor.java:459)




	at com.mongodb.DBCursor.hasNext(DBCursor.java:484)




	at org.springframework.data.mongodb.core.MongoTemplate.executeQueryInternal(MongoTemplate.java:1701)




	at org.springframework.data.mongodb.core.MongoTemplate.executeQuery(MongoTemplate.java:377)




	at org.springframework.data.mongodb.core.MongoTemplate.executeQuery(MongoTemplate.java:350)






Please find little unit test in attachment</description>
			<version>1.3.3 (Babbage SR2)</version>
			<fixedVersion>1.4 RC1 (Codd), 1.3.4 (Babbage SR3)</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplateTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.MongoTemplate.java</file>
		</fixedFiles>
	</bug>
	<bug id="830" opendate="2014-01-23 08:09:40" fixdate="2014-02-11 05:56:17" resolution="Fixed">
		<buginformation>
			<summary>NPE during cache warmup in CustomConversions</summary>
			<description>The cache seems not to be able to handle heavy load during its warmup phase.
We use 42 threads in parallel in performance test scenario (a lot of database operations in each thread) and got the NPE in one of five runs.
Using a ConcurrentHashMap solves the problem.






java.lang.NullPointerException




     at org.springframework.data.mongodb.core.convert.CustomConversions.getCustomReadTarget(CustomConversions.java:329)




     at org.springframework.data.mongodb.core.convert.CustomConversions.hasCustomReadTarget(CustomConversions.java:283)




     at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:200)




     at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:187)




     at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:183)




     at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:77)




     at org.springframework.data.mongodb.core.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1975)




     at org.springframework.data.mongodb.core.MongoTemplate.executeFindOneInternal(MongoTemplate.java:1626)




     at org.springframework.data.mongodb.core.MongoTemplate.doFindOne(MongoTemplate.java:1446)




     at org.springframework.data.mongodb.core.MongoTemplate.findById(MongoTemplate.java:539)




     at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findOne(SimpleMongoRepository.java:100)




     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)




     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




     at java.lang.reflect.Method.invoke(Method.java:606)




     at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:358)




     at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:343)




     at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)




     at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)




     at com.sun.proxy.$Proxy26.findOne(Unknown Source)




     at de.is24.offer.mongodb.evaluation.ReadYourOwnDataRightTask.countNumberOfInvalidResults(ReadYourOwnDataRightTask.java:34)




     at de.is24.offer.mongodb.evaluation.ReadYourOwnDataRightTask$$FastClassByCGLIB$$2b453a69.invoke(&amp;lt;generated&amp;gt;)




     at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)




     at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:698)




     at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)




     at org.springframework.aop.interceptor.AsyncExecutionInterceptor$1.call(AsyncExecutionInterceptor.java:95)




     at java.util.concurrent.FutureTask.run(FutureTask.java:262)




     at java.lang.Thread.run(Thread.java:744)





</description>
			<version>1.3.3 (Babbage SR2)</version>
			<fixedVersion>1.3.4 (Babbage SR3), 1.4 GA (Codd)</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.convert.CustomConversions.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">518</link>
		</links>
	</bug>
	<bug id="833" opendate="2014-01-24 02:52:54" fixdate="2014-02-25 21:03:24" resolution="Fixed">
		<buginformation>
			<summary>EnumSet is not handled correctly</summary>
			<description>Using EnumSet as collection for enums caused exception when BasicDBList from database is mapped back to EnumSet.
Stack trace when version org.springframework.data:spring-data-mongodb:1.3.3.RELEASE is used:






java.lang.IllegalArgumentException: Could not instantiate Collection type: java.util.EnumSet




	at org.springframework.core.CollectionFactory.createCollection(CollectionFactory.java:258)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readCollectionOrArray(MappingMongoConverter.java:778)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readValue(MappingMongoConverter.java:1048)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.access$100(MappingMongoConverter.java:77)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:999)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getValueInternal(MappingMongoConverter.java:755)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$1.doWithPersistentProperty(MappingMongoConverter.java:256)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$1.doWithPersistentProperty(MappingMongoConverter.java:249)




	at org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:257)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:249)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:223)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:187)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:183)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:77)




	at org.springframework.data.mongodb.core.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1975)




	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:1671)




	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1496)




	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1480)




	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:527)




	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:518)




	...




Caused by: java.lang.InstantiationException: java.util.EnumSet




	at java.lang.Class.newInstance0(Class.java:342)




	at java.lang.Class.newInstance(Class.java:310)




	at org.springframework.core.CollectionFactory.createCollection(CollectionFactory.java:255)




	...





</description>
			<version>1.3.3 (Babbage SR2)</version>
			<fixedVersion>1.4.1 (Codd SR1), 1.5 M1 (Dijkstra)</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.convert.MappingMongoConverterUnitTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.convert.MappingMongoConverter.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="is related to">451</link>
		</links>
	</bug>
	<bug id="821" opendate="2014-01-08 15:11:31" fixdate="2014-03-06 02:38:20" resolution="Fixed">
		<buginformation>
			<summary>MappingException for $size queries on subcollections containing dbrefs</summary>
			<description>For repository method definition like below:






@Query("{meanings: {$not: {$size: 0}}}")




Page&amp;lt;Entry&amp;gt; findAllWithMeanings(Pageable pageable);






Entry documents contain meanings field which is a list of @DBRef s. When I remove @DBRef annotation it works ok, but otherwise I get the following exception:






Exception in thread "main" org.springframework.data.mapping.model.MappingException: No mapping metadata found for class com.mongodb.BasicDBObject




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.createDBRef(MappingMongoConverter.java:729)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.toDBRef(MappingMongoConverter.java:288)




	at org.springframework.data.mongodb.core.convert.QueryMapper.convertAssociation(QueryMapper.java:273)




	at org.springframework.data.mongodb.core.convert.QueryMapper.getMappedKeyword(QueryMapper.java:158)




	at org.springframework.data.mongodb.core.convert.QueryMapper.getMappedObject(QueryMapper.java:111)




	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1489)




	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1480)




	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:527)




	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery$PagedExecution.execute(AbstractMongoQuery.java:205)




	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery.execute(AbstractMongoQuery.java:93)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:337)




	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)




	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)










</description>
			<version>1.3.3 (Babbage SR2)</version>
			<fixedVersion>1.4.1 (Codd SR1), 1.5 M1 (Dijkstra)</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mongodb.core.convert.QueryMapper.java</file>
			<file type="M">org.springframework.data.mongodb.repository.query.StringBasedMongoQueryUnitTests.java</file>
			<file type="M">org.springframework.data.mongodb.core.convert.QueryMapperUnitTests.java</file>
			<file type="M">org.springframework.data.mongodb.repository.AbstractPersonRepositoryIntegrationTests.java</file>
			<file type="M">org.springframework.data.mongodb.repository.PersonRepository.java</file>
		</fixedFiles>
	</bug>
</bugrepository>