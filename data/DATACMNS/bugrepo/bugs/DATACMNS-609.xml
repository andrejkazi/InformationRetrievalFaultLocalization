<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 13:09:02 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATACMNS-609/DATACMNS-609.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATACMNS-609] Multiple usage of repository setup means (XML or annotation) creates multiple bean definitions for RepositoryInterfaceAwareBeanPostProcessor</title>
                <link>https://jira.spring.io/browse/DATACMNS-609</link>
                <project id="10510" key="DATACMNS">Spring Data Commons</project>
                    <description>&lt;p&gt;Apparently every time the tag &lt;tt&gt;jpa:repositories&lt;/tt&gt; is used in XML files, a new instance of &lt;tt&gt;RepositoryInterfaceAwareBeanPostProcessor&lt;/tt&gt; is created and registered with the bean factory. This is mainly a performance problem because &lt;tt&gt;predictBeanType(&#8230;)&lt;/tt&gt;-method is then called N times for every relevant bean. This can easily be reproduced with the version 51d1c5d of git@github.com:spring-projects/spring-data-jpa-examples.git by adding an extra stanza like &lt;tt&gt;&amp;lt;jpa:repositories base-package=&quot;org.springframework.dummy&quot; /&amp;gt;&lt;/tt&gt; to &lt;tt&gt;simple-repository-context.xml&lt;/tt&gt; and running &lt;tt&gt;XmlConfigCachingRepositoryTests&lt;/tt&gt;.&lt;/p&gt;</description>
                <environment></environment>
        <key id="60903">DATACMNS-609</key>
            <summary>Multiple usage of repository setup means (XML or annotation) creates multiple bean definitions for RepositoryInterfaceAwareBeanPostProcessor</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://jira.spring.io/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="victorbr">Victor Bronstein</reporter>
                        <labels>
                    </labels>
                <created>Sun, 30 Nov 2014 07:31:51 +0000</created>
                <updated>Mon, 8 Dec 2014 08:43:27 +0000</updated>
                            <resolved>Mon, 1 Dec 2014 01:35:19 +0000</resolved>
                                    <version>1.9.1 (Evans SR1)</version>
                                    <fixVersion>1.10 M1 (Fowler)</fixVersion>
                    <fixVersion>1.9.2 (Evans SR2)</fixVersion>
                                    <component>Repositories</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="110186" author="olivergierke" created="Sun, 30 Nov 2014 08:36:02 +0000"  >&lt;p&gt;Good catch, Victor! This really should be fixed. What I am wondering though is: is this really causing a performance problem? Even if these beans get called multiple times, the method call should immediately return as the type assignment check fails right away. Am I overseeing something here? Just wondering as we otherwise might be able to improve the performance for a single bean registration, too.&lt;/p&gt;</comment>
                            <comment id="110187" author="victorbr" created="Sun, 30 Nov 2014 09:23:04 +0000"  >&lt;p&gt;Thank you for picking it up so quickly, Oliver! It&apos;s definitely not a major performance problem. You&apos;re right, for most beans it returns right away. However, when it does some work, it does it far too many times. In our case we ended up with no less than 73 instances of this post-processor in the bean factory - yes, I&apos;m sorry &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; - so the total overhead reaches a couple of seconds.&lt;/p&gt;</comment>
                            <comment id="110189" author="olivergierke" created="Mon, 1 Dec 2014 00:14:05 +0000"  >&lt;p&gt;Does that mean you have &lt;tt&gt;&amp;lt;jpa:repositories &#8230; /&amp;gt;&lt;/tt&gt; declared 73 times? o.O&lt;/p&gt;</comment>
                            <comment id="110190" author="victorbr" created="Mon, 1 Dec 2014 00:30:08 +0000"  >&lt;p&gt;Different XMLs, different modules, but yes. A large Spring context...&lt;/p&gt;</comment>
                            <comment id="110245" author="victorbr" created="Tue, 2 Dec 2014 06:11:56 +0000"  >&lt;p&gt;Oliver, you might not believe it but after I applied the fix you made in &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/commit/6677612f8eac7a7ab67206a5709b6e94cc51028b&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-data-commons/commit/6677612f8eac7a7ab67206a5709b6e94cc51028b&lt;/a&gt; the startup time of our application has decreased by about &lt;b&gt;45 (forty five) seconds&lt;/b&gt;!&lt;br/&gt;
The thing is that there is a substantial number of usages of @Autowired in our Spring context. The method `predictBeanType` of bean post processors is used very heavily by the autowiring logic. Having 72 extra instances of a certain bean post processor didn&apos;t exactly speed things up &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/wink.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                            <outwardlinks description="relates to">
                                        <issuelink>
            <issuekey id="60910">DATASOLR-218</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="61098">DATACMNS-611</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 30 Nov 2014 08:36:02 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>46976</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0808v:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>46744</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>46678</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="69">54 - Fowler M1</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>