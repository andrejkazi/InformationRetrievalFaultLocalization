<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 13:19:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATACMNS-69/DATACMNS-69.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATACMNS-69] Performance issues with RepositoryInterfaceAwareBeanPostProcessor when using @Transactional</title>
                <link>https://jira.spring.io/browse/DATACMNS-69</link>
                <project id="10510" key="DATACMNS">Spring Data Commons</project>
                    <description>&lt;p&gt;There is a major performance issue with &lt;tt&gt;RepositoryInterfaceAwareBeanPostProcessor&lt;/tt&gt; when using &lt;tt&gt;@Transactional&lt;/tt&gt; support in application&apos;s service classes. The problem is that the method &lt;tt&gt;RepositoryInterfaceAwareBeanPostProcessor.predictBeanType(Class&amp;lt;?&amp;gt; beanClass, String beanName)&lt;/tt&gt; is relatively slow due to a usage of &lt;tt&gt;ClassUtils.resolveClassName(...)&lt;/tt&gt;. The actual problem is that the method in question is called whenever someone calls &lt;tt&gt;BeanFactoryUtils.beansOfTypeIncludingAncestors(...)&lt;/tt&gt; and that someone happens to be &lt;tt&gt;TransactionAspectUtils.getTransactionManager(...)&lt;/tt&gt; method, which is called before a call of any method annotated with &lt;tt&gt;@Transactional&lt;/tt&gt; annotation. These calls happens because &lt;tt&gt;RepositoryInterfaceAwareBeanPostProcessor&lt;/tt&gt; implements &lt;tt&gt;SmartInstantiationAwareBeanPostProcessor&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;Can &lt;tt&gt;RepositoryInterfaceAwareBeanPostProcessor.predictBeanType(Class&amp;lt;?&amp;gt; beanClass, String beanName)&lt;/tt&gt; method be optimized?&lt;/p&gt;</description>
                <environment></environment>
        <key id="39500">DATACMNS-69</key>
            <summary>Performance issues with RepositoryInterfaceAwareBeanPostProcessor when using @Transactional</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="netke">Nemanja Nedic</reporter>
                        <labels>
                            <label>bean-post-processor</label>
                            <label>performance</label>
                            <label>repository</label>
                    </labels>
                <created>Tue, 30 Aug 2011 02:50:32 +0000</created>
                <updated>Mon, 25 Mar 2013 09:25:40 +0000</updated>
                            <resolved>Wed, 31 Aug 2011 12:33:08 +0000</resolved>
                                    <version>1.1 Final</version>
                                    <fixVersion>1.2 M1</fixVersion>
                                    <component>Repositories</component>
                        <due></due>
                            <votes>5</votes>
                                    <watches>5</watches>
                                            <timeestimate seconds="0">0d</timeestimate>
                            <timespent seconds="900">0.25h</timespent>
                                <comments>
                            <comment id="69949" author="sslavic" created="Tue, 30 Aug 2011 08:07:40 +0000"  >&lt;p&gt;Root cause: &lt;a href=&quot;https://jira.spring.io/browse/SPR-6870&quot; title=&quot;Cache by-type lookups in DefaultListableBeanFactory&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-6870&quot;&gt;&lt;del&gt;SPR-6870&lt;/del&gt;&lt;/a&gt;&lt;br/&gt;
See &lt;a href=&quot;http://jawspeak.com/2010/11/28/spring-slow-autowiring-by-type-getbeannamesfortype-fix-10x-speed-boost-3600ms-to/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this&lt;/a&gt; for more details.&lt;/p&gt;</comment>
                            <comment id="69995" author="olivergierke" created="Wed, 31 Aug 2011 12:33:07 +0000"  >&lt;p&gt;Good catch! I&apos;ve added caching for the types resolved so that we don&apos;t try to continuously re-resolve the type based on the &lt;tt&gt;BeanDefinition&lt;/tt&gt;. Deployed to snapshot repository, so feel free to give it a try.&lt;/p&gt;</comment>
                            <comment id="70016" author="philw" created="Thu, 1 Sep 2011 04:31:18 +0000"  >&lt;p&gt;Hi Oliver,&lt;/p&gt;

&lt;p&gt;I think there is a problem with the fix committed for this:&lt;br/&gt;
&lt;a href=&quot;https://github.com/SpringSource/spring-data-commons/commit/a32d80379b085ed0751aacdc2187ea06bb91fab2&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-data-commons/commit/a32d80379b085ed0751aacdc2187ea06bb91fab2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The problem is that the cache key cannot be the beanClass as it is always JpaRepositoryFactoryBean.  This means if I have more than one Repository autowire fails because the second repository always resolves to the bean type of the first.&lt;/p&gt;

&lt;p&gt;Can the cache be keyed on the bean name instead?  &lt;/p&gt;

&lt;p&gt;Phil.&lt;/p&gt;


</comment>
                            <comment id="70017" author="philw" created="Thu, 1 Sep 2011 04:46:58 +0000"  >&lt;p&gt;&lt;a href=&quot;https://github.com/SpringSource/spring-data-commons/pull/9&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-data-commons/pull/9&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="70105" author="olivergierke" created="Sun, 4 Sep 2011 22:28:29 +0000"  >&lt;p&gt;Thanks, Phil!&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="39559">DATACMNS-70</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="18702" name="mylyn-context.zip" size="1394" author="olivergierke" created="Wed, 31 Aug 2011 12:33:10 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 30 Aug 2011 08:07:40 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3850</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>tmarshall</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00x47:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>5410</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>6704</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>