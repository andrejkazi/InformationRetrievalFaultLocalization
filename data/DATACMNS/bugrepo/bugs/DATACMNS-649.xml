<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Thu Dec 22 13:18:34 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/DATACMNS-649/DATACMNS-649.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[DATACMNS-649] Incorrect reference docs on extending all repositories causes failures in lookup of default transaction metadata</title>
                <link>https://jira.spring.io/browse/DATACMNS-649</link>
                <project id="10510" key="DATACMNS">Spring Data Commons</project>
                    <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;we had some bad time trying to figure why some of our operations did not reach the database. in the test project we have to repositories, one is called &quot;&lt;a href=&quot;https://github.com/issuerepro/spring-data-commons-transactional-repository/blob/master/src/main/java/transactional/repository/issues/repro/domain/FailingPersonRepository.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;FailingPersonRepository&lt;/a&gt;&quot; and one &quot;&lt;a href=&quot;https://github.com/issuerepro/spring-data-commons-transactional-repository/blob/master/src/main/java/transactional/repository/issues/repro/domain/SucceedingPersonRepository.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;SucceedingPersonRepository&lt;/a&gt;&quot;.&lt;/p&gt;

&lt;p&gt;also, there is a &lt;a href=&quot;https://github.com/issuerepro/spring-data-commons-transactional-repository/blob/master/src/test/java/transactional/repository/issues/repro/DemoApplicationTests.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;test&lt;/a&gt; case that runs the same logic on both repositories and as the name suggest one of the repository fails the test.&lt;/p&gt;


&lt;p&gt;we have a custom &lt;a href=&quot;https://github.com/issuerepro/spring-data-commons-transactional-repository/blob/master/src/main/java/transactional/repository/issues/repro/factory/CrudRepositoryFactoryBean.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;repository factory bean&lt;/a&gt; as well as the &lt;a href=&quot;https://github.com/issuerepro/spring-data-commons-transactional-repository/blob/master/src/main/java/transactional/repository/issues/repro/factory/CrudRepositoryFactory.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;repository factory&lt;/a&gt; that in this repro case does nothing more that wrapping the repisotry in an &lt;a href=&quot;https://github.com/issuerepro/spring-data-commons-transactional-repository/blob/master/src/main/java/transactional/repository/issues/repro/factory/CrudRepositoryImpl.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;impl&lt;/a&gt; (that does more in the actual project than here).&lt;/p&gt;

&lt;p&gt;there are also two base interfaces for our repository, the &lt;a href=&quot;https://github.com/issuerepro/spring-data-commons-transactional-repository/blob/master/src/main/java/transactional/repository/issues/repro/factory/CrudRepository.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;first one (CrudRepository)&lt;/a&gt; contains some mehtods related to the earlier mentioned impl (methods truncated for this testcase) and the &lt;a href=&quot;https://github.com/issuerepro/spring-data-commons-transactional-repository/blob/master/src/main/java/transactional/repository/issues/repro/factory/LongCrudRepository.java&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;second one (LongCurdRepository)&lt;/a&gt; extends the first and eliminates the generic ID part of the first Repository.&lt;/p&gt;

&lt;p&gt;this is needed as we are directly accessing the repositories throu GWT requestfactory and in our case they try to find e.g. a delete(java.lang.Long) but without the overriden methods in the LongCrudRepository there is only delete(java.io.Serializable) at runtime.&lt;/p&gt;


&lt;p&gt;here starts the issue. when not overriding the `delete` method the call to delete succeeds. but as soon as we have the delete(Long) in our repository we get a &quot;InvalidDataAccessApiUsageException: No transactional EntityManager available&quot; exception.&lt;/p&gt;

&lt;p&gt;our debugging shows that at &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/blob/master/src/main/java/org/springframework/data/repository/core/support/TransactionalRepositoryProxyPostProcessor.java#L339&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this pont&lt;/a&gt; the `specificMethod` is the one from the LongCrudRepository (and for our CrudRepository it is the delete from SimpleJpaRepository) and therefore there is no transaction.&lt;/p&gt;


&lt;p&gt;while there is a workaround (putting @Transactional on the delete in LongCrudRepository) we wanted to confirm if this behaviour is wanted or if there is a chance to see a change in a future release. &lt;/p&gt;</description>
                <environment></environment>
        <key id="62375">DATACMNS-649</key>
            <summary>Incorrect reference docs on extending all repositories causes failures in lookup of default transaction metadata</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="olivergierke">Oliver Gierke</assignee>
                                    <reporter username="kjanssen">Kay Janssen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Feb 2015 02:04:37 +0000</created>
                <updated>Thu, 5 Mar 2015 11:31:19 +0000</updated>
                            <resolved>Tue, 24 Feb 2015 07:40:17 +0000</resolved>
                                    <version>1.9.1 (Evans SR1)</version>
                                    <fixVersion>1.10 RC1 (Fowler)</fixVersion>
                    <fixVersion>1.9.3 (Evans SR3)</fixVersion>
                                    <component>Repositories</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="112747" author="olivergierke" created="Tue, 24 Feb 2015 02:59:15 +0000"  >&lt;p&gt;Any chance you can reduce the provided sample to the relevant parts? The custom repository factory doesn&apos;t really seem to play into this, does it? Test cases with 5 indirections don&apos;t really help understanding the case either. Please reduce the test case to the failing case only to let us investigate the case.&lt;/p&gt;

&lt;p&gt;Regarding your debugging steps of &lt;tt&gt;specificMethod&lt;/tt&gt;. That&apos;s sort of correct, but if you look at &lt;tt&gt;AbstractFallbackTransactionAttributeSource.computeTransactionAttribute(Method, Class&amp;lt;?&amp;gt;)&lt;/tt&gt; in &lt;tt&gt;TransactionalRepositoryProxyPostProcessor&lt;/tt&gt;, you&apos;ll see that we fall back to the target class method for the lookup of transaction attributes. This should be &lt;tt&gt;SimpleJpaRepository&lt;/tt&gt;&apos;s &lt;tt&gt;delete(&#8230;)&lt;/tt&gt; in your case as your &lt;tt&gt;CrudRepositoryImpl&lt;/tt&gt; doesn&apos;t override the delete method.&lt;/p&gt;</comment>
                            <comment id="112748" author="olivergierke" created="Tue, 24 Feb 2015 03:14:28 +0000"  >&lt;p&gt;I&apos;ve also added a &lt;a href=&quot;https://github.com/spring-projects/spring-data-jpa/commit/d1b21f42393dc346bed5bc901ef61e495cd13385&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;test case&lt;/a&gt; to show that for a redeclared method &lt;b&gt;without&lt;/b&gt; &lt;tt&gt;@Transactional&lt;/tt&gt; the default transaction semantics from the implementation class is used.&lt;/p&gt;</comment>
                            <comment id="112751" author="kjanssen" created="Tue, 24 Feb 2015 05:09:22 +0000"  >&lt;p&gt;Hi Oliver,&lt;br/&gt;
thank your for your fast reply! &lt;/p&gt;

&lt;p&gt;I reduced the amount of code in the test. The custom repository factory &lt;b&gt;is&lt;/b&gt; relevant. I have no idea why, but as soon as i remove &lt;tt&gt;repositoryFactoryBeanClass = CrudRepositoryFactoryBean.class&lt;/tt&gt; from &lt;tt&gt;@EnableJpaRepositories&lt;/tt&gt; the test passes.&lt;/p&gt;

&lt;p&gt;Regarding my debugging steps: I think you mean the &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/blob/master/src/main/java/org/springframework/data/repository/core/support/TransactionalRepositoryProxyPostProcessor.java#L373&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;&lt;tt&gt;repositoryInformation.getTargetClassMethod(method);&lt;/tt&gt;&lt;/a&gt; call. The resulting value of &lt;tt&gt;targetClassMethod&lt;/tt&gt; is &lt;tt&gt;void org.springframework.data.repository.CrudRepository.delete(java.io.Serializable)&lt;/tt&gt; and not as expected the &lt;tt&gt;delete(...)&lt;/tt&gt; of &lt;tt&gt;SimpleJpaRepository&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="112753" author="kjanssen" created="Tue, 24 Feb 2015 05:14:37 +0000"  >&lt;p&gt;for the &lt;tt&gt;succeedingRepositoryTest&lt;/tt&gt; the &lt;tt&gt;specificMethod&lt;/tt&gt; is &lt;tt&gt;SimpleJpaRepository.delete(...)&lt;/tt&gt;&lt;/p&gt;</comment>
                            <comment id="112761" author="olivergierke" created="Tue, 24 Feb 2015 06:58:59 +0000"  >&lt;p&gt;I checked out the project, ran &lt;tt&gt;mvn clean test&lt;/tt&gt;. Build breaks with the Thymeleaf auto-configuration complaining about a missing &lt;tt&gt;templates&lt;/tt&gt; folder. Again, please remove everything not directly related to the core issue. I&apos;d like to be able to just run &lt;tt&gt;mvn clean test&lt;/tt&gt;, have a single test case executed that fails with the exception you describe.&lt;/p&gt;</comment>
                            <comment id="112762" author="kjanssen" created="Tue, 24 Feb 2015 07:08:49 +0000"  >&lt;p&gt;&lt;tt&gt;mvn clean test&lt;/tt&gt; should work now.&lt;/p&gt;</comment>
                            <comment id="112763" author="olivergierke" created="Tue, 24 Feb 2015 07:16:17 +0000"  >&lt;p&gt;This is a bug in you factory extension, probably caused by our documentation showing a slightly incorrect example of what to return from &lt;tt&gt;getRepositoryBaseClass(&#8230;)&lt;/tt&gt; . If you return &lt;tt&gt;CrudRepositoryImpl.class&lt;/tt&gt; (I kindly suggest to find other names for these as shadowing the names already used in the core framework only causes confusion which type is now actually meant) from that method, the transaction infrastructure finds the most concrete method on &lt;tt&gt;SimpleJpaRepository&lt;/tt&gt; and the previously failing test succeeds. I&apos;ll go ahead and fix the reference docs accordingly.&lt;/p&gt;</comment>
                            <comment id="112766" author="olivergierke" created="Tue, 24 Feb 2015 07:40:18 +0000"  >&lt;p&gt;Fixed with &lt;a href=&quot;https://github.com/spring-projects/spring-data-commons/commit/64db95fb1e11d2a541d2b1fa4a9ee382dfef1c4c&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;this commit&lt;/a&gt;.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Feb 2015 02:59:15 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10182" key="com.atlassian.jira.toolkit:lastupdaterorcommenter">
                        <customfieldname>Last updater</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>olivergierke</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0882f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/issuerepro/spring-data-commons-transactional-repository]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10480" key="com.pyxis.greenhopper.jira:gh-sprint">
                        <customfieldname>Sprint</customfieldname>
                        <customfieldvalues>
                                <customfieldvalue id="76">56 - Fowler RC1</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>