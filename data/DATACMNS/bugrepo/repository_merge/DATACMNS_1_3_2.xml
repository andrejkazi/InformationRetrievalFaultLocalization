<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="DATACMNS">
	<bug id="12" master="271" duplicate="272" opendate="2013-01-28 05:10:37" fixdate="2013-01-28 07:28:43" resolution="Fixed">
		<buginformation>
			<summary>AnnotationBasedPersistentProperty should cache annotation lookups Cache Annotations in AnnotationBasedPersistentProperty</summary>
			<description> Looking up annotations every time from Java reflection is prohibitively expensive.
So please cache them.
Read annotations from getters, setters and the field and store them in a map with the same precendence rules as findAnnotation(type)
use that cache in isAnnotationPresent() and findAnnotation().
Also provide a getAnnotations() method that returns all annotations on that property. This collection would be used for Bean-Validation (JSR-303) and other methods that have to check meta-annotations.</description>
			<version>1.4 Final</version>
			<fixedVersion>1.5 Final</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.data.mapping.model.AnnotationBasedPersistentProperty.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">272</link>
			<link type="Duplicate" description="duplicates">271</link>
		</links>
	</bug>
</bugrepository>