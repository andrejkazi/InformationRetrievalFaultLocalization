<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 02:13:18 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COLLECTIONS-534/COLLECTIONS-534.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COLLECTIONS-534] Performance bug in CollectionBag::retainAll</title>
                <link>https://issues.apache.org/jira/browse/COLLECTIONS-534</link>
                <project id="12310465" key="COLLECTIONS">Commons Collections</project>
                    <description>&lt;p&gt;Hi,&lt;br/&gt;
There seems to be a performance bug in the method retainAll in the CollectionBag class.&lt;br/&gt;
The problem is that the code is checking containment over the parameter collection, which could be expensive for some types of collections like ArrayLists.&lt;br/&gt;
One solution could be to convert the Collection into a HashSet and check containment in the HashSet.&lt;br/&gt;
 If this is done, then running retainAll on a 1,000,000 collection would take less than 2 seconds instead of 27 mins, according to my experiments.&lt;/p&gt;

&lt;p&gt;____________________________________________&lt;br/&gt;
Here&apos;s a function to expose the bug:&lt;/p&gt;

&lt;p&gt; public static void collectionBagRetainAllTest() &lt;/p&gt;
{

	ArrayList&amp;lt;Integer&amp;gt; coll=new ArrayList&amp;lt;Integer&amp;gt;();
	for(int i=0;i&amp;lt;=1000000;++i)
	    coll.add(new Integer(i));

	TreeBag&amp;lt;Integer&amp;gt; treeBag=new TreeBag&amp;lt;Integer&amp;gt;(coll);

	CollectionBag&amp;lt;Integer&amp;gt; bag = new CollectionBag&amp;lt;Integer&amp;gt;(treeBag);

	bag.retainAll(coll);
     }
&lt;p&gt;_____________________________________&lt;/p&gt;

&lt;p&gt;Here&apos;s a proposed patch:&lt;/p&gt;

&lt;p&gt;  public boolean retainAll(final Collection&amp;lt;?&amp;gt; coll) {&lt;br/&gt;
        if (coll != null) {&lt;br/&gt;
            boolean modified = false;&lt;br/&gt;
            final Iterator&amp;lt;E&amp;gt; e = iterator();&lt;br/&gt;
	    HashSet&amp;lt;Object&amp;gt; set=new HashSet&amp;lt;Object&amp;gt;(coll);&lt;br/&gt;
            while (e.hasNext()) {&lt;br/&gt;
                if (!set.contains(e.next())) &lt;/p&gt;
{
                    e.remove();
                    modified = true;
                }
&lt;p&gt;            }&lt;br/&gt;
            return modified;&lt;br/&gt;
        } else &lt;/p&gt;
{
            // let the decorated bag handle the case of null argument
            return decorated().retainAll(null);
        }
&lt;p&gt;    }&lt;br/&gt;
_____________________________________&lt;/p&gt;</description>
                <environment>&lt;p&gt;Ubuntu 12.04&lt;/p&gt;</environment>
        <key id="12748417">COLLECTIONS-534</key>
            <summary>Performance bug in CollectionBag::retainAll</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="oswaldo_o">Oswaldo Olivo</reporter>
                        <labels>
                            <label>perfomance</label>
                    </labels>
                <created>Wed, 15 Oct 2014 21:01:11 +0000</created>
                <updated>Fri, 27 Nov 2015 21:11:12 +0000</updated>
                            <resolved>Sun, 19 Oct 2014 12:44:59 +0000</resolved>
                                    <version>4.0</version>
                                    <fixVersion>4.1</fixVersion>
                                    <component>Bag</component>
                    <component>Collection</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="14172953" author="sebb@apache.org" created="Wed, 15 Oct 2014 21:12:21 +0000"  >&lt;p&gt;However for smaller data sets, adding the extra conversion would probably reduce performance.&lt;br/&gt;
Have you tested that?&lt;/p&gt;</comment>
                            <comment id="14173001" author="oswaldo_o" created="Wed, 15 Oct 2014 21:40:10 +0000"  >&lt;p&gt;Hi Sebb,&lt;br/&gt;
Here are some results I&apos;ve gathered for different sizes:&lt;/p&gt;

&lt;p&gt;     Size         Fixed           Original&lt;/p&gt;

&lt;p&gt;     1000000  0m1.696s    27m35.343s&lt;br/&gt;
      500000   0m1.392s    11m22.767s&lt;br/&gt;
      100000   0m1.172s      0m1.136s&lt;br/&gt;
       10000    0m1.068s      0m1.132s&lt;br/&gt;
        1000     0m0.972s      0m0.988s&lt;br/&gt;
         100      0m0.968s      0m0.936s&lt;br/&gt;
          10       0m0.948s      0m0.908s&lt;/p&gt;</comment>
                            <comment id="14174142" author="tn" created="Thu, 16 Oct 2014 19:39:50 +0000"  >&lt;p&gt;If we can update the algorithm to get a better performance I am very much in favor of it, but just copying the input arguments to a different collection to improve the runtime performance is not what we should do imho.&lt;/p&gt;

&lt;p&gt;In similar cases we added something like that to the javadoc:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;         * This implementation iterates over the elements of this collection, checking each element in
         * turn to see if it&apos;s contained in &amp;lt;code&amp;gt;coll&amp;lt;/code&amp;gt;. If it&apos;s not contained, it&apos;s removed
         * from this collection. As a consequence, it is advised to use a collection type for
         * &amp;lt;code&amp;gt;coll&amp;lt;/code&amp;gt; that provides a fast (e.g. O(1)) implementation of
         * {@link Collection#contains(Object)}.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The rationale behind it is that we can not be sure about the runtime complexity of the provided collection and just copying it to another collection seems to be a waste if the user already uses something like a set or another collection that supports O(1) for contains.&lt;/p&gt;</comment>
                            <comment id="14174144" author="tn" created="Thu, 16 Oct 2014 19:42:33 +0000"  >&lt;p&gt;btw. our implementation is more or less equivalent to the one of the default collections in the jdk.&lt;/p&gt;</comment>
                            <comment id="14176305" author="tn" created="Sun, 19 Oct 2014 12:44:59 +0000"  >&lt;p&gt;Added comment in r1632904.&lt;/p&gt;

&lt;p&gt;Thanks for the report.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 15 Oct 2014 21:12:21 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            2 years, 4 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i217vb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>