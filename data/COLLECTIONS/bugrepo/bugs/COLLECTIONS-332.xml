<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Nov 19 23:21:57 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COLLECTIONS-332/COLLECTIONS-332.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COLLECTIONS-332] ListOrderedMap not respecting underlying list</title>
                <link>https://issues.apache.org/jira/browse/COLLECTIONS-332</link>
                <project id="12310465" key="COLLECTIONS">Commons Collections</project>
                    <description>&lt;p&gt;When decorating either CaseInsensitiveMap or IdentityMap (and I believe this will impact any java.util.TreeMap built with a non-.equals() Comparator), ListOrderedMap responds inconsistently with the underlying map.  The ordering seems to be operating off .equals() rather than the actual contents of the underlying map. &lt;/p&gt;</description>
                <environment></environment>
        <key id="12430014">COLLECTIONS-332</key>
            <summary>ListOrderedMap not respecting underlying list</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="thpr">Tom Parker</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Jul 2009 02:24:18 +0000</created>
                <updated>Sun, 9 Nov 2014 14:31:48 +0000</updated>
                            <resolved>Tue, 8 Mar 2011 21:34:21 +0000</resolved>
                                                    <fixVersion>4.0-alpha1</fixVersion>
                    <fixVersion>4.0</fixVersion>
                                    <component>Map</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12729497" author="thpr" created="Fri, 10 Jul 2009 02:26:35 +0000"  >&lt;p&gt;Test that demonstrates the issue with both CaseInsensitiveMap or IdentityMap as the underlying map.&lt;/p&gt;

&lt;p&gt;Note that this set of tests is not comprehensive (other methods than .firstKey() can demonstrate the issue)&lt;/p&gt;</comment>
                            <comment id="12735420" author="curtjohn" created="Sun, 26 Jul 2009 20:13:01 +0000"  >&lt;p&gt;When you remove an object from a ListOrderedMap there are two main steps:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; remove(&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; key) {
        &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; result = getMap().remove(key);
        insertOrder.remove(key);
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Firstly, the removal of the object from the underlying map is delegated to the map instance. Since in your case this will be an Identity map, the removal method will search by &apos;==&apos; rather than &apos;.equals()&apos; as with a standard Map implementation.&lt;/p&gt;

&lt;p&gt;Secondly, the ListOrderedMap decorator needs to remove this key from its own internal list which is charged with maintaining order. To do this it will use the standard &apos;.remove()&apos; from the ArrayList class, which will search using equality rather than identity.&lt;/p&gt;

&lt;p&gt;These two different implementations cause problems when used together. In my opinion the IdentityMap (knowingly) breaks the Map interface by searching on identity rather than equality (see Map.remove() javadoc: &quot;if this map contains a mapping from key k to value v such that (key==null ? k==null : key.equals(k)), that mapping is removed.&quot;). This causes problems for any classes using an instance of this class expecting it to strictly adhere to the Map interface.&lt;/p&gt;

&lt;p&gt;Therefore the bug isn&apos;t really in the ListOrderedMap class but rather in the usage of the two together. I would suggest improving documentation in the IdentityMap javadoc to clarify this problem. Otherwise we would need to introduce a less-than-elegant &apos;instance of&apos; check in the ListOrderedMap class which would not be ideal.&lt;/p&gt;</comment>
                            <comment id="12743065" author="thpr" created="Fri, 14 Aug 2009 03:41:28 +0000"  >&lt;p&gt;Per my note to the commons user list, I was hoping for either updated docs or a code change, but I think one of the two would be good.&lt;/p&gt;

&lt;p&gt;Looking for a code change, I agree casting is nasty and would recommend against it... it&apos;s very ugly to get all cases correct.  For example, a TreeMap sorted in case insensitive order also breaks ListOrderedMap because it also fails to use .equals().  &lt;/p&gt;

&lt;p&gt;Before this is turned into a documentation bug or feature request, I&apos;d like to note a potential solution simply depends upon how much of a performance hit one is willing to take.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; result = getMap().remove(key);
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Iterator&amp;lt;&lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt;&amp;gt; it = insertOrder.iterator(); it.hasNext();) {
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!getMap().containsKey(it.next())) { &lt;span class=&quot;code-comment&quot;&gt;//This respects equality as defined by the underlying map
&lt;/span&gt;    it.remove();
  }
}
&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; result;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;...would seem to be universal (if slower since it effectively trades a .equals() for a .containsKey() call) &lt;span class=&quot;error&quot;&gt;&amp;#91;and yes, getMap() should be extracted to a local variable&amp;#93;&lt;/span&gt;&lt;/p&gt;</comment>
                            <comment id="13004230" author="jochen@apache.org" created="Tue, 8 Mar 2011 21:34:21 +0000"  >&lt;p&gt;Added the following comment on ListOrderedMap:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note&lt;/b&gt; that ListOrderedMap doesn&apos;t work with &lt;tt&gt;IdentityMap&lt;/tt&gt;,&lt;br/&gt;
&lt;tt&gt;CaseInsensitiveMap&lt;/tt&gt;, or similar maps that violate the general&lt;br/&gt;
contract of &lt;tt&gt;Map&lt;/tt&gt;. The &lt;tt&gt;ListOrderedMap&lt;/tt&gt; (or, more precisely,&lt;br/&gt;
the underlying &lt;tt&gt;List&lt;/tt&gt;) is relying on &lt;tt&gt;equals()&lt;/tt&gt;. This is&lt;br/&gt;
fine, as long as the decorated &lt;tt&gt;Map&lt;/tt&gt; is also based on&lt;br/&gt;
&lt;tt&gt;equals()&lt;/tt&gt;, and &lt;tt&gt;hashCode()&lt;/tt&gt;, which &lt;tt&gt;IdentityMap&lt;/tt&gt;, and&lt;br/&gt;
&lt;tt&gt;CaseInsensitiveMap&lt;/tt&gt; don&apos;t: The former uses &lt;tt&gt;==&lt;/tt&gt;, and&lt;br/&gt;
the latter uses &lt;tt&gt;equals()&lt;/tt&gt; on a lowercased key.&lt;/p&gt;

&lt;p&gt;Added the following to IdentityMap, and CaseInsensitiveMap:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note&lt;/b&gt; This map will violate the detail of various Map and map view&lt;br/&gt;
contracts. As a general rule, don&apos;t compare this map to other&lt;br/&gt;
maps. In particular, you can&apos;t use decorators like&lt;br/&gt;
&lt;tt&gt;ListOrderedMap&lt;/tt&gt; on it, which silently assume that these&lt;br/&gt;
contracts are fulfilled.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12413071" name="ListOrderedMapTest.java" size="1164" author="thpr" created="Fri, 10 Jul 2009 02:26:35 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 26 Jul 2009 20:13:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18671</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            5 years, 37 weeks, 4 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0si3j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>164409</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>