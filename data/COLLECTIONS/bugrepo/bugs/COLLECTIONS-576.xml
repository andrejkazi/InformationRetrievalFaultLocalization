<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 00:57:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COLLECTIONS-576/COLLECTIONS-576.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COLLECTIONS-576] MultiKey subclassing has deserialization problem since COLLECTIONS-266: either declare protected readResolve() or MultiKey must be final</title>
                <link>https://issues.apache.org/jira/browse/COLLECTIONS-576</link>
                <project id="12310465" key="COLLECTIONS">Commons Collections</project>
                    <description>&lt;p&gt;MultiKey from collections 4 provides a transient hashCode and a &lt;b&gt;private&lt;/b&gt; readResolve to resolve &lt;a href=&quot;https://issues.apache.org/jira/browse/COLLECTIONS-266&quot; title=&quot;Issue with MultiKey when serialized/deserialized via RMI&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COLLECTIONS-266&quot;&gt;&lt;del&gt;COLLECTIONS-266&lt;/del&gt;&lt;/a&gt;: Issue with MultiKey when serialized/deserialized via RMI.&lt;/p&gt;

&lt;p&gt;Unfortunately the solution does not work in case of &lt;b&gt;subclassing&lt;/b&gt;: readResolve in MultiKey should be declared &lt;b&gt;protected&lt;/b&gt; readResolve() to be called during deserialization of the subclass. Otherwise MultiKey must be final to avoid such subclassing.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Testcase&lt;/b&gt;:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;MultiKeySerializationTest.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;package&lt;/span&gt; de.ivu.test.common.collections4;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; org.junit.Assert.assertEquals;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ByteArrayInputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ByteArrayOutputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ObjectInputStream;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.ObjectOutputStream;

&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.commons.collections4.keyvalue.MultiKey;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class MultiKeySerializationTest {

    @Test
    @SuppressWarnings(&lt;span class=&quot;code-quote&quot;&gt;&quot;unchecked&quot;&lt;/span&gt;)
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testReadResolveEqualHashCode()
            &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException, ClassNotFoundException {
        class MultiKey2&amp;lt;A, B&amp;gt;
                &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; MultiKey {

            &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; serialVersionUID = 1928896152249821416L;

            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; MultiKey2(A key1, B key2) {
                &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(key1, key2);
            }

            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; A getFirst() {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (A) getKey(0);
            }

            &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; B getSecond() {
                &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (B) getKey(1);
            }
            
            &lt;span class=&quot;code-comment&quot;&gt;// FIXME: MultiKey should either declare &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; readResolve() or must be &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt;.
&lt;/span&gt;        }
        MultiKey2&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; one = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MultiKey2&amp;lt;&amp;gt;(&lt;span class=&quot;code-quote&quot;&gt;&quot;bla&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;blub&quot;&lt;/span&gt;);
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(one.hashCode());
        ByteArrayOutputStream byteOut = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayOutputStream();
        ObjectOutputStream out = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ObjectOutputStream(byteOut);
        out.writeObject(one);
        out.close();
        &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;[] serialized = byteOut.toByteArray();
        ByteArrayInputStream byteIn = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ByteArrayInputStream(serialized);
        ObjectInputStream in = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ObjectInputStream(byteIn);
        MultiKey2&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; two = (MultiKey2&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt;) in.readObject();
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(two.hashCode());
        assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;hashCode must be equal - please check &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; readResolve in MultiKey*&quot;&lt;/span&gt;, one.hashCode(),
            two.hashCode());
    }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;Fix:&lt;/b&gt;&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeHeader panelHeader&quot; style=&quot;border-bottom-width: 1px;&quot;&gt;&lt;b&gt;MultiKey.java&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -274,7 +274,7 @@
      * only stable &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the same process).
      * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; the instance with recalculated hash code
      */
-    &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; readResolve() {
+    &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; readResolve() {
         calculateHashCode(keys);
         &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;;
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
        <key id="12861500">COLLECTIONS-576</key>
            <summary>MultiKey subclassing has deserialization problem since COLLECTIONS-266: either declare protected readResolve() or MultiKey must be final</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="stephanroch">Stephan Roch</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 Sep 2015 08:44:11 +0000</created>
                <updated>Fri, 27 Nov 2015 21:11:13 +0000</updated>
                            <resolved>Mon, 28 Sep 2015 08:54:20 +0000</resolved>
                                    <version>4.0</version>
                                    <fixVersion>4.1</fixVersion>
                                    <component>KeyValue</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="14910198" author="tn" created="Mon, 28 Sep 2015 08:54:20 +0000"  >&lt;p&gt;Fixed in r1705620.&lt;/p&gt;

&lt;p&gt;Thanks for the report and testcase.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10030">
                    <name>Reference</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="12378004">COLLECTIONS-266</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 28 Sep 2015 08:54:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 7 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2jqh3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>