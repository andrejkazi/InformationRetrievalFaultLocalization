<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Nov 19 23:07:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COLLECTIONS-545/COLLECTIONS-545.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COLLECTIONS-545] Undocumented performance issue in the removeAll method in CollectionUtils</title>
                <link>https://issues.apache.org/jira/browse/COLLECTIONS-545</link>
                <project id="12310465" key="COLLECTIONS">Commons Collections</project>
                    <description>&lt;p&gt;This bug is analogous to &lt;a href=&quot;https://issues.apache.org/jira/browse/COLLECTIONS-544&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issues.apache.org/jira/browse/COLLECTIONS-544&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The method removeAll in CollectionUtils is inefficient when the second parameter collection has a slow containment method.&lt;/p&gt;

&lt;p&gt;The following is the current implementation with its documentation:&lt;br/&gt;
============================&lt;br/&gt;
     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Removes the elements in &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt; from &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt;. That is, this&lt;/li&gt;
	&lt;li&gt;method returns a collection containing all the elements in &amp;lt;code&amp;gt;c&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;that are not in &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt;. The cardinality of an element &amp;lt;code&amp;gt;e&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;in the returned collection is the same as the cardinality of &amp;lt;code&amp;gt;e&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;in &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt; unless &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt; contains &amp;lt;code&amp;gt;e&amp;lt;/code&amp;gt;, in which&lt;/li&gt;
	&lt;li&gt;case the cardinality is zero. This method is useful if you do not wish to modify&lt;/li&gt;
	&lt;li&gt;the collection &amp;lt;code&amp;gt;c&amp;lt;/code&amp;gt; and thus cannot call &amp;lt;code&amp;gt;collection.removeAll(remove);&amp;lt;/code&amp;gt;.&lt;br/&gt;
     *&lt;/li&gt;
	&lt;li&gt;@param &amp;lt;E&amp;gt;  the type of object the 
{@link Collection}
&lt;p&gt; contains&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;@param collection  the collection from which items are removed (in the returned collection)&lt;/li&gt;
	&lt;li&gt;@param remove  the items to be removed from the returned &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;@return a &amp;lt;code&amp;gt;Collection&amp;lt;/code&amp;gt; containing all the elements of &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt; except&lt;/li&gt;
	&lt;li&gt;any elements that also occur in &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt;.&lt;/li&gt;
	&lt;li&gt;@throws NullPointerException if either parameter is null&lt;/li&gt;
	&lt;li&gt;@since 4.0 (method existed in 3.2 but was completely broken)&lt;br/&gt;
     */&lt;br/&gt;
    public static &amp;lt;E&amp;gt; Collection&amp;lt;E&amp;gt; removeAll(final Collection&amp;lt;E&amp;gt; collection, final Collection&amp;lt;?&amp;gt; remove) 
{
        return ListUtils.removeAll(collection, remove);
    }&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;=======================================&lt;/p&gt;

&lt;p&gt;We can notice the inefficiency by looking at the removeAll method in ListUtils.&lt;br/&gt;
The removeAll method from ListUtils is implemented and documented as follows:&lt;/p&gt;

&lt;p&gt;=======================================&lt;/p&gt;

&lt;p&gt;     /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Removes the elements in &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt; from &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt;. That is, this&lt;/li&gt;
	&lt;li&gt;method returns a list containing all the elements in &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;that are not in &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt;. The cardinality of an element &amp;lt;code&amp;gt;e&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;in the returned collection is the same as the cardinality of &amp;lt;code&amp;gt;e&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;in &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt; unless &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt; contains &amp;lt;code&amp;gt;e&amp;lt;/code&amp;gt;, in which&lt;/li&gt;
	&lt;li&gt;case the cardinality is zero. This method is useful if you do not wish to modify&lt;/li&gt;
	&lt;li&gt;&amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt; and thus cannot call &amp;lt;code&amp;gt;collection.removeAll(remove);&amp;lt;/code&amp;gt;.&lt;/li&gt;
	&lt;li&gt;&amp;lt;p&amp;gt;&lt;/li&gt;
	&lt;li&gt;This implementation iterates over &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt;, checking each element in&lt;/li&gt;
	&lt;li&gt;turn to see if it&apos;s contained in &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt;. If it&apos;s not contained, it&apos;s added&lt;/li&gt;
	&lt;li&gt;to the returned list. As a consequence, it is advised to use a collection type for&lt;/li&gt;
	&lt;li&gt;&amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt; that provides a fast (e.g. O(1)) implementation of&lt;/li&gt;
	&lt;li&gt;{@link Collection#contains(Object)}
&lt;p&gt;.&lt;br/&gt;
     *&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;@param &amp;lt;E&amp;gt;  the element type&lt;/li&gt;
	&lt;li&gt;@param collection  the collection from which items are removed (in the returned collection)&lt;/li&gt;
	&lt;li&gt;@param remove  the items to be removed from the returned &amp;lt;code&amp;gt;collection&amp;lt;/code&amp;gt;&lt;/li&gt;
	&lt;li&gt;@return a &amp;lt;code&amp;gt;List&amp;lt;/code&amp;gt; containing all the elements of &amp;lt;code&amp;gt;c&amp;lt;/code&amp;gt; except&lt;/li&gt;
	&lt;li&gt;any elements that also occur in &amp;lt;code&amp;gt;remove&amp;lt;/code&amp;gt;.&lt;/li&gt;
	&lt;li&gt;@throws NullPointerException if either parameter is null&lt;/li&gt;
	&lt;li&gt;@since 3.2&lt;br/&gt;
     */&lt;br/&gt;
    public static &amp;lt;E&amp;gt; List&amp;lt;E&amp;gt; removeAll(final Collection&amp;lt;E&amp;gt; collection, final Collection&amp;lt;?&amp;gt; remove) {&lt;br/&gt;
        final List&amp;lt;E&amp;gt; list = new ArrayList&amp;lt;E&amp;gt;();&lt;br/&gt;
        for (final E obj : collection) 
&lt;div class=&quot;error&quot;&gt;&lt;span class=&quot;error&quot;&gt;Unknown macro: {            if (!remove.contains(obj)) {
                list.add(obj);
            }        }&lt;/span&gt; &lt;/div&gt;
&lt;p&gt;        return list;&lt;br/&gt;
    }&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;=======================================&lt;/p&gt;

&lt;p&gt;In the case of ListUtils:removeAll, the inefficiency is properly documented.&lt;/p&gt;

&lt;p&gt;Perhaps the disclaimer about potential inefficiencies depending on the type &lt;br/&gt;
of the parameter collection in ListUtils:removeAll should also be included in CollectionUtils:removeAll.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Ubuntu 14.04&lt;/p&gt;</environment>
        <key id="12766770">COLLECTIONS-545</key>
            <summary>Undocumented performance issue in the removeAll method in CollectionUtils</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="oswaldo_o">Oswaldo Olivo</reporter>
                        <labels>
                            <label>Collections</label>
                            <label>documentaion</label>
                            <label>performance</label>
                    </labels>
                <created>Mon, 12 Jan 2015 06:04:16 +0000</created>
                <updated>Fri, 27 Nov 2015 21:11:13 +0000</updated>
                            <resolved>Fri, 23 Jan 2015 09:34:34 +0000</resolved>
                                    <version>4.0</version>
                                    <fixVersion>4.1</fixVersion>
                                    <component>Collection</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="14289018" author="tn" created="Fri, 23 Jan 2015 09:34:34 +0000"  >&lt;p&gt;Fixed in r1654156.&lt;/p&gt;

&lt;p&gt;Thanks for the report!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 23 Jan 2015 09:34:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 43 weeks, 1 day ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i248xr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>