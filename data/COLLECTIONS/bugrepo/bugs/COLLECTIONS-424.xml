<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sat Nov 19 22:59:54 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COLLECTIONS-424/COLLECTIONS-424.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COLLECTIONS-424] Surprising exception by CompositeSet in a situation where CompositeCollection works fine</title>
                <link>https://issues.apache.org/jira/browse/COLLECTIONS-424</link>
                <project id="12310465" key="COLLECTIONS">Commons Collections</project>
                    <description>&lt;p&gt;We have a method that uses a CompositeCollection. Here&apos;s a simplified version of it:&lt;/p&gt;

&lt;p&gt;  void m(CompositeCollection coll) &lt;/p&gt;
{
    coll.addComposited(new TreeBag());
  }

&lt;p&gt;It works fine when the argument is a CompositeCollection, but it throws an exception when the argument is a CompositeSet. E.g.:&lt;/p&gt;

&lt;p&gt;  m(new CompositeCollection());  // OK&lt;br/&gt;
  m(new CompositeSet());         // IllegalArgumentException&lt;/p&gt;

&lt;p&gt;Although the exception is documented in CompositeSet, this behavior is very surprising. Is there a way to have m() accept CompositeCollections without running into this exception? The only solution that comes to my mind is to dynamically check the type of &apos;coll&apos; in m(), but this is a rather nasty work-around.&lt;/p&gt;


&lt;p&gt;A better solution may be to make the genericity of CompositeCollection explicit by adding a type parameter:&lt;/p&gt;

&lt;p&gt;  class CompositeCollection&amp;lt;T extends Collection&amp;gt; {&lt;br/&gt;
    void addComposited(T c) &lt;/p&gt;
{ /* .. */ }&lt;br/&gt;
  }&lt;br/&gt;
	&lt;br/&gt;
  class CompositeSet extends CompositeCollection&amp;lt;Set&amp;gt; {&lt;br/&gt;
    @Override void addComposited(Set c) { /* .. */ }
&lt;p&gt;  }&lt;/p&gt;

&lt;p&gt;This way, users of CompositeCollection must choose the kind of collections that can be composed and will not encounter surprises, such as the above.&lt;/p&gt;</description>
                <environment>&lt;p&gt;All environments&lt;/p&gt;</environment>
        <key id="12599826">COLLECTIONS-424</key>
            <summary>Surprising exception by CompositeSet in a situation where CompositeCollection works fine</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="michaelpradel">Michael Pradel</reporter>
                        <labels>
                    </labels>
                <created>Mon, 23 Jul 2012 09:07:51 +0000</created>
                <updated>Sun, 9 Nov 2014 14:31:39 +0000</updated>
                            <resolved>Sun, 17 Mar 2013 10:03:19 +0000</resolved>
                                    <version>3.2.1</version>
                                    <fixVersion>4.0-alpha1</fixVersion>
                    <fixVersion>4.0</fixVersion>
                                    <component>Set</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="13421525" author="srirangadeepthi" created="Tue, 24 Jul 2012 16:43:14 +0000"  >&lt;p&gt;I started working on this issue..but wondering how to assign this issue to myself..Can anybody help me on this..&lt;/p&gt;</comment>
                            <comment id="13421744" author="tn" created="Tue, 24 Jul 2012 20:55:31 +0000"  >&lt;p&gt;Hi srirangadeepthi,&lt;/p&gt;

&lt;p&gt;you can attach patches for this specific problem directly to the issue, there is no need to assign the issue itself to you.&lt;/p&gt;

&lt;p&gt;Thomas&lt;/p&gt;</comment>
                            <comment id="13446373" author="srirangadeepthi" created="Fri, 31 Aug 2012 21:03:44 +0000"  >&lt;p&gt;I have uploaded the patch. Here is the brief explanation of the changes i made in the current files.&lt;/p&gt;

&lt;p&gt;1. Composite Collection holds the collections added to it in List&amp;lt;E&amp;gt; instead of List&amp;lt;Collection&amp;lt;E&amp;gt;&amp;gt;.This solves the issue of type checking in the code as mentioned in the bug.&lt;/p&gt;

&lt;p&gt;2. I see add() and addComposited() performing the same functionality according to the current version.Whereas according to the apache commons collections doc,the functionalities are supposed to be different as shown below.&lt;/p&gt;

&lt;p&gt;add(java.lang.Object obj)&lt;br/&gt;
          Adds an object to the collection, throwing UnsupportedOperationException unless a CollectionMutator strategy is specified.&lt;/p&gt;

&lt;p&gt;addAll(java.util.Collection coll)&lt;br/&gt;
          Adds a collection of elements to this collection, throwing UnsupportedOperationException unless a CollectionMutator strategy is specified.&lt;/p&gt;

&lt;p&gt;addComposited(java.util.Collection c)&lt;br/&gt;
          Add an additional collection to this composite.&lt;/p&gt;

&lt;p&gt;But according to the current version,both does the same thing.In that case i don&apos;t see the need of having two methods for the same functionality.So i changed the functionality of the methods according to the document.&lt;/p&gt;

&lt;p&gt;3. I changed the junit test cases accordingly and uploaded in the patch.&lt;/p&gt;</comment>
                            <comment id="13451609" author="srirangadeepthi" created="Sun, 9 Sep 2012 14:52:44 +0000"  >&lt;p&gt;Hi..just wanted to remind about the patch uploaded.&lt;/p&gt;</comment>
                            <comment id="13459830" author="tn" created="Thu, 20 Sep 2012 18:25:14 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;thanks for providing the patch, but unfortunately I am not sure if it goes into the right direction. Constraining a CompositeCollection to just one specific collection type is against the idea of the class (to provide a composite interface for a set of collections). Also the type safety for the element type is lost due to the fact that CompositeCollections extends Collection&amp;lt;Object&amp;gt;.&lt;/p&gt;

&lt;p&gt;Tbh, I am more in favor of rejecting this issue or removing the inheritance to CompositeCollection in CompositeSet as there is no real need for it apart from code re-use.&lt;/p&gt;</comment>
                            <comment id="13596343" author="tn" created="Thu, 7 Mar 2013 20:45:39 +0000"  >&lt;p&gt;I would be in favor of removing the inheritance of CompositeCollection, as it violates the &lt;a href=&quot;http://en.wikipedia.org/wiki/Liskov_substitution_principle&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;Liskov substitution principle&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt; a CompositeSet is &lt;b&gt;not&lt;/b&gt; a CompositeCollection, and can not replace one&lt;/p&gt;

&lt;p&gt;Any objections?&lt;/p&gt;</comment>
                            <comment id="13598378" author="tn" created="Sun, 10 Mar 2013 20:40:34 +0000"  >&lt;p&gt;The patch removes the inheritance to CompositeCollection and cleans up the code with everything that does not make sense for a CompositeSet.&lt;/p&gt;

&lt;p&gt;We also can not extend a composite set / collection with collections containing subtypes (e.g. Set&amp;lt;? extends E&amp;gt;) as this may lead to undefined behavior.&lt;/p&gt;

&lt;p&gt;Consider the following case:&lt;/p&gt;

&lt;p&gt;class A&lt;br/&gt;
class B extends A&lt;/p&gt;

&lt;p&gt;a CompositeSet set which is composed of a Set&amp;lt;A&amp;gt; and a Set&amp;lt;B&amp;gt;&lt;/p&gt;

&lt;p&gt;if set.add(A) would be called, the mutator could decide to add A to the Set&amp;lt;B&amp;gt; which in turn will lead to runtime errors.&lt;/p&gt;</comment>
                            <comment id="13604562" author="tn" created="Sun, 17 Mar 2013 10:03:19 +0000"  >&lt;p&gt;Applied patch in r1457410.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12572989" name="COLLECTIONS-424.patch" size="31116" author="tn" created="Sun, 10 Mar 2013 20:40:34 +0000"/>
                            <attachment id="12543337" name="collections424.patch" size="50947" author="srirangadeepthi" created="Fri, 31 Aug 2012 20:54:29 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>2.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 24 Jul 2012 16:43:14 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>244856</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            3 years, 35 weeks, 6 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i05uav:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>32006</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>