<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Sun Nov 20 00:56:48 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/COLLECTIONS-577/COLLECTIONS-577.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[COLLECTIONS-577] PatriciaTrie bugs when only a few bits change</title>
                <link>https://issues.apache.org/jira/browse/COLLECTIONS-577</link>
                <project id="12310465" key="COLLECTIONS">Commons Collections</project>
                    <description>&lt;p&gt;I have a bug report for you, for the class AbstractPatriciaTrie.  &lt;br/&gt;
It has to do with how you handle bits when they are very close to each other.  &lt;br/&gt;
For example, some of your methods seem to think that if the only difference between a prefix and a longer string, is a single additional bit, then they are actually the same data.  Or if the only difference is some number of zero bits, then it also thinks they are the same data.  &lt;br/&gt;
There are also MANY situations where the prefixMap does not return all the strings that start with the prefix.&lt;/p&gt;

&lt;p&gt;Can you also make AbstractPatriciaTrie public, and your other package level methods into protected level, that way I don&apos;t have to copy the entire class and subclasse&apos;s code out into another class just to extend it?&lt;/p&gt;

&lt;p&gt;thank you,&lt;br/&gt;
Chris Duncan (github user: VEQRYN)&lt;/p&gt;</description>
                <environment></environment>
        <key id="12896510">COLLECTIONS-577</key>
            <summary>PatriciaTrie bugs when only a few bits change</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="veqryn">Chris Duncan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Sep 2015 22:27:53 +0000</created>
                <updated>Fri, 27 Nov 2015 21:47:15 +0000</updated>
                            <resolved>Mon, 28 Sep 2015 09:45:19 +0000</resolved>
                                    <version>4.0</version>
                                    <fixVersion>4.1</fixVersion>
                                    <component>Map</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="14908803" author="adrianc@hlmksw.com" created="Fri, 25 Sep 2015 22:47:30 +0000"  >&lt;p&gt;Please don&apos;t put pages of text in the issue description. It uses a lot of bandwith and makes reading email notifications difficult. The description should contain a brief description of the problem, and code examples should go in the comments.&lt;/p&gt;</comment>
                            <comment id="14908807" author="veqryn" created="Fri, 25 Sep 2015 22:51:48 +0000"  >&lt;p&gt;Sorry, didn&apos;t know that. Should I move the code to comments now, or would that be worse since it would just make a new email?&lt;/p&gt;</comment>
                            <comment id="14908813" author="adrianc@hlmksw.com" created="Fri, 25 Sep 2015 22:53:34 +0000"  >&lt;p&gt;That would be helpful, thanks. I tried doing that myself, but I don&apos;t have permission to edit the description.&lt;/p&gt;</comment>
                            <comment id="14908823" author="veqryn" created="Fri, 25 Sep 2015 22:56:46 +0000"  >&lt;p&gt;Take the following code for example, which shows the bugs happening in a very simple context.&lt;br/&gt;
I create two strings.  The first string is always a prefix of the second string.  Here are the characters I am using:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; u0000 = &lt;span class=&quot;code-object&quot;&gt;Character&lt;/span&gt;.toChars(0)[0]; &lt;span class=&quot;code-comment&quot;&gt;// U+0000 (0000000000000000)
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; u0001 = &lt;span class=&quot;code-object&quot;&gt;Character&lt;/span&gt;.toChars(1)[0]; &lt;span class=&quot;code-comment&quot;&gt;// U+0001 (0000000000000001)
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; u8000 = &lt;span class=&quot;code-object&quot;&gt;Character&lt;/span&gt;.toChars(32768)[0]; &lt;span class=&quot;code-comment&quot;&gt;// U+8000 (1000000000000000)
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; uffff = &lt;span class=&quot;code-object&quot;&gt;Character&lt;/span&gt;.toChars(65535)[0]; &lt;span class=&quot;code-comment&quot;&gt;// U+FFFF (1111111111111111)
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; char_b = &apos;b&apos;; &lt;span class=&quot;code-comment&quot;&gt;// 1100010
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;char&lt;/span&gt; char_c = &apos;c&apos;; &lt;span class=&quot;code-comment&quot;&gt;// 1100011
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; PatriciaTrie&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;&amp;gt; trie = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PatriciaTrie&amp;lt;&amp;gt;();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here is a quick example of the trie working correctly, showing how it should work:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefixString = &quot;&quot; + char_b;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; longerString = prefixString + char_c;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString)); &lt;span class=&quot;code-comment&quot;&gt;// {b=prefixString, bc=longerString} // correct!&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the first example, I show that a character who&apos;s bits are all zeros is always mishandled:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefixString = &quot;&quot; + char_b;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; longerString = prefixString + u0000;

    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(prefixString);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(prefixString.length()); &lt;span class=&quot;code-comment&quot;&gt;// 1
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString.length()); &lt;span class=&quot;code-comment&quot;&gt;// 2
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString.startsWith(prefixString)); &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/span&gt;
    trie.put(prefixString, &lt;span class=&quot;code-quote&quot;&gt;&quot;prefixString&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie); &lt;span class=&quot;code-comment&quot;&gt;// prefixString is in
&lt;/span&gt;
    trie.put(longerString, &lt;span class=&quot;code-quote&quot;&gt;&quot;longerString&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie); &lt;span class=&quot;code-comment&quot;&gt;// only longerString shown... prefixString has disappeared
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString).size()); &lt;span class=&quot;code-comment&quot;&gt;// prints 1, but should be 2
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString)); &lt;span class=&quot;code-comment&quot;&gt;// {b =longerString} // prefixString should be here, but isn&apos;t
&lt;/span&gt;
    trie.put(prefixString, &lt;span class=&quot;code-quote&quot;&gt;&quot;prefixString&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie); &lt;span class=&quot;code-comment&quot;&gt;// prefixString is in again, but longerString has now disappeared
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString).size()); &lt;span class=&quot;code-comment&quot;&gt;// prints 1, but should be 2
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString)); &lt;span class=&quot;code-comment&quot;&gt;// {b=prefixString} // longerString should be here, but isn&apos;t&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, I show that if the longer string is only 1 bit longer (ignoring zeros) than the prefix string, then the PatriciaTree fails to include it in the prefix map.&lt;br/&gt;
Here the string would look like: 0000000001100011 1000000000000000&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefixString = &quot;&quot; + char_c;  &lt;span class=&quot;code-comment&quot;&gt;// you can use any character &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the prefix, same results
&lt;/span&gt;    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; longerString = prefixString + u8000;

    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(prefixString);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(prefixString.length()); &lt;span class=&quot;code-comment&quot;&gt;// 1
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString.length()); &lt;span class=&quot;code-comment&quot;&gt;// 2
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString.startsWith(prefixString)); &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/span&gt;
    trie.put(prefixString, &lt;span class=&quot;code-quote&quot;&gt;&quot;prefixString&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie); &lt;span class=&quot;code-comment&quot;&gt;// prefixString is in
&lt;/span&gt;
    trie.put(longerString, &lt;span class=&quot;code-quote&quot;&gt;&quot;longerString&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie); &lt;span class=&quot;code-comment&quot;&gt;// both are in
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString).size()); &lt;span class=&quot;code-comment&quot;&gt;// prints 1, but should be 2
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString)); &lt;span class=&quot;code-comment&quot;&gt;// {c=prefixString} // longerString should be here, but isn&apos;t&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And again, except flipping it so that the prefix ends with a 1, and the longer string starts with 1&apos;s:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; prefixString = &quot;&quot; + u0003;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; longerString = prefixString + u8000; &lt;span class=&quot;code-comment&quot;&gt;// can also use uffff here, same result
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(prefixString);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(prefixString.length()); &lt;span class=&quot;code-comment&quot;&gt;// 1
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString.length()); &lt;span class=&quot;code-comment&quot;&gt;// 2
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(longerString.startsWith(prefixString)); &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;
&lt;/span&gt;
    trie.put(prefixString, &lt;span class=&quot;code-quote&quot;&gt;&quot;prefixString&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie); &lt;span class=&quot;code-comment&quot;&gt;// prefixString is in
&lt;/span&gt;
    trie.put(longerString, &lt;span class=&quot;code-quote&quot;&gt;&quot;longerString&quot;&lt;/span&gt;);
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie); &lt;span class=&quot;code-comment&quot;&gt;// both are in
&lt;/span&gt;
    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString).size()); &lt;span class=&quot;code-comment&quot;&gt;// prints 1, but should be 2
&lt;/span&gt;    &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(trie.prefixMap(prefixString)); &lt;span class=&quot;code-comment&quot;&gt;// {c=prefixString} // longerString should be here, but isn&apos;t&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The class is honestly pretty complex and I wasn&apos;t able to completely debug why this is behaving badly, but I believe it is because of how you are handling the &quot;bitIndex&quot; and &quot;bitLength&quot;.&lt;br/&gt;
For example, in the method AbstractPatriciaTrie .subtree(), my comments in bold (this definitely isn&apos;t the only place with weird handling of bitIndex and lengthInBits):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    TrieEntry&amp;lt;K, V&amp;gt; subtree(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; K prefix, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; offsetInBits, &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; lengthInBits) {
        TrieEntry&amp;lt;K, V&amp;gt; current = root.left;
        TrieEntry&amp;lt;K, V&amp;gt; path = root;
        &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) {
&lt;span class=&quot;code-comment&quot;&gt;// If our bit index has only increased by 1, then our bitIndex will never get to be greater than lengthInBits, we could still start with the prefix, yet we have no way to &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt; out of here with current being set to the longer string.
&lt;/span&gt;            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (current.bitIndex &amp;lt;= path.bitIndex || lengthInBits &amp;lt; current.bitIndex) {
                &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
            }
            path = current;
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (!isBitSet(prefix, offsetInBits + current.bitIndex, offsetInBits + lengthInBits)) {
                current = current.left;
            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
                current = current.right;
            }
        }
      ...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                            <comment id="14909196" author="tn" created="Sat, 26 Sep 2015 10:56:23 +0000"  >&lt;p&gt;I just quickly tested your code snippets, but this problem should already be fixed in trunk.&lt;/p&gt;

&lt;p&gt;The problems with truncated output is most likely related to adding u0000 to the string which is a native string terminator in c.&lt;/p&gt;</comment>
                            <comment id="14933091" author="tn" created="Mon, 28 Sep 2015 09:45:19 +0000"  >&lt;p&gt;In r1705637, I have added additional testcases for a Trie.&lt;/p&gt;

&lt;p&gt;The problem has already been fixed by &lt;a href=&quot;https://issues.apache.org/jira/browse/COLLECTIONS-525&quot; title=&quot;PatriciaTrie&quot; class=&quot;issue-link&quot; data-issue-key=&quot;COLLECTIONS-525&quot;&gt;&lt;del&gt;COLLECTIONS-525&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for the report and tests!&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 25 Sep 2015 22:47:30 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            1 year, 7 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i2ll0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>