<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:51:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1418/SEC-1418.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1418] equals of GrantedAuthorityImpl isn&apos;t symmetric</title>
                <link>https://jira.spring.io/browse/SEC-1418</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;The implementation of equals in GrantedAuthorityImpl returns true if it sees a String with the same content as its role field. So&lt;/p&gt;

&lt;p&gt;new GrantedAuthorityImpl(&quot;ROLE_ADMIN&quot;).equals(&quot;ROLE_ADMIN&quot;) will return true, but &quot;ROLE_ADMIN&quot;.equals(new GrantedAuthorityImpl(&quot;ROLE_ADMIN&quot;)) won&apos;t!&lt;/p&gt;

&lt;p&gt;The equals method is required to be symetric, but this implementation isn&apos;t symmetric.&lt;/p&gt;

&lt;p&gt;Apart from that equals should be final or test explicit for GrantedAuthorityImpl.class. Using instanceof in non-final classes with a non-final equals method is not ok.&lt;/p&gt;

&lt;p&gt;Please read: Joshua Bloch - Effective Java - Second Edition - Item 8 Page 33 following.&lt;/p&gt;

&lt;p&gt;I attached a SimpleGrantedAuthority.java which uses a very save implementation. This class is final. I know that GrantedAuthorityImpl has subclasses, but it should be consindered if the trivial sharing of the role field justify the equals problems. It always very difficult to design proper equals and hashCode for subclassable classes.&lt;/p&gt;

&lt;p&gt;Since GrantedAuthorityImpl is really a value class like String, it should be really final and immutable like String itself.&lt;/p&gt;</description>
                <environment>Doesn&amp;#39;t matter.</environment>
        <key id="30256">SEC-1418</key>
            <summary>equals of GrantedAuthorityImpl isn&apos;t symmetric</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="alexanderkiel">Alexander Kiel</reporter>
                        <labels>
                    </labels>
                <created>Tue, 23 Feb 2010 21:24:53 +0000</created>
                <updated>Sat, 6 Feb 2016 06:13:53 +0000</updated>
                            <resolved>Mon, 6 Dec 2010 04:56:50 +0000</resolved>
                                    <version>3.0.2</version>
                                    <fixVersion>3.1.0.M2</fixVersion>
                                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="51460" author="luke" created="Tue, 23 Feb 2010 22:36:01 +0000"  >&lt;p&gt;Do you have a real world example where this is actually causing a problem, i.e. where the asymmetry w.r.t String equality matters.&lt;/p&gt;</comment>
                            <comment id="51463" author="alexanderkiel" created="Wed, 24 Feb 2010 00:09:13 +0000"  >&lt;p&gt;Simple test of the equals method in current GrantedAuthorityImpl.&lt;/p&gt;

&lt;p&gt;testEquals1 fails and testEquals2 passes.&lt;/p&gt;</comment>
                            <comment id="51466" author="luke" created="Wed, 24 Feb 2010 01:08:22 +0000"  >&lt;p&gt;I understand the implications regarding collections of mixed objects stored in sets or maps. The question is, do you have a real world example where this is actually causing a problem? Granted authorities are loaded and manipulated as Collection&amp;lt;GrantedAuthority&amp;gt; instances. When would you envisage storing both Strings and GrantedAuthority instances in the same collection?&lt;/p&gt;

&lt;p&gt;In theory, I&apos;d agree that GrantedAuthorityImpl should be immutable and ideally would exhibit &quot;standard&quot; Java equals semantics, but the logical String equality was intentionally coded that way from the start (you&apos;ll find the tests explicitly check for it) and I don&apos;t want to change it unless there is a good reason. It is also potentially useful that a basic GrantedAuthority instance behaves as much like a String as possible when performing a lookup via a String attribute into a large set of authorities.&lt;/p&gt;</comment>
                            <comment id="51473" author="alexanderkiel" created="Wed, 24 Feb 2010 02:58:16 +0000"  >&lt;p&gt;I had a look at the GrantedAuthorityImplTests class. It would be better to include explicit testing of non-symmetry there. There is a test assertEquals(new GrantedAuthorityImpl(&quot;TEST&quot;), &quot;TEST&quot;); but not assertFalse(&quot;TEST&quot;.equals(new GrantedAuthorityImpl(&quot;TEST&quot;)));. Same for the MockGrantedAuthority. There is no test like: assertFalse(new MockGrantedAuthority(&quot;TEST&quot;).equals(new GrantedAuthorityImpl(&quot;TEST&quot;)));. If there would be such a test, I&apos;m sure most people wouldn&apos;t think that the behaviour of equals is a good idea.&lt;/p&gt;

&lt;p&gt;Your argument, looking up a large set of GrantedAuthority instances with a String doesn&apos;t count for me. Where is the Problem building a GrantedAuthorityImpl before doing so?&lt;/p&gt;

&lt;p&gt;There is not even a way to implement a generic equals contract which should hold for all implementations of GrantedAuthority. You could think, one can do it like it is done in the Java Collections Framework for Set and List. A possible implementation would be:&lt;/p&gt;

&lt;p&gt;@Override&lt;br/&gt;
public boolean equals(Object o) {&lt;br/&gt;
    if (this == o) return true;&lt;br/&gt;
    if (!(o instanceof GrantedAuthority)) return false;&lt;/p&gt;

&lt;p&gt;    GrantedAuthority that = (GrantedAuthority) o;&lt;/p&gt;

&lt;p&gt;    return getAuthority() != null &amp;amp;&amp;amp; getAuthority().equals(that.getAuthority());&lt;br/&gt;
} &lt;/p&gt;

&lt;p&gt;You can&apos;t return true if both sides getAuthority() returns null, because returning null at getAuthority() means that the information in the particular GrantedAuthority is non-simple, so that two arbitrary instances returning null at getAuthority() can&apos;t be equal. But what about reflexivity? That would&apos;t work:&lt;/p&gt;

&lt;p&gt;class AdvancedGrantedAuthority implements GrantedAuthority {&lt;/p&gt;

&lt;p&gt;    private String aclExp;&lt;/p&gt;

&lt;p&gt;    public AdvancedGrantedAuthority(String aclExp) &lt;/p&gt;
{ this.aclExp = aclExp; }

&lt;p&gt;    public String getAclExp() &lt;/p&gt;
{ return aclExp; }

&lt;p&gt;    public String getAuthority() &lt;/p&gt;
{ return null; }

&lt;p&gt;    [ ... same equals as above ... ]&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Assert.assertEquals(new AdvancedGrantedAuthority(&quot;test&quot;), new AdvancedGrantedAuthority(&quot;test&quot;));&lt;/p&gt;

&lt;p&gt;So reflexivity won&apos;t hold on non-simple implementations.&lt;/p&gt;

&lt;p&gt;At the end, there is no way to specify a proper equals and hashCode for all GrantedAuthority implementations. So every implementation has to bring its own. I don&apos;t know if that would be even helpful to have such an equals on special implementations of GrantedAuthority. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/browse/SEC-863&quot; title=&quot;hierarchical roles should use the interface GrantedAuthority&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-863&quot;&gt;&lt;del&gt;SEC-863&lt;/del&gt;&lt;/a&gt; also gives an example, that GrantedAuthority doesn&apos;t have any valid equals semantics.&lt;/p&gt;

&lt;p&gt;Same problem with HierarchicalRolesTestHelper#containTheSameGrantedAuthorities(..). This simply can&apos;t work. It&apos;s only tested against GrantedAuthorityImpl generated from AuthorityUtils#createAuthorityList(..). I need only change one line in TestHelperTests and it will fail (patch comes in separate comment).&lt;/p&gt;

&lt;p&gt;So at the end, I would simply remove the equals method in GrantedAuthorityImpl. If I do this, I have 12 failing tests in spring-security-core. But it should be really considered, if spring-security can live with that broken equals semantic.&lt;/p&gt;</comment>
                            <comment id="51474" author="alexanderkiel" created="Wed, 24 Feb 2010 03:05:13 +0000"  >&lt;p&gt;Patch agains TestHelperTests, which switches the implementation of GrantedAuthority in a list from GrantedAuthorityImpl to an anonymous implementation. The result is a failing test, because HierarchicalRolesTestHelper#containTheSameGrantedAuthorities(..) depends on the equals implementation GrantedAuthority implementations. &lt;/p&gt;</comment>
                            <comment id="51479" author="luke" created="Wed, 24 Feb 2010 04:25:06 +0000"  >&lt;p&gt;I don&apos;t really understand why writing a test like &quot;assertFalse(&quot;TEST&quot;.equals(new GrantedAuthorityImpl(&quot;TEST&quot;)));&quot; is relevant. That&apos;s testing the java.lang.String equals method, which is obviously false. I don&apos;t really see the relevance of the role hierarchy test helper tests either.&lt;/p&gt;

&lt;p&gt;There now seem to be multiple issues here. In practice most authority implementations have a unique string representation, even if they cary additional information, and it is useful to be able to look them up (independent of the implemenation class) using the String alone. In that case I see no real problem with them using String equality and hashcode methods, and I don&apos;t really mind if they return true when compared directly to a String. There is no indication that the method should apply to all subclasses. If they return null for the getAuthority method, then they should provide a specific equals method which is only relevant to that class and its unique properties.&lt;/p&gt;

&lt;p&gt;I&apos;d still like to know if you have a real world issue that has caused this issue to be raised. The fact is that the project has lived with the code as it stands for seven years without it causing major problems.&lt;/p&gt;</comment>
                            <comment id="51480" author="alexanderkiel" created="Wed, 24 Feb 2010 04:48:28 +0000"  >&lt;p&gt;No, I don&apos;t have a real world issue. I just saw the source code of GrantedAuthorityImpl today and thought that it would be a good idea to file this bug. So its just a code review.&lt;/p&gt;

&lt;p&gt;Just for joke: &lt;a href=&quot;http://www.osnews.com/story/19266&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.osnews.com/story/19266&lt;/a&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I actually use spring-security since 2008 in webapps and I never had a problem with it. It&apos;s fine. But as you say yourself, equals and hashCode implementations which are against the contract, carry a risk for bugs. And such bugs aren&apos;t easy to find.&lt;/p&gt;</comment>
                            <comment id="61094" author="luke" created="Fri, 3 Dec 2010 08:48:10 +0000"  >&lt;p&gt;OK, on the balance of things, I&apos;ve decided to make this change. I can envisage some cases in the future where we may be using more complicated authority types and I don&apos;t want something like this to cause problems down the line. GrantedAuthorityImpl is now deprecated in favour of SimpleGrantedAuthority, and the latter is used throughout the codebase.&lt;/p&gt;

&lt;p&gt;On the downside, this may cause problems where users are using a string as a key to perform a lookup into a collection of authorities, as this will now fail. &lt;/p&gt;</comment>
                            <comment id="124335" author="issuemaster" created="Sat, 6 Feb 2016 06:13:53 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1661&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1661&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="16227" name="GrantedAuthorityImplTest.java" size="683" author="alexanderkiel" created="Wed, 24 Feb 2010 00:09:13 +0000"/>
                            <attachment id="16226" name="SimpleGrantedAuthority.java" size="960" author="alexanderkiel" created="Tue, 23 Feb 2010 21:24:53 +0000"/>
                            <attachment id="16229" name="TestHelperTests.patch" size="1049" author="alexanderkiel" created="Wed, 24 Feb 2010 03:05:13 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 23 Feb 2010 22:36:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19541</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03yev:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23117</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3687</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>