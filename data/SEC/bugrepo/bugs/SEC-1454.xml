<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:35:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1454/SEC-1454.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1454] @PreAutorize(#username == principal.username) issues - when target is AOPProxy</title>
                <link>https://jira.spring.io/browse/SEC-1454</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Hi Luke/Anybody,&lt;/p&gt;

&lt;p&gt;When used @PreAutorize(#username == principal.username) issues - when target is AOPProxy I always get an NullPointerExpression in MethodSecurityEvaluationContext addArgumentsAsVariables method. I have compiled with debug info, no issues with that. &lt;/p&gt;

&lt;p&gt;I have looked at the bug report which is the same case for Genrics &lt;a href=&quot;http://jira.springframework.org/browse/SEC-1448&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://jira.springframework.org/browse/SEC-1448&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, in my case my target object is wrapped in a AOPproxy(JdkDynamicProxy), but when used with AopUtils.getMostSpecificMethod(method, target) it always returns the class as $Proxy which cannot be read by the parameterDiscoverer. May be I have a wrapper of AOPProxy inside another AOPProxy which wraps my target. I guess it is a valid case. &lt;/p&gt;

&lt;p&gt;I could able to get around it by having custom EvaluationContext which first try run through a loop and get the target object as below &lt;/p&gt;

&lt;p&gt;while (candidate instanceof TargetClassAware) { // This is to ensure that we get to the final target object - most specific.&lt;br/&gt;
if (candidate instanceof TargetSource) {&lt;br/&gt;
candidate = ((TargetSource)candidate).getTarget(); &lt;br/&gt;
} else if (candidate instanceof Advised){&lt;br/&gt;
candidate =((Advised) candidate).getTargetSource();&lt;br/&gt;
}&lt;br/&gt;
}&lt;br/&gt;
return AopUtils.getTargetClass(candidate);&lt;/p&gt;


&lt;p&gt;However I still consider this as a work around and it would be nice that spring-security supports this out of the box, as it is so common that we use AOPproxy&apos;s as target object. &lt;/p&gt;

&lt;p&gt;-----------------------------------------------------------------------------------------------------------&lt;br/&gt;
I just copy below source code from Spring-sec MethodSecurityEvaluationContext class&lt;/p&gt;

&lt;p&gt;private void addArgumentsAsVariables() {&lt;br/&gt;
Object[] args = mi.getArguments();&lt;br/&gt;
Object targetObject = mi.getThis();&lt;br/&gt;
Method method = ClassUtils.getMostSpecificMethod(mi.getMethod(), targetObject.getClass());&lt;br/&gt;
String[] paramNames = parameterNameDiscoverer.getParameterNames(method);&lt;/p&gt;

&lt;p&gt;for(int i=0; i &amp;lt; args.length; i++) {&lt;br/&gt;
super.setVariable(paramNames&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;, args&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;);&lt;br/&gt;
}&lt;br/&gt;
}&lt;br/&gt;
I was talking about targetObject in this method, which is the class/interface that is annotated with preAuthorize. And in my application context the bean is wrapped in multi levels of AOPproxy&apos;s. &lt;/p&gt;


&lt;p&gt;I am not sure whether it is Spring issue or Spring sec issue, because in 3.0.3 even spring sec uses AopUtils.getMostSpecificmethod(method, target) this issue will not be solved as AopUtils just looks one level not recursively until it hits the right target. &lt;/p&gt;

&lt;p&gt;I would open a JIRA issue, if possible with a test case.&lt;/p&gt;

&lt;p&gt;Luke,&lt;br/&gt;
I told I will open JIRA with a test case, but it is difficult that I trim down my application context to make this test case. Please let me know if you cant reproduce it then i will fetch some time to create a test case. &lt;/p&gt;</description>
                <environment></environment>
        <key id="30894">SEC-1454</key>
            <summary>@PreAutorize(#username == principal.username) issues - when target is AOPProxy</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="pushpalakalyan">Kalyan Pushpala</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Apr 2010 01:00:36 +0000</created>
                <updated>Sat, 6 Feb 2016 06:14:15 +0000</updated>
                            <resolved>Fri, 30 Jul 2010 07:29:54 +0000</resolved>
                                    <version>3.0.1</version>
                                    <fixVersion>3.1.0.M1</fixVersion>
                                    <component>ACLs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="56177" author="luke" created="Fri, 30 Jul 2010 07:29:55 +0000"  >&lt;p&gt;Updated to make use of the ultimateTargetClass() method from Spring&apos;s AopProxyUtils.&lt;/p&gt;</comment>
                            <comment id="58327" author="ctran" created="Mon, 20 Sep 2010 16:04:37 +0000"  >&lt;p&gt;Is there achance this fix make it to the next 3.0.X version?&lt;/p&gt;</comment>
                            <comment id="124372" author="issuemaster" created="Sat, 6 Feb 2016 06:14:15 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1694&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1694&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                            <outwardlinks description="depends on">
                                        <issuelink>
            <issuekey id="30916">SPR-7074</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 30 Jul 2010 07:29:55 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19511</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03y9j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23093</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19609</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?t=87024]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>