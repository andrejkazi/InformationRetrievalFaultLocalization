<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:08:45 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-946/SEC-946.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-946] SS redirects to saved request URL instead of default target URL</title>
                <link>https://jira.spring.io/browse/SEC-946</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;When an unauthenticated user attempts to access a protected resource, AuthenticationProcessingFilter (actually AbstractProcessingFilter) saves the target URL to the session and then redirects to the login page.  If the user decides not to complete the login at that point in time, the target URL remains on the session.  If the user later decides to directly access a Login link (i.e. they hit the login page directly rather than indirectly via interception), the user will be redirected to the saved request URL rather than the default target URL.  It would seem that the default target URL is the intended target in this scenario.&lt;/p&gt;

&lt;p&gt;Besides causing some weirdness when users login, it also makes it unreliable to use the presence of a target URL to differentiate direct logins from interception-based logins.  It is useful to distinguish the two when rendering the login form.  In the case of an interception, I&apos;d like to be able to include some explanatory text (e.g. &quot;You must sign in to access the requested page.&quot;) just so the user isn&apos;t wondering why a login page just appeared.&lt;/p&gt;

&lt;p&gt;I&apos;ve devised an app-level workaround though ultimately this probably should be a framework level fix.  In the workaround, suppose I set the login URL to /login.jsp.  In the JSP I will use a URL like this: login.jsp?direct=true.  Then inside login.jsp I&apos;ll have this:&lt;/p&gt;

&lt;p&gt;&amp;lt;c:if test=&quot;$&lt;/p&gt;
{not empty param.direct}
&lt;p&gt;&quot;&amp;gt;&lt;br/&gt;
	&amp;lt;c:remove scope=&quot;session&quot; var=&quot;SPRING_SECURITY_SAVED_REQUEST_KEY&quot;/&amp;gt;&lt;br/&gt;
&amp;lt;/c:if&amp;gt;&lt;/p&gt;

&lt;p&gt;I posted a message about this here as well: &lt;span class=&quot;error&quot;&gt;&amp;#91;url&amp;#93;&lt;/span&gt;http://forum.springframework.org/showthread.php?t=58243[/url]&lt;/p&gt;</description>
                <environment></environment>
        <key id="23407">SEC-946</key>
            <summary>SS redirects to saved request URL instead of default target URL</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="wwheeler">Willie Wheeler</reporter>
                        <labels>
                    </labels>
                <created>Sun, 3 Aug 2008 09:32:48 +0000</created>
                <updated>Sat, 6 Feb 2016 06:38:21 +0000</updated>
                            <resolved>Sat, 20 Dec 2008 01:37:08 +0000</resolved>
                                    <version>2.0.3</version>
                                    <fixVersion>3.0.0 M1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="38100" author="wwheeler" created="Sun, 3 Aug 2008 09:54:46 +0000"  >&lt;p&gt;Slight correction--it appears that it&apos;s actually ExceptionTranslationFilter that saves the SavedRequest instance to the session, not the AbstractProcessingFilter.&lt;/p&gt;</comment>
                            <comment id="38827" author="luke" created="Mon, 11 Aug 2008 06:31:45 +0000"  >&lt;p&gt;I think the best option here is if the decision to remove the SavedRequest is placed in the AbstractProcessingFilter based class - this will know whether it has redirected to the SavedRequest URL or not. If not, then it should be removed. This may cause a problem for people who have overridden the filter behaviour to start something like a password change workflow, for example, with the intention of making use of the SavedRequest at a later stage. They would have to make sure they also overrode the code which was responsible for removing the SavedRequest from the session.&lt;/p&gt;</comment>
                            <comment id="39402" author="luke" created="Tue, 2 Sep 2008 23:30:41 +0000"  >&lt;p&gt;This is related to the URL navigation strategy issue because the logic for removing the saved request or not should be encapsulated in the strategy implementation.&lt;/p&gt;</comment>
                            <comment id="41603" author="luke" created="Fri, 12 Dec 2008 10:20:25 +0000"  >&lt;p&gt;I think the recent changes I&apos;ve made for &lt;a href=&quot;https://jira.spring.io/browse/SEC-745&quot; title=&quot;Provide general strategies for Url navigation (redirects and forwards for error handling, login entry points, post-login targets etc)&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-745&quot;&gt;&lt;del&gt;SEC-745&lt;/del&gt;&lt;/a&gt; should go some way to alleviating the problem of stale SavedRequests being left in the session. This could happen when some other redirection strategy was used other than redirecting to the SavedRequest URL. It will now be removed at the point where such a redirect occurs.&lt;/p&gt;

&lt;p&gt;The situation where you provide both a direct login and a login &quot;on-demand&quot;, and the user triggers the latter and then decides afterwards to use the direct login approach is more complicated. You could go with the approach you suggested - differentiating between the two at the login form (or controller) and removing the SavedRequest there.&lt;/p&gt;

&lt;p&gt;The class that implements most of the logic for this now is SavedRequestAwareSuccessfulAuthenticationHandler (which is used as the default login success strategy for AbstractProcessingFilter). We could potentially encapsulate the logic in there for removing the SavedRequest - possibly by allowing an additional parameter to be supplied with the form. You can already set a parameter to define the target Url and override the SavedRequest. That would be another possibility (and the new code removes the SavedRequest if it finds the parameter).&lt;/p&gt;

&lt;p&gt;Open to further suggestions &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                            <comment id="41768" author="luke" created="Sat, 20 Dec 2008 01:37:08 +0000"  >&lt;p&gt;Closing as &quot;fixed&quot; with the caveats mentioned above. The removal of the SavedRequest is a &quot;best effort&quot; undertaking. It will almost certainly be possible to think up situations where an application flow could result in the request remaining in the session. In those cases, the application should be aware of the possibility and remove the save request itself (an example would be the &quot;direct&quot; login case above).&lt;/p&gt;</comment>
                            <comment id="126970" author="issuemaster" created="Sat, 6 Feb 2016 06:38:21 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1200&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1200&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                            <outwardlinks description="depends on">
                                        <issuelink>
            <issuekey id="21420">SEC-745</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 11 Aug 2008 06:31:45 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19946</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03zj3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23298</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19784</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>