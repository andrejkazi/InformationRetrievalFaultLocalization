<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:14:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-60/SEC-60.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-60] AbstractSecurityInterceptor does not work with detached Hibernate collections</title>
                <link>https://jira.spring.io/browse/SEC-60</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;The beforeInvocation method in AbstractSecurityInterceptor class has the following line:&lt;/p&gt;

&lt;p&gt;        Assert.isTrue(getSecureObjectClass().isAssignableFrom(object.getClass()), &quot;Security invocation attempted for object &quot; + object&lt;br/&gt;
                    + &quot; but AbstractSecurityInterceptor only configured to support secure objects of type: &quot;&lt;br/&gt;
                    + getSecureObjectClass());&lt;/p&gt;

&lt;p&gt;where the implicit object.toString() causes problems for us with detached Hibernate 3.0&lt;br/&gt;
collections. Our code passes an detached org.hibernate.collection.PersistentSet to a DAO&lt;br/&gt;
object which initializes it. This works fine in 0.8.0 but is broken in 0.8.3. The root cause&lt;br/&gt;
is that it is not safe to call toString() for lazily loaded Hibernate collection that is detached.&lt;/p&gt;

&lt;p&gt;I don&apos;t think this is a Hibernate bug as it mimics java.util.Collection toString() behavior. It&lt;br/&gt;
would be unsafe for Hibernate to return different values depending on whether the object is&lt;br/&gt;
detached or not.&lt;/p&gt;

&lt;p&gt;Suggested fix is to either remove the above or make the check configurable so we can&lt;br/&gt;
disable it.&lt;/p&gt;</description>
                <environment></environment>
        <key id="12465">SEC-60</key>
            <summary>AbstractSecurityInterceptor does not work with detached Hibernate collections</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="balex">Ben Alex</assignee>
                                    <reporter username="penberg">Pekka Enberg</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Sep 2005 22:58:34 +0000</created>
                <updated>Sat, 6 Feb 2016 06:34:15 +0000</updated>
                            <resolved>Thu, 20 Oct 2005 18:52:56 +0000</resolved>
                                    <version>0.8.3</version>
                                    <fixVersion>0.9.0</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="15068" author="balex" created="Thu, 20 Oct 2005 18:52:56 +0000"  >&lt;p&gt;I think it reasonable code such as Acegi Security be permitted to System.out.println() a java.lang.Object, or call java.lang.Object.toString() as it sees fit. If there is some special ORM reason why toString() is unavailable, I think it more appropriate that a collection-safe toString() implementation be provided by the detached instance. You might like to check out Acegi Security CVS for net.sf.acegisecurity.domain.util.ReflectToStringBuilder which offers a detached object safe toString() method.&lt;/p&gt;

&lt;p&gt;In connection with your request, I have modified the AbstractSecurityInterceptor to report the Object.getClass().getName() instead of Object.toString(). This will be Hibernate safe and not lose any real reporting advantage for the Assert.isTrue() statement.&lt;/p&gt;</comment>
                            <comment id="126594" author="issuemaster" created="Sat, 6 Feb 2016 06:34:15 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/308&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/308&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 20 Oct 2005 18:52:56 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10778</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04n3j:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27116</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21765</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>