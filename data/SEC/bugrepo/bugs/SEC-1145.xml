<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:13:31 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1145/SEC-1145.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1145] When connecting to ldap for authentication user can login using old and new password</title>
                <link>https://jira.spring.io/browse/SEC-1145</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Login to application&lt;br/&gt;
Change windows password&lt;br/&gt;
Logout of application&lt;br/&gt;
Login to application using old password&lt;br/&gt;
This succeeds when it should not.&lt;br/&gt;
Login to application using new password. This succeeds and it should.&lt;br/&gt;
Reboot application, old password still works and still shouldn&apos;t.&lt;br/&gt;
Reboot machine, old password still works and still shouldn&apos;t.&lt;/p&gt;

&lt;p&gt;Config:&lt;/p&gt;

&lt;p&gt;&amp;lt;bean id=&quot;contextSource&quot; class=&quot;org.springframework.security.ldap.DefaultSpringSecurityContextSource&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;		&amp;lt;constructor-arg value=&quot;$&lt;/p&gt;
{ldap.url}
&lt;p&gt;&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;userDn&quot; value=&quot;CN=svc-ldap-deliveries,OU=Service Accounts,DC=MYDC,DC=com&quot;/&amp;gt; &lt;br/&gt;
		&amp;lt;property name=&quot;password&quot; value=&quot;pwd&quot;/&amp;gt; &lt;br/&gt;
		&amp;lt;property name=&quot;referral&quot; value=&quot;follow&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt; &lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;secondLdapProvider&quot;&lt;br/&gt;
		  class=&quot;org.springframework.security.providers.ldap.LdapAuthenticationProvider&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;		&amp;lt;security:custom-authentication-provider /&amp;gt; &lt;/p&gt;

&lt;p&gt;		&amp;lt;constructor-arg&amp;gt; &lt;br/&gt;
			&amp;lt;bean class=&quot;org.springframework.security.providers.ldap.authenticator.BindAuthenticator&quot;&amp;gt;&lt;br/&gt;
				&amp;lt;constructor-arg ref=&quot;contextSource&quot;/&amp;gt; &lt;br/&gt;
				&amp;lt;property name=&quot;userSearch&quot;&amp;gt;&lt;br/&gt;
					&amp;lt;bean id=&quot;userSearch&quot; class=&quot;org.springframework.security.ldap.search.FilterBasedLdapUserSearch&quot;&amp;gt;&lt;br/&gt;
						&amp;lt;constructor-arg index=&quot;0&quot; value=&quot;&quot;/&amp;gt; &lt;br/&gt;
						&amp;lt;constructor-arg index=&quot;1&quot; value=&quot;sAMAccountName=&lt;/p&gt;
{0}&quot;/&amp;gt; &lt;br/&gt;
						&amp;lt;constructor-arg index=&quot;2&quot; ref=&quot;contextSource&quot; /&amp;gt; &lt;br/&gt;
					&amp;lt;/bean&amp;gt; &lt;br/&gt;
				&amp;lt;/property&amp;gt; &lt;br/&gt;
			&amp;lt;/bean&amp;gt; &lt;br/&gt;
		&amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
		&lt;br/&gt;
	 	&amp;lt;constructor-arg&amp;gt; 		&lt;br/&gt;
			&amp;lt;bean class=&quot;org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator&quot;&amp;gt;&lt;br/&gt;
&lt;br/&gt;
				&amp;lt;constructor-arg ref=&quot;contextSource&quot; /&amp;gt; &lt;br/&gt;
				&amp;lt;constructor-arg value=&quot;OU=DLS File Permissions&quot; /&amp;gt;&lt;br/&gt;
				&amp;lt;property name=&quot;rolePrefix&quot; value=&quot;ROLE_&quot;/&amp;gt; 			&lt;br/&gt;
				&amp;lt;property name=&quot;convertToUpperCase&quot; value=&quot;false&quot;/&amp;gt; 					&lt;br/&gt;
				&amp;lt;property name=&quot;groupRoleAttribute&quot; value=&quot;cn&quot;&amp;gt;&amp;lt;/property&amp;gt;			&lt;br/&gt;
				&amp;lt;property name=&quot;groupSearchFilter&quot; value=&quot;(member={0}
&lt;p&gt;)&quot;/&amp;gt;&lt;br/&gt;
				&amp;lt;property name=&quot;searchSubtree&quot; value=&quot;true&quot;&amp;gt;&amp;lt;/property&amp;gt;&lt;br/&gt;
			&amp;lt;/bean&amp;gt; &lt;br/&gt;
		&amp;lt;/constructor-arg&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;Spring core 2.0.4 and spring ldap 1.3.0&lt;/p&gt;</description>
                <environment>Windows</environment>
        <key id="26442">SEC-1145</key>
            <summary>When connecting to ldap for authentication user can login using old and new password</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="sandherpk">Pavan Navarro</reporter>
                        <labels>
                    </labels>
                <created>Thu, 30 Apr 2009 07:06:10 +0000</created>
                <updated>Sat, 6 Feb 2016 06:10:46 +0000</updated>
                            <resolved>Mon, 13 Jul 2009 22:16:58 +0000</resolved>
                                    <version>2.0.4</version>
                                    <fixVersion>2.0.5</fixVersion>
                                    <component>LDAP</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="43935" author="luke" created="Sun, 3 May 2009 11:59:25 +0000"  >&lt;p&gt;Why do you think this is an issue with Spring Security? &lt;/p&gt;

&lt;p&gt;If you are seriously rebooting your machine and reauthenticating in a clean browser session with an out of date password then the most likely cause is that the password hasn&apos;t been reset.&lt;/p&gt;

&lt;p&gt;This isn&apos;t something that can be addressed without a better analysis and more information - you should be able to check the debug log to see whether an authentication is being attempted after you have changed the password. You should also be able to write a basic Java LDAP test to verify whether a simple bind with the old password succeeds or not.&lt;/p&gt;</comment>
                            <comment id="44577" author="olo" created="Wed, 3 Jun 2009 01:13:51 +0000"  >&lt;p&gt;I think this might be due to LDAP connection pooling being turned on.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://java.sun.com/products/jndi/tutorial/ldap/connect/pool.html#TIMEOUT&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://java.sun.com/products/jndi/tutorial/ldap/connect/pool.html#TIMEOUT&lt;/a&gt; :&lt;/p&gt;

&lt;p&gt;&quot;When Not to Use Pooling&lt;/p&gt;

&lt;p&gt;Pooled connections are intended to be reused. Therefore, if you plan to perform operations on a Context instance that might alter the underlying connection&apos;s state, then you should not use connection pooling for that Context instance. For example, if you plan to invoke the Start TLS extended operation on a Context instance, or plan to change security-related properties (such as &quot;java.naming.security.principal&quot; or &quot;java.naming.security.protocol&quot;) after the initial context has been created, you should not use connection pooling for that Context instance because the LDAP provider does not track any such state changes. If you use connection pooling in such situations, you might be compromising the security of your application.&quot;&lt;/p&gt;


&lt;p&gt;I&apos;ve noticed that the environment Hashtable used to initialize the LDAP context is constructed in org.springframework.ldap.core.support.AbstractContextSource.setupAnonymousEnv() with pooling (the com.sun.jndi.ldap.connect.pool property) enabled:&lt;/p&gt;

&lt;p&gt;private boolean pooled = true;&lt;br/&gt;
....&lt;br/&gt;
private Hashtable setupAnonymousEnv() {&lt;br/&gt;
		if (pooled) &lt;/p&gt;
{
			baseEnv.put(SUN_LDAP_POOLING_FLAG, &quot;true&quot;);
			log.debug(&quot;Using LDAP pooling.&quot;);
		}
&lt;p&gt;...&lt;/p&gt;


&lt;p&gt;Then, org.springframework.security.ldap.DefaultSpringSecurityContextSource.getReadWriteContext(String, Object) changes the java.naming.security.principal and java.naming.security.credentials properties:&lt;/p&gt;

&lt;p&gt;public DirContext getReadWriteContext(String userDn, Object credentials) {&lt;br/&gt;
        Hashtable env = new Hashtable(getAnonymousEnv());&lt;/p&gt;

&lt;p&gt;        env.put(Context.SECURITY_PRINCIPAL, userDn);&lt;br/&gt;
        env.put(Context.SECURITY_CREDENTIALS, credentials);&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;Note that getAnonymousEnv() can return a reused, cached instance of the environment.&lt;/p&gt;

&lt;p&gt;So I suggest disabling pooling on the context source used for authentication-related beans, like org.springframework.security.providers.ldap.authenticator.BindAuthenticator.&lt;/p&gt;

&lt;p&gt;Here&apos;s how to do this in your Spring context XML configuration file:&lt;/p&gt;

&lt;p&gt;  &amp;lt;bean id=&quot;contextSource&quot; class=&quot;org.springframework.security.ldap.DefaultSpringSecurityContextSource&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;constructor-arg value=&quot;ldap://ldap.example.com/dc=example,dc=com&quot; /&amp;gt;&lt;br/&gt;
    &amp;lt;property name=&quot;pooled&quot; value=&quot;false&quot; /&amp;gt;&lt;br/&gt;
  &amp;lt;/bean&amp;gt;&lt;/p&gt;

&lt;p&gt;I think it would be safe to use a pooled context source for other security-related beans (like DefaultLdapAuthoritiesPopulator or FilterBasedLdapUserSearch) because they don&apos;t perform LDAP binds but I personally haven&apos;t verified that.&lt;/p&gt;

&lt;p&gt;In general, I think that DefaultSpringSecurityContextSource (and any other class that modifies the security-related environment properties) should emit a big fat warning (or possibly even throw an exception?) in the logs (together with an explanation) whenever it detects that the modified environment has com.sun.jndi.ldap.connect.pool property set to true.&lt;/p&gt;</comment>
                            <comment id="44584" author="luke" created="Wed, 3 Jun 2009 03:48:49 +0000"  >&lt;p&gt;I think your analysis is at least partially correct here. Connections for specific users shouldn&apos;t be pooled and in Acegi we removed the pooling flag from the cloned environment before binding. This is also done in 3.0, where the Spring LDAP ContextSource API has now changed to allow binding as an explicit user. &lt;/p&gt;

&lt;p&gt;However, it doesn&apos;t really explain the reported behaviour. In particular, it shouldn&apos;t be possible to obtain a context with the wrong password. Sun&apos;s LDAP pool takes account of this and you will get an AuthenticationException. For example:&lt;/p&gt;

&lt;p&gt;        DirContext ctx = getContextSource().getReadWriteContext(&quot;uid=Bob,ou=people,dc=springframework,dc=org&quot;, &quot;bobspassword&quot;);&lt;br/&gt;
        com.sun.jndi.ldap.LdapPoolManager.showStats(System.out);&lt;br/&gt;
        ctx.close();&lt;br/&gt;
        com.sun.jndi.ldap.LdapPoolManager.showStats(System.out);&lt;br/&gt;
        // Now get it gain, with wrong password&lt;br/&gt;
        ctx = getContextSource().getReadWriteContext(&quot;uid=Bob,ou=people,dc=springframework,dc=org&quot;, &quot;wrongpassword&quot;);&lt;/p&gt;

&lt;p&gt;results in:&lt;/p&gt;

&lt;p&gt;org.springframework.security.BadCredentialsException: Bad credentials; nested exception is org.springframework.ldap.AuthenticationException: &lt;span class=&quot;error&quot;&gt;&amp;#91;LDAP: error code 49 - Bind failed: null&amp;#93;&lt;/span&gt;; nested exception is javax.naming.AuthenticationException: &lt;span class=&quot;error&quot;&gt;&amp;#91;LDAP: error code 49 - Bind failed: null&amp;#93;&lt;/span&gt;&lt;br/&gt;
Caused by: org.springframework.ldap.AuthenticationException: &lt;span class=&quot;error&quot;&gt;&amp;#91;LDAP: error code 49 - Bind failed: null&amp;#93;&lt;/span&gt;; nested exception is javax.naming.AuthenticationException: &lt;span class=&quot;error&quot;&gt;&amp;#91;LDAP: error code 49 - Bind failed: null&amp;#93;&lt;/span&gt;&lt;br/&gt;
Caused by: javax.naming.AuthenticationException: &lt;span class=&quot;error&quot;&gt;&amp;#91;LDAP: error code 49 - Bind failed: null&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtx.mapErrorCode(LdapCtx.java:2985)&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:2931)&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:2732)&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2646)&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtx.&amp;lt;init&amp;gt;(LdapCtx.java:283)&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtxFactory.getUsingURL(LdapCtxFactory.java:175)&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtxFactory.getUsingURLs(LdapCtxFactory.java:193)&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtxFactory.getLdapCtxInstance(LdapCtxFactory.java:136)&lt;br/&gt;
	at com.sun.jndi.ldap.LdapCtxFactory.getInitialContext(LdapCtxFactory.java:66)&lt;br/&gt;
	at javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:667)&lt;br/&gt;
	at javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:247)&lt;br/&gt;
	at javax.naming.InitialContext.init(InitialContext.java:223)&lt;br/&gt;
	at javax.naming.ldap.InitialLdapContext.&amp;lt;init&amp;gt;(InitialLdapContext.java:134)&lt;/p&gt;

&lt;p&gt;If you look at the pooling code, t he class used as the key to the pool is a com.sun.jndi.ldap.SimpleClientId, which includes the username &lt;b&gt;and&lt;/b&gt; password, so a pool lookup will fail and force a new connection to be opened and a reauthentication with the supplied password. The whole JNDI abstraction for LDAP gets particularly leaky in my opinion when you are dealing with authentication and other issues (like LDAP controls) and I have often been tempted to reimplement everything using the Mozilla (Netscape) LDAP client or another LDAP client library.&lt;/p&gt;

&lt;p&gt;The original reporter also claimed that the problem persisted after rebooting both the application and the machine, so I don&apos;t think this could be a connection pool issue &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;ve modified the 2.0.x branch to remove the pooling flag from the Hashtable copy when binding as a specific user, which should make the connection use more efficient. &lt;/p&gt;</comment>
                            <comment id="124037" author="issuemaster" created="Sat, 6 Feb 2016 06:10:46 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1393&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1393&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 3 May 2009 11:59:25 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19771</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0242f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12368</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12210</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>