<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:25:46 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-783/SEC-783.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-783] GlobalMethodSecurityBeanDefinitionParser should support AfterInvocationProviders</title>
                <link>https://jira.spring.io/browse/SEC-783</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Even I define an AfterInvocationProviderManager, it can&apos;t be auto-wired into the MethodSecurityInterceptor when I use &amp;lt;global-method-security&amp;gt; to secure methods with @Secured. So the AfterInvocationProviders don&apos;t work with the @Secured annotations. I can only use &amp;lt;security:intercept-methods&amp;gt; to have my AfterInvocationProviders work!&lt;/p&gt;</description>
                <environment></environment>
        <key id="21788">SEC-783</key>
            <summary>GlobalMethodSecurityBeanDefinitionParser should support AfterInvocationProviders</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="garymak">Gary Mak</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Apr 2008 17:57:50 +0000</created>
                <updated>Sat, 6 Feb 2016 06:36:34 +0000</updated>
                            <resolved>Fri, 25 Apr 2008 23:40:23 +0000</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>2.0.1</fixVersion>
                                    <component>ACLs</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>4</watches>
                                                                <comments>
                            <comment id="34911" author="balex" created="Fri, 18 Apr 2008 23:00:54 +0000"  >&lt;p&gt;This is caused by a limitation in GlobalMethodSecurityBeanDefinitionParser, which creates the MethodSecurityInterceptor and does not provide a way of injecting an AfterInvocationProviderManager. A few major options are possibly available:&lt;/p&gt;

&lt;p&gt;1. Permit a &amp;lt;global-method-security&amp;gt; attribute to reference an already-configured MethodSecurityInterceptor&lt;br/&gt;
2. Permit a &amp;lt;global-method-security&amp;gt; attribute to reference an already-configured AfterInvocationProviderManager&lt;br/&gt;
3. Arrange for the GlobalMethodSecurityBeanDefinitionParser to use a suitable autowire mode&lt;br/&gt;
4. Instantiate a BeanIds.AFTER_INVOCATION_PROVIDER_MANAGER and move completion logic (autowiring any detected AfterInvocationProvider instances) to a BeanPostProcessor&lt;br/&gt;
5. Something else?&lt;/p&gt;

&lt;p&gt;Luke, which approach do you prefer? Approach #1 offers maximum flexibility, but given AfterInvocationProviderManager instances are almost always required when used with domain object instance security, I&apos;m reluctant to require people to always write a separate bean definition using the old style. There is some precedent already favouring approach #4, so I&apos;m probably favouring it at this stage (very open to alternative viewpoints, though).&lt;/p&gt;</comment>
                            <comment id="34923" author="garymak" created="Sat, 19 Apr 2008 14:16:33 +0000"  >&lt;p&gt;What&apos;s the recommended workaround for this usage in Spring Security 2.0.0? Thanks!&lt;/p&gt;</comment>
                            <comment id="35122" author="luke" created="Thu, 24 Apr 2008 23:30:51 +0000"  >&lt;p&gt;I&apos;ve added support for a &amp;lt;custom-after-invocation-provider&amp;gt; element which works in the same way as &amp;lt;custom-authentication-provider&amp;gt;. If it is used, an AfterInvocationproviderManager will be registered and injected into the default method security interceptor.&lt;/p&gt;</comment>
                            <comment id="35149" author="luke" created="Fri, 25 Apr 2008 23:40:23 +0000"  >&lt;p&gt;Should be working now&lt;/p&gt;</comment>
                            <comment id="126794" author="issuemaster" created="Sat, 6 Feb 2016 06:36:34 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1043&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1043&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 18 Apr 2008 23:00:54 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20092</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04lp3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26889</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21532</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>