<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:14:50 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1705/SEC-1705.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1705] Namespace creates spurious OpenIDAuthenticationFilter bean</title>
                <link>https://jira.spring.io/browse/SEC-1705</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description></description>
                <environment></environment>
        <key id="37138">SEC-1705</key>
            <summary>Namespace creates spurious OpenIDAuthenticationFilter bean</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="luke">Luke Taylor</reporter>
                        <labels>
                    </labels>
                <created>Thu, 31 Mar 2011 09:06:26 +0000</created>
                <updated>Sat, 6 Feb 2016 06:16:52 +0000</updated>
                            <resolved>Thu, 31 Mar 2011 14:04:15 +0000</resolved>
                                    <version>3.0.5</version>
                    <version>3.1.0.RC1</version>
                                    <fixVersion>3.1.0.RC2</fixVersion>
                    <fixVersion>3.0.6</fixVersion>
                                    <component>Namespace</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="64844" author="luke" created="Thu, 31 Mar 2011 10:03:15 +0000"  >&lt;p&gt;It looks like a separate bean copy is used by the DefaultLoginPageGeneratingFilter, while the one in the filter is registered as an inner bean. In practice we should probably just use a single reference.&lt;/p&gt;</comment>
                            <comment id="64929" author="blaine" created="Sat, 2 Apr 2011 09:40:23 +0000"  >&lt;p&gt;I&apos;m calling the DefaultLoginPageGeneratingFIlter instance of OpenIDAuthenticationFilter the &quot;PGF Openid Filter instance&quot; for brevity below.  I&apos;m calling the main OpenIDAuthenticationFilter the &quot;primary&quot; one.&lt;/p&gt;

&lt;p&gt;I will check with the Spring Security openid sample web app if you want me to, but with my own app I know that the bean factory reveals only the PGF Openid Filter instance by the the bean factory getter methods.  It is very likely that this is the case with any app using the openid* elements.  Not having the primary OpenIDAuthenticationFilter available through the context/bean-factory is a serious inconvience as explained below.&lt;/p&gt;

&lt;p&gt;One can work with the primary OpenIDAuthenticationFilter instance with a bean post-processor, but that does not satisfy the use case where one wants to declaratively configure OpenID beyond the very limited settings allowed by the openid* configuration elements.  getBean() operators are not ready for usage by bean post-processors.  It would be very easy to wire with the primary OpenIDAuthenticationFilter instance if it were registered at top level in the context.  My cruddy work-around is, in a bean post-processor, save off a reference to the primary OpenIDAuthenticationFilter, then in my ApplicationListener, use getBean() calls to wire declaratively-configured beans with the primary OpenIDAuthenticationFilter.&lt;/p&gt;</comment>
                            <comment id="64931" author="luke" created="Sat, 2 Apr 2011 14:10:45 +0000"  >&lt;p&gt;You shouldn&apos;t need to use gerBean(). Just get Spring to inject whatever you need into your BeanPostProcessor and then inject them into the OpenIDAuthenticationFilter in the postProcessBeforeInitialization method.&lt;/p&gt;</comment>
                            <comment id="124645" author="issuemaster" created="Sat, 6 Feb 2016 06:16:52 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1942&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1942&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 2 Apr 2011 09:40:23 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12883</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03xxz:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23041</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19531</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?p=354563]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>