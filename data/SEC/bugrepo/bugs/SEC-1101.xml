<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:51:03 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1101/SEC-1101.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1101] SecurityContextHolderAwareRequestWrapper isUserInRole always returns null when user is anonymously authenticated</title>
                <link>https://jira.spring.io/browse/SEC-1101</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;In our application a user can be fully authenticated or anymous authenticated.&lt;br/&gt;
In the later case the security token is the AnonymousAuthenticationToken.&lt;/p&gt;

&lt;p&gt;When a user is anonymously authenticated and I the isUserInRole(&apos;ROLE_ANONYMOUS&apos;) functionality on the In HttpServletRequest always get &apos;false&apos;.&lt;br/&gt;
I verified the SecurityContextHolder.getContext().getAuthentication() -&amp;gt; I can clearly see that the token is AnonymousAuthenticationToken and that the user has the ROLE_ANONYMOUS credentials, so that is not the problem.&lt;/p&gt;

&lt;p&gt;After debug I found the HttpServletRequest wrapped by the SavedRequestAwareWrapper which in turn inherits the &apos;isUserInRole&apos; behaviour from SecurityContextHolderAwareRequestWrapper&lt;br/&gt;
However, the isUserInRole on the latter class first calls getAuthentication, this method looks like this:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;code&amp;#93;&lt;/span&gt;&lt;br/&gt;
//SecurityContextHolderAwareRequestWrapper - line 74&lt;br/&gt;
  private Authentication getAuthentication() {&lt;br/&gt;
        Authentication auth = SecurityContextHolder.getContext().getAuthentication();&lt;/p&gt;

&lt;p&gt;        if (!authenticationTrustResolver.isAnonymous(auth)) &lt;/p&gt;
{
            return auth;
        }

&lt;p&gt;        return null;&lt;br/&gt;
    }&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;/code&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;So what happens is, is that the Authentication is not returned, but null instead&lt;br/&gt;
Therefore the isUserInRole returns false.&lt;/p&gt;

&lt;p&gt;I think this is a bug; why should isUserInRole not work when the user has the ROLE_ANONYMOUS ?&lt;/p&gt;</description>
                <environment></environment>
        <key id="25580">SEC-1101</key>
            <summary>SecurityContextHolderAwareRequestWrapper isUserInRole always returns null when user is anonymously authenticated</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="errorken">errorken</reporter>
                        <labels>
                    </labels>
                <created>Sat, 7 Feb 2009 01:08:47 +0000</created>
                <updated>Sat, 6 Feb 2016 06:10:23 +0000</updated>
                            <resolved>Tue, 28 Apr 2009 13:17:40 +0000</resolved>
                                    <version>2.0.4</version>
                                    <fixVersion>3.0.0 M1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="42427" author="luke" created="Sun, 8 Feb 2009 09:51:51 +0000"  >&lt;p&gt;If you read the Javadoc for HttpServletRequest.isUserinRole(), it returns:&lt;/p&gt;

&lt;p&gt;&quot;a boolean indicating whether the user making this request belongs to a given role; false if the user has not been authenticated&quot;. &lt;/p&gt;

&lt;p&gt;The wrapper is intended to mimic the API hence it returns false for an unauthenticated user.&lt;/p&gt;</comment>
                            <comment id="42431" author="errorken" created="Sun, 8 Feb 2009 18:56:49 +0000"  >&lt;p&gt;I have read the javadoc, and if you interprete what the javadoc says you&apos;ll notice that the current implementation is wrong.&lt;/p&gt;

&lt;p&gt;The javadoc says that the method returns false if, and only if, te user is &lt;b&gt;NOT&lt;/b&gt; authenticated and is thus &lt;b&gt;NOT&lt;/b&gt; in role.&lt;/p&gt;

&lt;p&gt;If a user has been ANONYMOUSLY authenticated , the user &lt;b&gt;IS&lt;/b&gt; authenticated and &lt;b&gt;IS&lt;/b&gt; in a role (role_anonymous by default), do you agree on this?&lt;/p&gt;

&lt;p&gt;A user with role_anonymous is exactly the same as a user with for example role_admin.&lt;br/&gt;
The only difference is the authentication strength, but it does not deny the fact that the user is authenticated (he is authenticated as being in role_anonymous)&lt;/p&gt;

&lt;p&gt;For role_admin you probably have some strongher authentication setup, such as a username/password verification.&lt;br/&gt;
While for role_anonymous the authentication is less strict; it might be an email address that should have a valid form, or might be always valid if no identification is supplied.&lt;/p&gt;

&lt;p&gt;I&apos;m cloning this issue since I really think the current implementation is just wrong.&lt;/p&gt;</comment>
                            <comment id="42432" author="luke" created="Sun, 8 Feb 2009 19:11:30 +0000"  >&lt;p&gt;The servlet spec doesn&apos;t have a concept of &quot;anonymously authenticated&quot; and by most interpretations an anonymous user has not been authenticated. You might wish to interpret that differently, but it isn&apos;t a bug - Spring Security&apos;s AnonymousProcessingFilter was only introduced to facilitate the exclusion of specific URLs from the FilterSecurityInterceptor. &lt;/p&gt;

&lt;p&gt;If you want different behaviour you can use a custom wrapper class in SecurityContextHolderIntegrationFilter (or extend the existing implementation and override isUserInRole) .&lt;/p&gt;</comment>
                            <comment id="43450" author="kristian.luck" created="Wed, 1 Apr 2009 00:36:12 +0000"  >&lt;p&gt;I just wanted to voice my support for errorken&apos;s interpretation.&lt;/p&gt;

&lt;p&gt;Indeed, the servlet spec (v2.4) doesn&apos;t have a concept of &apos;anonymously authenticated&apos;.  In fact, it only mentions four &quot;mechanisms&quot; &lt;span class=&quot;error&quot;&gt;&amp;#91;SRV.12.5&amp;#93;&lt;/span&gt;: HTTP Basic Authentication, HTTP Digest Authentication, HTTPS Client Authentication, and Form Based Authentication.&lt;/p&gt;

&lt;p&gt;Out-of-the-box, Spring supports these four mechanisms plus many others.  I definitely feel that if Anonymous Authentication has been explicitly configured, then the concept of &quot;anonymously authenticated&quot; has a definite meaning, and that meaning is in line with errorken&apos;s rationale.&lt;/p&gt;

&lt;p&gt;If I can offer some further persuasion to reconsider the present implementation, consider a publicly visible website such as a user forum.  &lt;span class=&quot;error&quot;&gt;&amp;#91;Anonymous&amp;#93;&lt;/span&gt; visitors are free to browse, but may not be allowed to post until they&apos;ve registered.  The &lt;span class=&quot;error&quot;&gt;&amp;#91;Register&amp;#93;&lt;/span&gt; link could very reasonably be rendered only on condition of ROLE_ANONYMOUS.  Unless &quot;anonymous authentication&quot; is recognized as a legitimate form of authentication, the implementation of this render condition would be different than most others on the site; for no good reason.  Finally, the Spring Security Reference Documentation v2.0.x contains a chapter on Anonymous Authentication.  If it&apos;s not an valid form of authentication, then why is a chapter dedicated to it?&lt;/p&gt;</comment>
                            <comment id="123991" author="issuemaster" created="Sat, 6 Feb 2016 06:10:23 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1351&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1351&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="25588">SEC-1102</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sun, 8 Feb 2009 09:51:51 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10521</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i024an:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12405</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12243</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>