<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:37:11 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1778/SEC-1778.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1778] MutableAclService#updateAcl() fails in JPA environment</title>
                <link>https://jira.spring.io/browse/SEC-1778</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;I am using a JpaTransactionManager and the HibernateJpaVendorAdapter for the EntityManagerFactory configuration. The approach is similar to the one described in this posting: &lt;a href=&quot;http://forum.springsource.org/showthread.php?88218-Spring-JDBC-template-with-JPATransactionManager&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://forum.springsource.org/showthread.php?88218-Spring-JDBC-template-with-JPATransactionManager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, with this setup, JdbcMutableAclService#updateAcl() raises a HibernateException (see below).&lt;br/&gt;
The reason seems to be, that the BorrowedConnectionProxy keeps a boolean flag to keep track of connection retrieve and release operations. However, in JdbcMutableAclService#createEntries() there&apos;s a nested call to the JDBCTemplate (one for the batch update and an inner call to get the id using createOrRetrieveSidPrimaryKey() ). This causes the flag in BorrowedConnectionProxy to get out of sync.&lt;/p&gt;

&lt;p&gt;I attached a test case project to reproduce.&lt;/p&gt;


&lt;p&gt;Stacktrace:&lt;br/&gt;
org.hibernate.HibernateException: connnection proxy not usable after transaction completion&lt;br/&gt;
	at org.hibernate.jdbc.BorrowedConnectionProxy.invoke(BorrowedConnectionProxy.java:66)&lt;br/&gt;
	at $Proxy37.prepareStatement(Unknown Source)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator.createPreparedStatement(JdbcTemplate.java:1362)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:580)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:636)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:665)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:673)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:713)&lt;br/&gt;
	at org.springframework.jdbc.core.JdbcTemplate.queryForList(JdbcTemplate.java:784)&lt;br/&gt;
	at org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(JdbcMutableAclService.java:209)&lt;br/&gt;
	at org.springframework.security.acls.jdbc.JdbcMutableAclService.updateObjectIdentity(JdbcMutableAclService.java:357)&lt;br/&gt;
	at org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(JdbcMutableAclService.java:316)&lt;br/&gt;
	at com.heiler.hsp.security.domain.AclDomainEntityTest.testAddAceToAcl(AclDomainEntityTest.java:72)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)&lt;br/&gt;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&lt;br/&gt;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)&lt;br/&gt;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&lt;br/&gt;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)&lt;br/&gt;
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)&lt;br/&gt;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&lt;br/&gt;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)&lt;br/&gt;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)&lt;br/&gt;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)&lt;br/&gt;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)&lt;br/&gt;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)&lt;br/&gt;
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)&lt;br/&gt;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)&lt;br/&gt;
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;/p&gt;</description>
                <environment></environment>
        <key id="38703">SEC-1778</key>
            <summary>MutableAclService#updateAcl() fails in JPA environment</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="rwinch">Rob Winch</assignee>
                                    <reporter username="sroeck">Stefan R&#246;ck</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Jul 2011 00:01:06 +0000</created>
                <updated>Sat, 6 Feb 2016 06:17:38 +0000</updated>
                            <resolved>Tue, 17 Jul 2012 13:26:05 +0000</resolved>
                                    <version>3.0.5</version>
                                                    <component>ACLs</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                    <timeoriginalestimate seconds="14400">0.5d</timeoriginalestimate>
                            <timeestimate seconds="14400">0.5d</timeestimate>
                                        <comments>
                            <comment id="68219" author="sroeck" created="Fri, 8 Jul 2011 04:51:35 +0000"  >&lt;p&gt;A fix could be to rework the JdbcMutableAclService#createEntries() method: First fetch all ids and after that trigger the batch insert:&lt;/p&gt;

&lt;p&gt;Here&apos;s a code snippet:&lt;/p&gt;

&lt;p&gt;  @Override&lt;br/&gt;
  protected void createEntries( final MutableAcl acl ) {&lt;br/&gt;
    final Map&amp;lt;AccessControlEntry, Long&amp;gt; ids = createIdsForAces( acl );&lt;br/&gt;
    jdbcTemplate.batchUpdate( insertEntry, new BatchPreparedStatementSetter() {&lt;br/&gt;
      @Override&lt;br/&gt;
      public int getBatchSize() &lt;/p&gt;
{
        return acl.getEntries().size();
      }

&lt;p&gt;      @Override&lt;br/&gt;
      public void setValues( PreparedStatement stmt, int i ) throws SQLException &lt;/p&gt;
{
        AccessControlEntry entry_ = acl.getEntries().get( i );
        // Assert.isTrue(entry_ instanceof AccessControlEntryImpl,
        // &quot;Unknown ACE class&quot;);
        AccessControlEntryImpl entry = ( AccessControlEntryImpl )entry_;
        stmt.setLong( 1, ( ( Long )acl.getId() ).longValue() );
        stmt.setInt( 2, i );
        // stmt.setLong(3, createOrRetrieveSidPrimaryKey(entry.getSid(),
        // true).longValue());
        stmt.setLong( 3, ids.get( entry ).longValue() );
        stmt.setInt( 4, entry.getPermission().getMask() );
        stmt.setBoolean( 5, entry.isGranting() );
        stmt.setBoolean( 6, entry.isAuditSuccess() );
        stmt.setBoolean( 7, entry.isAuditFailure() );
      }
&lt;p&gt;    } );&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;  private Map&amp;lt;AccessControlEntry, Long&amp;gt; createIdsForAces( MutableAcl acl ) {&lt;br/&gt;
    Map&amp;lt;AccessControlEntry, Long&amp;gt; ids = new HashMap&amp;lt;AccessControlEntry, Long&amp;gt;();&lt;br/&gt;
    List&amp;lt;AccessControlEntry&amp;gt; entries = acl.getEntries();&lt;br/&gt;
    for( AccessControlEntry entry : entries ) &lt;/p&gt;
{
      Long id = createOrRetrieveSidPrimaryKey( entry.getSid(), true );
      ids.put( entry, id );
    }
&lt;p&gt;    return ids;&lt;br/&gt;
  }&lt;/p&gt;</comment>
                            <comment id="72157" author="luke" created="Mon, 31 Oct 2011 17:29:57 +0000"  >&lt;p&gt;This doesn&apos;t really sound like a major bug in JdbcMutableAclService rather than an issue with using it with Hibernate. Unless there is a problem using it with plain Jdbc, I&apos;d be reluctant to change the main implementation. You can always customize the behaviour to work around this specific issue.  &lt;/p&gt;</comment>
                            <comment id="81811" author="rwinch" created="Tue, 17 Jul 2012 13:26:05 +0000"  >&lt;p&gt;This is a duplicate of &lt;a href=&quot;https://jira.spring.io/browse/SPR-7393&quot; title=&quot;HibernateException is thrown during borrow connection after any query execution in RowMapper&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SPR-7393&quot;&gt;&lt;del&gt;SPR-7393&lt;/del&gt;&lt;/a&gt;. You will notice that the version of spring-jdbc that is pulled in is 3.0.3.RELEASE. The fix version on the referenced bug is 3.0.4.RELEASE. Adding the following to the pom of the example fixes the issue.&lt;/p&gt;

&lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;  &amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;  &amp;lt;artifactId&amp;gt;spring-jdbc&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;  &amp;lt;version&amp;gt;3.0.4.RELEASE&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt;</comment>
                            <comment id="106355" author="sroeck" created="Mon, 28 Jul 2014 05:28:15 +0000"  >&lt;p&gt;Thanks Rob, works like a charm.&lt;/p&gt;</comment>
                            <comment id="124724" author="issuemaster" created="Sat, 6 Feb 2016 06:17:38 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/2004&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/2004&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                            <outwardlinks description="duplicates">
                                        <issuelink>
            <issuekey id="32359">SPR-7393</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="18440" name="aclbug.zip" size="8899" author="sroeck" created="Fri, 8 Jul 2011 00:01:06 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 31 Oct 2011 17:29:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1966</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i00knr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3392</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>4792</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>