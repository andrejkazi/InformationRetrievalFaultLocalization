<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:51:54 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-925/SEC-925.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-925] BasicLookupStrategy - support for schema qualifier</title>
                <link>https://jira.spring.io/browse/SEC-925</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;The current impl of this class works great - I would like to avoid writing my own custom strategy wherever possible.  The JavaDocs for BasicLookupStrategy state that it&apos;s not design for extension which I understand.&lt;/p&gt;

&lt;p&gt;It would be great, however, if a property could be set in the bean config that would allow the referenced tables in the SQL to be qualified by a schema.  Projects often run into such requirements based on the conventions used by a DBA group.  In our particular case, we&apos;re using DB2 and the ACL tables are being created in a schema that is not the default schema.&lt;/p&gt;</description>
                <environment></environment>
        <key id="23185">SEC-925</key>
            <summary>BasicLookupStrategy - support for schema qualifier</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="tkelley353">Troy J. Kelley</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Jul 2008 05:43:27 +0000</created>
                <updated>Sat, 6 Feb 2016 06:38:07 +0000</updated>
                            <resolved>Wed, 30 Sep 2009 05:32:23 +0000</resolved>
                                    <version>2.0.3</version>
                                    <fixVersion>3.0.0 RC1</fixVersion>
                                    <component>ACLs</component>
                        <due></due>
                            <votes>4</votes>
                                    <watches>5</watches>
                                    <timeoriginalestimate seconds="0">0d</timeoriginalestimate>
                            <timeestimate seconds="0">0d</timeestimate>
                                        <comments>
                            <comment id="42949" author="magicduncan" created="Tue, 10 Mar 2009 00:59:10 +0000"  >&lt;p&gt;Could this be expanded to allow injecting the entire sql query? In some cases the names of the tables involved may not conform to an inhouse policy. Why not allow the entire sql query to be injected as happens in other areas of the security framework?&lt;/p&gt;</comment>
                            <comment id="43097" author="luke" created="Sun, 15 Mar 2009 21:23:57 +0000"  >&lt;p&gt;I guess this should be possible. It would require a select clause, the two where clauses and the &quot;order by&quot;.&lt;/p&gt;</comment>
                            <comment id="46396" author="luke" created="Sat, 29 Aug 2009 09:35:41 +0000"  >&lt;p&gt;All the beans which make use of the schema should be reviewed as part of this issue&lt;/p&gt;</comment>
                            <comment id="47079" author="luke" created="Wed, 30 Sep 2009 05:32:07 +0000"  >&lt;p&gt;I&apos;ve added setters for all the SQL which is used by the JDBC implementation, which should solve these issues.&lt;/p&gt;</comment>
                            <comment id="126947" author="issuemaster" created="Sat, 6 Feb 2016 06:38:07 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1178&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1178&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="27655">SEC-1224</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="28918">SEC-1308</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 10 Mar 2009 00:59:10 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19965</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03zmv:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23315</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19801</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>