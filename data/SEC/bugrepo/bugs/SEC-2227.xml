<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:34:55 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-2227/SEC-2227.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-2227] AbstractAuthenticationProcessingFilter (and similar filters) should match on exact URLs by default</title>
                <link>https://jira.spring.io/browse/SEC-2227</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;AbstractAuthenticationProcessingFilter handles the filterProcessUrl(j_spring_security_check) inconsistently for the root context compared to other contexts.&lt;/p&gt;

&lt;p&gt;See:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SpringSource/spring-security/blob/master/web/src/main/java/org/springframework/security/web/authentication/AbstractAuthenticationProcessingFilter.java#L235&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/SpringSource/spring-security/blob/master/web/src/main/java/org/springframework/security/web/authentication/AbstractAuthenticationProcessingFilter.java#L235&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Based on this code if you had a context path of &quot;/development&quot; ONLY &quot;/development/j_spring_security_check&quot; will match BUT if you have a context path of &quot;&quot; (ie root which is what most people deploy to production as) then &quot;/**/j_spring_security_check&quot; will work.&lt;/p&gt;

&lt;p&gt;This is an issue if you switch contexts and is IMHO consistent. I think safest solution is to make all contexts act like the root context (&quot;&quot;).&lt;/p&gt;</description>
                <environment></environment>
        <key id="49946">SEC-2227</key>
            <summary>AbstractAuthenticationProcessingFilter (and similar filters) should match on exact URLs by default</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="8">Complete</resolution>
                                        <assignee username="rwinch">Rob Winch</assignee>
                                    <reporter username="agentgt">Adam Gent</reporter>
                        <labels>
                            <label>passivity</label>
                    </labels>
                <created>Wed, 24 Jul 2013 12:27:17 +0000</created>
                <updated>Sat, 6 Feb 2016 06:22:01 +0000</updated>
                            <resolved>Thu, 4 Dec 2014 13:32:52 +0000</resolved>
                                    <version>3.2.0.M2</version>
                                    <fixVersion>4.0.0.RC1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="92063" author="rwinch" created="Wed, 24 Jul 2013 13:35:20 +0000"  >&lt;p&gt;I&apos;m not sure I understand the inconsistency. The method requiresAuthentication will consistently match an URL that ends with HttpServletRequest.getContextRoot() + filterProcessUrl. If the context root is &quot;&quot;, then it matches any URL ending in &quot;&quot; + &quot;/j_spring_security_check&quot;. If the the context root is &quot;/development&quot;, then it matches any URL ending with &quot;/development&quot; + &quot;/j_spring_security_check&quot;. As you pointed out, it does mean that there are a lot more URLs that are matched when the context root is &quot;&quot;, but this is consistently matching URLs that ends with &amp;lt;context-root&amp;gt; + filterProcessUrl.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is an issue if you switch contexts and is IMHO consistent.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When you are creating the URLs to submit your login form, you should be sure to create the URL dynamically with the context root so this should not be a problem. If you are using JSPs, this is done automatically for you when using the &amp;lt;c:url&amp;gt; and &amp;lt;spring:url&amp;gt; JSP tags.&lt;/p&gt;

&lt;p&gt;If you have special requirements you can override the requiresAuthentication method. Note that this is also being reworked for Spring Security 3.2 in &lt;a href=&quot;https://jira.spring.io/browse/SEC-2042&quot; title=&quot;AbstractAuthenticationProcessingFilter should support RequestMatcher&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-2042&quot;&gt;&lt;del&gt;SEC-2042&lt;/del&gt;&lt;/a&gt; so that you can inject a RequestMatcher. However, to remain passive the same functionality is preserved by default.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think safest solution is to make all contexts act like the root context (&quot;&quot;).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Do you feel the current behavior is &quot;unsafe&quot;? If so, why? I think the safest behavior is to leave it as since this is a passivity concern and poses security concerns to users. Additionally, there are easy ways to customize the behavior if it doesn&apos;t meet your needs. &lt;/p&gt;</comment>
                            <comment id="92065" author="agentgt" created="Wed, 24 Jul 2013 14:23:36 +0000"  >&lt;blockquote&gt;&lt;p&gt; Do you feel the current behavior is &quot;unsafe&quot;? If so, why? I think the safest behavior is to leave it as since this is a passivity concern and poses security concerns to users. Additionally, there are easy ways to customize the behavior if it doesn&apos;t meet your needs. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Safest in terms of backwards compatibility (ironically not because of security) to keep the root context working and non root context more flexible.&lt;/p&gt;

&lt;p&gt;Its still bizarre that by switching the context path to root (getContextPath() == &quot;&quot;) any URL that ends in &lt;p/&gt;
&lt;div id=&quot;syntaxplugin&quot; class=&quot;syntaxplugin&quot; style=&quot;border: 1px dashed #bbb; border-radius: 5px !important; overflow: auto; max-height: 30em;&quot;&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; width=&quot;100%&quot; style=&quot;font-size: 1em; line-height: 1.4em !important; font-weight: normal; font-style: normal; color: black;&quot;&gt;
		&lt;tbody &gt;
				&lt;tr id=&quot;syntaxplugin_code_and_gutter&quot;&gt;
						&lt;td  style=&quot; line-height: 1.4em !important; padding: 0em; vertical-align: top;&quot;&gt;
					&lt;pre style=&quot;font-size: 1em; margin: 0 10px;  margin-top: 10px;   margin-bottom: 10px;  width: auto; padding: 0;&quot;&gt;&lt;span style=&quot;color: black; font-family: &apos;Consolas&apos;, &apos;Bitstream Vera Sans Mono&apos;, &apos;Courier New&apos;, Courier, monospace !important;&quot;&gt;/j_spring_security_check&lt;/span&gt;&lt;/pre&gt;
			&lt;/td&gt;
		&lt;/tr&gt;
			&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p/&gt; will match the security filter. I honestly think that was not the intention and thus a bug. The intention I believe was an explicit match for root context.&lt;/p&gt;

&lt;p&gt;Think about it.&lt;/p&gt;

&lt;p&gt;Lets say I test an API REST endpoint of &lt;tt&gt;/development/api/j_spring_security_check&lt;/tt&gt; where j_spring_security_check happens to be a &lt;tt&gt;@PathParam&lt;/tt&gt; and the context path is: &lt;tt&gt;/development&lt;/tt&gt; which will work fine. But if I switch to the root context &lt;tt&gt;/api/j_spring_security_check&lt;/tt&gt; ... the security filter will intercept it.&lt;/p&gt;

&lt;p&gt;In fact I found this out by accident because I generally develop apps on the root context path and thus thought that by adding &quot;/j_spring_security_check&quot; on the end of any URL it would work but it does not when you switch the context path.&lt;/p&gt;

&lt;p&gt;If there is a reason for this the JavaDoc should at least note the difference.&lt;/p&gt;
</comment>
                            <comment id="92066" author="rwinch" created="Wed, 24 Jul 2013 14:46:13 +0000"  >&lt;p&gt;I see your point about the fact that Spring Security intercepting URLs that are unintentional. I think the same could be said about the other Filter&apos;s that use this logic (i.e. LogoutFilter).&lt;/p&gt;

&lt;p&gt;I may be misunderstanding your suggestion on how to resolve the issue (as I don&apos;t think we are on the same page). It sounds like you think it should always match on /**/&amp;lt;filterProcessUrl&amp;gt;. Perhaps that is because you were concerned with passivity. However, I think if we are to resolve this we should do an exact match rather than endsWith. Otherwise, Spring Security will continue to intercept URLs that were not intended for it. Since this is fairly significant change in behavior, we will need to wait till Spring Security 4 (which will be after 3.2 is finalized).&lt;/p&gt;</comment>
                            <comment id="110372" author="rwinch" created="Thu, 4 Dec 2014 13:32:52 +0000"  >&lt;p&gt;As part of &lt;a href=&quot;https://jira.spring.io/browse/SEC-2781&quot; title=&quot;Remove Deprecations&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-2781&quot;&gt;&lt;del&gt;SEC-2781&lt;/del&gt;&lt;/a&gt; the filters now use AntPathMatcher and thus match on the exact URL&lt;/p&gt;</comment>
                            <comment id="125214" author="issuemaster" created="Sat, 6 Feb 2016 06:22:01 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/2404&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/2404&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10151">
                    <name>Relate</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="62428">SEC-2882</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 24 Jul 2013 13:35:20 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36447</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i06gxr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>37782</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>36149</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>