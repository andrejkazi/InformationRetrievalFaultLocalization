<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:07:20 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-773/SEC-773.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-773] global-method-security fails with JPA</title>
                <link>https://jira.spring.io/browse/SEC-773</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Enabling global-method-security with JPA @PersistenceContext annotations will fail on startup.  This is with the recent 2.0.0 release cut. &lt;/p&gt;

&lt;p&gt;My userDetailsService is a custom implementation that requires access to an @Repository bean with an EntityManager.&lt;/p&gt;

&lt;p&gt;	&amp;lt;sec:http auto-config=&quot;true&quot;&amp;gt;&lt;br/&gt;
        &amp;lt;sec:intercept-url pattern=&quot;/assets/**&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;sec:intercept-url pattern=&quot;/login*&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;sec:intercept-url pattern=&quot;/logout*&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;sec:intercept-url pattern=&quot;/unsupported*&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot;/&amp;gt;        &lt;br/&gt;
        &amp;lt;sec:intercept-url pattern=&quot;/password-*&quot; access=&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;sec:intercept-url pattern=&quot;/**&quot; access=&quot;ROLE_USER,ROLE_ADMIN&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;        &amp;lt;sec:form-login login-page=&quot;/login.html&quot; default-target-url=&quot;/app.html&quot; authentication-failure-url=&quot;?login_error=1&quot;/&amp;gt;&lt;br/&gt;
        &amp;lt;sec:logout logout-success-url=&quot;/logout.html&quot;/&amp;gt;&lt;br/&gt;
    &amp;lt;/sec:http&amp;gt;&lt;/p&gt;


&lt;p&gt;	&amp;lt;sec:authentication-provider user-service-ref=&quot;userDetailsService&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;sec:password-encoder ref=&quot;passwordEncoder&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/sec:authentication-provider&amp;gt;&lt;/p&gt;


&lt;p&gt;	&amp;lt;sec:global-method-security secured-annotations=&quot;enabled&quot; /&amp;gt;&lt;/p&gt;


&lt;p&gt;The exception: &lt;/p&gt;


&lt;p&gt;2008-04-15 04:50:26,490 ERROR &lt;span class=&quot;error&quot;&gt;&amp;#91;main&amp;#93;&lt;/span&gt; org.springframework.web.context.ContextLoader: Context initialization failed &lt;br/&gt;
org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;_rememberMeServicesInjectionBeanPostProcessor&apos;: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;org.springframework.transaction.config.internalTransactionAdvisor&apos;: Cannot create inner bean &apos;(inner bean)&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.transaction.interceptor.TransactionInterceptor&amp;#93;&lt;/span&gt; while setting bean property &apos;transactionInterceptor&apos;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;(inner bean)&apos;: Cannot resolve reference to bean &apos;transactionManager&apos; while setting bean property &apos;transactionManager&apos;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;transactionManager&apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;epicenter-webapp-beans.xml&amp;#93;&lt;/span&gt;: Cannot resolve reference to bean &apos;entityManagerFactory&apos; while setting bean property &apos;entityManagerFactory&apos;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;ehCacheManager&apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;epicenter-repository-beans.xml&amp;#93;&lt;/span&gt;: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;_methodDefinitionSourceAdvisor&apos;: Cannot create inner bean &apos;(inner bean)&apos; of type &lt;span class=&quot;error&quot;&gt;&amp;#91;org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor&amp;#93;&lt;/span&gt; while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;(inner bean)&apos;: Cannot resolve reference to bean &apos;_authenticationManager&apos; while setting bean property &apos;authenticationManager&apos;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;_authenticationManager&apos;: Cannot resolve reference to bean &apos;org.springframework.security.providers.dao.DaoAuthenticationProvider#0&apos; while setting bean property &apos;providers&apos; with key &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;org.springframework.security.providers.dao.DaoAuthenticationProvider#0&apos;: Cannot resolve reference to bean &apos;userDetailsService&apos; while setting bean property &apos;userDetailsService&apos;; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;userDetailsService&apos;: Injection of resource fields failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;permissionRepository&apos;: Injection of persistence fields failed; nested exception is java.lang.NullPointerException&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:478)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:217)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:881)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:606)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:366)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255)&lt;br/&gt;
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)&lt;br/&gt;
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)&lt;/p&gt;</description>
                <environment></environment>
        <key id="21690">SEC-773</key>
            <summary>global-method-security fails with JPA</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="cyanogen">Steve Kondik</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Apr 2008 15:56:05 +0000</created>
                <updated>Sat, 6 Feb 2016 06:36:27 +0000</updated>
                            <resolved>Fri, 18 Apr 2008 09:54:25 +0000</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>2.0.1</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="34724" author="luke" created="Mon, 14 Apr 2008 22:06:33 +0000"  >&lt;p&gt;Could you post some more information please, on what Spring version you are using, what your app context file contains etc.&lt;/p&gt;</comment>
                            <comment id="34727" author="cyanogen" created="Tue, 15 Apr 2008 00:17:46 +0000"  >&lt;p&gt;It&apos;s a large app, so we have quite a few context files.  I&apos;m using Spring 2.5.3, with component-scan and annotation-config.   I am using JPA with @PersistenceContext annotations to obtain an EntityManager (which is the NPE is the above stack trace, I think).&lt;/p&gt;

&lt;p&gt;The config is working if I remove global-method-security, but it breaks with exceptions on startup as soon as that tag is added.&lt;/p&gt;

&lt;p&gt;I can try to make a test case that narrows down the issue. &lt;/p&gt;</comment>
                            <comment id="34803" author="luke" created="Wed, 16 Apr 2008 04:54:55 +0000"  >&lt;p&gt;I think I can see how this might happen now. It is a similar problem to &lt;a href=&quot;https://jira.spring.io/browse/SEC-750&quot; title=&quot;Support for JPA PersistenceContext annotation broken&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-750&quot;&gt;&lt;del&gt;SEC-750&lt;/del&gt;&lt;/a&gt;, in that the configuration causes an attempt to instantiate the UserDetailsService bean before it can be processed by the PersistenceAnnotationBeanPostProcessor. In this case the MethodDefinitionSourceAdvisor is the culprit, as it is instantiated while finding advice for the infrastructure beans themselves, and it ultimately references the AuthenticationManager.&lt;/p&gt;</comment>
                            <comment id="34851" author="cyanogen" created="Thu, 17 Apr 2008 14:00:22 +0000"  >&lt;p&gt;This is definitely it.. I was able to hack around the issue by using ApplicationContextAware and a getBean call to get a reference to my repository.  Unfortunately, I hit another snag-  the loadUserByUsername method also has an @Transactional annotation, but it seems to have no affect (no transaction is started when the method is called).  So, I used getBean to get my transactionManager and wrapped the code in a TransactionTemplate, and it&apos;s now working.    This is a horrible, horrible hack and makes me cry to look at &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/sad.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Could this all just be related to the transaction manager not being instantiated yet?&lt;/p&gt;


&lt;p&gt;Here&apos;s my original UserDetailsService, for reference.. Pretty basic stuff..&lt;/p&gt;

&lt;p&gt;public class EpiCenterUserDetailsService implements UserDetailsService {&lt;/p&gt;

&lt;p&gt;	@Resource&lt;br/&gt;
	private PermissionRepository permissionRepository;&lt;/p&gt;

&lt;p&gt;	/*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(non-Javadoc)&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@see org.acegisecurity.userdetails.UserDetailsService#loadUserByUsername(java.lang.String)&lt;br/&gt;
	 */&lt;br/&gt;
	@Transactional(readOnly = true)&lt;br/&gt;
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException, DataAccessException {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;		Validate.notNull(username, &quot;Username must be provided.&quot;);&lt;/p&gt;

&lt;p&gt;		final EpiCenterUser details;&lt;br/&gt;
		try {&lt;br/&gt;
			details = permissionRepository.getUserByUsername(username);&lt;br/&gt;
			if (details.getOrganizations() == null || details.getOrganizations().size() == 0) &lt;/p&gt;
{
				throw new UsernameNotFoundException(PermissionExceptionType.NO_VALID_ORGANIZATIONS + &quot;: &quot; + username);
			}
&lt;p&gt;			if (details.getVisibleRegion() == null) &lt;/p&gt;
{
				throw new UsernameNotFoundException(PermissionExceptionType.NO_VALID_REGIONS + &quot;: &quot; + username);
			}

&lt;p&gt;		} catch (PermissionException e) &lt;/p&gt;
{
			throw new UsernameNotFoundException(e.getType().toString() + &quot;: &quot; + username);
		}

&lt;p&gt;		return details;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;</comment>
                            <comment id="34852" author="cyanogen" created="Thu, 17 Apr 2008 14:05:10 +0000"  >&lt;p&gt;Also, here is the abomination of a workaround I ended up with..&lt;/p&gt;


&lt;p&gt;public class EpiCenterUserDetailsService implements UserDetailsService, ApplicationContextAware {&lt;/p&gt;

&lt;p&gt;	private ApplicationContext applicationContext;&lt;/p&gt;

&lt;p&gt;	private PermissionRepository permissionRepository;&lt;/p&gt;

&lt;p&gt;	private TransactionTemplate transactionTemplate;&lt;/p&gt;

&lt;p&gt;	/*&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;(non-Javadoc)&lt;/li&gt;
	&lt;li&gt;&lt;/li&gt;
	&lt;li&gt;@see org.acegisecurity.userdetails.UserDetailsService#loadUserByUsername(java.lang.String)&lt;br/&gt;
	 */&lt;br/&gt;
	public UserDetails loadUserByUsername(final String username) throws UsernameNotFoundException, DataAccessException {&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;		Validate.notNull(username, &quot;Username must be provided.&quot;);&lt;/p&gt;

&lt;p&gt;		synchronized(this) {&lt;br/&gt;
			if (permissionRepository == null) &lt;/p&gt;
{
				this.permissionRepository = (PermissionRepository) applicationContext.getBean(&quot;permissionRepository&quot;);
			}

&lt;p&gt;			if (transactionTemplate == null) &lt;/p&gt;
{
				this.transactionTemplate = new TransactionTemplate((PlatformTransactionManager) applicationContext.getBean(&quot;transactionManager&quot;));
			}
&lt;p&gt;		}&lt;/p&gt;

&lt;p&gt;		final EpiCenterUser details = (EpiCenterUser) transactionTemplate.execute(new TransactionCallback() {&lt;/p&gt;

&lt;p&gt;			public Object doInTransaction(TransactionStatus status) {&lt;/p&gt;

&lt;p&gt;				final EpiCenterUser user;&lt;br/&gt;
				try {&lt;br/&gt;
					user = permissionRepository.getUserByUsername(username);&lt;br/&gt;
					if (user.getOrganizations() == null || user.getOrganizations().size() == 0) &lt;/p&gt;
{
						throw new UsernameNotFoundException(PermissionExceptionType.NO_VALID_ORGANIZATIONS + &quot;: &quot;
								+ username);
					}
&lt;p&gt;					if (user.getVisibleRegion() == null) &lt;/p&gt;
{
						throw new UsernameNotFoundException(PermissionExceptionType.NO_VALID_REGIONS + &quot;: &quot; + username);
					}

&lt;p&gt;				} catch (PermissionException e) &lt;/p&gt;
{
					throw new UsernameNotFoundException(e.getType().toString() + &quot;: &quot; + username);
				}
&lt;p&gt;				return user;&lt;br/&gt;
			}&lt;br/&gt;
		});&lt;/p&gt;

&lt;p&gt;		return details;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException &lt;/p&gt;
{
		this.applicationContext = applicationContext;
	}

&lt;p&gt;}&lt;/p&gt;</comment>
                            <comment id="34866" author="luke" created="Fri, 18 Apr 2008 02:59:08 +0000"  >&lt;p&gt;I&apos;ve updated MethodDefinitionSourceAdvisor to decouple it from the advice bean (the MethodSecurityInterceptor) so that the latter isn&apos;t instantiated eagerly. This in turn prevents the UserDetailsService bean from being instantiated before it is processed to add the annotation-injected references. Could you try using a snapshot build or building yourself and see if the fix solves your problem?&lt;/p&gt;</comment>
                            <comment id="34867" author="cyanogen" created="Fri, 18 Apr 2008 03:30:48 +0000"  >&lt;p&gt;I just tried it against a fresh build from SVN and it&apos;s working great!  Thanks Luke!&lt;/p&gt;</comment>
                            <comment id="34902" author="luke" created="Fri, 18 Apr 2008 09:54:25 +0000"  >&lt;p&gt;Great. Glad you got it working.&lt;/p&gt;</comment>
                            <comment id="126783" author="issuemaster" created="Sat, 6 Feb 2016 06:36:27 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1032&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1032&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 14 Apr 2008 22:06:33 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12626</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i02uof:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>16679</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>15697</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>