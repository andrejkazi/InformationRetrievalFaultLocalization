<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:37:44 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-2836/SEC-2836.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-2836] When submit POST without CSRF Token, MissingCsrfTokenException are occurred</title>
                <link>https://jira.spring.io/browse/SEC-2836</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Behavior is follows:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;When exists server token in token store(HttpSession), InvalidCsrfTokenException occurred.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;When does not exists server token in token store(HttpSession), MissingCsrfTokenException occurred.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think that should be occur the InvalidCsrfTokenException at both cases.&lt;/p&gt;

&lt;p&gt;How do think ?&lt;/p&gt;</description>
                <environment></environment>
        <key id="62048">SEC-2836</key>
            <summary>When submit POST without CSRF Token, MissingCsrfTokenException are occurred</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="rwinch">Rob Winch</assignee>
                                    <reporter username="kazuki43zoo">Kazuki Shimizu</reporter>
                        <labels>
                    </labels>
                <created>Sat, 31 Jan 2015 01:48:58 +0000</created>
                <updated>Sat, 6 Feb 2016 06:41:37 +0000</updated>
                            <resolved>Sat, 6 Feb 2016 06:41:37 +0000</resolved>
                                    <version>3.2.5</version>
                    <version>4.0.0.RC1</version>
                                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="112131" author="kazuki43zoo" created="Sat, 31 Jan 2015 03:39:26 +0000"  >&lt;p&gt;Hi Rob.&lt;/p&gt;

&lt;p&gt;I modified this issue.&lt;/p&gt;</comment>
                            <comment id="112195" author="rwinch" created="Tue, 3 Feb 2015 08:37:50 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/secure/ViewProfile.jspa?name=kazuki43zoo&quot; class=&quot;user-hover&quot; rel=&quot;kazuki43zoo&quot;&gt;Kazuki Shimizu&lt;/a&gt; Can you elaborate why you think this? The reason they differ is to be able to identify the difference between a CSRF attack (InvalidCsrfTokenException) and the session expiring (MissingCsrfTokenException). If you want to handle them the same way they both extend from CsrfTokenException.&lt;/p&gt;</comment>
                            <comment id="112207" author="kazuki43zoo" created="Tue, 3 Feb 2015 10:09:51 +0000"  >&lt;p&gt;Thank you for comment.&lt;/p&gt;

&lt;p&gt;I want to handle follows:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;When has been submitted POST request without CSRF Token, i want to detect as CSRF attack error always.&lt;/li&gt;
	&lt;li&gt;When has been submitted POST request with CSRF Token, i want to detect as session timeout if request session id is invalid (= can&apos;t load the CSRF token from HttpSession).&lt;/li&gt;
	&lt;li&gt;Other cases is same behavior with current implementation.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I want to apply to the spring-security as default behavior ,if possible.&lt;br/&gt;
How do you think ?&lt;/p&gt;</comment>
                            <comment id="115118" author="rwinch" created="Thu, 30 Apr 2015 11:12:57 +0000"  >&lt;p&gt;MissingCsrfTokenException is intended to signal that no valid CSRF could be provided even if the client wanted to. This is true regardless of if the provided token is null or not.&lt;/p&gt;

&lt;p&gt;Perhaps a better way is for Spring Security to enable your use case by providing a getter method so you can access the tokens. This would allow you to place any custom logic in the AccessDeniedHandler implementation. What do you think?&lt;/p&gt;</comment>
                            <comment id="115132" author="kazuki43zoo" created="Thu, 30 Apr 2015 18:49:03 +0000"  >&lt;p&gt;Thanks you for a comment. I agree a your comment.&lt;/p&gt;

&lt;p&gt;But i have a one question.&lt;br/&gt;
If use the invalid session detection mechanism of session-management, the &lt;tt&gt;AccessDeniedHandler&lt;/tt&gt; is wrapped to the &lt;tt&gt;DelegatingAccessDeniedHandler&lt;/tt&gt; by configuration helper classes(&lt;tt&gt;CsrfConfiguer&lt;/tt&gt; or &lt;tt&gt;CsrfBeanDefinitionParser&lt;/tt&gt;).&lt;br/&gt;
In other words,the &lt;tt&gt;MissingCsrfTokenException&lt;/tt&gt; is handled by the &lt;tt&gt;InvalidSessionAccessDeniedHandler&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;We need configure the &lt;tt&gt;CsrfFilter&lt;/tt&gt; by manually without configuration helper classes, If customize the default behavior of the &lt;tt&gt;AccessDeniedHandler&lt;/tt&gt; ?&lt;/p&gt;</comment>
                            <comment id="125870" author="issuemaster" created="Sat, 6 Feb 2016 06:27:35 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/3062&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/3062&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 3 Feb 2015 08:37:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10684" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Pull Request URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[https://github.com/spring-projects/spring-security/pull/171]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0867z:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>9223372036854775807</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>