<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:15:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1700/SEC-1700.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1700] IOException in JaasAuthenticationProvider when loginConfig is a classpath resource in JBoss 5.1.0.GA</title>
                <link>https://jira.spring.io/browse/SEC-1700</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Here is a snippet of my security config file showing my declaration of the JaasAuthenticationProvider:&lt;/p&gt;

&lt;p&gt;&amp;lt;b:bean id=&quot;jaasAuthenticationProvider&quot; class=&quot;org.springframework.security.authentication.jaas.JaasAuthenticationProvider&quot;&amp;gt;&lt;br/&gt;
    &amp;lt;b:property name=&quot;loginConfig&quot; value=&quot;classpath:auth.conf&quot; /&amp;gt;&lt;br/&gt;
    ...&lt;br/&gt;
&amp;lt;/b:bean&amp;gt;&lt;/p&gt;

&lt;p&gt;Here is the exception thrown when starting up the application:&lt;/p&gt;

&lt;p&gt;org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;jaasAuthenticationProvider&apos; defined in class path resource &lt;span class=&quot;error&quot;&gt;&amp;#91;applicationContext-security.xml&amp;#93;&lt;/span&gt;: Invocation of init method failed; nested exception is java.io.IOException: File resolution not supported for nested resource: ZipEntryHandler@30251001&lt;span class=&quot;error&quot;&gt;&amp;#91;path=application.ear/application-main-4.5.0.jar/auth.conf context=file:/C:/tools/jboss-5.1.0.GA/server/default/deploy/ real=file:/C:/tools/jboss-5.1.0.GA/server/default/deploy/application.ear/application-main-4.5.0.jar/auth.conf&amp;#93;&lt;/span&gt;&lt;br/&gt;
        at org.springframework.beans.factory.access.SingletonBeanFactoryLocator.useBeanFactory(SingletonBeanFactoryLocator.java:389)&lt;/p&gt;

&lt;p&gt;Digging through the Spring code, I found that the exception is being thrown from the getFile() method of VfsUtils, which is called from VfsResource.getFile(). Apparently under JBoss, the classpath resource is resolved to a VfsResource. The first line of the method JaasAuthenticationProvider.convertLoginConfigToUrl() calls loginConfig.getFile().getAboslutePath(). Looking at the code in VfsUtils, it appears that the version of the JBoss VFS used with JBoss 5 doesn&apos;t support the getFile() method, and throws the IOException noted above.&lt;/p&gt;

&lt;p&gt;Even if it weren&apos;t for this problem, the code in JaasAuthenticationProvider.convertLoginConfigToUrl() appears to assume that the loginConfig is a file in the file system. Any other type of resource looks as though it would not work.&lt;/p&gt;

&lt;p&gt;To test this theory, I wrote a subclass of JaasAuthenticationProvider, and replaced the convertLoginConfigToUrl method with the following code:&lt;/p&gt;

&lt;p&gt;    private String convertLoginConfigToUrl() throws IOException &lt;/p&gt;
{
        return getLoginConfig().getURL().toString();
    }

&lt;p&gt;This solved my problem.&lt;/p&gt;</description>
                <environment></environment>
        <key id="36986">SEC-1700</key>
            <summary>IOException in JaasAuthenticationProvider when loginConfig is a classpath resource in JBoss 5.1.0.GA</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="mhowell">Morley Howell</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Mar 2011 13:01:30 +0000</created>
                <updated>Sat, 6 Feb 2016 06:16:49 +0000</updated>
                            <resolved>Wed, 20 Apr 2011 06:50:44 +0000</resolved>
                                    <version>3.0.5</version>
                                    <fixVersion>3.1.0.RC2</fixVersion>
                    <fixVersion>3.0.6</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="64640" author="luke" created="Wed, 23 Mar 2011 13:19:49 +0000"  >&lt;p&gt;If you check the file history, you&apos;ll see that it used to actually be implemented that way. However that causes other problems - see &lt;a href=&quot;https://jira.spring.io/browse/SEC-1239&quot; title=&quot;Special characters in JAAS config file location&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-1239&quot;&gt;&lt;del&gt;SEC-1239&lt;/del&gt;&lt;/a&gt;, which explains why it was changed to the current version.&lt;/p&gt;

&lt;p&gt;Given that there seem to also be problems with the behaviour of the underlying Sun classes, it doesn&apos;t seem possible to satisfy everyone&apos;s setup. Therefore, I&apos;d recommend that you override the configureJaas() method to work with your particular environment.&lt;/p&gt;</comment>
                            <comment id="64641" author="luke" created="Wed, 23 Mar 2011 13:22:17 +0000"  >&lt;p&gt;I guess as an alternative, we could always try to catch the IOException and failover to the original getURL() approach, but in the meantime, overriding configureJaas() is your best bet.&lt;/p&gt;</comment>
                            <comment id="64642" author="mhowell" created="Wed, 23 Mar 2011 13:29:42 +0000"  >&lt;p&gt;Yes, catching the exception and failing over could make sense. &lt;/p&gt;

&lt;p&gt;What about solving &lt;a href=&quot;https://jira.spring.io/browse/SEC-1239&quot; title=&quot;Special characters in JAAS config file location&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-1239&quot;&gt;&lt;del&gt;SEC-1239&lt;/del&gt;&lt;/a&gt; by decoding the URL returned by loginConfig.getURL().toString()? This would replace the %20 character with a space.&lt;/p&gt;</comment>
                            <comment id="64643" author="mhowell" created="Wed, 23 Mar 2011 13:35:07 +0000"  >&lt;p&gt;I.e:&lt;/p&gt;

&lt;p&gt;private String convertLoginConfigToUrl() throws IOException {&lt;br/&gt;
    return URLDecoder.decode(getLoginConfig().getURL().toString, &quot;UTF-8&quot;);&lt;br/&gt;
}&lt;/p&gt;</comment>
                            <comment id="65184" author="rwinch" created="Thu, 7 Apr 2011 21:14:10 +0000"  >&lt;p&gt;I realize you are using Spring Security 3.0.x, but as a note in Spring Security 3.1 you can use the DefaultJaasAuthenticationProvider which allows the configuration to be injected into it independent of a configuration file &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://static.springsource.org/spring-security/site/docs/3.1.x/reference/jaas.html#jaas-defaultjaasauthenticationprovider&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springsource.org/spring-security/site/docs/3.1.x/reference/jaas.html#jaas-defaultjaasauthenticationprovider&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="65495" author="luke" created="Wed, 20 Apr 2011 06:50:44 +0000"  >&lt;p&gt;The decoding option caused failures in existing tests. I&apos;ve implemented the approach whereby the exception is caught and resource.getURL() used in that case.&lt;/p&gt;</comment>
                            <comment id="124640" author="issuemaster" created="Sat, 6 Feb 2016 06:16:49 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1936&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1936&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 23 Mar 2011 13:19:49 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>12878</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03xyn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23044</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19534</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>