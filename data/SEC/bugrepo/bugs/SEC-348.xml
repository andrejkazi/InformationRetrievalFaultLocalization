<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:49:21 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-348/SEC-348.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-348] CASProvider tries to autenticate on every request</title>
                <link>https://jira.spring.io/browse/SEC-348</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;I am using CAS provider with a httpinvoker based swing client, that sends _cas_stateless as&lt;br/&gt;
username and a ST as password (obtained directly from CAS). In the server side I use &lt;br/&gt;
two filters: httpsessionintegrationFilter and basicProcessingFilter.&lt;/p&gt;

&lt;p&gt;In the first time the basicProcessingFilter validates the ticket against CAS, and the&lt;br/&gt;
sessionIntegration filter puts the autentication in the session, as desired.&lt;/p&gt;

&lt;p&gt;The next time, the client sends the same jsessionId, the httpsessionintegrationfilter &lt;br/&gt;
corretly extracts the context from the previously created session but basic processing&lt;br/&gt;
filter tries to autenticate again (validade CAS ST AGAIN).&lt;/p&gt;

&lt;p&gt;The line 138 of the class BasicProcessingFilter, it checks if it need to reauthenticate &lt;br/&gt;
by checking (among other things) if the existingAuth&#180;s username (obtained from session) is &lt;br/&gt;
equals to the username that came from the HTTP Header. If they are not equal, the filter tries&lt;br/&gt;
to reauthenticate. Since http header&#180;s username is always equals to &quot;&lt;em&gt;cas_stateless&lt;/em&gt;&quot; and&lt;br/&gt;
existingAuth&#180;s username is equals to the auhtenticated user, they are never the same, and the &lt;br/&gt;
basicprocessingfilter will try to validade the ticket again. The correct behaviour would be&lt;br/&gt;
to just revalidate the ticket when the session does not carry a valid authentication anymore.&lt;/p&gt;</description>
                <environment>IBM Websphere 6.0.2.11, CAS Server 3.0.4, Spring Framework 1.2.2</environment>
        <key id="14939">SEC-348</key>
            <summary>CASProvider tries to autenticate on every request</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="balex">Ben Alex</assignee>
                                    <reporter username="phlox">Gustavo Fernandes</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Sep 2006 05:23:12 +0000</created>
                <updated>Sat, 6 Feb 2016 06:31:48 +0000</updated>
                            <resolved>Thu, 28 Sep 2006 19:43:45 +0000</resolved>
                                    <version>1.0.1</version>
                    <version>1.0.2</version>
                                    <fixVersion>1.0.2</fixVersion>
                                    <component>CAS</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="19877" author="balex" created="Mon, 25 Sep 2006 14:39:39 +0000"  >&lt;p&gt;I suspect there is a misconfiguration or misunderstanding here. With remoting protocols in general, you don&apos;t get access to the HttpSession. This is because most remoting protocols cannot present the assigned jsessionid. We therefore recommend setting HttpSessionContextIntegrationFilter.allowSessionCreation = false (defaults to true). &lt;/p&gt;

&lt;p&gt;The CasAuthenticationProvider should not go back to the CAS server and re-present the same service ticket. It seems you have a misconfiguration, such as a missing StatelessTicketCache.&lt;/p&gt;

&lt;p&gt;More information can be found at &lt;a href=&quot;http://www.acegisecurity.org/docbook/acegi.html#cas-advanced&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.acegisecurity.org/docbook/acegi.html#cas-advanced&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I will reassign this issue to 1.0.3, as I do not believe there is a bug here.&lt;/p&gt;</comment>
                            <comment id="19896" author="phlox" created="Tue, 26 Sep 2006 12:14:39 +0000"  >&lt;p&gt;Spring Framework&apos;s HttpInvoker using Commons HttpClient as its request executor is perfectly capable of handlink cookies and therefore can present the same jsessionid or whatever.&lt;/p&gt;

&lt;p&gt;Relying on StatelessTicketCache is problematic when using a cluster: every JVM has its own cache. Even if using a distributed cache suchs as JBossCache, there are another problems suchs as replication and classloader issues.&lt;/p&gt;</comment>
                            <comment id="19972" author="balex" created="Thu, 28 Sep 2006 19:36:14 +0000"  >&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/browse/SEC-53&quot; title=&quot;Avoid reauthentication in Basic and Digest authentication processing filters&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-53&quot;&gt;&lt;del&gt;SEC-53&lt;/del&gt;&lt;/a&gt; was the original avoidance of reauthentication approach.&lt;/p&gt;</comment>
                            <comment id="19973" author="balex" created="Thu, 28 Sep 2006 19:43:45 +0000"  >&lt;p&gt;Modified BasicProcessingFilter so its logic that governs whether an authentication is reattempted will only consider username equality in the event the UsernamePasswordAuthenticationToken is provided. This will mean tokens such as CasAuthenticationToken (which CasAuthenticationProvider returns) will skip the reauthentication check if they are in the SecurityContextHolder and are marked as authenticated (which they will be). Code:&lt;/p&gt;

&lt;p&gt;            if ((existingAuth == null) &lt;/p&gt;
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; (existingAuth instanceof UsernamePasswordAuthenticationToken &amp;amp;&amp;amp; !existingAuth.getName().equals(username))&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt; !existingAuth.isAuthenticated()) 
{ /* reauthenticate * }&lt;/th&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;This should provide compatibility with using BasicProcessingFilter with the CAS identifier in a cluster that relies on HttpSession replication.&lt;/p&gt;

&lt;p&gt;Checked into SVN.&lt;/p&gt;

&lt;p&gt;Would you please confirm this works in your deployment environment as expected by adding a comment to this issue. Thanks.&lt;/p&gt;</comment>
                            <comment id="126314" author="issuemaster" created="Sat, 6 Feb 2016 06:31:48 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/609&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/609&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10011">
                    <name>Depends</name>
                                            <outwardlinks description="depends on">
                                        <issuelink>
            <issuekey id="12276">SEC-53</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 25 Sep 2006 14:39:39 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20489</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i01zl3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11642</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>11587</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>