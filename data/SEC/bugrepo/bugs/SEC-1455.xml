<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:48:12 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1455/SEC-1455.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1455] SecurityNamespaceHandler problems in OSGi environment, need to import spring-security-web packages</title>
                <link>https://jira.spring.io/browse/SEC-1455</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Imagine the following situation: there is an OSGi (in my case DM Server) environment, which contains some bundles. One of them uses the security namespace to protect some methods. This bundle has nothing to do with the web, this is the responsibility of the web bundle, which contains some web pages and expose some of the services from that bundle. . Within the web bundle, a filter-chain-map is used to protect some URLs.&lt;/p&gt;

&lt;p&gt;The manifest of the first bundle imports some Spring Security related packages, but not org.springframework.security.web, this package is only imported by the web bundle. The SecurityNamespaceHandler seems to be a singleton, and when the org.springframework.security.web.FilterChainProxy is not available on the classpath when the SecurityNamespaceHandler is loaded for the first time (in my case, when the first bundle is started), an exception will be thrown when another bundle is using the security:http and security:filter-chain-map elements.&lt;/p&gt;

&lt;p&gt;Workaround:&lt;br/&gt;
Import the org.springframework.security.web package in all bundles which do something with the security namespace.&lt;/p&gt;

&lt;p&gt;Stacktrace:&lt;br/&gt;
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: spring-security-web classes are not available. You need these to use &amp;lt;filter-chain-map&amp;gt;&lt;br/&gt;
Offending resource: URL &lt;span class=&quot;error&quot;&gt;&amp;#91;bundleentry://121.fwk7527493/WEB-INF/applicationContext.xml&amp;#93;&lt;/span&gt;&lt;br/&gt;
	at org.springframework.beans.factory.parsing.FailFastProblemReporter.fatal(FailFastProblemReporter.java:59)&lt;br/&gt;
	at org.springframework.beans.factory.parsing.ReaderContext.fatal(ReaderContext.java:68)&lt;br/&gt;
	at org.springframework.beans.factory.parsing.ReaderContext.fatal(ReaderContext.java:55)&lt;br/&gt;
	at org.springframework.security.config.SecurityNamespaceHandler.reportMissingWebClasses(SecurityNamespaceHandler.java:91)&lt;br/&gt;
	at org.springframework.security.config.SecurityNamespaceHandler.decorate(SecurityNamespaceHandler.java:72)&lt;br/&gt;
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.decorateIfRequired(BeanDefinitionParserDelegate.java:1372)&lt;br/&gt;
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.decorateBeanDefinitionIfRequired(BeanDefinitionParserDelegate.java:1359)&lt;br/&gt;
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.decorateBeanDefinitionIfRequired(BeanDefinitionParserDelegate.java:1339)&lt;br/&gt;
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.processBeanDefinition(DefaultBeanDefinitionDocumentReader.java:261)&lt;br/&gt;
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:154)&lt;br/&gt;
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:133)&lt;br/&gt;
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:93)&lt;br/&gt;
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)&lt;br/&gt;
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)&lt;br/&gt;
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)&lt;br/&gt;
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)&lt;br/&gt;
	at org.springframework.osgi.context.support.OsgiBundleXmlApplicationContext.loadBeanDefinitions(OsgiBundleXmlApplicationContext.java:164)&lt;br/&gt;
	at org.springframework.osgi.context.support.OsgiBundleXmlApplicationContext.loadBeanDefinitions(OsgiBundleXmlApplicationContext.java:136)&lt;br/&gt;
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:130)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:458)&lt;br/&gt;
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.access$800(AbstractDelegatedExecutionApplicationContext.java:69)&lt;br/&gt;
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext$3.run(AbstractDelegatedExecutionApplicationContext.java:269)&lt;br/&gt;
	at org.springframework.osgi.util.internal.PrivilegedUtils.executeWithCustomTCCL(PrivilegedUtils.java:85)&lt;br/&gt;
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.startRefresh(AbstractDelegatedExecutionApplicationContext.java:247)&lt;br/&gt;
	at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.stageOne(DependencyWaiterApplicationContextExecutor.java:214)&lt;br/&gt;
	at org.springframework.osgi.extender.internal.dependencies.startup.DependencyWaiterApplicationContextExecutor.refresh(DependencyWaiterApplicationContextExecutor.java:169)&lt;br/&gt;
	at org.springframework.osgi.context.support.AbstractDelegatedExecutionApplicationContext.refresh(AbstractDelegatedExecutionApplicationContext.java:175)&lt;br/&gt;
	at org.springframework.osgi.extender.internal.activator.ContextLoaderListener$2.run(ContextLoaderListener.java:716)&lt;br/&gt;
	at org.springframework.core.task.SyncTaskExecutor.execute(SyncTaskExecutor.java:48)&lt;br/&gt;
	at org.springframework.osgi.extender.internal.activator.ContextLoaderListener.maybeCreateApplicationContextFor(ContextLoaderListener.java:781)&lt;br/&gt;
	at org.springframework.osgi.extender.internal.activator.ContextLoaderListener$ContextBundleListener.handleEvent(ContextLoaderListener.java:229)&lt;br/&gt;
	at org.springframework.osgi.extender.internal.activator.ContextLoaderListener$BaseListener.bundleChanged(ContextLoaderListener.java:172)&lt;br/&gt;
	at org.eclipse.osgi.framework.internal.core.BundleContextImpl.dispatchEvent(BundleContextImpl.java:919)&lt;br/&gt;
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:227)&lt;br/&gt;
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:149)&lt;br/&gt;
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEventPrivileged(Framework.java:1350)&lt;br/&gt;
	at org.eclipse.osgi.framework.internal.core.Framework.publishBundleEvent(Framework.java:1301)&lt;br/&gt;
	at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:362)&lt;br/&gt;
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:280)&lt;br/&gt;
	at com.springsource.kernel.core.internal.StandardBundleStarter.start(StandardBundleStarter.java:68)&lt;br/&gt;
	at com.springsource.kernel.core.internal.StandardBundleStarter.start(StandardBundleStarter.java:56)&lt;br/&gt;
	at sun.reflect.GeneratedMethodAccessor72.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:307)&lt;br/&gt;
	at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.doInvoke(ServiceInvoker.java:58)&lt;br/&gt;
	at org.springframework.osgi.service.importer.support.internal.aop.ServiceInvoker.invoke(ServiceInvoker.java:62)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)&lt;br/&gt;
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)&lt;br/&gt;
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)&lt;br/&gt;
	at org.springframework.osgi.service.importer.support.LocalBundleContextAdvice.invoke(LocalBundleContextAdvice.java:59)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)&lt;br/&gt;
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.doProceed(DelegatingIntroductionInterceptor.java:131)&lt;br/&gt;
	at org.springframework.aop.support.DelegatingIntroductionInterceptor.invoke(DelegatingIntroductionInterceptor.java:119)&lt;br/&gt;
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)&lt;br/&gt;
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)&lt;br/&gt;
	at $Proxy60.start(Unknown Source)&lt;br/&gt;
	at com.springsource.kernel.install.artifact.internal.bundle.StandardBundleDriver.startBundle(StandardBundleDriver.java:177)&lt;br/&gt;
	at com.springsource.kernel.install.artifact.internal.bundle.StandardBundleDriver.start(StandardBundleDriver.java:158)&lt;br/&gt;
	at com.springsource.kernel.install.artifact.internal.bundle.StandardBundleInstallArtifact.doStart(StandardBundleInstallArtifact.java:262)&lt;br/&gt;
	at com.springsource.kernel.install.artifact.internal.AbstractInstallArtifact.driveDoStart(AbstractInstallArtifact.java:211)&lt;br/&gt;
	at com.springsource.kernel.install.artifact.internal.bundle.StandardBundleInstallArtifact.start(StandardBundleInstallArtifact.java:251)&lt;br/&gt;
	at com.springsource.kernel.deployer.core.internal.PipelinedApplicationDeployer.start(PipelinedApplicationDeployer.java:291)&lt;br/&gt;
	at com.springsource.kernel.deployer.core.internal.PipelinedApplicationDeployer.deploy(PipelinedApplicationDeployer.java:201)&lt;br/&gt;
	at com.springsource.kernel.deployer.management.StandardDeployer.deploy(StandardDeployer.java:62)&lt;br/&gt;
	at sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:167)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:96)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:33)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:208)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:120)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:262)&lt;br/&gt;
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:836)&lt;br/&gt;
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761)&lt;br/&gt;
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1426)&lt;br/&gt;
	at javax.management.remote.rmi.RMIConnectionImpl.access$200(RMIConnectionImpl.java:72)&lt;br/&gt;
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1264)&lt;br/&gt;
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1359)&lt;br/&gt;
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:788)&lt;br/&gt;
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)&lt;br/&gt;
	at sun.rmi.transport.Transport$1.run(Transport.java:159)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(Native Method)&lt;br/&gt;
	at sun.rmi.transport.Transport.serviceCall(Transport.java:155)&lt;br/&gt;
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)&lt;br/&gt;
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)&lt;br/&gt;
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)&lt;br/&gt;
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)&lt;br/&gt;
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;/p&gt;</description>
                <environment>DM Server 2.0.1, Spring Framework 3.0.0</environment>
        <key id="30909">SEC-1455</key>
            <summary>SecurityNamespaceHandler problems in OSGi environment, need to import spring-security-web packages</summary>
                <type id="7" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Defect</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="dvooster">Dani&#235;l van &apos;t Ooster</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Apr 2010 18:54:22 +0000</created>
                <updated>Sat, 6 Feb 2016 06:14:16 +0000</updated>
                            <resolved>Mon, 24 May 2010 23:39:42 +0000</resolved>
                                    <version>3.0.0</version>
                                    <fixVersion>3.0.3</fixVersion>
                    <fixVersion>3.1.0.M1</fixVersion>
                                    <component>Namespace</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="53459" author="luke" created="Tue, 4 May 2010 01:26:01 +0000"  >&lt;p&gt;Could you clarify the version you are using, please. You say SFW 3.0.0. Do you mean Spring Security? If so, could you check with the latest version?  If there are still could you possibly supply a test app which reproduces the issue?&lt;/p&gt;</comment>
                            <comment id="53640" author="dvooster" created="Fri, 7 May 2010 07:12:32 +0000"  >&lt;p&gt;Hi Luke,&lt;/p&gt;

&lt;p&gt;see the attached jars or eclipse projects.&lt;/p&gt;

&lt;p&gt;They are tested on dm server 2.0.1 with spring security 3.0.0. First start bundle1 which will create an instance of the security namespace handler. After that, start bundle2, it will give the problem as described in the case. Imho the problematic code is in the SecurityNamespaceHandler:&lt;/p&gt;

&lt;p&gt;        // Web-namespace stuff&lt;br/&gt;
        if (ClassUtils.isPresent(&quot;org.springframework.security.web.FilterChainProxy&quot;, ClassUtils.getDefaultClassLoader())) &lt;/p&gt;
{
            parsers.put(Elements.HTTP, new HttpSecurityBeanDefinitionParser());
            parsers.put(Elements.FILTER_INVOCATION_DEFINITION_SOURCE, new FilterInvocationSecurityMetadataSourceParser());
            parsers.put(Elements.FILTER_SECURITY_METADATA_SOURCE, new FilterInvocationSecurityMetadataSourceParser());
            filterChainMapBDD = new FilterChainMapBeanDefinitionDecorator();
            //registerBeanDefinitionDecorator(Elements.FILTER_CHAIN_MAP, new FilterChainMapBeanDefinitionDecorator());
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;Because this is a singleton and the org.springframework.security.web class it not imported in bundle1 (imaging bundle1 has nothing to do with the web), the handler cannot handle the http related elements.&lt;/p&gt;

&lt;p&gt;Grtz,&lt;br/&gt;
Dani&#235;l&lt;/p&gt;</comment>
                            <comment id="53802" author="cfrost" created="Fri, 14 May 2010 03:21:47 +0000"  >&lt;p&gt;Daniel,&lt;/p&gt;

&lt;p&gt;Luke has asked me to look at this as I work on dm Server and will have a little more insight from that point of view, I haven&apos;t managed to get to it today but I understand the issue. I need to recreate it and have a look myself, will do so next week. &lt;br/&gt;
I am tracking this from my own project with &lt;a href=&quot;https://issuetracker.springsource.com/browse/DMS-2551&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://issuetracker.springsource.com/browse/DMS-2551&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Chris&lt;/p&gt;</comment>
                            <comment id="53919" author="cfrost" created="Wed, 19 May 2010 04:20:01 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;ve looked in to this and tried deploying you test bundles with different headers. Your diagnoses is correct, because the SecurityNamespaceHandler is a singleton and the way it loads the web stuff if you want to use the web elements anywhere in an instance of the dm Server then the first bundle loaded that uses security must import the security web bundle, bundles after that don&apos;t matter. This should not impact what you need to have deployed as the security.web bundle is required by the security.config bundle anyway. This is far from ideal though, having to have this unintuitive import but from OSGi&apos;s point of view it is working as intended. This isn&apos;t even a dm Server issue, it&apos;s fundamental OSGi. A better solution to get around the singleton issue would be to make the code in the security.config bundle a little smarter about OSGi, as it imports the security.web bundle anyway I would want this &apos;if statement&apos; to always return true in an OSGi environment, i.e. be aware of the OSGi classloader system. &lt;/p&gt;

&lt;p&gt;Luke, please ping me if you want to discuss...&lt;/p&gt;

&lt;p&gt;Chris.&lt;/p&gt;

&lt;p&gt;P.S. Thanks for the well cut-down test bundles, made recreating it a breeze.&lt;/p&gt;</comment>
                            <comment id="53974" author="luke" created="Fri, 21 May 2010 01:38:15 +0000"  >&lt;p&gt;Apparently dmServer has some specialized internal behaviour related to classloading and namespace-handling (bundles which contain spring.schemas files), so this may account for why the web classes are not visible, even though they are declared in the config bundle. I have altered the code to attempt to load the parsers when they are required, rather than just when the init() method is called (which presumably only happens the first time the class is registered). This appears to solve the problem, though the second test bundle fails to deploy because it doesn&apos;t import the package that contains BasicAuthenticationFilter. Adding the import solves that problem too. &lt;/p&gt;</comment>
                            <comment id="54016" author="luke" created="Mon, 24 May 2010 23:39:42 +0000"  >&lt;p&gt;Resolving, as the above change seems to fix the problem.&lt;/p&gt;</comment>
                            <comment id="124373" author="issuemaster" created="Sat, 6 Feb 2016 06:14:16 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1695&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1695&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="16545" name="SEC-1455.zip" size="8922" author="dvooster" created="Fri, 7 May 2010 07:12:32 +0000"/>
                            <attachment id="16543" name="bundle1-1.0.0.jar" size="729" author="dvooster" created="Fri, 7 May 2010 07:12:32 +0000"/>
                            <attachment id="16544" name="bundle2-1.0.0.jar" size="835" author="dvooster" created="Fri, 7 May 2010 07:12:32 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Tue, 4 May 2010 01:26:01 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19510</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i031x3:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17853</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17254</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>