<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:53:19 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-272/SEC-272.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-272] Provide user group support</title>
                <link>https://jira.spring.io/browse/SEC-272</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;As discussed at The Spring Experience in December 2005, the community would like a way of grouping users together and assigning those groups roles. We&apos;ll add this feature - which will involve an extra table.&lt;/p&gt;</description>
                <environment></environment>
        <key id="14030">SEC-272</key>
            <summary>Provide user group support</summary>
                <type id="2" iconUrl="https://jira.spring.io/images/icons/issuetypes/newfeature.png">New Feature</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="balex">Ben Alex</reporter>
                        <labels>
                    </labels>
                <created>Mon, 22 May 2006 22:44:38 +0000</created>
                <updated>Sat, 6 Feb 2016 06:26:22 +0000</updated>
                            <resolved>Mon, 14 Jan 2008 07:57:54 +0000</resolved>
                                                    <fixVersion>2.0.0 M2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="25659" author="balex" created="Fri, 24 Aug 2007 01:18:59 +0000"  >&lt;p&gt;Luke, would you please take into consideration user management API changes when looking at this.&lt;/p&gt;</comment>
                            <comment id="25661" author="balex" created="Fri, 24 Aug 2007 01:24:06 +0000"  >&lt;p&gt;A simple implementation would modify the existing JDBC UserDetailsService to also consider tables as follows, perhaps being enabled by a boolean queryGroups property (also maybe have a queryUserAuthorities as well):&lt;/p&gt;

&lt;p&gt;GROUP&lt;br/&gt;
id&lt;br/&gt;
group_name&lt;/p&gt;

&lt;p&gt;GROUP_AUTHORITY&lt;br/&gt;
id&lt;br/&gt;
authority_name&lt;/p&gt;

&lt;p&gt;GROUP_MEMBER&lt;br/&gt;
id&lt;br/&gt;
username&lt;br/&gt;
group_id&lt;/p&gt;

&lt;p&gt;I would suggest another GrantedAuthority implementation called GroupGrantedAuthority which extends GrantedAuthorityImpl to now include the groupId and groupName, as well as the groupAuthority.&lt;/p&gt;</comment>
                            <comment id="28175" author="balex" created="Sat, 1 Dec 2007 19:04:10 +0000"  >&lt;p&gt;Luke, it would seem to me useful if we implemented group support before completing the user management API (&lt;a href=&quot;https://jira.spring.io/browse/SEC-513&quot; title=&quot;Create extended user management facility with UserDetailsManager interface.&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-513&quot;&gt;&lt;del&gt;SEC-513&lt;/del&gt;&lt;/a&gt;). Otherwise people will implement the UserDetailsManager in M1 but without the group-management methods that &lt;a href=&quot;https://jira.spring.io/browse/SEC-272&quot; title=&quot;Provide user group support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-272&quot;&gt;&lt;del&gt;SEC-272&lt;/del&gt;&lt;/a&gt; would seem to suggest are likely. Additionally, &lt;a href=&quot;https://jira.spring.io/browse/SEC-272&quot; title=&quot;Provide user group support&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-272&quot;&gt;&lt;del&gt;SEC-272&lt;/del&gt;&lt;/a&gt; has been a long-requested feature.&lt;/p&gt;</comment>
                            <comment id="28186" author="balex" created="Sun, 2 Dec 2007 10:16:32 +0000"  >&lt;p&gt;New interface GroupsManager to find all groups, find users in group, delete group, rename group, create create, add user to group, remove user from group. Implemented by JdbcUserDetailsManager.&lt;/p&gt;</comment>
                            <comment id="28506" author="david_syer" created="Sat, 15 Dec 2007 02:16:34 +0000"  >&lt;p&gt;After short discussion at TSE2007:&lt;/p&gt;

&lt;p&gt;I couldn&apos; find the JIRA that referred to the hierarchical role feature.  I think this is related, but not quite the same....&lt;/p&gt;

&lt;p&gt;Many projects do not use Spring Security for authorization because of the rigidity of role definitions.  What most people need is the ability to authorize based on a permission (to coin a phrase) but assign to each user (or group) a role.  A role is then a collection of permissions, which is the only practical way to do it if your application  needs to control access at quite a granular level - new permissions are common, new roles are not. &lt;/p&gt;

&lt;p&gt;Example: a user in the ADMIN role is allowed to do 160 things, including read-only access and read-write; a user in the GUEST role is allowed to do 6 things (all read only).  This is not really &quot;hierarchical&quot; in any strict sense, since there is no tree structure - the GUEST and ADMIN roles overlap in their permissions.&lt;/p&gt;

&lt;p&gt;I think the &quot;permission&quot; concept may be the wrong name in Spring Security because it corresponds to the lowest level thing that you authorize against - hence it is what we might call a &quot;role&quot; in Spring Security terms.  But from the users&apos; point of view a role is a higher level concept.&lt;/p&gt;</comment>
                            <comment id="29031" author="luke" created="Mon, 14 Jan 2008 07:57:54 +0000"  >&lt;p&gt;I&apos;ve added the GroupManager interface and support for it in JdbcUserDetailsManager&lt;/p&gt;</comment>
                            <comment id="125748" author="issuemaster" created="Sat, 6 Feb 2016 06:26:22 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/533&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/533&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="14582">SEC-325</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                                                <inwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="17416">SEC-513</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="15495">SEC-391</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 15 Dec 2007 02:16:34 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20561</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04ma7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>26984</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21633</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>