<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 09:48:09 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1272/SEC-1272.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1272] &lt;authentication-manager&gt; does not register default event handler DefaultAuthenticationEventPublisher</title>
                <link>https://jira.spring.io/browse/SEC-1272</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;When using the namespace configuration, creating an &amp;lt;authentication-manager&amp;gt; should automatically register a default event publisher. This allows applications to be notified about security events such as logins and login failures - for example I want these notifications so that I can write audit logs of failed logins. &lt;/p&gt;

&lt;p&gt;The Javadoc on org.springframework.security.authentication.ProviderManager states that such a default event publisher is automatically registered when using the namespace. It says: &lt;/p&gt;


&lt;p&gt;&quot;The standard implementation is DefaultAuthenticationEventPublisher which maps common exceptions to events (in the case of authentication failure) and publishes an AuthenticationSuccessEvent if authentication succeeds. If you are using the namespace then an instance of this bean will be used automatically by the &amp;lt;http&amp;gt; configuration, so you will receive events from the web part of your application automatically.&quot;&lt;/p&gt;


&lt;p&gt;However ProviderManager does not actually register a DefaultAuthenticationEventPublisher! It uses its private NullEventPublisher class that does nothing. That means that if you use the namespace configuration you don&apos;t actually receive the default events. The only way to receive those events is to manually create a ProviderManager bean and inject a DefaultAuthenticationEventPublisher bean into it.&lt;/p&gt;

&lt;p&gt;I think that:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;authentication-manager&amp;gt; should use DefaultAuthenticationEventPublisher instead of NullEventPublisher&lt;/li&gt;
	&lt;li&gt;&amp;lt;authentication-manager&amp;gt; should allow the AuthenticationEventPublisher on ProviderManager to be overridden if desired&lt;/li&gt;
&lt;/ul&gt;

</description>
                <environment></environment>
        <key id="28387">SEC-1272</key>
            <summary>&lt;authentication-manager&gt; does not register default event handler DefaultAuthenticationEventPublisher</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="gutch">Charles Gutjahr</reporter>
                        <labels>
                    </labels>
                <created>Sun, 18 Oct 2009 16:06:23 +0000</created>
                <updated>Sat, 6 Feb 2016 06:12:24 +0000</updated>
                            <resolved>Mon, 16 Nov 2009 23:04:52 +0000</resolved>
                                    <version>3.0.0 RC1</version>
                                    <fixVersion>3.0.0.RC2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="47553" author="gutch" created="Sun, 18 Oct 2009 16:11:28 +0000"  >&lt;p&gt;Here is a workaround for this problem &amp;#8211; just in case anyone else needs to generate login events, here is what I did to get them working:&lt;/p&gt;


&lt;p&gt;This is what I had to start with, a namespace configuration that doesn&apos;t generate events:&lt;/p&gt;

&lt;p&gt;	&amp;lt;security:authentication-manager&amp;gt;&lt;br/&gt;
		&amp;lt;security:authentication-provider user-service-ref=&quot;userDetailsService&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/security:authentication-manager&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;userDetailsService&quot; class=&quot;example.security.UserDetailsService&quot; /&amp;gt;&lt;/p&gt;


&lt;p&gt;I changed it to this manual bean configuration, which does generate events just fine:&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;org.springframework.security.authenticationManager&quot; class=&quot;org.springframework.security.authentication.ProviderManager&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;providers&quot;&amp;gt;&lt;br/&gt;
			&amp;lt;list&amp;gt;&lt;br/&gt;
	 		&amp;lt;ref bean=&quot;daoAuthenticationProvider&quot;/&amp;gt;&lt;br/&gt;
			&amp;lt;/list&amp;gt;&lt;br/&gt;
		&amp;lt;/property&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;authenticationEventPublisher&quot; ref=&quot;defaultAuthenticationEventPublisher&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;daoAuthenticationProvider&quot; class=&quot;org.springframework.security.authentication.dao.DaoAuthenticationProvider&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;userDetailsService&quot; ref=&quot;userDetailsService&quot;/&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;userDetailsService&quot; class=&quot;example.security.UserDetailsService&quot; /&amp;gt;&lt;br/&gt;
	&amp;lt;bean id=&quot;defaultAuthenticationEventPublisher&quot; class=&quot;org.springframework.security.authentication.DefaultAuthenticationEventPublisher&quot; /&amp;gt;&lt;/p&gt;

</comment>
                            <comment id="48337" author="luke" created="Mon, 16 Nov 2009 23:04:52 +0000"  >&lt;p&gt;I&apos;ve updated the namespace code to register a DefaultAuthenticationEventPublisher and set it on the registered ProviderManager.&lt;/p&gt;</comment>
                            <comment id="49729" author="electricmonk" created="Mon, 28 Dec 2009 20:24:10 +0000"  >&lt;p&gt;For some reason, when using the Remember-Me services, the eventPublisher property still references the NullEventPublisher.&lt;/p&gt;

&lt;p&gt;I&apos;m using RC2&lt;/p&gt;

&lt;p&gt;This is my http configuration:&lt;/p&gt;

&lt;p&gt;	&amp;lt;security:http entry-point-ref=&quot;loginFormEntryPoint&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;security:intercept-url pattern=&quot;/entity/**&quot; access=&quot;ROLE_USER&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;security:logout logout-url=&quot;/logout&quot; logout-success-url=&quot;/login&quot; /&amp;gt;&lt;br/&gt;
		&amp;lt;security:remember-me services-ref=&quot;rememberMeServices&quot; key=&quot;SpringSecurityRememberMe&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;security:custom-filter ref=&quot;businessEntityAuthorizationFilter&quot; position=&quot;LAST&quot;/&amp;gt;&lt;br/&gt;
	&amp;lt;/security:http&amp;gt;&lt;/p&gt;

&lt;p&gt;	&amp;lt;bean id=&quot;rememberMeServices&quot; class=&quot;org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices&quot;&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;alwaysRemember&quot; value=&quot;true&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;key&quot; value=&quot;SpringSecurityRememberMe&quot;/&amp;gt;&lt;br/&gt;
		&amp;lt;property name=&quot;userDetailsService&quot; ref=&quot;userService&quot;/&amp;gt;&lt;br/&gt;
	&amp;lt;/bean&amp;gt;&lt;/p&gt;
</comment>
                            <comment id="51863" author="timomeinen" created="Tue, 9 Mar 2010 17:57:14 +0000"  >&lt;p&gt;Hi Luke,&lt;/p&gt;

&lt;p&gt;could you give an example how to register another EventPublisher using namespace declaration? In the .xsd file, I can&apos;t find an attribute called event or publisher or something similar. Thank you. Timo&lt;/p&gt;</comment>
                            <comment id="124174" author="issuemaster" created="Sat, 6 Feb 2016 06:12:24 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1522&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1522&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="28637">SEC-1289</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 16 Nov 2009 23:04:52 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19668</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03tlr:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22338</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18809</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>