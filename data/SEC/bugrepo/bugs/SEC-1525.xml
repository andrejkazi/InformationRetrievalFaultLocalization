<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:57:07 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1525/SEC-1525.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1525] PostAuthorize being evaluated even on exception</title>
                <link>https://jira.spring.io/browse/SEC-1525</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Given the code :&lt;br/&gt;
@PostAuthorize(hasPermission(returnObject.field, &apos;admin&apos;))&lt;br/&gt;
MyObject someMethod();&lt;/p&gt;

&lt;p&gt;when someMethod throws an exception, the PostAuthorize processing throws an exception :&lt;br/&gt;
org.springframework.expression.spel.SpelEvaluation Exception: EL1007Epos 27): Field or property &apos;field&apos; cannot be found on null&lt;/p&gt;

&lt;p&gt;IMHO, the PostAuthorize should not be evaluated when returnObject is null (exactly like PostFilter)&lt;br/&gt;
This is possible if we consider that PostAuthorize is a nonsense if you do not use the returnObject inside the expression (and IMHO this consideration is true because if you do not use returnObject in the expression then you could have use PreAuthorize...)&lt;/p&gt;

&lt;p&gt;By code inspection, the problem comes from ExpressionBasedPostInvocationAdvice :&lt;/p&gt;

&lt;p&gt;when you do : &lt;br/&gt;
if (postAuthorize != null &amp;amp;&amp;amp; !ExpressionUtils.evaluateAsBoolean(postAuthorize, ctx)) &lt;/p&gt;

&lt;p&gt;you should have done : &lt;br/&gt;
if (postAuthorize != null &amp;amp;&amp;amp; returnedObject != null &amp;amp;&amp;amp; !ExpressionUtils.evaluateAsBoolean(postAuthorize, ctx)) &lt;/p&gt;

&lt;p&gt;BTW, this is exactly what you do in PostFilter 10 lines above...&lt;/p&gt;</description>
                <environment></environment>
        <key id="32442">SEC-1525</key>
            <summary>PostAuthorize being evaluated even on exception</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="cblin">christophe blin</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Jul 2010 20:37:12 +0000</created>
                <updated>Sat, 6 Feb 2016 06:14:58 +0000</updated>
                            <resolved>Tue, 14 Dec 2010 09:11:38 +0000</resolved>
                                    <version>3.0.3</version>
                                    <fixVersion>3.1.0.M2</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>2</watches>
                                                                <comments>
                            <comment id="56146" author="luke" created="Thu, 29 Jul 2010 02:23:37 +0000"  >&lt;p&gt;I disagree. I don&apos;t think it&apos;s &quot;a nonsense&quot; to consider the possibility that there may be use cases where the authorization decision can only realistically be made after the method invocation has taken place, and which may not require the use of the returned object (or even have one).&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what the best option is for dealing gracefully with an exception condition, though. It might make more sense if the MethodSecurityInterceptor didn&apos;t actually perform any after-invocation checks at all.&lt;/p&gt;</comment>
                            <comment id="57306" author="cblin" created="Mon, 30 Aug 2010 08:22:59 +0000"  >&lt;p&gt;At the moment, from the moment the annotated method may throw an exception (i.e &amp;gt; 90% of the cases), the current implementation requires that the programmer writes PostAuthorize like this :&lt;br/&gt;
@PostAuthorize(&quot;returnObject == null or returnObject.res.libraryId == #libraryId&quot;)&lt;/p&gt;

&lt;p&gt;If he does not, a NPE will be thrown when the exception occurs...&lt;/p&gt;

&lt;p&gt;Please, provide a use case where the user can not rewrite its PostAuthorize with a PreAuthorize when the returnObject is not used so that I am comfortable with the idea that I do not write all this &quot;returnObject == null or &quot; for nothing&lt;/p&gt;
</comment>
                            <comment id="57308" author="cblin" created="Mon, 30 Aug 2010 08:31:34 +0000"  >&lt;p&gt;and please, if the implementation stays the same, update the documentation to mention that returnObject is null when the method has thrown an exception so that programmers know they have this test to add to each and every PostAuthorize of their app&lt;/p&gt;</comment>
                            <comment id="61461" author="luke" created="Tue, 14 Dec 2010 09:11:38 +0000"  >&lt;p&gt;See &lt;a href=&quot;https://jira.spring.io/browse/SEC-1635&quot; title=&quot;AfterInvocationManager should not be invoked if an exception occurs&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-1635&quot;&gt;&lt;del&gt;SEC-1635&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="124449" author="issuemaster" created="Sat, 6 Feb 2016 06:14:58 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1766&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1766&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10130">
                    <name>Supersede</name>
                                                                <inwardlinks description="is superseded by">
                                        <issuelink>
            <issuekey id="35246">SEC-1635</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 29 Jul 2010 02:23:37 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19452</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03tvb:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22381</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18851</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10120" key="com.atlassian.jira.plugin.system.customfieldtypes:url">
                        <customfieldname>Reference URL</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue><![CDATA[http://forum.springsource.org/showthread.php?t=86428]]></customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>