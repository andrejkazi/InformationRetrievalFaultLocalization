<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:50:26 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-642/SEC-642.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-642] More Abstract ACL to handle Class/Field level security</title>
                <link>https://jira.spring.io/browse/SEC-642</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;It seems the ACL design is targeted at providing security for object instances, which is great if you need very detailed authorization. However, it seems that the API limits one from applying the ACL concept to other Use Cases. Namely the following:&lt;/p&gt;

&lt;p&gt;   1. ACL at the Class level (Authorization requirements not based on context or instances)&lt;br/&gt;
   2. ACL at the field level&lt;br/&gt;
   3. Others?&lt;/p&gt;

&lt;p&gt;This would require the ACL class to be a bit more abstract. Instead of referring to an ObjectIdentity, maybe it could be a more generic &quot;ResourceIdentity&quot; with a name and a simple identity.  Additionally, it seems a ResourceIdentityRetrievalStrategy would be added, which ObjectIdentityRetrievalStrategyImpl would implement.&lt;/p&gt;

&lt;p&gt;Class and Field level security tags for the font-end might look like:&lt;/p&gt;

&lt;p&gt;&amp;lt;security:accesscontrollist domainClass=&quot;$&lt;/p&gt;
{contact}
&lt;p&gt;&quot; hasPermission=&quot;8,16&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;security:accesscontrollist domainClassField=&quot;$&lt;/p&gt;
{contact.homePhone}
&lt;p&gt;&quot; hasPermission=&quot;8,16&quot;&amp;gt;&lt;/p&gt;

&lt;p&gt;This would be equally useful with the back-end ACL features as well.  One more example might be to use Class-level security when a mixed collection of Objects sharing a common supertype are returned.  A post collection filter could be used to remove those Classes for which the user is not authorized to view.&lt;/p&gt;

&lt;p&gt;It&apos;s quite possible that I&apos;m missing the alternative approach to addressing my Use Cases. In order to use the ACL concept for my Use Cases, I would need to supplant the existing ACL class (since extending it would not be very clean) with my own which is quite a bit of work and a little risky.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;/p&gt;

&lt;p&gt;-Troy&lt;/p&gt;</description>
                <environment>N/A</environment>
        <key id="20216">SEC-642</key>
            <summary>More Abstract ACL to handle Class/Field level security</summary>
                <type id="4" iconUrl="https://jira.spring.io/images/icons/issuetypes/improvement.png">Improvement</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="2">Won&apos;t Fix</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="tkelley353">Troy J. Kelley</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Jan 2008 02:47:14 +0000</created>
                <updated>Sat, 6 Feb 2016 06:34:46 +0000</updated>
                            <resolved>Wed, 12 Jan 2011 07:52:38 +0000</resolved>
                                    <version>2.0.0 M1</version>
                                    <fixVersion>3.1.0.RC1</fixVersion>
                                    <component>ACLs</component>
                        <due></due>
                            <votes>5</votes>
                                    <watches>9</watches>
                                                                <comments>
                            <comment id="58502" author="relphie" created="Mon, 27 Sep 2010 10:31:26 +0000"  >&lt;p&gt;I think both of your listed use cases can be solved using the existing ACL class - it just takes a slight shift in determining what ObjectId you are securing:&lt;/p&gt;

&lt;p&gt;1) ACL at the class level - I would approach this use case as wanting to secure an ObjectId with type = &quot;java.lang.Class&quot; and id = &quot;DomainClass&quot;.&lt;/p&gt;

&lt;p&gt;2) ACL at the field level - I would approach this use case as wanting to secure an ObjectId with type = &quot;java.lang..reflect.Method&quot; and id = &quot;DomainClass.method&quot;.  Alternatively, you could use an ObjectId with type = &quot;DomainClass&quot; and id = &quot;method&quot;, but this might get confusing if you were also storing ACLs for instances of the same domain class.&lt;/p&gt;</comment>
                            <comment id="62284" author="luke" created="Wed, 12 Jan 2011 07:52:38 +0000"  >&lt;p&gt;Closing as &quot;won&apos;t fix&quot;. As mentioned above, it is probably possible to achieve greater flexibility within the existing classes without introducing the suggested additional strategy, particularly since the &quot;type&quot; property of ObjectIdentifier is no longer constrained to be a Class object, but is now a String. So the data to which the permissions apply is only defined by an abstract label and does not have to be an instance of a specific class. &lt;/p&gt;</comment>
                            <comment id="126640" author="issuemaster" created="Sat, 6 Feb 2016 06:34:46 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/903&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/903&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10000">
                    <name>Duplicate</name>
                                                                <inwardlinks description="is duplicated by">
                                        <issuelink>
            <issuekey id="22172">SEC-839</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Mon, 27 Sep 2010 10:31:26 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20219</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03ukn:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22495</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>3630</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>