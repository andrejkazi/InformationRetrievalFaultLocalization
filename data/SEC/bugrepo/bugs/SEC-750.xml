<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:03:47 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-750/SEC-750.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-750] Support for JPA PersistenceContext annotation broken</title>
                <link>https://jira.spring.io/browse/SEC-750</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;When Spring Security is used, JPA annotations auto-wiring is not supported : the @PersistenceContext EntityManager is not injected in the DAO layer, which results in NullPointerExceptions&lt;/p&gt;
</description>
                <environment>With Spring 2.5.2</environment>
        <key id="21472">SEC-750</key>
            <summary>Support for JPA PersistenceContext annotation broken</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="2" iconUrl="https://jira.spring.io/images/icons/priorities/critical.png">Critical</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="xcoulon">Xavier</reporter>
                        <labels>
                    </labels>
                <created>Fri, 4 Apr 2008 03:52:28 +0000</created>
                <updated>Sat, 6 Feb 2016 06:36:12 +0000</updated>
                            <resolved>Tue, 8 Apr 2008 04:23:46 +0000</resolved>
                                    <version>2.0.0 RC1</version>
                                    <fixVersion>2.0.0</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>1</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="34356" author="xcoulon" created="Fri, 4 Apr 2008 04:17:37 +0000"  >&lt;p&gt;In the given Eclipse project (requires maven plugin to run, or maven command line), the META-INF/applicationContext.xml contains spring-security configuration along with JPA beans. &lt;/p&gt;

&lt;p&gt;When the 2 spring-security beans are commented, the 2 JUnit tests pass. &lt;br/&gt;
When the beans are included in the configuration, the JUnit test fail.&lt;/p&gt;</comment>
                            <comment id="34404" author="luke" created="Sat, 5 Apr 2008 22:14:57 +0000"  >&lt;p&gt;This appears to be a more general problem (not specific to JPA) where our HttpSecurityConfigPostProcessor causes beans to be instantiated too early and they aren&apos;t processed by individual BeanPostProcessors (in this case PersisteceAnnotationBeanPostProcessor). I&apos;ve added a much simpler test to HttpSecurityBeanDefinitionParserTests and refactored the post processing substantially to make it much more conservative about instantiating beans.&lt;/p&gt;</comment>
                            <comment id="34429" author="luke" created="Sun, 6 Apr 2008 22:00:33 +0000"  >&lt;p&gt;The changes mentioned above should have fixed the problem. Could you check with a recent snapshot please?&lt;/p&gt;</comment>
                            <comment id="34487" author="luke" created="Tue, 8 Apr 2008 04:23:46 +0000"  >&lt;p&gt;Closing, as the test now passes.&lt;/p&gt;</comment>
                            <comment id="34642" author="cherro" created="Sun, 13 Apr 2008 06:08:46 +0000"  >&lt;p&gt;I&apos;m still seeing this problem with snapshot 20080211.160105-53. &lt;/p&gt;

&lt;p&gt;I downloaded:&lt;br/&gt;
spring-security-core-2.0-20080211.160105-53.jar&lt;br/&gt;
spring-security-core-tiger-2.0-20080211.160105-53.jar&lt;br/&gt;
... and I&apos;m using Spring 2.5.3&lt;/p&gt;

&lt;p&gt;In my case, my UserDAO implements UserDetailsService directly. Watching the log output, I notice that the UserDAO gets created early along with the security infrastructure, without any EntityManager getting injected. Later on, other DAOs get created and I see the PersistenceContext injection happening.&lt;/p&gt;

&lt;p&gt;The only difference I can see between my setup and Xavier&apos;s attachment is that:&lt;br/&gt;
1. My UserDAO directly implements UserDetailsService. Xavier&apos;s example uses an @Repository annotated DAO as an auto-wired property of his UserDetailsService implementation. &lt;br/&gt;
2. I&apos;m not explicitly using auto-wiring.&lt;br/&gt;
3. My config is split across multiple files, imported into a main applicationConfig.xml. Don&apos;t think this matters.&lt;br/&gt;
4. I&apos;m using Spring 2.5.3&lt;/p&gt;

&lt;p&gt;It&apos;ll take me a while to put together a sanitized example of my setup - sorry!&lt;/p&gt;</comment>
                            <comment id="34652" author="cherro" created="Sun, 13 Apr 2008 10:01:05 +0000"  >&lt;p&gt;I just tried Xavier&apos;s SpringSecurityJPAWithAnnotations.zip test, with snapshots:&lt;br/&gt;
spring-security-core-2.0-20080211.160105-53.jar &lt;br/&gt;
spring-security-core-tiger-2.0-20080211.160105-53.jar &lt;br/&gt;
... and I&apos;m using Spring 2.5.3.&lt;/p&gt;

&lt;p&gt;It still fails as Xavier described: a NPE when the DAO attempts to use its injected EntityManager. Commenting out the security config allows the test to pass.&lt;/p&gt;</comment>
                            <comment id="34653" author="cherro" created="Sun, 13 Apr 2008 10:18:43 +0000"  >&lt;p&gt;Please disregard my previous comments. I totally missed the timestamp in the snapshot filenames - these weren&apos;t the most recent. Unfortunately, the spring-security-core/tiger snapshots available at &lt;a href=&quot;http://s3browse.com/explore/maven.springframework.org/snapshot/org/springframework/security/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://s3browse.com/explore/maven.springframework.org/snapshot/org/springframework/security/&lt;/a&gt;&lt;br/&gt;
... stop at 2008-04-01.&lt;br/&gt;
I&apos;m not a maven user, is there another way to get more recent snapshots without doing a build myself?&lt;/p&gt;</comment>
                            <comment id="34666" author="luke" created="Sun, 13 Apr 2008 22:05:45 +0000"  >&lt;p&gt;I&apos;m not sure why snapshots have stopped there, but thanks for pointing it out. I&apos;ll check with the build manager. Building yourself is actuall pretty straightforward and often the easiest option for keeping up with things:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://static.springframework.org/spring-security/site/building.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://static.springframework.org/spring-security/site/building.html&lt;/a&gt;&lt;/p&gt;</comment>
                            <comment id="34671" author="cherro" created="Mon, 14 Apr 2008 00:56:52 +0000"  >&lt;p&gt;Thanks Luke - I was able to checkout and build the trunk. With this fresh snapshot, Xavier&apos;s test passes, and my issue is resolved. &lt;br/&gt;
Sorry for the noise!&lt;/p&gt;</comment>
                            <comment id="34782" author="luke" created="Tue, 15 Apr 2008 22:27:51 +0000"  >&lt;p&gt;No Problem. Nice to have extra confirmation that the problem is fixed. The snapshot builds should be back online now too.&lt;/p&gt;</comment>
                            <comment id="36465" author="trungsi" created="Thu, 5 Jun 2008 00:45:09 +0000"  >&lt;p&gt;I always have this bug with spring 2.5.4 and spring-security 2.0.1&lt;/p&gt;</comment>
                            <comment id="36467" author="luke" created="Thu, 5 Jun 2008 01:02:10 +0000"  >&lt;p&gt;Maybe you are thinking of this &lt;a href=&quot;https://jira.spring.io/browse/SEC-826&quot; title=&quot;Support for JPA PersistenceContext annotation broken&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-826&quot;&gt;&lt;del&gt;SEC-826&lt;/del&gt;&lt;/a&gt;? Both are fixed against the latest release (2.0.2) so we will need a test case which reproduces the problem if you think there is still an issue.&lt;/p&gt;</comment>
                            <comment id="126758" author="issuemaster" created="Sat, 6 Feb 2016 06:36:12 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/994&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/994&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="13894" name="SpringSecurityJPAWithAnnotations.zip" size="13214" author="xcoulon" created="Fri, 4 Apr 2008 04:17:37 +0000"/>
                            <attachment id="13895" name="mylyn-context.zip" size="6979" author="luke" created="Sat, 5 Apr 2008 11:05:07 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Sat, 5 Apr 2008 22:14:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20121</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i04nif:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>27183</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>21832</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>