<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:42:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-832/SEC-832.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-832] NamingEnumeration.hasMore fails on MS AD with PartialResultException</title>
                <link>https://jira.spring.io/browse/SEC-832</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;Implementation of org.springframework.security.ldap.searchForSingleEntry doesn&apos;t work with MS AD.&lt;br/&gt;
When calling results.hasMore with base=&quot;&quot; a PartialResultException is thrown. The call hasMore should&lt;br/&gt;
be replaced with hasMoreElements() and whole method should look like this:&lt;/p&gt;

&lt;p&gt;public DirContextOperations searchForSingleEntry(final String base, final String filter, final Object[] params) {&lt;/p&gt;

&lt;p&gt;        return (DirContextOperations) executeReadOnly(new ContextExecutor() {&lt;br/&gt;
			        public Object executeWithContext(DirContext ctx)&lt;br/&gt;
			            throws NamingException {&lt;/p&gt;

&lt;p&gt;			            try {&lt;br/&gt;
							NamingEnumeration results = ctx.search(base, filter, params, searchControls);&lt;/p&gt;

&lt;p&gt;							if (!results.hasMoreElements())&lt;br/&gt;
								throw new IncorrectResultSizeDataAccessException(1, 0);&lt;/p&gt;

&lt;p&gt;							SearchResult searchResult = (SearchResult) results.next();&lt;br/&gt;
							logger.debug(&quot;searchResult=&quot;+searchResult);&lt;/p&gt;

&lt;p&gt;							if (results.hasMoreElements()) &lt;/p&gt;
{
								if (!searchResult.equals((SearchResult) results.next()))
									throw new IncorrectResultSizeDataAccessException(1, 2);
							}

&lt;p&gt;							// Work out the DN of the matched entry&lt;br/&gt;
							StringBuffer dn = new StringBuffer(searchResult.getName());&lt;/p&gt;

&lt;p&gt;							if (base.length() &amp;gt; 0) &lt;/p&gt;
{
							    dn.append(&quot;,&quot;);
							    dn.append(base);
							}

&lt;p&gt;							return new DirContextAdapter(searchResult.getAttributes(),&lt;br/&gt;
							        new DistinguishedName(dn.toString()), new DistinguishedName(ctx.getNameInNamespace()));&lt;br/&gt;
						}&lt;br/&gt;
			            catch (Exception e) &lt;/p&gt;
{
			            	NamingException ne = new NamingException(e.getMessage());
							ne.setStackTrace(e.getStackTrace());
							throw ne;
						}
&lt;p&gt;			        }&lt;br/&gt;
			    });		       &lt;br/&gt;
    }&lt;/p&gt;</description>
                <environment>MS AD @ Windows 2003 R2</environment>
        <key id="22124">SEC-832</key>
            <summary>NamingEnumeration.hasMore fails on MS AD with PartialResultException</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="jakub007">Jakub Jozwicki</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 May 2008 01:24:19 +0000</created>
                <updated>Sat, 6 Feb 2016 06:37:09 +0000</updated>
                            <resolved>Mon, 25 Aug 2008 23:54:13 +0000</resolved>
                                    <version>2.0.1</version>
                                    <fixVersion>2.0.4</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="35655" author="jakub007" created="Wed, 14 May 2008 01:26:11 +0000"  >&lt;p&gt;org.springframework.security.ldap.SpringSecurityLdapTemplate&lt;/p&gt;</comment>
                            <comment id="35669" author="luke" created="Wed, 14 May 2008 09:35:50 +0000"  >&lt;p&gt;This sounds like the recurring issue related to AD and LDAP referrals. Could you explain the reasoning behind your proposed changes? i.e. hasMore() can potentially raise an exception (as it does here with AD) - can we justify hiding those exceptions in all possible cases that might arise. Also why have you inserted the try/catch(Exception ) block?&lt;/p&gt;</comment>
                            <comment id="35670" author="luke" created="Wed, 14 May 2008 09:36:51 +0000"  >&lt;p&gt;Also, have you tried the various workarounds you can find for issues with AD and referrals?&lt;/p&gt;</comment>
                            <comment id="35687" author="jakub007" created="Wed, 14 May 2008 19:50:10 +0000"  >&lt;p&gt;The workaround is to use &apos;ou=container,dc=example,dc=com&apos; instead of &apos;dc=example,dc=com&apos;.&lt;br/&gt;
However I&apos;ve got many organizational units at the root level and I need to search inside all of them.&lt;br/&gt;
PartialResultException is thrown on accessing domainDNS objects located at the root level.&lt;br/&gt;
This happens always with W2K3 acting as a ActiveDirectory and DNS server.&lt;br/&gt;
The only workaround in this case is to use hasMoreElements instead of hasMore.&lt;/p&gt;

&lt;p&gt;Catching and ignoring PartialResultException causes following results.hasMore() and results.next()&lt;br/&gt;
to return object already returned in previous step:&lt;/p&gt;

&lt;p&gt;hasMore, next() -&amp;gt; object1&lt;br/&gt;
hasMore -&amp;gt; exception, ignored&lt;br/&gt;
hasMore -&amp;gt; object1&lt;/p&gt;

&lt;p&gt;It is also a solution provided that the code checking for single result looks like this:&lt;/p&gt;

&lt;p&gt;if (results.hasMoreElements()) {&lt;br/&gt;
if (!searchResult.equals((SearchResult) results.next()))&lt;br/&gt;
throw new IncorrectResultSizeDataAccessException(1, 2);&lt;br/&gt;
} &lt;/p&gt;

&lt;p&gt;However we might not detect here real incorrect results.&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;br/&gt;
Maybe there could be some boolean switch for different behavior on AD&lt;br/&gt;
(to use hasMoreElements instead of hasMore).&lt;/p&gt;

&lt;p&gt;I&apos;m also not happy with making hacks because of badly written MS software.&lt;/p&gt;

&lt;p&gt;The try/catch was for debugging purposes and can be deleted.&lt;/p&gt;</comment>
                            <comment id="35698" author="luke" created="Thu, 15 May 2008 00:46:55 +0000"  >&lt;p&gt;There are other workarounds depending on what the exact error is. Setting java.naming.referral=follow is one, editing the /etc/hosts file on the machine:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mail-archive.com/cas@tp.its.yale.edu/msg00797.html&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.mail-archive.com/cas@tp.its.yale.edu/msg00797.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Spring&apos;s LDAP template already has a flag which allows PartialResultExceptions to be ignored, so we might be able to make use of that.&lt;/p&gt;</comment>
                            <comment id="35752" author="jakub007" created="Thu, 15 May 2008 20:23:45 +0000"  >&lt;p&gt;With -Djava.naming.referral=follow I still have exception on&lt;br/&gt;
&apos;ldap://192.168.1.191:389/dc=ForestDnsZones,dc=pld1,dc=net&apos; domainDNS objectClass:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;28812&amp;#93;&lt;/span&gt; authentication.LoggerListener Authentication event AuthenticationFailure&lt;br/&gt;
ServiceExceptionEvent: Jozwicki, Jakub; details: org.springframework.security.ui&lt;br/&gt;
.WebAuthenticationDetails@fffc7f0c: RemoteIpAddress: 127.0.0.1; SessionId: ybom8&lt;br/&gt;
a44alkv; exception: Unprocessed Continuation Reference(s); nested exception is j&lt;br/&gt;
avax.naming.PartialResultException: Unprocessed Continuation Reference(s); remai&lt;br/&gt;
ning name &apos;dc=pld1,dc=net&apos;; nested exception is org.springframework.ldap.Partial&lt;br/&gt;
ResultException: Unprocessed Continuation Reference(s); nested exception is java&lt;br/&gt;
x.naming.PartialResultException: Unprocessed Continuation Reference(s); remainin&lt;br/&gt;
g name &apos;dc=pld1,dc=net&apos;&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;br/&gt;
Also code in ldap.core.LdapTemplate is wrong, because while(results.hasMore())&lt;br/&gt;
is inside try/catch(PartialResultException), and exception breaks while loop,&lt;br/&gt;
but it shouldn&apos;t. The try/catch(PartialResultException) should be located inside while loop.&lt;br/&gt;
Like this:&lt;/p&gt;

&lt;p&gt;public void search(SearchExecutor se, NameClassPairCallbackHandler handler,&lt;br/&gt;
            DirContextProcessor processor) {&lt;br/&gt;
        DirContext ctx = contextSource.getReadOnlyContext();&lt;/p&gt;

&lt;p&gt;        NamingEnumeration results = null;&lt;br/&gt;
        RuntimeException ex = null;&lt;br/&gt;
        try {&lt;br/&gt;
            processor.preProcess(ctx);&lt;br/&gt;
            results = se.executeSearch(ctx);&lt;br/&gt;
            log.debug(&quot;results are=&quot;+results);&lt;/p&gt;

&lt;p&gt;            while(true) {&lt;br/&gt;
            	try &lt;/p&gt;
{
            		if (!results.hasMore())
            			break;
            		NameClassPair result = (NameClassPair) results.next();
        			log.debug(&quot;result=&quot;+result);
        			log.debug(&quot;result=&quot;+result.getName()+&quot;, &quot;+result.getClassName());
        			handler.handleNameClassPair(result);
            	}
&lt;p&gt;            	catch (PartialResultException e) {&lt;br/&gt;
                     if (ignorePartialResultException) &lt;/p&gt;
{
                         log.debug(&quot;PartialResultException encountered and ignored: [&quot;+e.getResolvedName()+&quot;] &quot;+ e.getRemainingName());
                     }
&lt;p&gt; else &lt;/p&gt;
{
                         ex = LdapUtils.convertLdapException(e);
                     }
&lt;p&gt;                     continue;&lt;br/&gt;
            	}&lt;br/&gt;
            	catch (NullPointerException npe) &lt;/p&gt;
{
            		break;
            	}
&lt;p&gt;            }            &lt;br/&gt;
        }&lt;br/&gt;
        catch (NameNotFoundException e) &lt;/p&gt;
{
            // The base context was not found, which basically means
            // that the search did not return any results. Just clean up and
            // exit.
            // Note that this may present problems if a DirContextProcessor was
            // supplied - there&apos;s no guarantee that the postProcess() operation
            // will go well after a NamingException has been thrown. It is
            // however quite possible that information will be available for
            // retrieval either way.
        	e.printStackTrace();
        }
&lt;p&gt;        catch (javax.naming.NamingException e) &lt;/p&gt;
{
            ex = LdapUtils.convertLdapException(e);
        }
&lt;p&gt;        finally {&lt;br/&gt;
            try &lt;/p&gt;
{
                processor.postProcess(ctx);
            }
&lt;p&gt; catch (javax.naming.NamingException e) {&lt;br/&gt;
                if (ex == null) &lt;/p&gt;
{
                    ex = LdapUtils.convertLdapException(e);
                }
&lt;p&gt; else &lt;/p&gt;
{
                    // We already had an exception from above and should ignore
                    // this one.
                    log.debug(&quot;Ignoring Exception from postProcess, &quot;
                            + &quot;main exception thrown instead&quot;, e);
                }
&lt;p&gt;            }&lt;br/&gt;
            closeContextAndNamingEnumeration(ctx, results);&lt;br/&gt;
            // If we got an exception it should be thrown.&lt;br/&gt;
            if (ex != null) &lt;/p&gt;
{
                throw ex;
            }
&lt;p&gt;        }&lt;br/&gt;
    }&lt;/p&gt;</comment>
                            <comment id="35845" author="luke" created="Mon, 19 May 2008 20:54:50 +0000"  >&lt;p&gt;Please raise any issues with Spring LDAP in that project or in the Spring LDAP forum.&lt;/p&gt;</comment>
                            <comment id="39218" author="luke" created="Mon, 25 Aug 2008 23:54:13 +0000"  >&lt;p&gt;I&apos;ve modified the searchForSingleEntry method to ignore a PartialResultException if thrown, in the same way that LdapTemplate does if ignorePartialResultException is set to true. Given your comment in issue &lt;a href=&quot;https://jira.spring.io/browse/LDAP-113&quot; title=&quot;Incorrect handling of PartialResultException in ldap.core.LdapTemplate &quot; class=&quot;issue-link&quot; data-issue-key=&quot;LDAP-113&quot;&gt;&lt;del&gt;LDAP-113&lt;/del&gt;&lt;/a&gt; about there being no further results after such an exception (and my own tests) I&apos;ve used the existing pattern rather than catching the exception within the while loop, ignoring NPE etc.&lt;/p&gt;</comment>
                            <comment id="126848" author="issuemaster" created="Sat, 6 Feb 2016 06:37:09 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1093&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1093&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Related</name>
                                            <outwardlinks description="is related to">
                                        <issuelink>
            <issuekey id="22533">LDAP-113</issuekey>
        </issuelink>
                            </outwardlinks>
                                                        </issuelinktype>
                    </issuelinks>
                <attachments>
                            <attachment id="14598" name="mylyn-context.zip" size="4561" author="luke" created="Mon, 25 Aug 2008 23:48:20 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 14 May 2008 09:35:50 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>20047</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03f0f:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19974</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>17635</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>