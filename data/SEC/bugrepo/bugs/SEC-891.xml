<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 11:40:27 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-891/SEC-891.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-891] jsp:include parameters are missing</title>
                <link>https://jira.spring.io/browse/SEC-891</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;&lt;a href=&quot;https://jira.spring.io/browse/SEC-363&quot; title=&quot;jsp:include parameters are missing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-363&quot;&gt;&lt;del&gt;SEC-363&lt;/del&gt;&lt;/a&gt; was closed as Won&apos;t Fix, claiming that &quot;The use of JSP parameter passing from one page to another via includes appears very non-MVC&quot;.&lt;/p&gt;

&lt;p&gt;The use of &amp;lt;jsp:include&amp;gt; to insert common elements into web pages (similar to what Tiles is all about), has nothing to do with MVC, but is purely a technique used in the JSP View layer.  It is perfectly valid to add arguments to such an include, so the common presentation elements can be adjusted for the web page using it.&lt;/p&gt;

&lt;p&gt;It is definitely not the responsibility of the controller to supply such arguments, as was indicated in &lt;a href=&quot;https://jira.spring.io/browse/SEC-363&quot; title=&quot;jsp:include parameters are missing&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-363&quot;&gt;&lt;del&gt;SEC-363&lt;/del&gt;&lt;/a&gt;, since the arguments are there for presentation control only, i.e. purely View oriented.&lt;/p&gt;

&lt;p&gt;As for the request to &quot;advise if Tomcat or a JSR states that JSP-populated parameters should be persisted&quot;, then definitely not.  The parameters did not come from the client, but are hard-coded (or filled by an expression) in the JSP page.  Only the original request from the client should be presisted, as is currently done.&lt;/p&gt;

&lt;p&gt;Ok, now that I&apos;ve stated my case for re-opening this issue, here is the problem as far as I can see:&lt;/p&gt;

&lt;p&gt;The HttpServletRequest that is passed to the controller is a chain of wrappers around the actual Request object.  With Spring Security, the wrapper chain sent to the Controller is:&lt;br/&gt;
   SavedRequestAwareWrapper   (Spring Security wrapper for providing saved request after login)&lt;br/&gt;
   -&amp;gt; RequestFacade   (Wrapper hiding the actual request, to protect the actual values)&lt;br/&gt;
   -&amp;gt; Request   (Object with original request values from client, e.g. &quot;/myrequest.do?id=5&quot;)&lt;/p&gt;

&lt;p&gt;When the Spring Controller invokes the JSP View to render the output, a &quot;forward&quot; to the JSP is executed.  The forward operation wrappers the original request in order to handle the new request, but it inject the wrapper AFTER the Spring wrapper:&lt;br/&gt;
   SavedRequestAwareWrapper   (Spring Security wrapper for providing saved request after login)&lt;br/&gt;
   -&amp;gt; ApplicationHttpRequest   (Wrapper overriding/extending the original request with the new request, e.g. &quot;/WEB-INF/jsp/myview.jsp&quot;)&lt;br/&gt;
   -&amp;gt; RequestFacade   (Wrapper hiding the actual request, to protect the actual values)&lt;br/&gt;
   -&amp;gt; Request   (Object with original request values from client, e.g. &quot;/myrequest.do?id=5&quot;)&lt;/p&gt;

&lt;p&gt;When the JSP page includes another page, the request gets wrapped again:&lt;br/&gt;
   SavedRequestAwareWrapper   (Spring Security wrapper for providing saved request after login)&lt;br/&gt;
   -&amp;gt; ApplicationHttpRequest   (&quot;/WEB-INF/jsp/myinclude.jspf?myparm=myvalue&quot;)&lt;br/&gt;
   -&amp;gt; ApplicationHttpRequest   (&quot;/WEB-INF/jsp/myview.jsp&quot;)&lt;br/&gt;
   -&amp;gt; RequestFacade&lt;br/&gt;
   -&amp;gt; Request   (&quot;/myrequest.do?id=5&quot;)&lt;/p&gt;

&lt;p&gt;When the JSP then asks for a parameter, the parameters are essentially collected bottom-up and merged together, so that wrapper parameters override original parameters.&lt;/p&gt;

&lt;p&gt;The problem is that Tomcat injects the forward/include wrappers AFTER the SavedRequestAwareWrapper, so when SavedRequestAwareWrapper replaces the login request parameters with the original saved request parameters, the forward/include wrappers are not asked for parameters.&lt;/p&gt;

&lt;p&gt;I see two possible solutions:&lt;/p&gt;

&lt;p&gt;1) A quick fix is for SavedRequestAwareWrapper to request the underlying parameters and merge in the saved request parameters, instead of only returning the saved request parameters.  Disadvantage is that login parameters will be present, and that the forward/include parameters may be overridden by original request parameters.  Workaround is to ensure that forward/include parameters as well as login parameters don&apos;t clash with any other parameters.  Advantage is that it is easy to implement.&lt;/p&gt;

&lt;p&gt;2) The full fix is to understand how Tomcat&apos;s ApplicationDispatcher.wrapRequest(...) method works.  It injects the forward/include wrappers after any wrapper that extends ServletRequestWrapper, but will correctly wrap any class that implements HttpServletRequest.  The solution is to not extend ServletRequestWrapper, but to implement HttpServletRequest directly, which should cause the wrapper chain to look like this:&lt;br/&gt;
   ApplicationHttpRequest   (&quot;/WEB-INF/jsp/myinclude.jspf?myparm=myvalue&quot;)&lt;br/&gt;
   -&amp;gt; ApplicationHttpRequest   (&quot;/WEB-INF/jsp/myview.jsp&quot;)&lt;br/&gt;
   -&amp;gt; SavedRequestAwareWrapper   (Spring Security wrapper for providing saved request after login)&lt;br/&gt;
   -&amp;gt; RequestFacade&lt;br/&gt;
   -&amp;gt; Request   (&quot;/myrequest.do?id=5&quot;)&lt;/p&gt;</description>
                <environment>Tomcat 6.0.16, Java 6, Spring 2.5.3</environment>
        <key id="22664">SEC-891</key>
            <summary>jsp:include parameters are missing</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://jira.spring.io/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="3">Duplicate</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="ahagerup">Andreas Hagerup</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Jun 2008 07:25:32 +0000</created>
                <updated>Sat, 6 Feb 2016 06:37:45 +0000</updated>
                            <resolved>Sun, 22 Jun 2008 23:24:05 +0000</resolved>
                                    <version>2.0.0</version>
                                    <fixVersion>2.0.3</fixVersion>
                                    <component>Core</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>3</watches>
                                                                <comments>
                            <comment id="36818" author="luke" created="Wed, 18 Jun 2008 22:49:57 +0000"  >&lt;p&gt;You&apos;ve raised this against 2.0.0 - have you tried a later version? It sounds like a duplicate of &lt;a href=&quot;https://jira.spring.io/browse/SEC-857&quot; title=&quot;Changes in SEC-830 does not merge properties of saved request and incoming request in Object[] getParameterValues() invocation&quot; class=&quot;issue-link&quot; data-issue-key=&quot;SEC-857&quot;&gt;&lt;del&gt;SEC-857&lt;/del&gt;&lt;/a&gt;. Please review that and other related issues and confirm whether you still have an issue with the latest snapshot version.&lt;/p&gt;</comment>
                            <comment id="36965" author="luke" created="Sun, 22 Jun 2008 23:24:05 +0000"  >&lt;p&gt;Closing as a duplicate, as jsp:include appears to work with parameters from my testing. &lt;/p&gt;</comment>
                            <comment id="126910" author="issuemaster" created="Sat, 6 Feb 2016 06:37:45 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1146&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1146&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Wed, 18 Jun 2008 22:49:57 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>10515</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03zsf:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>23340</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19826</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>