<!-- 
RSS generated by JIRA (6.4.11#64026-sha1:78f6ec473a3f058bd5d6c30e9319c7ab376bdb9c) at Fri Dec 23 10:15:10 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://jira.spring.io/si/jira.issueviews:issue-xml/SEC-1543/SEC-1543.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>Spring JIRA</title>
    <link>https://jira.spring.io</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.4.11</version>
        <build-number>64026</build-number>
        <build-date>25-08-2015</build-date>
    </build-info>

<item>
            <title>[SEC-1543] IpAddressMatcher does not act like expected</title>
                <link>https://jira.spring.io/browse/SEC-1543</link>
                <project id="10040" key="SEC">Spring Security</project>
                    <description>&lt;p&gt;When configuring a constraint like &quot;hasIpAddress(&apos;X.X.X.X&apos;)&quot;, Spring-Security usees the class org.springframework.security.web.util.IpAddressMatcher to compare the given IP with the IP from the request.&lt;/p&gt;

&lt;p&gt;Unfortunatly, IpAddressMatcher throws an IllegalArgumentException, when the given IP and the IP from the request are of different type. This happens for example, when the request uses an IPv6-Address, but the Address used in &quot;hasIpAddress()&quot; was an IPv4-Address. The unexpected outcome of this behavior is, that any IPv6-request matching the resource will only see an error-page!&lt;/p&gt;

&lt;p&gt;I suggest, that IpAddressMatcher responds with &quot;false&quot;, if the given Address and the Address in the Request are of different type. That would solve this issue and is also the behavior I would expect: two IP-Addresses of different type are simply always not equal!&lt;/p&gt;</description>
                <environment></environment>
        <key id="32802">SEC-1543</key>
            <summary>IpAddressMatcher does not act like expected</summary>
                <type id="1" iconUrl="https://jira.spring.io/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="4" iconUrl="https://jira.spring.io/images/icons/priorities/minor.png">Minor</priority>
                        <status id="6" iconUrl="https://jira.spring.io/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="luke">Luke Taylor</assignee>
                                    <reporter username="kai.moritz">Kai Moritz</reporter>
                        <labels>
                    </labels>
                <created>Wed, 18 Aug 2010 07:13:48 +0000</created>
                <updated>Sat, 6 Feb 2016 06:15:10 +0000</updated>
                            <resolved>Wed, 27 Oct 2010 09:45:54 +0000</resolved>
                                    <version>3.0.2</version>
                                    <fixVersion>3.0.4</fixVersion>
                    <fixVersion>3.1.0.M2</fixVersion>
                                    <component>Web</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="56889" author="luke" created="Thu, 19 Aug 2010 16:18:13 +0000"  >&lt;p&gt;The original intention was that it is considered an error to configure a security contraint with an IPv4 address on an IPv6 network. Do you actually have a dual-IP setup where you are using both simultaneously? If that&apos;s the case then your suggestion would make sense to me, but if it is a choice between one or the other then I would say it is a configuration issue which should be flagged up as such. (Disclaimer - I don&apos;t know a great deal about Ipv6 networks &lt;img class=&quot;emoticon&quot; src=&quot;https://jira.spring.io/images/icons/emoticons/smile.png&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).&lt;/p&gt;</comment>
                            <comment id="56891" author="kai.moritz" created="Thu, 19 Aug 2010 17:15:32 +0000"  >&lt;p&gt;I also do not know much about IPv6. &lt;br/&gt;
But I think, nowadays it is a very common situation, &lt;br/&gt;
that both protocol versions are enabled in parallel &amp;#8211; especially, if you are on your local &lt;br/&gt;
test-machine (all linux distrbutions I am working with&lt;br/&gt;
now act like this)!&lt;/p&gt;

&lt;p&gt;But clearly you are right: making it configurable would&lt;br/&gt;
be the best solution! Nevertheless, if you take tjat path,&lt;br/&gt;
I would suggest, that throwing the error would not become&lt;br/&gt;
the default behaviour.&lt;/p&gt;</comment>
                            <comment id="58674" author="ronz" created="Thu, 30 Sep 2010 08:28:56 +0000"  >&lt;p&gt;I will second Kai&apos;s suggestion that this isn&apos;t an exceptional situation. Part of the issue is that, as Kai suggested, that it is a common now. Both protocols are active in OS X by default, and localhost on OS X comes through as ::1 and not 127.0.0.1. &lt;/p&gt;

&lt;p&gt;More importantly, this behavior dictates that I can only deploy an application on IPv4 or 6 networks based on my choice of hasIpAddress filters, without maintaining multiple versions of said filters. That shouldn&apos;t be making the choice for me.&lt;/p&gt;

&lt;p&gt;(Our situation is like that - our production systems (linux) only have 4 active, but test machines (OS X) have both, and due to the aforementioned localhost issue...)&lt;/p&gt;

&lt;p&gt;There is a workaround - add  -Djava.net.preferIPv4Stack=true to thejvm  startup, and everything comes through ipv4. But I feel the proper solution is as Kai suggested - that a protocol mismatch return false and not an exception.&lt;/p&gt;
</comment>
                            <comment id="60024" author="luke" created="Wed, 27 Oct 2010 09:45:54 +0000"  >&lt;p&gt;I think this makes sense too, so I&apos;ve changed the code to return false for different address types.&lt;/p&gt;</comment>
                            <comment id="124469" author="issuemaster" created="Sat, 6 Feb 2016 06:15:10 +0000"  >&lt;p&gt;This issue has been migrated to &lt;a href=&quot;https://github.com/spring-projects/spring-security/issues/1785&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;https://github.com/spring-projects/spring-security/issues/1785&lt;/a&gt;&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                                            <customfield id="customfield_10170" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>First Response Date</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 19 Aug 2010 16:18:13 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10280" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>19435</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_10880" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i03ty7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10380" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>22394</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_10381" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Ranking</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>18864</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                    <customfield id="customfield_10171" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                </customfields>
    </item>
</channel>
</rss>