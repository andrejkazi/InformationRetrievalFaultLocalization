<?xml version = "1.0" encoding = "UTF-8" ?>
<bugrepository name="SEC">
	<bug id="2751" opendate="2014-10-23 11:50:15" fixdate="2014-10-23 12:00:08" resolution="Duplicate">
		<buginformation>
			<summary>AbstractPreAuthenticatedProcessingFilter assumes principal is a string</summary>
			<description>I am using pre-authentication alongside form login. I ran into a problem similar to this user:
https://jira.spring.io/browse/SEC-1983?focusedCommentId=93727&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-93727
In working around this problem, I noticed this code inside 
AbstractPreAuthenticatedProcessingFilter.requiresAuthentication():
if (currentUser.getName().equals(principal)) 
{
            return false;
 }

In my case, principal is an instance of UserDetails. So comparing an instance of String to an instance of UserDetails always returned false.
I had to change the above code to this:
if (currentUser.getPrincipal().equals(principal)) {
            return false;
}
</description>
			<version>3.2.5</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.java</file>
			<file type="M">org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2078</link>
		</links>
	</bug>
	<bug id="2815" opendate="2015-01-13 14:32:24" fixdate="2015-01-20 12:30:38" resolution="Complete">
		<buginformation>
			<summary>@EnableGlobalMethodSecurity prevents postprocessing of DataSource bean</summary>
			<description>Adding `@EnableGlobalMethodSecurity` annotation to my extension of `WebSecurityConfigurerAdapter` prevents embedded database initialization in integration testing.
The problem is very nicely summarized here -&amp;gt; https://gist.github.com/dsyer/ebeb25d5afbdd9242cd5</description>
			<version>3.2.5</version>
			<fixedVersion>3.2.6, 4.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration.java</file>
		</fixedFiles>
		<links>
			<link type="Supersede" description="supersedes">2661</link>
		</links>
	</bug>
	<bug id="2822" opendate="2015-01-19 12:39:20" fixdate="2015-01-20 14:23:01" resolution="Complete">
		<buginformation>
			<summary>IllegalStateException: Cannot apply DaoAuthenticationConfigurer to already built object</summary>
			<description>Created by request from Rob Winch.
When initializing global authentication by injecting AuthenticationManagerBuilder you may get this exception






org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;amp;apos;org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration&amp;amp;apos;: Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire method: public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.setFilterChainProxySecurityConfigurer(org.springframework.security.config.annotation.ObjectPostProcessor,java.util.List) throws java.lang.Exception; nested exception is org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;amp;apos;demo.SecurityConfig&amp;amp;apos;: Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object




	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1202)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)




	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)




	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)




	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)




	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)




	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)




	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)




	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)




	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:691)




	at org.springframework.boot.SpringApplication.run(SpringApplication.java:321)




	at org.springframework.boot.test.SpringApplicationContextLoader.loadContext(SpringApplicationContextLoader.java:98)




	at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:68)




	at org.springframework.test.context.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:86)




	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:72)




	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:170)




	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:110)




	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:212)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:200)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:252)




	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:254)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:217)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)




	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)




	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)




	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)




	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)




	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)




	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)




	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)




	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)




	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)




	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)




	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)




	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)




	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)




	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)




Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire method: public void org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.setFilterChainProxySecurityConfigurer(org.springframework.security.config.annotation.ObjectPostProcessor,java.util.List) throws java.lang.Exception; nested exception is org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;amp;apos;demo.SecurityConfig&amp;amp;apos;: Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object




	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:649)




	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)




	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)




	... 40 common frames omitted




Caused by: org.springframework.beans.factory.BeanExpressionException: Expression parsing failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;amp;apos;demo.SecurityConfig&amp;amp;apos;: Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object




	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:164)




	at org.springframework.beans.factory.support.AbstractBeanFactory.evaluateBeanDefinitionString(AbstractBeanFactory.java:1365)




	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:964)




	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:949)




	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:606)




	... 42 common frames omitted




Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;amp;apos;demo.SecurityConfig&amp;amp;apos;: Injection of autowired dependencies failed; nested exception is java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object




	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1202)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)




	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)




	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)




	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)




	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)




	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:523)




	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:512)




	at org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents.getWebSecurityConfigurers(AutowiredWebSecurityConfigurersIgnoreParents.java:52)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




	at java.lang.reflect.Method.invoke(Method.java:606)




	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:112)




	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:129)




	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49)




	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342)




	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)




	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:120)




	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:242)




	at org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:161)




	... 46 common frames omitted




Caused by: java.lang.IllegalStateException: Cannot apply org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer@62f10514 to already built object




	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.add(AbstractConfiguredSecurityBuilder.java:192)




	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.apply(AbstractConfiguredSecurityBuilder.java:125)




	at org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder.apply(AuthenticationManagerBuilder.java:296)




	at org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder.userDetailsService(AuthenticationManagerBuilder.java:193)




	at demo.SecurityConfig.configureGlobal(SecurityConfig.java:39)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




	at java.lang.reflect.Method.invoke(Method.java:606)




	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:642)




	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)




	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)




	... 68 common frames omitted





</description>
			<version>3.2.5</version>
			<fixedVersion>3.2.6, 4.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">2793</link>
			<link type="Relate" description="relates to">12646</link>
		</links>
	</bug>
	<bug id="2793" opendate="2014-12-12 07:34:38" fixdate="2015-01-27 11:55:24" resolution="Duplicate">
		<buginformation>
			<summary>Spring Boot Requires "extends WebSecurityConfigurerAdapter"</summary>
			<description>Spring Boot causes ordering issues if using configureGlobal and the class configuring it does not extend WebSecurityConfigurerAdapter. This should be fixed to leverage the @Enable* annotations to eagerly initialize these classes.</description>
			<version>3.2.5</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2822</link>
		</links>
	</bug>
	<bug id="2831" opendate="2015-01-28 04:36:20" fixdate="2015-02-04 10:05:59" resolution="Complete">
		<buginformation>
			<summary>RegexRequestMatcher/AntPathRequestMatcher should not throw exception with invalid HTTP method in the request</summary>
			<description>Observed behavior
Unknown HTTP method will cause IllegalArgumentException in LogoutFilter &amp;gt; AntPathRequestMatcher. Stack trace:






java.lang.IllegalArgumentException: No enum constant org.springframework.http.HttpMethod.PROPFIND




	at java.lang.Enum.valueOf(Enum.java:236)




	at org.springframework.http.HttpMethod.valueOf(HttpMethod.java:27)




	at org.springframework.security.web.util.matcher.AntPathRequestMatcher.matches(AntPathRequestMatcher.java:125)




	at org.springframework.security.web.authentication.logout.LogoutFilter.requiresLogout(LogoutFilter.java:122)




	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:94)




...






This issue is more severe as this will fail on any request with unknown HTTP method (i.e. not just request to logout filter processing URI).
Note that this is not a feature request to support custom HTTP methods, but really a bug report about incorrect handling of unknown HTTP method.
Expected behavior
Request with unknown HTTP method MUST NOT end with internal server error. Such request should just not be matched if a required HTTP method is specified.
How to reproduce
Use any web application with LogoutFilter processing configured:






curl -XANY_METHOD http://host:port/context/any-path 





</description>
			<version>3.2.5</version>
			<fixedVersion>3.2.6, 4.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.web.util.matcher.AntPathRequestMatcher.java</file>
			<file type="M">org.springframework.security.web.util.matcher.RegexRequestMatcher.java</file>
			<file type="M">org.springframework.security.web.util.matcher.AntPathRequestMatcherTests.java</file>
			<file type="M">org.springframework.security.web.util.matcher.RegexRequestMatcherTests.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="is duplicated by">3160</link>
		</links>
	</bug>
	<bug id="2791" opendate="2014-12-10 15:01:05" fixdate="2015-02-04 13:58:26" resolution="Complete">
		<buginformation>
			<summary>Chrome/safari: cookie not set AbstractRememberMeServices should have a setter for cookie version</summary>
			<description>RememberMe cookie is not set in chrome and safari because only Expires field is set, not max age and they both ignore cookies.
MaxAge is only set in jetty when version is &amp;gt;= 1.</description>
			<version>3.2.5</version>
			<fixedVersion>3.2.6, 4.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.java</file>
			<file type="M">org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.java</file>
		</fixedFiles>
	</bug>
	<bug id="2832" opendate="2015-01-28 06:36:14" fixdate="2015-02-24 15:35:27" resolution="Complete">
		<buginformation>
			<summary>CSRF Request attributes not updated on authentication</summary>
			<description>The CsrfFilter sets request attributes on each request, exposing the current CsrfToken for later use.  However, if authentication happens during this request, the SessionManagementFilter will cause the CsrfAuthenticationStrategy to fire which will generate a new token.  However, the request attributes are not updated.  As a result, if there is a form being rendered in the response using the CsrfRequestDataValueProcessor, it will use the old CsrfToken instead of the newly generated one.  As a result, when the form is submitted, the request will fail due to CSRF protection.</description>
			<version>3.2.5</version>
			<fixedVersion>3.2.6, 4.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.web.csrf.CsrfAuthenticationStrategyTests.java</file>
			<file type="M">org.springframework.security.web.csrf.CsrfAuthenticationStrategy.java</file>
		</fixedFiles>
		<links>
			<link type="Relate" description="relates to">2404</link>
		</links>
	</bug>
	<bug id="2879" opendate="2015-02-24 21:11:23" fixdate="2015-02-24 21:21:11" resolution="Complete">
		<buginformation>
			<summary>JdbcTokenRepositoryImpl updateToken should use lastUsed arg</summary>
			<description></description>
			<version>3.2.5</version>
			<fixedVersion>3.2.6, 4.0.0.RC2</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.java</file>
			<file type="M">org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.java</file>
		</fixedFiles>
	</bug>
	<bug id="2908" opendate="2015-03-17 07:20:28" fixdate="2015-03-20 13:31:53" resolution="Complete">
		<buginformation>
			<summary>Example given in javadoc doesn&amp;apos;t work</summary>
			<description>The code below is copied from the javadoc of HttpSecurity HttpSecurity .requestMatcher(RequestMatcher requestMatcher):






 @Configuration




 @EnableWebSecurity




 public class RequestMatchersSecurityConfig extends WebSecurityConfigurerAdapter {









     @Override




     protected void configure(HttpSecurity http) throws Exception {




         http




             .requestMatchers()




                 .antMatchers("/api/**")




                 .and()




             .requestMatchers()




                 .antMatchers("/oauth/**")




                 .and()




             .authorizeRequests()




                 .antMatchers("/**").hasRole("USER").and()




                 .httpBasic();




     }









     @Override




     protected void configure(AuthenticationManagerBuilder auth)




             throws Exception {




         auth




             .inMemoryAuthentication()




                 .withUser("user")




                     .password("password")




                     .roles("USER");




     }




 }






the request matcher only matches /oauth/** exptected an OrMatcher on /api/** and /oauth/**






2015-03-17 14:55:10.448  INFO 35782 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern=&amp;amp;apos;/oauth/**&amp;amp;apos;]]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6956e01, org.springframework.security.web.context.SecurityContextPersistenceFilter@4708993a, org.springframework.security.web.header.HeaderWriterFilter@448d9973, org.springframework.security.web.csrf.CsrfFilter@624f1602, org.springframework.security.web.authentication.logout.LogoutFilter@79b04c7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@306eb59c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@292e39db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@501cc8a5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c690707, org.springframework.security.web.session.SessionManagementFilter@1516d73d, org.springframework.security.web.access.ExceptionTranslationFilter@110f9f2f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@364adedd]











Notice OrRequestMatcher [requestMatchers=[Ant [pattern=&amp;amp;apos;/oauth/**&amp;amp;apos;]]] in log.</description>
			<version>3.2.5</version>
			<fixedVersion>4.0.0</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.config.annotation.web.builders.HttpSecurity.java</file>
		</fixedFiles>
	</bug>
	<bug id="2851" opendate="2015-02-16 13:09:03" fixdate="2015-04-21 13:05:02" resolution="Complete">
		<buginformation>
			<summary>java.lang.NoClassDefFoundError: org/springframework/dao/DataAccessException on configuring http.rememberMe()</summary>
			<description>I use spring-boot-starter-security 1.1.8.RELEASE + mongodb. When I try to configure `http.rememberMe().tokenRepository(tokenRepository).tokenValiditySeconds(60*60*24);` Spring throws an exception:






Caused by: java.lang.NoClassDefFoundError: org/springframework/dao/DataAccessException




	at org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer.createPersistentRememberMeServices(RememberMeConfigurer.java:316)




	at org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer.createRememberMeServices(RememberMeConfigurer.java:289)




	at org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer.getRememberMeServices(RememberMeConfigurer.java:259)




	at org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer.init(RememberMeConfigurer.java:196)




	at org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer.init(RememberMeConfigurer.java:76)




	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.init(AbstractConfiguredSecurityBuilder.java:367)




	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:320)




	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:39)




	at org.springframework.security.config.annotation.web.builders.WebSecurity.performBuild(WebSecurity.java:293)




	at org.springframework.security.config.annotation.web.builders.WebSecurity.performBuild(WebSecurity.java:74)




	at org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder.doBuild(AbstractConfiguredSecurityBuilder.java:329)




	at org.springframework.security.config.annotation.AbstractSecurityBuilder.build(AbstractSecurityBuilder.java:39)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain(WebSecurityConfiguration.java:92)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$19a4159a.CGLIB$springSecurityFilterChain$2(&amp;lt;generated&amp;gt;)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$$EnhancerBySpringCGLIB$$19a4159a$$FastClassBySpringCGLIB$$207e7f32.invoke(&amp;lt;generated&amp;gt;)






Temporary solution: add  "org.springframework:spring-tx" dependency. But I dont use SQL so I don&amp;amp;apos;t need spring-tx. Please decouple spring-security and spring-tx
</description>
			<version>3.2.5</version>
			<fixedVersion>3.2.8, 4.0.1</fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.java</file>
		</fixedFiles>
	</bug>
	<bug id="3160" opendate="2015-11-23 15:51:56" fixdate="2015-11-29 02:57:29" resolution="Duplicate">
		<buginformation>
			<summary>Invalid HTTP verb throws 500 not 400</summary>
			<description>Had a few cases of a bad client request which doesn&amp;amp;apos;t match a valid HTTP verb, i would expect this to be returned as a 400 Bad Request, instead our access log showed as a 500.






java.lang.IllegalArgumentException: No enum constant 




               at java.lang.Enum.valueOf(Enum.java:238)




                at org.springframework.http.HttpMethod.valueOf(HttpMethod.java:27)




                at org.springframework.security.web.util.matcher.AntPathRequestMatcher.matches(AntPathRequestMatcher.java:125)




                at org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(DefaultFilterInvocationSecurityMetadataSource.java:86)




                at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:174)




                at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecur















</description>
			<version>3.2.5</version>
			<fixedVersion></fixedVersion>
			<type>Bug</type>
		</buginformation>
		<fixedFiles>
			<file type="M">org.springframework.security.web.util.matcher.AntPathRequestMatcher.java</file>
			<file type="M">org.springframework.security.web.util.matcher.RegexRequestMatcher.java</file>
			<file type="M">org.springframework.security.web.util.matcher.AntPathRequestMatcherTests.java</file>
			<file type="M">org.springframework.security.web.util.matcher.RegexRequestMatcherTests.java</file>
		</fixedFiles>
		<links>
			<link type="Duplicate" description="duplicates">2831</link>
		</links>
	</bug>
</bugrepository>