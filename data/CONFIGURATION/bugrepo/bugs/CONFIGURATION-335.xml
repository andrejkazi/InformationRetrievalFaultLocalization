<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 19:51:42 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-335/CONFIGURATION-335.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-335] XMLConfiguration: Can&apos;t disable attribute splitting </title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-335</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;My XML configuration has the following attribute:&lt;br/&gt;
&amp;lt;some-element some-attribute=&quot;&amp;#x0A;&amp;#x0D;&quot; /&amp;gt;&lt;/p&gt;

&lt;p&gt;But XML Configuration is trying to split this string and trims it after splitting. I don&apos;t need this behaviour, but setting setDelimiterParsingDisabled() just changing delimeter to &quot;|&quot; and not disables attribute trimming.&lt;/p&gt;

&lt;p&gt;Need either to disable trimming/splitting if setDelimiterParsingDisabled() is set to TRUE (incompatible change), or add something like setParseAttributesAsIs() that will prevent attributes to be trimmed and splitted&lt;/p&gt;</description>
                <environment></environment>
        <key id="12402395">CONFIGURATION-335</key>
            <summary>XMLConfiguration: Can&apos;t disable attribute splitting </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png" description="The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.">Closed</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="oliver.heger@t-online.de">Oliver Heger</assignee>
                                    <reporter username="bsp">Sergey Vladimirov</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Aug 2008 17:27:13 +0000</created>
                <updated>Tue, 20 Oct 2009 19:30:36 +0000</updated>
                            <resolved>Sun, 30 Nov 2008 21:13:58 +0000</resolved>
                                    <version>1.5</version>
                                    <fixVersion>1.6</fixVersion>
                                    <component>Format</component>
                        <due></due>
                            <votes>0</votes>
                                    <watches>1</watches>
                                                                <comments>
                            <comment id="12622615" author="bsp" created="Thu, 14 Aug 2008 17:31:48 +0000"  >&lt;p&gt;Or at least constructHierarchy() and processAttributes() methods should be protected - to enable extending/changing behaviour&lt;/p&gt;</comment>
                            <comment id="12622617" author="bsp" created="Thu, 14 Aug 2008 17:37:30 +0000"  >&lt;p&gt;XMLNode class (member of XMLConfiguration) should be protected, as well as handleDelimiters(node, node) method.&lt;/p&gt;

&lt;p&gt;It seems no one tried to extend this class before...&lt;/p&gt;</comment>
                            <comment id="12622651" author="oliver.heger@t-online.de" created="Thu, 14 Aug 2008 19:18:27 +0000"  >&lt;p&gt;I think your request is not in line with the XML specification. Have a look at &lt;a href=&quot;http://www.w3.org/TR/REC-xml/#AVNormalize&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;http://www.w3.org/TR/REC-xml/#AVNormalize&lt;/a&gt; where the concept of attribute normalization is defined.&lt;/p&gt;

&lt;p&gt;What you can do is using the content of an element instead of an attribute. Recently support for the xml:space attribute was added to XMLConfiguration (see &lt;a href=&quot;https://issues.apache.org/jira/browse/CONFIGURATION-307&quot; title=&quot;XMLConfiguration should support the xml:space attribute&quot; class=&quot;issue-link&quot; data-issue-key=&quot;CONFIGURATION-307&quot;&gt;&lt;del&gt;CONFIGURATION-307&lt;/del&gt;&lt;/a&gt;). If this attribute is set on an element, whitespace in its content will be preserved. However, the current version 1.5 does not contain this feature yet.&lt;/p&gt;</comment>
                            <comment id="12623346" author="cbriarnold" created="Mon, 18 Aug 2008 13:07:15 +0000"  >&lt;p&gt;FYI for anyone else who is encountering this bug. The parsing is not a delayed parsing. It begins parsing the document once you have used it&apos;s constructor. So the work around would be to construct an XMLConfiguration object without any parameters, use the setDelimiterParsingDisabled(true), then load the xml file. Like so:&lt;/p&gt;

&lt;p&gt;	File configurationFile = new File(&quot;test.xml&quot;);&lt;br/&gt;
	XMLConfiguration configuration = new XMLConfiguration();&lt;br/&gt;
	configuration.setDelimiterParsingDisabled(true);&lt;br/&gt;
	configuration.load(configurationFile);&lt;/p&gt;</comment>
                            <comment id="12627412" author="bsp" created="Mon, 1 Sep 2008 08:12:50 +0000"  >&lt;p&gt;Courtney,&lt;/p&gt;

&lt;p&gt;setDelimiterParsingDisabled() doesn&apos;t work for XMLConfiguration - it just changing delimeter to &quot;|&quot;&lt;/p&gt;</comment>
                            <comment id="12627414" author="bsp" created="Mon, 1 Sep 2008 08:14:52 +0000"  >&lt;p&gt;Oliver,&lt;/p&gt;

&lt;p&gt;It&apos;s my code - i want to specify any possible xml parsing option i need. It&apos;s okay if XMLConfiguration doesn&apos;t support such behaviour - then it should allow me to change it in subclass.&lt;/p&gt;</comment>
                            <comment id="12628885" author="oliver.heger@t-online.de" created="Sat, 6 Sep 2008 15:39:45 +0000"  >&lt;p&gt;My point is that the problem you are facing with the definition of CR and LF sequences in attributes is not caused by any attribute trimming or splitting activities of XMLConfiguration. Rather the XML parser already performs attribute normalization and replaces your sequence by a single white space. So even if you had access to the corresponding methods in XMLConfiguration, it would not help you because the strings passed to these methods have already been modified by the parser.&lt;/p&gt;</comment>
                            <comment id="12651147" author="oliver.heger@t-online.de" created="Wed, 26 Nov 2008 21:20:23 +0000"  >&lt;p&gt;This is not a problem of attribute splitting operations performed by XMLConfiguration. The attribute values have already been modified by the XML parser. So closing this issue as invalid.&lt;/p&gt;</comment>
                            <comment id="12651176" author="bsp" created="Wed, 26 Nov 2008 23:04:44 +0000"  >&lt;p&gt;Oliver,&lt;/p&gt;

&lt;p&gt;Is parser doing &quot;|&quot; splitting? I thought it was line 487 in XMLConfiguration:&lt;/p&gt;

&lt;p&gt;    /** Constant for the delimiter for multiple attribute values.*/&lt;br/&gt;
    private static final char ATTR_VALUE_DELIMITER = &apos;|&apos;;&lt;/p&gt;

&lt;p&gt;.......&lt;br/&gt;
                Iterator it = PropertyConverter.split(&lt;br/&gt;
                        attr.getValue(),&lt;br/&gt;
                        isDelimiterParsingDisabled() ? ATTR_VALUE_DELIMITER&lt;br/&gt;
                                : getListDelimiter()).iterator();&lt;/p&gt;
</comment>
                            <comment id="12651264" author="oliver.heger@t-online.de" created="Thu, 27 Nov 2008 07:00:54 +0000"  >&lt;p&gt;The parser is certainly not doing &quot;|&quot; splitting, but it trims whitespace. As I understand this ticket this is your original problem, isn&apos;t it?&lt;/p&gt;</comment>
                            <comment id="12651341" author="bsp" created="Thu, 27 Nov 2008 12:32:01 +0000"  >&lt;p&gt;Both actually.&lt;/p&gt;

&lt;p&gt;It called &quot;Can&apos;t disable attribute splitting&quot;, so unable to disable splitting was main problen&lt;/p&gt;</comment>
                            <comment id="12651750" author="oliver.heger@t-online.de" created="Sat, 29 Nov 2008 20:54:18 +0000"  >&lt;p&gt;So I was too quick when closing this ticket.&lt;/p&gt;

&lt;p&gt;The attribute splitting functionality was added because there is a mismatch between the configuration API and the capabilities provided by XML: the configuration API allows adding multiple values to an attribute while XML only supports a single value. For instance, you can have something like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
config.addProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;element[@attr]&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;value1&quot;&lt;/span&gt;);
config.addProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;element[@attr]&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;value2&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When storing such a configuration, how should the multiple values of the attribute be treated so that the file can be loaded again and the resulting configuration is not changed? Because the problem is inherent there is so far no possibility of switching off this feature.&lt;/p&gt;

&lt;p&gt;It might make sense to introduce a flag for turning off this mechanism. Can you give an example (other than that with whitespace) where this attribute splitting functionality caused undesired behavior?&lt;/p&gt;</comment>
                            <comment id="12651763" author="bsp" created="Sat, 29 Nov 2008 22:34:26 +0000"  >&lt;p&gt;Oliver,&lt;/p&gt;

&lt;p&gt;The problem were found with regular expression. Regexp can contain both commas and &quot;|&quot; characters.&lt;br/&gt;
&quot;[[some\, |other\, ]]&quot;&lt;/p&gt;

&lt;p&gt;For me switching off this mechanism should result in some limitation, but it&apos;s okay as far as program does know about it and not using multiple attribute values mechanism.&lt;/p&gt;

&lt;p&gt;Sergey&lt;/p&gt;</comment>
                            <comment id="12651871" author="oliver.heger@t-online.de" created="Sun, 30 Nov 2008 21:13:58 +0000"  >&lt;p&gt;XMLConfiguration now has a new property &lt;tt&gt;attributeSplittingDisabled&lt;/tt&gt;. If set to &lt;b&gt;true&lt;/b&gt;, the values of attributes are stored in exactly the way as they are returned by the XML parser, without further modification.&lt;/p&gt;

&lt;p&gt;Note that this property must be set &lt;b&gt;before&lt;/b&gt; the configuration is loaded. So the following pattern has to be used:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
XMLConfiguration config = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; XMLConfiguration();
config.setAttributeSplittingDisabled(&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
config.setFile(myConfigFile);
config.load();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is analogous to the &lt;tt&gt;delimiterParsingDisabled&lt;/tt&gt; property of &lt;tt&gt;AbstractConfiguration&lt;/tt&gt;.&lt;/p&gt;</comment>
                            <comment id="12659289" author="ralph.goers@dslextreme.com" created="Fri, 26 Dec 2008 23:51:35 +0000"  >&lt;p&gt;Was this applied to the experimental branch?&lt;/p&gt;</comment>
                            <comment id="12659348" author="oliver.heger@t-online.de" created="Sat, 27 Dec 2008 16:10:46 +0000"  >&lt;p&gt;No, it was not. The implementation of attributes is different in the experimental branch: attributes are not represented as Nodes, but each node has a map of attributes. Currently there is no direct support for multiple values of an attribute. See also the &lt;tt&gt;NodeHandler&lt;/tt&gt; interface, which defines only a &lt;tt&gt;setAttributeValue()&lt;/tt&gt; and a &lt;tt&gt;getAttributeValue()&lt;/tt&gt; method.&lt;/p&gt;

&lt;p&gt;For the experimental branch it makes certainly sense to redesign the whole splitting mechanism. Looking back, it has caused us a lot of trouble, and I am wondering if it is worth the whole pain.&lt;/p&gt;</comment>
                            <comment id="12698052" author="ralph.goers@dslextreme.com" created="Sat, 11 Apr 2009 05:31:19 +0000"  >&lt;p&gt;I don&apos;t understand. XMLConfiguration in the experimental branch has a method named processAttributes that splits the attribute into Nodes.  I have a config file for DefaultConfigurationBuilder that requires a &apos;,&apos; in it and it doesn&apos;t work. I replaced the property converter call with List&amp;lt;String&amp;gt; values = Collections.singletonList(attr.getValue()); and my DefaultConfgurationBuilder test worked fine, but a whole bunch of other unit tests now fail because attribute splitting isn&apos;t supported.&lt;/p&gt;

&lt;p&gt;I either need to add the option to the experimental branch or disable attribute splitting entirely, otherwise I can&apos;t commit my new code to the experimental branch. What would you prefer?&lt;/p&gt;</comment>
                            <comment id="12698059" author="ralph.goers@dslextreme.com" created="Sat, 11 Apr 2009 06:53:46 +0000"  >&lt;p&gt;I added attribute splitting to the experimental branch. If we decide to not allow attribute splitting we can remove it.&lt;/p&gt;</comment>
                    </comments>
                <issuelinks>
                            <issuelinktype id="10020">
                    <name>Cloners</name>
                                                                <inwardlinks description="is cloned by">
                                        <issuelink>
            <issuekey id="12438610">CONFIGURATION-400</issuekey>
        </issuelink>
                            </inwardlinks>
                                    </issuelinktype>
                    </issuelinks>
                <attachments>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Thu, 14 Aug 2008 19:18:27 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>33901</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            7 years, 34 weeks, 5 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0ljk7:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>123819</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                        <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                        <customfieldname>Time in Status</customfieldname>
                        <customfieldvalues>
                            
                        </customfieldvalues>
                    </customfield>
                                                                                                                        </customfields>
    </item>
</channel>
</rss>