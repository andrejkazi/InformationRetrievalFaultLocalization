<!-- 
RSS generated by JIRA (6.3.4#6332-sha1:51bc225ef474afe3128b2f66878477f322397b16) at Thu Dec 01 19:45:15 UTC 2016

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/CONFIGURATION-121/CONFIGURATION-121.xml?field=key&amp;field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>6.3.4</version>
        <build-number>6332</build-number>
        <build-date>15-08-2014</build-date>
    </build-info>

<item>
            <title>[CONFIGURATION-121] [configuration] Included properties w/ relative path fails in v1.1</title>
                <link>https://issues.apache.org/jira/browse/CONFIGURATION-121</link>
                <project id="12310467" key="CONFIGURATION">Commons Configuration</project>
                    <description>&lt;p&gt;The &quot;include&quot; property fails in 1.1 when a PropertiesConfiguration is&lt;br/&gt;
instantiated with a relative path/file name instead of an absolute path, but it&lt;br/&gt;
works correctly in version 1.0.&lt;/p&gt;

&lt;p&gt;As far as I can tell this bug was introduced by the refactoring of the load()&lt;br/&gt;
behavior from the PropertiesConfiguration constructor to the constructor of&lt;br/&gt;
AbstractFileConfiguration.  The load() method relies on the instance variable&lt;br/&gt;
&quot;includesAllowed&quot; which is declared and initialized in PropertiesConfiguration.&lt;br/&gt;
However, because in v1.1 load() is invoked from the superclass constructor, the&lt;br/&gt;
instance variables in the subclass have not yet been initialized when load() is&lt;br/&gt;
invoked. Consequently &quot;includesAllowed&quot; evaluates to false and the include fails.&lt;/p&gt;

&lt;p&gt;I have attached a simple app to illustrate the issue.  It attempts to load the&lt;br/&gt;
property &quot;bar&quot; via an included properties file from the config dir.  By&lt;br/&gt;
manipulating the classpath in a batch script the app can be run twice, once&lt;br/&gt;
using version 1.0 and once using 1.1. Here is sample output:&lt;/p&gt;

&lt;p&gt;Configuration version 1.0...&lt;br/&gt;
file name = myapp.properties&lt;br/&gt;
base path = &lt;a href=&quot;file:/C:/myapp/config/&quot; class=&quot;external-link&quot; rel=&quot;nofollow&quot;&gt;file:/C:/myapp/config/&lt;/a&gt;&lt;br/&gt;
includes? = true&lt;br/&gt;
foo=foo from properties&lt;br/&gt;
bar=included bar&lt;/p&gt;


&lt;p&gt;Configuration version 1.1...&lt;br/&gt;
file name = myapp.properties&lt;br/&gt;
base path = null&lt;br/&gt;
includes? = true&lt;br/&gt;
foo=foo from properties&lt;br/&gt;
bar=null&lt;/p&gt;

&lt;p&gt;Note that the output contains &quot;includes? = true&quot; (which displays the result of&lt;br/&gt;
PropertiesConfiguration.getIncludesAllowed()), but this occurs after the&lt;br/&gt;
configuration has been completely initialized.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: Windows 2000&lt;br/&gt;
Platform: PC&lt;/p&gt;</environment>
        <key id="12342354">CONFIGURATION-121</key>
            <summary>[configuration] Included properties w/ relative path fails in v1.1</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                            <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                        <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png" description="A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.">Resolved</status>
                    <statusCategory id="3" key="done" colorName="green"/>
                                    <resolution id="1">Fixed</resolution>
                                        <assignee username="-1">Unassigned</assignee>
                                    <reporter username="mark_williams@pacbell.net">Mark W</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Jul 2005 07:48:17 +0000</created>
                <updated>Tue, 16 May 2006 12:12:01 +0000</updated>
                            <resolved>Tue, 16 May 2006 12:12:01 +0000</resolved>
                                    <version>1.1</version>
                                                        <due></due>
                            <votes>0</votes>
                                    <watches>0</watches>
                                                                <comments>
                            <comment id="12409730" author="mark_williams@pacbell.net" created="Wed, 6 Jul 2005 07:49:23 +0000"  >&lt;p&gt;Created an attachment (id=15601)&lt;br/&gt;
Sample app to illustrate reported bug.&lt;/p&gt;</comment>
                            <comment id="12409731" author="oliver.heger@t-online.de" created="Fri, 8 Jul 2005 04:12:47 +0000"  >&lt;p&gt;Mark,&lt;/p&gt;

&lt;p&gt;thanks for your analysis. You are right that the includesAllowed flag is not yet&lt;br/&gt;
set when the load() method is called by the constructor.&lt;/p&gt;

&lt;p&gt;However PropertiesConfiguration overloads the setBasePath() method to set&lt;br/&gt;
includesAllowed to true if a base path is available. This works if the&lt;br/&gt;
properties are loaded from an absolute or relative path, but unfortunately not&lt;br/&gt;
when loaded from the classpath as in your test application. This is the reason&lt;br/&gt;
why our unit test for include properties works, though the file is loaded in the&lt;br/&gt;
constructor (TestPropertiesConfiguration.setUp()).&lt;/p&gt;

&lt;p&gt;So the real problem seems to be once more the handling of the source file name&lt;br/&gt;
and path. I tend to believe that we need a completely new solution (Locators!)&lt;br/&gt;
to get rid off all of these problems.&lt;/p&gt;

&lt;p&gt;Thank you for spotting this.&lt;/p&gt;</comment>
                            <comment id="12409732" author="mark_williams@pacbell.net" created="Sat, 9 Jul 2005 02:37:38 +0000"  >&lt;p&gt;Oliver,&lt;/p&gt;

&lt;p&gt;Thanks for the clarification. You&apos;re right, I didn&apos;t dig deeply enough, I missed&lt;br/&gt;
the override of setBasePath().&lt;/p&gt;

&lt;p&gt;FYI, as a consumer of the API I found it confusing that, after the constructor&lt;br/&gt;
PropertiesConfiguration(String) is called, getIncludesAllowed() may not return&lt;br/&gt;
the state that was in effect while load() was executing.   This strikes me as&lt;br/&gt;
suboptimal; perhaps the design of this component could be revisited.&lt;/p&gt;</comment>
                            <comment id="12409733" author="oliver.heger@t-online.de" created="Sat, 9 Jul 2005 18:18:51 +0000"  >&lt;p&gt;I fully agree with you. It&apos;s a bug that the load() method is called before some&lt;br/&gt;
member fields that can influence the load process have been initialized. I will&lt;br/&gt;
see what I can do about it.&lt;/p&gt;

&lt;p&gt;The fact that the includesAllowed flag is modified by the setBasePath() method&lt;br/&gt;
seems to me like a quick hack. Now the following can happen:&lt;/p&gt;

&lt;p&gt;1. A PropertiesConfiguration object is created&lt;br/&gt;
2. setIncludesAllowed(false) is called on this object&lt;br/&gt;
3. The configuration file is set (which invokes setBasePath)&lt;br/&gt;
4. load() is called&lt;/p&gt;

&lt;p&gt;Step 3 might enable the includesAllowed flag again, so that the results might be&lt;br/&gt;
different than expected. This behavior of setBasePath() is documented, but I&lt;br/&gt;
think it is indeed very confusing and it should be possible to find a better&lt;br/&gt;
solution.&lt;/p&gt;

&lt;p&gt;Would anybody object if I changed this? This will be an incompatible change and&lt;br/&gt;
can have impact on existing code, but IMO it would make usage of this API clearer.&lt;/p&gt;</comment>
                            <comment id="12409734" author="oliver.heger@t-online.de" created="Mon, 11 Jul 2005 03:30:37 +0000"  >&lt;p&gt;I committed a fix that should resolve the original problem. The main idea is&lt;br/&gt;
that AbstractFileConfiguration in its load(URL) method now always sets a base&lt;br/&gt;
path if none has been set before. The base path is simply set to the current&lt;br/&gt;
source URL. This works for relative include paths because ConfigurationUtils is&lt;br/&gt;
able to resolve a relative path in the context of a base URL.&lt;/p&gt;

&lt;p&gt;About my last comment: I think I was a bit on the wrong track. The original&lt;br/&gt;
authors of PropertiesConfiguration did not support a way of disabling the&lt;br/&gt;
includes feature. setIncludesAllowed() is protected, and the flag&apos;s value is&lt;br/&gt;
only determined by the file to be loaded. I removed the initialization of the&lt;br/&gt;
includesAllowed flag (it was set to true), so now isIncludesAllowed() will&lt;br/&gt;
return the flag&apos;s value at the time the load() method was executed.&lt;/p&gt;

&lt;p&gt;Mark, can you check if now everything works for you?&lt;/p&gt;

&lt;p&gt;The question remains whether the includesAllowed flag makes sense any longer. My&lt;br/&gt;
fix causes the base path to be always valid when load() was successful. So the&lt;br/&gt;
flag will then always be true.&lt;/p&gt;</comment>
                            <comment id="12409735" author="mark_williams@pacbell.net" created="Fri, 15 Jul 2005 08:57:31 +0000"  >&lt;p&gt;Thanks, Oliver, the change seems to fix this bug. Nice work!&lt;/p&gt;

&lt;p&gt;As an aside, I might suggest that the Javadoc for the PropertiesConfiguration&lt;br/&gt;
no-arg constructor be changed, as it is possible to load included files after&lt;br/&gt;
using the no-arg constructor:&lt;/p&gt;

&lt;p&gt;PropertiesConfiguration pc = new PropertiesConfiguration();&lt;br/&gt;
pc.setPath(&quot;foo.properties&quot;);&lt;br/&gt;
pc.load();&lt;/p&gt;

&lt;p&gt;...assuming foo.properties has an include property, of course.&lt;/p&gt;

&lt;p&gt;-Mark&lt;/p&gt;</comment>
                            <comment id="12409736" author="oliver.heger@t-online.de" created="Tue, 19 Jul 2005 03:38:23 +0000"  >&lt;p&gt;I removed this sentence from the no-arg constructor. So this issue can be closed&lt;br/&gt;
now.&lt;/p&gt;</comment>
                    </comments>
                    <attachments>
                            <attachment id="12333610" name="ASF.LICENSE.NOT.GRANTED--Myapp.zip" size="3377" author="mark_williams@pacbell.net" created="Wed, 6 Jul 2005 07:49:23 +0000"/>
                    </attachments>
                <subtasks>
                    </subtasks>
                <customfields>
                                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                        <customfieldname>Attachment count</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>1.0</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                        <customfieldname>Bugzilla Id</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>35621</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                        <customfieldname>Date of First Response</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>Fri, 8 Jul 2005 04:12:47 +0000</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                                                                                                                                            <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Global Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>110698</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                        <customfield id="customfield_12312521" key="com.atlassian.jira.toolkit:LastCommentDate">
                        <customfieldname>Last public comment date</customfieldname>
                        <customfieldvalues>
                            11 years, 21 weeks, 2 days ago
                        </customfieldvalues>
                    </customfield>
                                                                                            <customfield id="customfield_12311820" key="com.pyxis.greenhopper.jira:gh-lexo-rank">
                        <customfieldname>Rank</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>0|i0tf9r:</customfieldvalue>

                        </customfieldvalues>
                    </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                        <customfieldname>Rank (Obsolete)</customfieldname>
                        <customfieldvalues>
                            <customfieldvalue>169783</customfieldvalue>
                        </customfieldvalues>
                    </customfield>
                                                                                                                                                                                                                                                                                                                            </customfields>
    </item>
</channel>
</rss>